From rodney.simioni at verio.net  Thu Aug  1 19:49:53 2013
From: rodney.simioni at verio.net (Rodney Simioni)
Date: Thu, 1 Aug 2013 15:49:53 -0400
Subject: [Owasp-modsecurity-core-rule-set] newbie on mod_security
Message-ID: <0971982CF6B9AB418FFD5FEF7F50CB9F061165BA@IAD-WPRD-XCHB03.corp.verio.net>

Greetings,

 

My first time posting here.

 

I just yum installed mod_security on my RedHat 6.4 box.

 

I added the following to my httpd.conf:

 

<IfModule security2_module>

                Include conf/crs/activated_rules/*.conf

                SecAuditLog logs/mod_security_audit_log

 

</IfModule>

 

One of my tests is failing.

 

Any help will be greatly appreciated.

 

Below is the audit.

 

 

--6deb2369-A--

[01/Aug/2013:15:43:21 --0400] Ufq6WQrjAnkAABpYE54AAAAA 127.0.0.1 46939
127.0.0.1 443

--6deb2369-B--

POST /cgi-bin/upload/upload.php?upload_id=90241375386201-0 HTTP/1.1

TE: deflate,gzip;q=0.3

Connection: TE, close

Authorization: Basic OTAyNDEzNzUzODYyMDEtMDoxMjM0

Host: localhost

User-Agent: libwww-perl/5.833

Content-Length: 198

Content-Type: multipart/form-data; boundary=xYzZY

 

--6deb2369-F--

HTTP/1.1 401 Authorization Required

WWW-Authenticate: Basic realm="WH Upload"

Content-Length: 401

Connection: close

Content-Type: text/html; charset=iso-8859-1

 

--6deb2369-E--

 

--6deb2369-H--

Apache-Error: [file
"/builddir/build/BUILD/httpd-2.2.15/modules/aaa/mod_auth_basic.c"] [line
265] [level 3] user 90241375386201-0: authentication failure for
"/cgi-bin/upload/upload.php": Password Mismatch

Apache-Handler: cgi-script

Stopwatch: 1375386201575983 7325 (- - -)

Stopwatch2: 1375386201575983 7325; combined=1221, p1=847, p2=0, p3=1,
p4=263, p5=110, sr=110, sw=0, l=0, gc=0

Response-Body-Transformed: Dechunked

Producer: ModSecurity for Apache/2.7.3 (http://www.modsecurity.org/);
OWASP_CRS/2.2.8.

Server: Apache

Engine-Mode: "ENABLED"

 

--6deb2369-Z--

 

--6deb2369-A--

[01/Aug/2013:15:43:21 --0400] Ufq6WQrjAnkAABpZF3cAAAAB 127.0.0.1 46940
127.0.0.1 443

--6deb2369-B--

POST /cgi-bin/upload/upload.php?upload_id=90241375386201-0 HTTP/1.1

TE: deflate,gzip;q=0.3

Connection: TE, close

Authorization: Basic OTAyNDEzNzUzODYyMDEtMDpsTmw3VndGWG4=

Host: localhost

User-Agent: libwww-perl/5.833

Content-Length: 132

Content-Type: multipart/form-data; boundary=xYzZY

47

48 --6deb2369-F--

49 HTTP/1.1 403 Forbidden

50 Content-Length: 227

51 Connection: close

52 Content-Type: text/html; charset=iso-8859-1

53

54 --6deb2369-E--

55

56 --6deb2369-H--

57 Message: Access denied with code 403 (phase 2). Operator EQ matched 0
at REQUEST_HEADERS. [file
"/etc/httpd/conf/crs/activated_rules/modsecurity_crs_21_protoc
ol_anomalies.conf"] [line "47"] [id "960015"] [rev "1"] [msg "Request
Missing an Accept Header"] [severity "NOTICE"] [ver "OWASP_CRS/2.2.8"]
[maturity "9"] [a    ccuracy "9"] [tag
"OWASP_CRS/PROTOCOL_VIOLATION/MISSING_HEADER_ACCEPT"] [tag
"WASCTC/WASC-21"] [tag "OWASP_TOP_10/A7"] [tag "PCI/6.5.10"]

58 Action: Intercepted (phase 2)

59 Apache-Handler: application/x-httpd-php

60 Stopwatch: 1375386201617708 9166 (- - -)

61 Stopwatch2: 1375386201617708 9166; combined=1064, p1=833, p2=176,
p3=0, p4=0, p5=55, sr=95, sw=0, l=0, gc=0

62 Response-Body-Transformed: Dechunked

63 Producer: ModSecurity for Apache/2.7.3 (http://www.modsecurity.org/);
OWASP_CRS/2.2.8.

64 Server: Apache

65 Engine-Mode: "ENABLED"

66

67 --6deb2369-J--

68 1,10,"1375386201.txt","<Unknown ContentType>"

69 Total,10

70

71 --6deb2369-Z--

72

73 --6deb2369-A--

74 [01/Aug/2013:15:43:21 --0400] Ufq6WQrjAnkAABpaGjYAAAAC 127.0.0.1
46941 127.0.0.1 443

75 --6deb2369-B--

76 POST /cgi-bin/upload/upload.php?upload_id=90241375386201-0 HTTP/1.1

77 TE: deflate,gzip;q=0.3

78 Connection: TE, close

79 Authorization: Basic OTAyNDEzNzUzODYyMDEtMDpsTmw3VndGWG4=

80 Host: localhost

81 User-Agent: libwww-perl/5.833

82 Content-Length: 132

83 Content-Type: multipart/form-data; boundary=xYzZY

84

85 --6deb2369-I--

86

87 --6deb2369-F--

88 HTTP/1.1 403 Forbidden

89 Content-Length: 227

90 Connection: close

91 Content-Type: text/html; charset=iso-8859-1



This email message is intended for the use of the person to whom it has been sent, and may contain information that is confidential or legally protected. If you are not the intended recipient or have received this message in error, you are not authorized to copy, distribute, or otherwise use this message or its attachments. Please notify the sender immediately by return e-mail and permanently delete this message and any attachments. Verio Inc. makes no warranty that this email is error or virus free.  Thank you.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20130801/533aa79b/attachment.html>

From benwilliams+owasp at joobworld.com  Tue Aug  6 19:44:35 2013
From: benwilliams+owasp at joobworld.com (Ben WIlliams)
Date: Wed, 7 Aug 2013 07:44:35 +1200
Subject: [Owasp-modsecurity-core-rule-set] false positives in textarea inputs
Message-ID: <CANfYGQkDYAwDN-3VZJdHNMxG4DL8s2edm0JUATnKgh=jfaJK8A@mail.gmail.com>

A textarea input is triggering an inbound anomaly score of 26 due to
newline chars - \x0d\x0a\x0d\x0a

All the rules triggered are SQLi rules except for one (960024). Would this
be the best workaround?

SecRuleUpdateTargetByTag "WEB_ATTACK/SQL_INJECTION" "!ARGS:input_11"
SecRuleUpdateTargetById 960024 "!ARGS:input_11"
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20130807/c9c6a4c2/attachment.html>

From jamuse at owasp.org  Tue Aug  6 20:23:33 2013
From: jamuse at owasp.org (Josh Amishav-Zlatin)
Date: Tue, 6 Aug 2013 23:23:33 +0300
Subject: [Owasp-modsecurity-core-rule-set] false positives in textarea
	inputs
In-Reply-To: <CANfYGQkDYAwDN-3VZJdHNMxG4DL8s2edm0JUATnKgh=jfaJK8A@mail.gmail.com>
References: <CANfYGQkDYAwDN-3VZJdHNMxG4DL8s2edm0JUATnKgh=jfaJK8A@mail.gmail.com>
Message-ID: <CAC+O4mE4DNU-owmpAC5VGa4fhtmShfb0tcbo9BpcN8qa0=_abw@mail.gmail.com>

On Tue, Aug 6, 2013 at 10:44 PM, Ben WIlliams <
benwilliams+owasp at joobworld.com> wrote:

> A textarea input is triggering an inbound anomaly score of 26 due to
> newline chars - \x0d\x0a\x0d\x0a
>
> All the rules triggered are SQLi rules except for one (960024). Would this
> be the best workaround?
>
> SecRuleUpdateTargetByTag "WEB_ATTACK/SQL_INJECTION" "!ARGS:input_11"
> SecRuleUpdateTargetById 960024 "!ARGS:input_11"
>
>
Hi Ben,

That looks good. Just make sure to include those rules after the other
rules are created, e.g. in the 48 file.

--
 - Josh

_______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20130806/5b66441d/attachment.html>

From damien.wyart at gmail.com  Wed Aug  7 17:32:57 2013
From: damien.wyart at gmail.com (Damien Wyart)
Date: Wed, 7 Aug 2013 19:32:57 +0200
Subject: [Owasp-modsecurity-core-rule-set] Anomaly scoring mode no
 longer blocks only on anomaly_score in CRS 2.2.8 ?
In-Reply-To: <Pine.LNX.4.64.1307231142310.27115@calloway>
References: <Pine.LNX.4.64.1307231142310.27115@calloway>
Message-ID: <20130807173257.GA11810@brouette>

Hi,

I've not had time to test it myself, but this message seemed a bit
annoying and important, so I am surprised there was no "official"
response (from Ryan).

Would it be possible to have some opinions on this potential problem?

Many thanks in advance,

Damien

> In anomaly scoring mode, CRS 2.2.8 no longer blocks based only on tx.anomaly_score
> exceeding the tx.inbound_anomaly_score_level.

> Example:

> - This rule worked on some previous CRS version. But, in 2.2.8, it does not block based on tx.anomaly_score:
> SecRule REQUEST_URI "^/local/modsec/test$" "id:'10999',auditlog,block,msg:'LOCAL: modsec test',setvar:'tx.msg=%{rule.msg}',setvar:tx.anomaly_score=+%{tx.critical_anomaly_score}"

> - Appending setvar:'tx.%{rule.id}-local-modsec-test=bad' to the above rule "fixes" that:
> SecRule REQUEST_URI "^/local/modsec/test$" "id:'10999',auditlog,block,msg:'LOCAL: modsec test',setvar:'tx.msg=%{rule.msg}',setvar:tx.anomaly_score=+%{tx.critical_anomaly_score},setvar:'tx.%{rule.id}-local-modsec-test=bad'"


> Here was the mod that changed the behavior to base_rules/modsecurity_crs_49_inbound_blocking.conf:
> https://github.com/SpiderLabs/owasp-modsecurity-crs/commit/b054a4d92a00812b031facb3f81dd70e728ae8b3

> So, is the fact that CRS 2.2.8 now longer really blocks based only
> on tx.anomaly_score an unintended consequence ?


From ryan.barnett at owasp.org  Thu Aug  8 03:19:01 2013
From: ryan.barnett at owasp.org (Ryan Barnett)
Date: Wed, 7 Aug 2013 21:19:01 -0600
Subject: [Owasp-modsecurity-core-rule-set] Anomaly scoring mode no
	longer blocks only on anomaly_score in CRS 2.2.8 ?
In-Reply-To: <20130807173257.GA11810@brouette>
References: <Pine.LNX.4.64.1307231142310.27115@calloway>
	<20130807173257.GA11810@brouette>
Message-ID: <B418E4DC-D357-43D0-B3BE-8F73160C5114@owasp.org>

FYI I am on vacation and will respond next week. Hopefully someone else can offer advice in my stead. 

--
Ryan Barnett
Lead Security Researcher
Trustwave - SpiderLabs

On Aug 7, 2013, at 11:32 AM, Damien Wyart <damien.wyart at gmail.com> wrote:

> Hi,
> 
> I've not had time to test it myself, but this message seemed a bit
> annoying and important, so I am surprised there was no "official"
> response (from Ryan).
> 
> Would it be possible to have some opinions on this potential problem?
> 
> Many thanks in advance,
> 
> Damien
> 
>> In anomaly scoring mode, CRS 2.2.8 no longer blocks based only on tx.anomaly_score
>> exceeding the tx.inbound_anomaly_score_level.
> 
>> Example:
> 
>> - This rule worked on some previous CRS version. But, in 2.2.8, it does not block based on tx.anomaly_score:
>> SecRule REQUEST_URI "^/local/modsec/test$" "id:'10999',auditlog,block,msg:'LOCAL: modsec test',setvar:'tx.msg=%{rule.msg}',setvar:tx.anomaly_score=+%{tx.critical_anomaly_score}"
> 
>> - Appending setvar:'tx.%{rule.id}-local-modsec-test=bad' to the above rule "fixes" that:
>> SecRule REQUEST_URI "^/local/modsec/test$" "id:'10999',auditlog,block,msg:'LOCAL: modsec test',setvar:'tx.msg=%{rule.msg}',setvar:tx.anomaly_score=+%{tx.critical_anomaly_score},setvar:'tx.%{rule.id}-local-modsec-test=bad'"
> 
> 
>> Here was the mod that changed the behavior to base_rules/modsecurity_crs_49_inbound_blocking.conf:
>> https://github.com/SpiderLabs/owasp-modsecurity-crs/commit/b054a4d92a00812b031facb3f81dd70e728ae8b3
> 
>> So, is the fact that CRS 2.2.8 now longer really blocks based only
>> on tx.anomaly_score an unintended consequence ?
> 
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set

From chris at derham.me.uk  Thu Aug  8 10:21:53 2013
From: chris at derham.me.uk (chris derham)
Date: Thu, 8 Aug 2013 07:21:53 -0300
Subject: [Owasp-modsecurity-core-rule-set] Anomaly scoring mode no
 longer blocks only on anomaly_score in CRS 2.2.8 ?
In-Reply-To: <B418E4DC-D357-43D0-B3BE-8F73160C5114@owasp.org>
References: <Pine.LNX.4.64.1307231142310.27115@calloway>
	<20130807173257.GA11810@brouette>
	<B418E4DC-D357-43D0-B3BE-8F73160C5114@owasp.org>
Message-ID: <CAG6aRdU=U7OvtKoqy9rTLRF5T8WG9Y=YuQVaTbWd=ReHPYDpOw@mail.gmail.com>

All,

Ok I'll have a go at helping out, seeing as  hit the same issue yesterday.

All the mod rules update the ANOMALY_SCORE when something bad is
found. Then in modsecurity_crs_49_inbound_blocking.conf, rule 981175
checks the value of ANOMALY_SCORE against
tx.inbound_anomaly_score_level. The request is blocked if the score is
higher than the score level and ANOMALY_SCORE_BLOCKING is set to on.

So to enable anomaly score blocking when you deploy a new set of CRS
rules, copy modsecurity_crs_10_setup.conf.example and make the
following edits

1) Change SecDefaultAction to "phase:1,pass,log"
2) uncomment 900004 - this turns sets tx.anomaly_score_blocking to on

We wished for different mechanism for blocking, e.g. friendly
"security says you are doing something bad" page, so we edited the4
rules in modsecurity_crs_49_inbound_blocking.conf and
modsecurity_crs_59_outbound_blocking.conf such that they moved from
"...,t:none,deny,msg:...." to from
"...,t:none,deny,status:412,msg:....". Then we added the following to
apache conf

ErrorDocument 412 /error/securityIssue.html

We tested with an attempted path traversal, and via audit console we
can see that this is blocking using anomaly score detection.

Hope that helps

Thanks

Chris

On Thu, Aug 8, 2013 at 12:19 AM, Ryan Barnett <ryan.barnett at owasp.org> wrote:
> FYI I am on vacation and will respond next week. Hopefully someone else can offer advice in my stead.
>
> --
> Ryan Barnett
> Lead Security Researcher
> Trustwave - SpiderLabs
>
> On Aug 7, 2013, at 11:32 AM, Damien Wyart <damien.wyart at gmail.com> wrote:
>
>> Hi,
>>
>> I've not had time to test it myself, but this message seemed a bit
>> annoying and important, so I am surprised there was no "official"
>> response (from Ryan).
>>
>> Would it be possible to have some opinions on this potential problem?
>>
>> Many thanks in advance,
>>
>> Damien
>>
>>> In anomaly scoring mode, CRS 2.2.8 no longer blocks based only on tx.anomaly_score
>>> exceeding the tx.inbound_anomaly_score_level.
>>
>>> Example:
>>
>>> - This rule worked on some previous CRS version. But, in 2.2.8, it does not block based on tx.anomaly_score:
>>> SecRule REQUEST_URI "^/local/modsec/test$" "id:'10999',auditlog,block,msg:'LOCAL: modsec test',setvar:'tx.msg=%{rule.msg}',setvar:tx.anomaly_score=+%{tx.critical_anomaly_score}"
>>
>>> - Appending setvar:'tx.%{rule.id}-local-modsec-test=bad' to the above rule "fixes" that:
>>> SecRule REQUEST_URI "^/local/modsec/test$" "id:'10999',auditlog,block,msg:'LOCAL: modsec test',setvar:'tx.msg=%{rule.msg}',setvar:tx.anomaly_score=+%{tx.critical_anomaly_score},setvar:'tx.%{rule.id}-local-modsec-test=bad'"
>>
>>
>>> Here was the mod that changed the behavior to base_rules/modsecurity_crs_49_inbound_blocking.conf:
>>> https://github.com/SpiderLabs/owasp-modsecurity-crs/commit/b054a4d92a00812b031facb3f81dd70e728ae8b3
>>
>>> So, is the fact that CRS 2.2.8 now longer really blocks based only
>>> on tx.anomaly_score an unintended consequence ?
>>
>> _______________________________________________
>> Owasp-modsecurity-core-rule-set mailing list
>> Owasp-modsecurity-core-rule-set at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set

From rp-modsec-crs-list at bev.net  Thu Aug  8 17:44:37 2013
From: rp-modsec-crs-list at bev.net (rp-modsec-crs-list at bev.net)
Date: Thu, 8 Aug 2013 13:44:37 -0400 (EDT)
Subject: [Owasp-modsecurity-core-rule-set] Anomaly scoring mode no
 longer blocks only on anomaly_score in CRS 2.2.8 ?
Message-ID: <Pine.LNX.4.64.1308081342280.15315@calloway>

I posted the orignal question. But, let me add some clarification.
Almost all of the stock CRS rules will block in anomaly scoring mode as-is.
But, there are couple in the SQLi rules (I think) that might not (don't
have those handy).

The other words, if you doing nothing but straight CRS with no local or third
party rules, no problems.

The issue is that local (or possibly non-CRS third party) rules you've added
(on top of CRS) with scoring will need more than just the score now. You must
also have a "setvar:tx.%{rule.id}-SOMETHING" (the need for a dash is what 
effectively got changed).

-RP

From chris at derham.me.uk  Thu Aug  8 18:29:37 2013
From: chris at derham.me.uk (chris derham)
Date: Thu, 8 Aug 2013 15:29:37 -0300
Subject: [Owasp-modsecurity-core-rule-set] Anomaly scoring mode no
 longer blocks only on anomaly_score in CRS 2.2.8 ?
In-Reply-To: <Pine.LNX.4.64.1308081342280.15315@calloway>
References: <Pine.LNX.4.64.1308081342280.15315@calloway>
Message-ID: <CAG6aRdVzRTyF8uF-dSN8=F-hXj0sCLu51GcTJ0pxKTJ0bvtf6g@mail.gmail.com>

Ah ok - my bad. Guess I didn't understand your original post properly :-(

So what I (now) think you saying is "some of the rules in
modsecurity_crs_41_sql_injection_attacks.conf will no longer work with
anomaly scoring blocking, as they don't include
"setvar:tx.%{rule.id}-SOMETHING". I had a look and see that if you
search for "setvar:'tx.%{tx.msg}-", you will get 22 hits. My guess is
that you are trying to say that these be changed to become
"setvar:'tx.%{tx.id}-"

Does that sum up what you are trying to say? That still doesn't add up
to me. The highlighted change only really altered the regex used -
moving from a number to a number terminated by a space. This won't
cause the issue you describe. I guess you are saying that since the
last time you coded your rule, this has changed, and this is the last
change on that file? The initial version of the file on 14th Sep 2012
had the line "SecRule TX:/^\d/ "(.*)"" which would still require
"setvar:tx.%{rule.id}-SOMETHING". I guess you need to explain what
your concern really is - well at least to me. Perhaps everyone else
understands already - sorry for been slow

Thanks

Chris

On Thu, Aug 8, 2013 at 2:44 PM,  <rp-modsec-crs-list at bev.net> wrote:
> I posted the orignal question. But, let me add some clarification.
> Almost all of the stock CRS rules will block in anomaly scoring mode as-is.
> But, there are couple in the SQLi rules (I think) that might not (don't
> have those handy).
>
> The other words, if you doing nothing but straight CRS with no local or
> third
> party rules, no problems.
>
> The issue is that local (or possibly non-CRS third party) rules you've added
> (on top of CRS) with scoring will need more than just the score now. You
> must
> also have a "setvar:tx.%{rule.id}-SOMETHING" (the need for a dash is what
> effectively got changed).
>
> -RP
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set

From michael.haas10 at gmail.com  Thu Aug  8 19:15:21 2013
From: michael.haas10 at gmail.com (Michael Haas)
Date: Thu, 8 Aug 2013 21:15:21 +0200
Subject: [Owasp-modsecurity-core-rule-set] Anomaly scoring mode no
 longer blocks only on anomaly_score in CRS 2.2.8 ?
In-Reply-To: <CAG6aRdVzRTyF8uF-dSN8=F-hXj0sCLu51GcTJ0pxKTJ0bvtf6g@mail.gmail.com>
References: <Pine.LNX.4.64.1308081342280.15315@calloway>
	<CAG6aRdVzRTyF8uF-dSN8=F-hXj0sCLu51GcTJ0pxKTJ0bvtf6g@mail.gmail.com>
Message-ID: <CAFW5hxDjNVrGcuckMc23pPfEmh5Ysu+xTiSFK-=HceY6JSHfGA@mail.gmail.com>

Hello,

i don't know if it's necessary to change since all crs rules match the
pattern TX:/^\d+\-/.
But if it's needed to match the original pattern and the new one then we
only need to change it to
SecRule TX:/^\d+\-/|TX:/^\d/ "(.*)"
This Rule would match first the \d+\-/ so this would still count when a crs
rule is matched but if none matched the /^\d/ is there for local rules.

Best Regards
Michael


2013/8/8 chris derham <chris at derham.me.uk>

> Ah ok - my bad. Guess I didn't understand your original post properly :-(
>
> So what I (now) think you saying is "some of the rules in
> modsecurity_crs_41_sql_injection_attacks.conf will no longer work with
> anomaly scoring blocking, as they don't include
> "setvar:tx.%{rule.id}-SOMETHING". I had a look and see that if you
> search for "setvar:'tx.%{tx.msg}-", you will get 22 hits. My guess is
> that you are trying to say that these be changed to become
> "setvar:'tx.%{tx.id}-"
>
> Does that sum up what you are trying to say? That still doesn't add up
> to me. The highlighted change only really altered the regex used -
> moving from a number to a number terminated by a space. This won't
> cause the issue you describe. I guess you are saying that since the
> last time you coded your rule, this has changed, and this is the last
> change on that file? The initial version of the file on 14th Sep 2012
> had the line "SecRule TX:/^\d/ "(.*)"" which would still require
> "setvar:tx.%{rule.id}-SOMETHING". I guess you need to explain what
> your concern really is - well at least to me. Perhaps everyone else
> understands already - sorry for been slow
>
> Thanks
>
> Chris
>
> On Thu, Aug 8, 2013 at 2:44 PM,  <rp-modsec-crs-list at bev.net> wrote:
> > I posted the orignal question. But, let me add some clarification.
> > Almost all of the stock CRS rules will block in anomaly scoring mode
> as-is.
> > But, there are couple in the SQLi rules (I think) that might not (don't
> > have those handy).
> >
> > The other words, if you doing nothing but straight CRS with no local or
> > third
> > party rules, no problems.
> >
> > The issue is that local (or possibly non-CRS third party) rules you've
> added
> > (on top of CRS) with scoring will need more than just the score now. You
> > must
> > also have a "setvar:tx.%{rule.id}-SOMETHING" (the need for a dash is
> what
> > effectively got changed).
> >
> > -RP
> > _______________________________________________
> > Owasp-modsecurity-core-rule-set mailing list
> > Owasp-modsecurity-core-rule-set at lists.owasp.org
> > https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20130808/d46bbf7c/attachment.html>

From RBarnett at trustwave.com  Wed Aug 28 15:18:46 2013
From: RBarnett at trustwave.com (Ryan Barnett)
Date: Wed, 28 Aug 2013 15:18:46 +0000
Subject: [Owasp-modsecurity-core-rule-set] OWASP AppSecUSA 2-day Training:
 Web Application Defender's Cookbook - LIVE
Message-ID: <CE438D1D.B2D72%rbarnett@trustwave.com>

For those of you who are looking for some hands-on ModSecurity training this Fall, I will be running a 2-day class at the upcoming OWASP AppSecUSA conf -
sched.co/148P8p7<http://t.co/mZ6tJPtbAt>

The training is based on my book (http://www.wiley.com/WileyCDA/WileyTitle/productCd-1118362187.html) and will provide hands-on Labs using the OWASP Broken Web Application (BWA) VM.

If you are interested in the following topics, you should consider signing up!

  *   Effectively using the OWASP ModSecurity CRS
  *   Using Bayesian Detection
  *   Virtual Patching
  *   Setting HoneyTraps
  *   Spoofing Successful Exploits
  *   Leveraging 3rd Party IP Reputation
  *   Identifying Session Hijacking Attacks
  *   XSS Mitigation with JS Sandboxes

By the way ? there may be an opportunity to put these new skills to the test by joining in on the OWASP Capture the Flag (CTF) competition - http://appsecusa.org/2013/activities/ctf/.  Still working on details.

Hope to see you there.

--
Ryan Barnett
Trustwave SpiderLabs
ModSecurity Project Leader
OWASP ModSecurity CRS Project Leader


________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20130828/0e63610b/attachment.html>

