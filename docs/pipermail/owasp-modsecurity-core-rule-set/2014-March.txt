From jackbro.pluckah at gmail.com  Mon Mar  3 18:10:51 2014
From: jackbro.pluckah at gmail.com (Ramy Darwish)
Date: Mon, 03 Mar 2014 19:10:51 +0100
Subject: [Owasp-modsecurity-core-rule-set] Session Highjacking Rules,
	Existence of Variable Collection
Message-ID: <5314C5AB.3060201@gmail.com>

An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20140303/b9050474/attachment.html>

From jackbro.pluckah at gmail.com  Mon Mar  3 18:18:01 2014
From: jackbro.pluckah at gmail.com (Ramy Darwish)
Date: Mon, 03 Mar 2014 19:18:01 +0100
Subject: [Owasp-modsecurity-core-rule-set] Session Highjacking Rules,
	Existence of Variable Collection
Message-ID: <5314C759.7020809@gmail.com>

Reposting as plain text for formatting...
------------------------------------------------------------
Hi everyone!

I'm trying to fit the Session Highjacking rules 
(modsecurity_crs_16_session_hijacking.conf) to my web app.
My problem was described by someone else (but apparently never solved) 
on that older post on the modsecurity-users list:
http://sourceforge.net/p/mod-security/mailman/message/30069414/

The Session Highjacking rules look at request and response cookies to 
find or create a new sessions.
That works perfectly.
However, the two rules after it will run in ANY case, even when no 
sessions has been initialized:
-----------------------------------------
SecRule REMOTE_ADDR 
"^(\d{1,3}\.\d{1,3}\.\d{1,3}\.)""chain,phase:3,id:'981063',capture,t:none,nolog,pass"
     SecRule TX:1 
".*""t:sha1,t:hexEncode,setvar:session.ip_hash=%{matched_var}"
SecRule REQUEST_HEADERS:User-Agent 
".*""phase:3,id:'981064',t:none,t:sha1,t:hexEncode,nolog,pass,setvar:session.ua_hash=%{matched_var}"
-----------------------------------------

Because the session collection wasn't initialized (e.g. for anonymous 
users or bots),
the setvars fail and the log is filled with errors like:
-----------------------------------------
[example.com/sid#7fc5067fe380][rid#7fc4f43380a0][/path/to/file][3] Could 
not set variable "session.ip_hash" as the collection does not exist.
[example.com/sid#7fc5067fe380][rid#7fc4f43380a0][/path/to/file][3] Could 
not set variable "session.ua_hash" as the collection does not exist.
-----------------------------------------

To avoid this problem, I would like to chain these rules with a 
Collection existence check, to avoid non-existence errors.
My two questions:

   1/ I don't know how to test for the existence of the session collection.
      I don't know if it makes a difference that the rule is parsed on 
phase 3 (response headers).

   2/ More importantly, it seems like  even chaining it to an impossible 
rule
      (e.g. SecRule &ARGS:x58t4z5 "@gt 128") will not stop it from 
logging these errors!
      Maybe I misunderstood chaining or variable collections, but I 
can't seem to comprehend this issue!

If anyone can enlighten me on either or both, I'd be delighted to hear 
your advice. Thanks!

Ramy

From RBarnett at trustwave.com  Tue Mar  4 15:53:35 2014
From: RBarnett at trustwave.com (Ryan Barnett)
Date: Tue, 4 Mar 2014 15:53:35 +0000
Subject: [Owasp-modsecurity-core-rule-set] Session Highjacking Rules,
 Existence of Variable Collection
In-Reply-To: <5314C759.7020809@gmail.com>
References: <5314C759.7020809@gmail.com>
Message-ID: <CF3B60A7.D7D2E%rbarnett@trustwave.com>

What CRS version are you running?  In the current verion (2.2.9) in GitHub
repo, there is this line -

https://github.com/SpiderLabs/owasp-modsecurity-crs/blob/master/optional_ru
les/modsecurity_crs_16_session_hijacking.conf#L27


This checks the inbound request for the existence of popular SessionID
cookie names.  If they are NOT found, then it will skip the inbound
session hijacking checks.

Ryan Barnett
Lead Security Researcher, SpiderLabs

Trustwave | SMART SECURITY ON DEMAND
www.trustwave.com <http://www.trustwave.com/>




On 3/3/14 1:18 PM, "Ramy Darwish" <jackbro.pluckah at gmail.com> wrote:

>Reposting as plain text for formatting...
>------------------------------------------------------------
>Hi everyone!
>
>I'm trying to fit the Session Highjacking rules
>(modsecurity_crs_16_session_hijacking.conf) to my web app.
>My problem was described by someone else (but apparently never solved)
>on that older post on the modsecurity-users list:
>http://sourceforge.net/p/mod-security/mailman/message/30069414/
>
>The Session Highjacking rules look at request and response cookies to
>find or create a new sessions.
>That works perfectly.
>However, the two rules after it will run in ANY case, even when no
>sessions has been initialized:
>-----------------------------------------
>SecRule REMOTE_ADDR
>"^(\d{1,3}\.\d{1,3}\.\d{1,3}\.)""chain,phase:3,id:'981063',capture,t:none,
>nolog,pass"
>     SecRule TX:1
>".*""t:sha1,t:hexEncode,setvar:session.ip_hash=%{matched_var}"
>SecRule REQUEST_HEADERS:User-Agent
>".*""phase:3,id:'981064',t:none,t:sha1,t:hexEncode,nolog,pass,setvar:sessi
>on.ua_hash=%{matched_var}"
>-----------------------------------------
>
>Because the session collection wasn't initialized (e.g. for anonymous
>users or bots),
>the setvars fail and the log is filled with errors like:
>-----------------------------------------
>[example.com/sid#7fc5067fe380][rid#7fc4f43380a0][/path/to/file][3] Could
>not set variable "session.ip_hash" as the collection does not exist.
>[example.com/sid#7fc5067fe380][rid#7fc4f43380a0][/path/to/file][3] Could
>not set variable "session.ua_hash" as the collection does not exist.
>-----------------------------------------
>
>To avoid this problem, I would like to chain these rules with a
>Collection existence check, to avoid non-existence errors.
>My two questions:
>
>   1/ I don't know how to test for the existence of the session
>collection.
>      I don't know if it makes a difference that the rule is parsed on
>phase 3 (response headers).
>
>   2/ More importantly, it seems like  even chaining it to an impossible
>rule
>      (e.g. SecRule &ARGS:x58t4z5 "@gt 128") will not stop it from
>logging these errors!
>      Maybe I misunderstood chaining or variable collections, but I
>can't seem to comprehend this issue!
>
>If anyone can enlighten me on either or both, I'd be delighted to hear
>your advice. Thanks!
>
>Ramy
>_______________________________________________
>Owasp-modsecurity-core-rule-set mailing list
>Owasp-modsecurity-core-rule-set at lists.owasp.org
>https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
>


________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.


From jackbro.pluckah at gmail.com  Tue Mar  4 17:33:04 2014
From: jackbro.pluckah at gmail.com (Ramy Darwish)
Date: Tue, 04 Mar 2014 18:33:04 +0100
Subject: [Owasp-modsecurity-core-rule-set] Session Highjacking Rules,
 Existence of Variable Collection
In-Reply-To: <CF3B60A7.D7D2E%rbarnett@trustwave.com>
References: <5314C759.7020809@gmail.com>
	<CF3B60A7.D7D2E%rbarnett@trustwave.com>
Message-ID: <53160E50.8070809@gmail.com>

Hi Ryan, thank you very much for your answer.

Indeed, that line checks for an existing session cookie for all rules
until the END_SESSION_STARTUP marker, and it performs as expected.
I was referring to the last two rules (981063 and 981064, lines 47 and 49),
which will try to setvar even when the SESSION collection hasn't yet been
initialized (e.g. for session-less users, like bots or anonymous users).
This results in two "collection does not exist" errors per transaction.
Not very serious, but quite a bit of log noise :p

Another small issue:
I also noticed that because I run Modsecurity in embedded mode,
a lot of response headers aren't yet "released" by Apache on phase 3.
That includes the Set-Cookie header, which is vital for rule 981062.

But I managed to solve these issues by making the following
3 important modifications for my use case:

- Modify the regex to fit my Session Cookie name
   (that's to be expected, of course)

- Move execution of rules 981062 (Session creation),
   981063 and 981064 (IP and UA Hash creation) to phase 5:
   Since they are all non-disruptive, and because the Set-Cookie
   response headers are only available at the logging phase
   for embedded installs, this enables successful session
   initialization for all install modes!

- Execute rules 981063 and 981064 with a session existence test:
   . That way, IP and UA hashes are only created for an existing session,
     or one that was just created by the previous 981062 rule.
     No more errors for session-less navigation.
   . I came up with the following session existence test:
     SecRule &SESSION:SESSIONID "@eq 1" "chain..."
   . Apparently, it's important that this test be the first in chain,
     so as to prevent the errors showing up (maybe the rule is parsed
     without being executed when further down the chain? I'm not sure...)

Anyways, this is how I re-wrote the 981062, 981063 and 981064 rules:
http://pastebin.com/raw.php?i=4X5eh2nJ

Is it a smart and sound resolution of my problem?
Am I in the wrong regarding best practices?
So far (well, since yesterday), it has been working very well for me!

Thank you again for taking the time, much appreciated =)

-------------------------------------------------------------------------------------------------
On 04/03/2014 16:53, Ryan Barnett wrote:
> What CRS version are you running?  In the current verion (2.2.9) in GitHub
> repo, there is this line -
>
> https://github.com/SpiderLabs/owasp-modsecurity-crs/blob/master/optional_ru
> les/modsecurity_crs_16_session_hijacking.conf#L27
>
>
> This checks the inbound request for the existence of popular SessionID
> cookie names.  If they are NOT found, then it will skip the inbound
> session hijacking checks.
>
> Ryan Barnett
> Lead Security Researcher, SpiderLabs
>
> Trustwave | SMART SECURITY ON DEMAND
> www.trustwave.com <http://www.trustwave.com/>
>
>
>
>
> On 3/3/14 1:18 PM, "Ramy Darwish" <jackbro.pluckah at gmail.com> wrote:
>
>> Reposting as plain text for formatting...
>> ------------------------------------------------------------
>> Hi everyone!
>>
>> I'm trying to fit the Session Highjacking rules
>> (modsecurity_crs_16_session_hijacking.conf) to my web app.
>> My problem was described by someone else (but apparently never solved)
>> on that older post on the modsecurity-users list:
>> http://sourceforge.net/p/mod-security/mailman/message/30069414/
>>
>> The Session Highjacking rules look at request and response cookies to
>> find or create a new sessions.
>> That works perfectly.
>> However, the two rules after it will run in ANY case, even when no
>> sessions has been initialized:
>> -----------------------------------------
>> SecRule REMOTE_ADDR
>> "^(\d{1,3}\.\d{1,3}\.\d{1,3}\.)""chain,phase:3,id:'981063',capture,t:none,
>> nolog,pass"
>>      SecRule TX:1
>> ".*""t:sha1,t:hexEncode,setvar:session.ip_hash=%{matched_var}"
>> SecRule REQUEST_HEADERS:User-Agent
>> ".*""phase:3,id:'981064',t:none,t:sha1,t:hexEncode,nolog,pass,setvar:sessi
>> on.ua_hash=%{matched_var}"
>> -----------------------------------------
>>
>> Because the session collection wasn't initialized (e.g. for anonymous
>> users or bots),
>> the setvars fail and the log is filled with errors like:
>> -----------------------------------------
>> [example.com/sid#7fc5067fe380][rid#7fc4f43380a0][/path/to/file][3] Could
>> not set variable "session.ip_hash" as the collection does not exist.
>> [example.com/sid#7fc5067fe380][rid#7fc4f43380a0][/path/to/file][3] Could
>> not set variable "session.ua_hash" as the collection does not exist.
>> -----------------------------------------
>>
>> To avoid this problem, I would like to chain these rules with a
>> Collection existence check, to avoid non-existence errors.
>> My two questions:
>>
>>    1/ I don't know how to test for the existence of the session
>> collection.
>>       I don't know if it makes a difference that the rule is parsed on
>> phase 3 (response headers).
>>
>>    2/ More importantly, it seems like  even chaining it to an impossible
>> rule
>>       (e.g. SecRule &ARGS:x58t4z5 "@gt 128") will not stop it from
>> logging these errors!
>>       Maybe I misunderstood chaining or variable collections, but I
>> can't seem to comprehend this issue!
>>
>> If anyone can enlighten me on either or both, I'd be delighted to hear
>> your advice. Thanks!
>>
>> Ramy

From RBarnett at trustwave.com  Wed Mar  5 14:17:02 2014
From: RBarnett at trustwave.com (Ryan Barnett)
Date: Wed, 5 Mar 2014 14:17:02 +0000
Subject: [Owasp-modsecurity-core-rule-set] Session Highjacking Rules,
 Existence of Variable Collection
In-Reply-To: <53160E50.8070809@gmail.com>
References: <5314C759.7020809@gmail.com>
	<CF3B60A7.D7D2E%rbarnett@trustwave.com> <53160E50.8070809@gmail.com>
Message-ID: <CF3C9ADA.D7EE9%rbarnett@trustwave.com>


On 3/4/14 12:33 PM, "Ramy Darwish" <jackbro.pluckah at gmail.com> wrote:

>Hi Ryan, thank you very much for your answer.
>
>Indeed, that line checks for an existing session cookie for all rules
>until the END_SESSION_STARTUP marker, and it performs as expected.
>I was referring to the last two rules (981063 and 981064, lines 47 and
>49),
>which will try to setvar even when the SESSION collection hasn't yet been
>initialized (e.g. for session-less users, like bots or anonymous users).
>This results in two "collection does not exist" errors per transaction.
>Not very serious, but quite a bit of log noise :p
>
>Another small issue:
>I also noticed that because I run Modsecurity in embedded mode,
>a lot of response headers aren't yet "released" by Apache on phase 3.
>That includes the Set-Cookie header, which is vital for rule 981062.
>
>But I managed to solve these issues by making the following
>3 important modifications for my use case:
>
>- Modify the regex to fit my Session Cookie name
>   (that's to be expected, of course)
>
>- Move execution of rules 981062 (Session creation),
>   981063 and 981064 (IP and UA Hash creation) to phase 5:
>   Since they are all non-disruptive, and because the Set-Cookie
>   response headers are only available at the logging phase
>   for embedded installs, this enables successful session
>   initialization for all install modes!
>
>- Execute rules 981063 and 981064 with a session existence test:
>   . That way, IP and UA hashes are only created for an existing session,
>     or one that was just created by the previous 981062 rule.
>     No more errors for session-less navigation.
>   . I came up with the following session existence test:
>     SecRule &SESSION:SESSIONID "@eq 1" "chain..."
>   . Apparently, it's important that this test be the first in chain,
>     so as to prevent the errors showing up (maybe the rule is parsed
>     without being executed when further down the chain? I'm not sure...)
>
>Anyways, this is how I re-wrote the 981062, 981063 and 981064 rules:
>http://pastebin.com/raw.php?i=4X5eh2nJ
>
>Is it a smart and sound resolution of my problem?
>Am I in the wrong regarding best practices?
>So far (well, since yesterday), it has been working very well for me!
>
>Thank you again for taking the time, much appreciated =)


Your approach looks good!  Can you issue a PULL request in GitHub so we
can incorporate your updates?

https://github.com/SpiderLabs/owasp-modsecurity-crs


Thanks,
Ryan


________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.


From jackbro.pluckah at gmail.com  Wed Mar  5 19:41:52 2014
From: jackbro.pluckah at gmail.com (Ramy Darwish)
Date: Wed, 05 Mar 2014 20:41:52 +0100
Subject: [Owasp-modsecurity-core-rule-set] Session Highjacking Rules,
 Existence of Variable Collection
In-Reply-To: <CF3C9ADA.D7EE9%rbarnett@trustwave.com>
References: <5314C759.7020809@gmail.com>
	<CF3B60A7.D7D2E%rbarnett@trustwave.com>
	<53160E50.8070809@gmail.com>
	<CF3C9ADA.D7EE9%rbarnett@trustwave.com>
Message-ID: <53177E00.6010002@gmail.com>

Yay, my first PULL request ever!
Would be delighted to do that. In fact doing so right now.

Thank you!

Ramy

On 05/03/2014 15:17, Ryan Barnett wrote:
> On 3/4/14 12:33 PM, "Ramy Darwish" <jackbro.pluckah at gmail.com> wrote:
>
>> Hi Ryan, thank you very much for your answer.
>>
>> Indeed, that line checks for an existing session cookie for all rules
>> until the END_SESSION_STARTUP marker, and it performs as expected.
>> I was referring to the last two rules (981063 and 981064, lines 47 and
>> 49),
>> which will try to setvar even when the SESSION collection hasn't yet been
>> initialized (e.g. for session-less users, like bots or anonymous users).
>> This results in two "collection does not exist" errors per transaction.
>> Not very serious, but quite a bit of log noise :p
>>
>> Another small issue:
>> I also noticed that because I run Modsecurity in embedded mode,
>> a lot of response headers aren't yet "released" by Apache on phase 3.
>> That includes the Set-Cookie header, which is vital for rule 981062.
>>
>> But I managed to solve these issues by making the following
>> 3 important modifications for my use case:
>>
>> - Modify the regex to fit my Session Cookie name
>>    (that's to be expected, of course)
>>
>> - Move execution of rules 981062 (Session creation),
>>    981063 and 981064 (IP and UA Hash creation) to phase 5:
>>    Since they are all non-disruptive, and because the Set-Cookie
>>    response headers are only available at the logging phase
>>    for embedded installs, this enables successful session
>>    initialization for all install modes!
>>
>> - Execute rules 981063 and 981064 with a session existence test:
>>    . That way, IP and UA hashes are only created for an existing session,
>>      or one that was just created by the previous 981062 rule.
>>      No more errors for session-less navigation.
>>    . I came up with the following session existence test:
>>      SecRule &SESSION:SESSIONID "@eq 1" "chain..."
>>    . Apparently, it's important that this test be the first in chain,
>>      so as to prevent the errors showing up (maybe the rule is parsed
>>      without being executed when further down the chain? I'm not sure...)
>>
>> Anyways, this is how I re-wrote the 981062, 981063 and 981064 rules:
>> http://pastebin.com/raw.php?i=4X5eh2nJ
>>
>> Is it a smart and sound resolution of my problem?
>> Am I in the wrong regarding best practices?
>> So far (well, since yesterday), it has been working very well for me!
>>
>> Thank you again for taking the time, much appreciated =)
>
> Your approach looks good!  Can you issue a PULL request in GitHub so we
> can incorporate your updates?
>
> https://github.com/SpiderLabs/owasp-modsecurity-crs
>
>
> Thanks,
> Ryan
>
>
> ________________________________
>
> This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
>


From p.gackiewicz at intertele.pl  Sun Mar  9 23:42:27 2014
From: p.gackiewicz at intertele.pl (Piotr Gackiewicz)
Date: Mon, 10 Mar 2014 00:42:27 +0100 (CET)
Subject: [Owasp-modsecurity-core-rule-set] Rule id:981318 SQL Injection
	problem
Message-ID: <alpine.LRH.2.11.1403100001340.5202@gacek.intertele.pl>


Hello OWASP,

There is a problem with some characters used in SQL Injection rule:
In rule id:981318, some regex characters are encoded as UTF multibyte characters.
My testbed:
latest CentOS 6.5
mod_security-2.7.3-2.el6.x86_64 from EPEL
mod_security_crs-2.2.6-3.el6.noarch from EPEL

Problem: rule id:981318 regular expression:
"(^[\"'`???;]+|[\"'`???;]+$)"

is encoded to:
"(^[\"'`\xc2\xb4\xe2\x80\x99\xe2\x80\x98;]+|[\"'`\xc2\xb4\xe2\x80\x99\xe2\x80\x98;]+$)"

This is wrong, as it catches also some valid multibyte characters as polish "?"
(\xc4\x99) at the end of the URL arg, i.e. requesting:

http://blah.blah/script?removeins=Odinstaluj+aplikacj?

audit.log:
Message: Access denied with code 403 (phase 2).
Pattern match "(^[\"'`\xc2\xb4\xe2\x80\x99\xe2\x80\x98;]+|[\"'`\xc2\xb4\xe2\x80\x99\xe2\x80\x98;]+$)"
at ARGS:removeins. [file "/etc/httpd/modsecurity.d/activated_rules/modsecurity_crs_41_sql_injection_attacks.conf"]
[line "64"] [id "981318"] [rev "2"] [msg "SQL Injection Attack: Common Injection Testing Detected"]
[data "Matched Data: \x99 found within ARGS:removeins: Odinstaluj aplikacj\xc4\x99"]
[severity "CRITICAL"] [ver "OWASP_CRS/2.2.6"] [maturity "9"] [accuracy "8"]
[tag "OWASP_CRS/WEB_ATTACK/SQL_INJECTION"] [tag "WASCTC/WASC-19"]
[tag "OWASP_TOP_10/A1"] [tag "OWASP_AppSensor/CIE1"] [tag "PCI/6.5.2"]


IMO, these this regex should be modified to treat these characters specially, i.e.:
"(^([\"'`;]|?|?|?)+|([\"'`;]|?|?|?)+$)"


With such regexp in forementioned rule, requesting:
http://blah.blah/script?a=?

audit.log:
Message: Access denied with code 403 (phase 2). Pattern match "(^([\"'`;]|\xc2\xb4|\xe2\x80\x99|\xe2\x80\x98)+|([\"'`;]|\xc2\xb4|\xe2\x80\x99|\xe2\x80\x98)+$)"
at ARGS:a. [file "/etc/httpd/modsecurity.d/activated_rules/modsecurity_crs_41_sql_injection_attacks.conf"]
[line "64"] [id "981318"] [rev "2"] [msg "SQL Injection Attack: Common Injection Testing Detected"]
[data "Matched Data: \xe2\x80\x99 found within ARGS:a: \xe2\x80\x99"] [severity "CRITICAL"] [ver "OWASP_CRS/2.2.6"]
[maturity "9"] [accuracy "8"] [tag "OWASP_CRS/WEB_ATTACK/SQL_INJECTION"]
[tag "WASCTC/WASC-19"] [tag "OWASP_TOP_10/A1"] [tag "OWASP_AppSensor/CIE1"]
[tag "PCI/6.5.2"]


Regards,

-- 
Piotr Gackiewicz
Intertele S.A. - operator system?w ITL.PL i DOMENY.ITL.PL
al. T. Rejtana 10, 35-310 Rzesz?w
TEL: +48 17 8507580, FAX: +48 17 8520275

http://www.itl.pl       - niezawodne us?ugi hostingowe
http://domeny.itl.pl    - tanie domeny internetowe
http://www.intertele.pl

From jackbro.pluckah at gmail.com  Sun Mar 16 21:10:27 2014
From: jackbro.pluckah at gmail.com (Ramy Darwish)
Date: Sun, 16 Mar 2014 22:10:27 +0100
Subject: [Owasp-modsecurity-core-rule-set] Skip Static Content
Message-ID: <53261343.1020507@gmail.com>

Hello everyone,

Just a quick question about skipping checks on static content, 
specifically about the CRS rule file:
http://goo.gl/ZY79E2

I was just wondering: is there a specific reason why the "allow" 
statements occur on phase 2 instead of 1?

Thank you!

Ramy

From jackbro.pluckah at gmail.com  Mon Mar 17 01:06:18 2014
From: jackbro.pluckah at gmail.com (Ramy Darwish)
Date: Mon, 17 Mar 2014 02:06:18 +0100
Subject: [Owasp-modsecurity-core-rule-set] Rule id:981318 SQL Injection
 problem
In-Reply-To: <alpine.LRH.2.11.1403100001340.5202@gacek.intertele.pl>
References: <alpine.LRH.2.11.1403100001340.5202@gacek.intertele.pl>
Message-ID: <53264A8A.10602@gmail.com>

Hi Piotr,

In my experience, you need to use a utf8toUnicode transformation to 
properly map UTF8 strings to Unicode before the rule processes the input 
as Unicode, as well as fine-tune the urlDecodeUni transformation to 
properly normalize Central European Unicode characters.

Add a utf8toUnicode transformation BEFORE decoding the URL,
in order to map the UTF8 string to Unicode BEFORE it is normalized
by urlDecodeUni
---------------------------------------------------
SecRule "phase:1,id:'981318',t:utf8toUnicode,t:urlDecodeUni,...
---------------------------------------------------

Provide a code point declaration for the urlDecodeUni transformation,
in order to properly normalize Unicode strings (in modsecurity.conf)
---------------------------------------------------
# With the 1250 code point for Central Europe:
SecUnicodeMapFile /etc/modsecurity/unicode.mapping
SecUnicodeCodePage 1250
---------------------------------------------------

See these resources for more info:
http://blog.spiderlabs.com/2011/06/modsecurity-advanced-topic-of-the-week-unicode-mapping-support.html
http://blog.spiderlabs.com/2012/08/waf-normalization-and-i18n.html

Ramy Darwish

On 10/03/2014 00:42, Piotr Gackiewicz wrote:
>
> Hello OWASP,
>
> There is a problem with some characters used in SQL Injection rule:
> In rule id:981318, some regex characters are encoded as UTF multibyte 
> characters.
> My testbed:
> latest CentOS 6.5
> mod_security-2.7.3-2.el6.x86_64 from EPEL
> mod_security_crs-2.2.6-3.el6.noarch from EPEL
>
> Problem: rule id:981318 regular expression:
> "(^[\"'`???;]+|[\"'`???;]+$)"
>
> is encoded to:
> "(^[\"'`\xc2\xb4\xe2\x80\x99\xe2\x80\x98;]+|[\"'`\xc2\xb4\xe2\x80\x99\xe2\x80\x98;]+$)" 
>
>
> This is wrong, as it catches also some valid multibyte characters as 
> polish "?"
> (\xc4\x99) at the end of the URL arg, i.e. requesting:
>
> http://blah.blah/script?removeins=Odinstaluj+aplikacj?
>
> audit.log:
> Message: Access denied with code 403 (phase 2).
> Pattern match 
> "(^[\"'`\xc2\xb4\xe2\x80\x99\xe2\x80\x98;]+|[\"'`\xc2\xb4\xe2\x80\x99\xe2\x80\x98;]+$)"
> at ARGS:removeins. [file 
> "/etc/httpd/modsecurity.d/activated_rules/modsecurity_crs_41_sql_injection_attacks.conf"]
> [line "64"] [id "981318"] [rev "2"] [msg "SQL Injection Attack: Common 
> Injection Testing Detected"]
> [data "Matched Data: \x99 found within ARGS:removeins: Odinstaluj 
> aplikacj\xc4\x99"]
> [severity "CRITICAL"] [ver "OWASP_CRS/2.2.6"] [maturity "9"] [accuracy 
> "8"]
> [tag "OWASP_CRS/WEB_ATTACK/SQL_INJECTION"] [tag "WASCTC/WASC-19"]
> [tag "OWASP_TOP_10/A1"] [tag "OWASP_AppSensor/CIE1"] [tag "PCI/6.5.2"]
>
>
> IMO, these this regex should be modified to treat these characters 
> specially, i.e.:
> "(^([\"'`;]|?|?|?)+|([\"'`;]|?|?|?)+$)"
>
>
> With such regexp in forementioned rule, requesting:
> http://blah.blah/script?a=?
>
> audit.log:
> Message: Access denied with code 403 (phase 2). Pattern match 
> "(^([\"'`;]|\xc2\xb4|\xe2\x80\x99|\xe2\x80\x98)+|([\"'`;]|\xc2\xb4|\xe2\x80\x99|\xe2\x80\x98)+$)"
> at ARGS:a. [file 
> "/etc/httpd/modsecurity.d/activated_rules/modsecurity_crs_41_sql_injection_attacks.conf"]
> [line "64"] [id "981318"] [rev "2"] [msg "SQL Injection Attack: Common 
> Injection Testing Detected"]
> [data "Matched Data: \xe2\x80\x99 found within ARGS:a: \xe2\x80\x99"] 
> [severity "CRITICAL"] [ver "OWASP_CRS/2.2.6"]
> [maturity "9"] [accuracy "8"] [tag "OWASP_CRS/WEB_ATTACK/SQL_INJECTION"]
> [tag "WASCTC/WASC-19"] [tag "OWASP_TOP_10/A1"] [tag 
> "OWASP_AppSensor/CIE1"]
> [tag "PCI/6.5.2"]
>
>
> Regards,
>
>
>
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set


From josh at wafsec.com  Mon Mar 17 08:53:18 2014
From: josh at wafsec.com (Josh Amishav-Zlatin)
Date: Mon, 17 Mar 2014 10:53:18 +0200
Subject: [Owasp-modsecurity-core-rule-set] Skip Static Content
In-Reply-To: <53261343.1020507@gmail.com>
References: <53261343.1020507@gmail.com>
Message-ID: <20140317085318.GA22827@wafsec.com>

On Sun, Mar 16, 2014 at 10:10:27PM +0100, Ramy Darwish wrote:
> Hello everyone,
> 
> Just a quick question about skipping checks on static content,
> specifically about the CRS rule file:
> http://goo.gl/ZY79E2
> 
> I was just wondering: is there a specific reason why the "allow"
> statements occur on phase 2 instead of 1?

Hi Ramy,

There are two things to note here:

1. By default phase 1 runs in the same Apache hook as phase 2.

2. These rules use the allow phase parameter which overrides the normal (post
   v2.5) 'allow' operator  behaivor and only stops processing the current phase.
   This allows us to skip the rules that check request related rules for static
   content while still checking phase three and four rules in the server 
   response.

-- 
Josh Amishav-Zlatin
CTO | Wafsec

The WAF is free, your time isn't

From p.gackiewicz at intertele.pl  Mon Mar 17 14:01:36 2014
From: p.gackiewicz at intertele.pl (Piotr Gackiewicz)
Date: Mon, 17 Mar 2014 15:01:36 +0100 (CET)
Subject: [Owasp-modsecurity-core-rule-set] Rule id:981318 SQL Injection
 problem
In-Reply-To: <53264A8A.10602@gmail.com>
References: <alpine.LRH.2.11.1403100001340.5202@gacek.intertele.pl>
	<53264A8A.10602@gmail.com>
Message-ID: <alpine.LRH.2.11.1403171304220.15079@gacek.intertele.pl>

On Mon, 17 Mar 2014, Ramy Darwish wrote:

> Hi Piotr,
>
> In my experience, you need to use a utf8toUnicode transformation to properly 
> map UTF8 strings to Unicode before the rule processes the input as Unicode, 
> as well as fine-tune the urlDecodeUni transformation to properly normalize 
> Central European Unicode characters.
>
> Provide a code point declaration for the urlDecodeUni transformation,
> in order to properly normalize Unicode strings (in modsecurity.conf)
> ---------------------------------------------------
> # With the 1250 code point for Central Europe:
> SecUnicodeMapFile /etc/modsecurity/unicode.mapping
> SecUnicodeCodePage 1250
> ---------------------------------------------------
>
> See these resources for more info:
> http: //blog.spiderlabs.com/2011/06/modsecurity-advanced-topic-of-the-week-unicode-mapping-support.html

Thanks for the response.
Unfortunately, both You and  Ryan Barnett in:
> http: //blog.spiderlabs.com/2012/08/waf-normalization-and-i18n.html
are probably missing the point.

This is not the problem with URI normalization/Best-Fit Mapping. This is a
problem with UTF8 multibyte characters, put into rule regexp,
matched with UTF8-unaware PCRE code.

These three multi-byte characters are UTF-8, widely used in
modsecurity_crs_41_sql_injection_attacks.conf:
???

They are used in regex character list: [???], which in effect, is:
[\xc2\xb4\xe2\x80\x99\xe2\x80\x98].  What does it mean?  "Match one of these
8 characters from this list".  This is documented in audit log entry:

>>  Message: Access denied with code 403 (phase 2).
>>  Pattern match "(^[\"'`\xc2\xb4\xe2\x80\x99\xe2\x80\x98;]+|[\"'`\xc2\xb4\xe2\x80\x99\xe2\x80\x98;]+$)"
>>  at ARGS:removeins. [file "/etc/httpd/modsecurity.d/activated_rules/modsecurity_crs_41_sql_injection_attacks.conf"]
>>  [line "64"] [id "981318"] [rev "2"] [msg "SQL Injection Attack: Common Injection Testing Detected"]
>>  [data "Matched Data: \x99 found within ARGS:removeins: Odinstaluj aplikacj\xc4\x99"]
>>  [severity "CRITICAL"] [ver "OWASP_CRS/2.2.6"] [maturity "9"] [accuracy "8"]
>>  [tag "OWASP_CRS/WEB_ATTACK/SQL_INJECTION"] [tag "WASCTC/WASC-19"]
>>  [tag "OWASP_TOP_10/A1"] [tag "OWASP_AppSensor/CIE1"] [tag "PCI/6.5.2"]


Setting SecUnicodeCodePage, SecUnicodeMapFile does not change anything. 
Despite setting SecUnicodeCodePage 1250, the same rule hits, with the same
"Pattern match".


I have no experience with PCRE in C, but in man pcre:

UTF-8 AND UNICODE PROPERTY SUPPORT
...
        In order process UTF-8 strings, you must build PCRE to include UTF-8
support in the code, and, in addition,  you  must
        call  pcre_compile()  with  the PCRE_UTF8 option flag. When you do
this, both the pattern and any subject strings that
        are matched against it are treated as UTF-8 strings instead of just
strings of bytes.


There is no sign of PCRE_UTF8 options usage in mod_security code. Bingo!



I wrote four Perl one-liners, to
demonstrate the problem with UTF8-unaware Perl regular expressions:


1. incorrect match as in mod_security/OWASP 981318 rule:
$ perl -e '$str="?"; print(($str=~/[?]$/ ? "match" : "no match")."\n");'
match

2. the same code, but made regex utf8-aware with 'utf8' module:
$ perl -Mutf8 -e '$str="?"; print(($str=~/[?]$/ ? "match" : "no match")."\n");'
no match

3. almost self-explaining:
$ perl -Mutf8 -e '$str="?"; print(($str=~/^[?]$/ ? "match" : "no match")."\n");'
match

4. But wait, what if we disable utf8 module? :
$ perl -e '$str="?"; print(($str=~/^[?]$/ ? "match" : "no match")."\n");'
no match



Conclusion: either enable PCRE_UTF8 in mod_security code or modify rules to
reflect PCRE UTF8 unawareness.

Regards,

-- 
Piotr Gackiewicz
Intertele S.A. - operator system?w ITL.PL i DOMENY.ITL.PL
al. T. Rejtana 10, 35-310 Rzesz?w
TEL: +48 17 8507580, FAX: +48 17 8520275

http://www.itl.pl       - niezawodne us?ugi hostingowe
http://domeny.itl.pl    - tanie domeny internetowe
http://www.intertele.pl

From ryan.barnett at owasp.org  Mon Mar 17 14:16:00 2014
From: ryan.barnett at owasp.org (Ryan Barnett)
Date: Mon, 17 Mar 2014 10:16:00 -0400
Subject: [Owasp-modsecurity-core-rule-set] Rule id:981318 SQL Injection
 problem
In-Reply-To: <alpine.LRH.2.11.1403171304220.15079@gacek.intertele.pl>
References: <alpine.LRH.2.11.1403100001340.5202@gacek.intertele.pl>
	<53264A8A.10602@gmail.com>
	<alpine.LRH.2.11.1403171304220.15079@gacek.intertele.pl>
Message-ID: <CF4C7B0D.E163C%ryan.barnett@owasp.org>

On 3/17/14 10:01 AM, "Piotr Gackiewicz" <p.gackiewicz at intertele.pl> wrote:

>On Mon, 17 Mar 2014, Ramy Darwish wrote:
>
>> Hi Piotr,
>>
>> In my experience, you need to use a utf8toUnicode transformation to
>>properly 
>> map UTF8 strings to Unicode before the rule processes the input as
>>Unicode, 
>> as well as fine-tune the urlDecodeUni transformation to properly
>>normalize 
>> Central European Unicode characters.
>>
>> Provide a code point declaration for the urlDecodeUni transformation,
>> in order to properly normalize Unicode strings (in modsecurity.conf)
>> ---------------------------------------------------
>> # With the 1250 code point for Central Europe:
>> SecUnicodeMapFile /etc/modsecurity/unicode.mapping
>> SecUnicodeCodePage 1250
>> ---------------------------------------------------
>>
>> See these resources for more info:
>> http: 
>>//blog.spiderlabs.com/2011/06/modsecurity-advanced-topic-of-the-week-unic
>>ode-mapping-support.html
>
>Thanks for the response.
>Unfortunately, both You and  Ryan Barnett in:
>> http: //blog.spiderlabs.com/2012/08/waf-normalization-and-i18n.html
>are probably missing the point.
>
>This is not the problem with URI normalization/Best-Fit Mapping. This is a
>problem with UTF8 multibyte characters, put into rule regexp,
>matched with UTF8-unaware PCRE code.

You are correct.  These rules were made prior to the UTF8/Unicode mapping
and transformation functions were added to the ModSecurity code.  These
regexes in the rules will be updated (in CRS v.3.0.0) to be quote (')
double-quote (") and backtick (`) characters instead.  The
SecUnicodeMapFile directive + t:utf8toUnicode.t:urlDecodeUni
transformation functions should then properly handle the data.

-Ryan



From jamiejaxon at gmail.com  Wed Mar 19 12:58:42 2014
From: jamiejaxon at gmail.com (Jamie Jackson)
Date: Wed, 19 Mar 2014 08:58:42 -0400
Subject: [Owasp-modsecurity-core-rule-set] Syntax error on line 51 of
	/etc/modsecurity/activated_rules/modsecurity_crs_16_session_hijacking.conf
Message-ID: <CA+onWPc1Uva9j_7uJhqjK7+WowzCuUGoKeHPALMJKqmovyuMWw@mail.gmail.com>

Hi Folks,

[Server version: Apache/2.2.22 (Ubuntu)]

I'm following along with this guide (
http://www.thefanclub.co.za/how-to/how-install-apache2-modsecurity-and-modevasive-ubuntu-1204-lts-server),
and I got to the apache restart command just before section 5.

However, I'm getting a rule error:

$ sudo service apache2 restart
[sudo] password for jamie:
Syntax error on line 51 of
/etc/modsecurity/activated_rules/modsecurity_crs_16_session_hijacking.conf:
ModSecurity: Disruptive actions can only be specified by chain starter
rules.
Action 'configtest' failed.
The Apache error log may have more information.
   ...fail!

The line referenced is the last line of the file (the second of the
following):

SecRule &SESSION:SESSIONID "@eq 1"
"chain,phase:5,id:'981064',nolog,pass,t:none"
        SecRule REQUEST_HEADERS:User-Agent ".*"
"t:none,t:sha1,t:hexEncode,nolog,setvar:session.ua_hash=%{matched_var}"

I have zero experience with ModSecurity yet, so I can't troubleshoot.

Please help me get past this.

Thanks,
Jamie
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20140319/401ab68c/attachment.html>

From jackbro.pluckah at gmail.com  Wed Mar 19 13:31:41 2014
From: jackbro.pluckah at gmail.com (Ramy Darwish)
Date: Wed, 19 Mar 2014 14:31:41 +0100
Subject: [Owasp-modsecurity-core-rule-set] Syntax error on line 51 of
 /etc/modsecurity/activated_rules/modsecurity_crs_16_session_hijacking.conf
In-Reply-To: <CA+onWPc1Uva9j_7uJhqjK7+WowzCuUGoKeHPALMJKqmovyuMWw@mail.gmail.com>
References: <CA+onWPc1Uva9j_7uJhqjK7+WowzCuUGoKeHPALMJKqmovyuMWw@mail.gmail.com>
Message-ID: <53299C3D.6090003@gmail.com>

An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20140319/4285d6d2/attachment.html>

From jamiejaxon at gmail.com  Wed Mar 19 13:39:54 2014
From: jamiejaxon at gmail.com (Jamie Jackson)
Date: Wed, 19 Mar 2014 09:39:54 -0400
Subject: [Owasp-modsecurity-core-rule-set] Syntax error on line 51 of
	/etc/modsecurity/activated_rules/modsecurity_crs_16_session_hijacking.conf
In-Reply-To: <53299C3D.6090003@gmail.com>
References: <CA+onWPc1Uva9j_7uJhqjK7+WowzCuUGoKeHPALMJKqmovyuMWw@mail.gmail.com>
	<53299C3D.6090003@gmail.com>
Message-ID: <CA+onWPfO6h79GFLFWCAW3Uj=2BEf+uTAyPj0GeFNyAZHkmhGsw@mail.gmail.com>

Thanks, Ramy.

Now I'm past that, and onto the next syntax error:

$ sudo service apache2 restart
[Wed Mar 19 09:37:10 2014] [warn] module jrun_module is already loaded,
skipping
[Wed Mar 19 09:37:10 2014] [warn] module jrun_module is already loaded,
skipping
[Wed Mar 19 09:37:10 2014] [warn] module jrun_module is already loaded,
skipping
Syntax error on line 52 of
/etc/modsecurity/activated_rules/modsecurity_crs_20_protocol_violations.conf:
Error parsing actions: Unknown action: ver
Action 'configtest' failed.
The Apache error log may have more information.
   ...fail!

Line 52 is the last of this block:

SecRule REQUEST_LINE
"!^(?i:(?:[a-z]{3,10}\s+(?:\w{3,7}?://[\w\-\./]*(?::\d+)?)?/[^?#]*(?:\?[^#\s]*)?(?:#[\S]*)?|connect
(?:\d{1,3}\.){3}\d{1,3}\.?(?::\d+)?|options \*)\s+[\w\./]+|get
/[^?#]*(?:\?[^#\s]*)?(?:#[\S]*)?)$"\
  "msg:'Invalid HTTP Request Line',\
  severity:'4',\
  id:'960911',\
  ver:'OWASP_CRS/2.2.9',\
  rev:'2',\
  maturity:'9',\
  accuracy:'9',\
  logdata:'%{request_line}',\
  phase:1,\
  block,\
  t:none,\
  tag:'OWASP_CRS/PROTOCOL_VIOLATION/INVALID_REQ',\
  tag:'CAPEC-272',\
  setvar:'tx.msg=%{rule.msg}',\
  setvar:tx.anomaly_score=+%{tx.notice_anomaly_score},\
  setvar:'tx.%{rule.id
}-OWASP_CRS/PROTOCOL_VIOLATION/INVALID_REQ-%{matched_var_name}=%{matched_var}'"



On Wed, Mar 19, 2014 at 9:31 AM, Ramy Darwish <jackbro.pluckah at gmail.com>wrote:

>  Woops, that's actually a new contribution by me. My bad.
> I guess a newbie like me needs more supervision on Pull requests =S
>
> The problem is actually on line 49, which specifies a "chain" where it
> should not.
> On line 49, replace:
>
> SecRule TX:1 ".*"
> "chain,t:sha1,t:hexEncode,setvar:session.ip_hash=%{matched_var}"
>
> with:
>
> SecRule TX:1 ".*"
> "t:sha1,t:hexEncode,setvar:session.ip_hash=%{matched_var}"
>
> Issuing a pull request right now.
>
> So sorry, everyone.
>
> Ramy Darwish
>
>
>
> On 19/03/2014 13:58, Jamie Jackson wrote:
>
> Hi Folks,
>
>  [Server version: Apache/2.2.22 (Ubuntu)]
>
>  I'm following along with this guide (
> http://www.thefanclub.co.za/how-to/how-install-apache2-modsecurity-and-modevasive-ubuntu-1204-lts-server),
> and I got to the apache restart command just before section 5.
>
>  However, I'm getting a rule error:
>
>  $ sudo service apache2 restart
> [sudo] password for jamie:
> Syntax error on line 51 of
> /etc/modsecurity/activated_rules/modsecurity_crs_16_session_hijacking.conf:
> ModSecurity: Disruptive actions can only be specified by chain starter
> rules.
> Action 'configtest' failed.
> The Apache error log may have more information.
>    ...fail!
>
>  The line referenced is the last line of the file (the second of the
> following):
>
>  SecRule &SESSION:SESSIONID "@eq 1"
> "chain,phase:5,id:'981064',nolog,pass,t:none"
>         SecRule REQUEST_HEADERS:User-Agent ".*"
> "t:none,t:sha1,t:hexEncode,nolog,setvar:session.ua_hash=%{matched_var}"
>
>  I have zero experience with ModSecurity yet, so I can't troubleshoot.
>
>  Please help me get past this.
>
>  Thanks,
> Jamie
>
>
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing listOwasp-modsecurity-core-rule-set at lists.owasp.orghttps://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20140319/9d63d148/attachment.html>

From RBarnett at trustwave.com  Wed Mar 19 14:01:29 2014
From: RBarnett at trustwave.com (Ryan Barnett)
Date: Wed, 19 Mar 2014 14:01:29 +0000
Subject: [Owasp-modsecurity-core-rule-set] Syntax error on line 51 of
 /etc/modsecurity/activated_rules/modsecurity_crs_16_session_hijacking.conf
In-Reply-To: <CA+onWPfO6h79GFLFWCAW3Uj=2BEf+uTAyPj0GeFNyAZHkmhGsw@mail.gmail.com>
References: <CA+onWPc1Uva9j_7uJhqjK7+WowzCuUGoKeHPALMJKqmovyuMWw@mail.gmail.com>
	<53299C3D.6090003@gmail.com>
	<CA+onWPfO6h79GFLFWCAW3Uj=2BEf+uTAyPj0GeFNyAZHkmhGsw@mail.gmail.com>
Message-ID: <CF4F1B2E.E26C4%rbarnett@trustwave.com>

The "ver" action (https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual#ver) is only available in ModSecurity v2.7.x <.  You need to upgrade.

Ryan Barnett
Lead Security Researcher, SpiderLabs

Trustwave | SMART SECURITY ON DEMAND
www.trustwave.com<http://www.trustwave.com/>

From: Jamie Jackson <jamiejaxon at gmail.com<mailto:jamiejaxon at gmail.com>>
Date: Wednesday, March 19, 2014 9:39 AM
Cc: "owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>" <owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>
Subject: Re: [Owasp-modsecurity-core-rule-set] Syntax error on line 51 of /etc/modsecurity/activated_rules/modsecurity_crs_16_session_hijacking.conf

Thanks, Ramy.

Now I'm past that, and onto the next syntax error:

$ sudo service apache2 restart
[Wed Mar 19 09:37:10 2014] [warn] module jrun_module is already loaded, skipping
[Wed Mar 19 09:37:10 2014] [warn] module jrun_module is already loaded, skipping
[Wed Mar 19 09:37:10 2014] [warn] module jrun_module is already loaded, skipping
Syntax error on line 52 of /etc/modsecurity/activated_rules/modsecurity_crs_20_protocol_violations.conf:
Error parsing actions: Unknown action: ver
Action 'configtest' failed.
The Apache error log may have more information.
   ...fail!

Line 52 is the last of this block:

SecRule REQUEST_LINE "!^(?i:(?:[a-z]{3,10}\s+(?:\w{3,7}?://[\w\-\./]*(?::\d+)?)?/[^?#]*(?:\?[^#\s]*)?(?:#[\S]*)?|connect (?:\d{1,3}\.){3}\d{1,3}\.?(?::\d+)?|options \*)\s+[\w\./]+|get /[^?#]*(?:\?[^#\s]*)?(?:#[\S]*)?)$"\
  "msg:'Invalid HTTP Request Line',\
  severity:'4',\
  id:'960911',\
  ver:'OWASP_CRS/2.2.9',\
  rev:'2',\
  maturity:'9',\
  accuracy:'9',\
  logdata:'%{request_line}',\
  phase:1,\
  block,\
  t:none,\
  tag:'OWASP_CRS/PROTOCOL_VIOLATION/INVALID_REQ',\
  tag:'CAPEC-272',\
  setvar:'tx.msg=%{rule.msg}',\
  setvar:tx.anomaly_score=+%{tx.notice_anomaly_score},\
  setvar:'tx.%{rule.id<http://rule.id>}-OWASP_CRS/PROTOCOL_VIOLATION/INVALID_REQ-%{matched_var_name}=%{matched_var}'"



On Wed, Mar 19, 2014 at 9:31 AM, Ramy Darwish <jackbro.pluckah at gmail.com<mailto:jackbro.pluckah at gmail.com>> wrote:
Woops, that's actually a new contribution by me. My bad.
I guess a newbie like me needs more supervision on Pull requests =S

The problem is actually on line 49, which specifies a "chain" where it should not.
On line 49, replace:

SecRule TX:1 ".*" "chain,t:sha1,t:hexEncode,setvar:session.ip_hash=%{matched_var}"

with:

SecRule TX:1 ".*" "t:sha1,t:hexEncode,setvar:session.ip_hash=%{matched_var}"

Issuing a pull request right now.

So sorry, everyone.

Ramy Darwish



On 19/03/2014 13:58, Jamie Jackson wrote:
Hi Folks,

[Server version: Apache/2.2.22 (Ubuntu)]

I'm following along with this guide (http://www.thefanclub.co.za/how-to/how-install-apache2-modsecurity-and-modevasive-ubuntu-1204-lts-server), and I got to the apache restart command just before section 5.

However, I'm getting a rule error:

$ sudo service apache2 restart
[sudo] password for jamie:
Syntax error on line 51 of /etc/modsecurity/activated_rules/modsecurity_crs_16_session_hijacking.conf:
ModSecurity: Disruptive actions can only be specified by chain starter rules.
Action 'configtest' failed.
The Apache error log may have more information.
   ...fail!

The line referenced is the last line of the file (the second of the following):

SecRule &SESSION:SESSIONID "@eq 1" "chain,phase:5,id:'981064',nolog,pass,t:none"
        SecRule REQUEST_HEADERS:User-Agent ".*" "t:none,t:sha1,t:hexEncode,nolog,setvar:session.ua_hash=%{matched_var}"

I have zero experience with ModSecurity yet, so I can't troubleshoot.

Please help me get past this.

Thanks,
Jamie



_______________________________________________
Owasp-modsecurity-core-rule-set mailing list
Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org>https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set



________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20140319/7db53674/attachment-0001.html>

From jamiejaxon at gmail.com  Wed Mar 19 17:12:13 2014
From: jamiejaxon at gmail.com (Jamie Jackson)
Date: Wed, 19 Mar 2014 13:12:13 -0400
Subject: [Owasp-modsecurity-core-rule-set] Syntax error on line 51 of
	/etc/modsecurity/activated_rules/modsecurity_crs_16_session_hijacking.conf
In-Reply-To: <CF4F1B2E.E26C4%rbarnett@trustwave.com>
References: <CA+onWPc1Uva9j_7uJhqjK7+WowzCuUGoKeHPALMJKqmovyuMWw@mail.gmail.com>
	<53299C3D.6090003@gmail.com>
	<CA+onWPfO6h79GFLFWCAW3Uj=2BEf+uTAyPj0GeFNyAZHkmhGsw@mail.gmail.com>
	<CF4F1B2E.E26C4%rbarnett@trustwave.com>
Message-ID: <CA+onWPeo8Y6P81zM0rvnyLbiZ3gR82svX7ye0TW-=q73cHD9=g@mail.gmail.com>

[I neglected to Reply-All. I accidentally sent the following to just Ryan.
Oldest to newest:]

Thanks, Ryan.

I'll ask on the ModSecurity mailing list about a
package-management-friendly way to upgrade ModSecurity

-----

Actually, Ryan, I just came across the 2.7 rule-removing script in your Git
repo:
https://github.com/SpiderLabs/owasp-modsecurity-crs/blob/master/util/rule-management/remove-2.7-actions.pl

If it proves too much of a pain (I think it will) to upgrade the distro's
(Ubuntu 12.04 and CentOS 6.4) ModSecurity, is that removal script the next
best thing?

-----

Unless I'm doing something wrong, the script doesn't seem to do anything:

# perl /tmp/remove-2.7-actions.pl -t 2.6 -f
/etc/modsecurity/optional_rules/ -n -v
Processing
/etc/modsecurity/optional_rules/modsecurity_crs_16_authentication_tracking.conf
Processing
/etc/modsecurity/optional_rules/modsecurity_crs_49_header_tagging.conf
Processing
/etc/modsecurity/optional_rules/modsecurity_crs_42_comment_spam.conf
Processing /etc/modsecurity/optional_rules/modsecurity_crs_55_marketing.conf
Processing
/etc/modsecurity/optional_rules/modsecurity_crs_11_avs_traffic.conf
Processing
/etc/modsecurity/optional_rules/modsecurity_crs_13_xml_enabler.conf
Processing
/etc/modsecurity/optional_rules/modsecurity_crs_47_skip_outbound_checks.conf
Processing
/etc/modsecurity/optional_rules/modsecurity_crs_16_username_tracking.conf
Processing
/etc/modsecurity/optional_rules/modsecurity_crs_55_application_defects.conf
Processing
/etc/modsecurity/optional_rules/modsecurity_crs_16_session_hijacking.conf
Processing
/etc/modsecurity/optional_rules/modsecurity_crs_43_csrf_protection.conf
Processing /etc/modsecurity/optional_rules/modsecurity_crs_25_cc_known.conf
Processing
/etc/modsecurity/optional_rules/modsecurity_crs_10_ignore_static.conf
Processing
/etc/modsecurity/optional_rules/modsecurity_crs_46_av_scanning.conf

I diffed a before and after copy of the directory, and they're the same.




On Wed, Mar 19, 2014 at 10:01 AM, Ryan Barnett <RBarnett at trustwave.com>wrote:

>  The "ver" action (
> https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual#ver) is
> only available in ModSecurity v2.7.x <.  You need to upgrade.
>
>  *Ryan Barnett*
>
> Lead Security Researcher, SpiderLabs
>
>
>
> *Trustwave* | SMART SECURITY ON DEMAND
>
> www.trustwave.com
>
>
>   From: Jamie Jackson <jamiejaxon at gmail.com>
> Date: Wednesday, March 19, 2014 9:39 AM
> Cc: "owasp-modsecurity-core-rule-set at lists.owasp.org" <
> owasp-modsecurity-core-rule-set at lists.owasp.org>
> Subject: Re: [Owasp-modsecurity-core-rule-set] Syntax error on line 51 of
> /etc/modsecurity/activated_rules/modsecurity_crs_16_session_hijacking.conf
>
>   Thanks, Ramy.
>
>  Now I'm past that, and onto the next syntax error:
>
>  $ sudo service apache2 restart
> [Wed Mar 19 09:37:10 2014] [warn] module jrun_module is already loaded,
> skipping
> [Wed Mar 19 09:37:10 2014] [warn] module jrun_module is already loaded,
> skipping
> [Wed Mar 19 09:37:10 2014] [warn] module jrun_module is already loaded,
> skipping
> Syntax error on line 52 of
> /etc/modsecurity/activated_rules/modsecurity_crs_20_protocol_violations.conf:
> Error parsing actions: Unknown action: ver
> Action 'configtest' failed.
> The Apache error log may have more information.
>    ...fail!
>
>  Line 52 is the last of this block:
>
>  SecRule REQUEST_LINE
> "!^(?i:(?:[a-z]{3,10}\s+(?:\w{3,7}?://[\w\-\./]*(?::\d+)?)?/[^?#]*(?:\?[^#\s]*)?(?:#[\S]*)?|connect
> (?:\d{1,3}\.){3}\d{1,3}\.?(?::\d+)?|options \*)\s+[\w\./]+|get
> /[^?#]*(?:\?[^#\s]*)?(?:#[\S]*)?)$"\
>   "msg:'Invalid HTTP Request Line',\
>   severity:'4',\
>   id:'960911',\
>   ver:'OWASP_CRS/2.2.9',\
>   rev:'2',\
>   maturity:'9',\
>   accuracy:'9',\
>   logdata:'%{request_line}',\
>   phase:1,\
>   block,\
>   t:none,\
>   tag:'OWASP_CRS/PROTOCOL_VIOLATION/INVALID_REQ',\
>   tag:'CAPEC-272',\
>   setvar:'tx.msg=%{rule.msg}',\
>   setvar:tx.anomaly_score=+%{tx.notice_anomaly_score},\
>   setvar:'tx.%{rule.id
> }-OWASP_CRS/PROTOCOL_VIOLATION/INVALID_REQ-%{matched_var_name}=%{matched_var}'"
>
>
>
> On Wed, Mar 19, 2014 at 9:31 AM, Ramy Darwish <jackbro.pluckah at gmail.com>wrote:
>
>>  Woops, that's actually a new contribution by me. My bad.
>> I guess a newbie like me needs more supervision on Pull requests =S
>>
>> The problem is actually on line 49, which specifies a "chain" where it
>> should not.
>> On line 49, replace:
>>
>> SecRule TX:1 ".*"
>> "chain,t:sha1,t:hexEncode,setvar:session.ip_hash=%{matched_var}"
>>
>> with:
>>
>> SecRule TX:1 ".*"
>> "t:sha1,t:hexEncode,setvar:session.ip_hash=%{matched_var}"
>>
>> Issuing a pull request right now.
>>
>> So sorry, everyone.
>>
>> Ramy Darwish
>>
>>
>>
>> On 19/03/2014 13:58, Jamie Jackson wrote:
>>
>>  Hi Folks,
>>
>>  [Server version: Apache/2.2.22 (Ubuntu)]
>>
>>  I'm following along with this guide (
>> http://www.thefanclub.co.za/how-to/how-install-apache2-modsecurity-and-modevasive-ubuntu-1204-lts-server),
>> and I got to the apache restart command just before section 5.
>>
>>  However, I'm getting a rule error:
>>
>>  $ sudo service apache2 restart
>> [sudo] password for jamie:
>> Syntax error on line 51 of
>> /etc/modsecurity/activated_rules/modsecurity_crs_16_session_hijacking.conf:
>> ModSecurity: Disruptive actions can only be specified by chain starter
>> rules.
>> Action 'configtest' failed.
>> The Apache error log may have more information.
>>    ...fail!
>>
>>  The line referenced is the last line of the file (the second of the
>> following):
>>
>>  SecRule &SESSION:SESSIONID "@eq 1"
>> "chain,phase:5,id:'981064',nolog,pass,t:none"
>>         SecRule REQUEST_HEADERS:User-Agent ".*"
>> "t:none,t:sha1,t:hexEncode,nolog,setvar:session.ua_hash=%{matched_var}"
>>
>>  I have zero experience with ModSecurity yet, so I can't troubleshoot.
>>
>>  Please help me get past this.
>>
>>  Thanks,
>> Jamie
>>
>>
>>  _______________________________________________
>> Owasp-modsecurity-core-rule-set mailing listOwasp-modsecurity-core-rule-set at lists.owasp.orghttps://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
>>
>>
>>
>
> ------------------------------
>
> This transmission may contain information that is privileged,
> confidential, and/or exempt from disclosure under applicable law. If you
> are not the intended recipient, you are hereby notified that any
> disclosure, copying, distribution, or use of the information contained
> herein (including any reliance thereon) is strictly prohibited. If you
> received this transmission in error, please immediately contact the sender
> and destroy the material in its entirety, whether in electronic or hard
> copy format.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20140319/704e95ef/attachment.html>

From ryan.barnett at owasp.org  Wed Mar 19 17:22:16 2014
From: ryan.barnett at owasp.org (Ryan Barnett)
Date: Wed, 19 Mar 2014 13:22:16 -0400
Subject: [Owasp-modsecurity-core-rule-set] Syntax error on line 51 of
	/etc/modsecurity/activated_rules/modsecurity_crs_16_session_hijacking.conf
In-Reply-To: <CA+onWPeo8Y6P81zM0rvnyLbiZ3gR82svX7ye0TW-=q73cHD9=g@mail.gmail.com>
References: <CA+onWPc1Uva9j_7uJhqjK7+WowzCuUGoKeHPALMJKqmovyuMWw@mail.gmail.com>
	<53299C3D.6090003@gmail.com>
	<CA+onWPfO6h79GFLFWCAW3Uj=2BEf+uTAyPj0GeFNyAZHkmhGsw@mail.gmail.com>
	<CF4F1B2E.E26C4%rbarnett@trustwave.com>
	<CA+onWPeo8Y6P81zM0rvnyLbiZ3gR82svX7ye0TW-=q73cHD9=g@mail.gmail.com>
Message-ID: <B6DD107C-6E11-489D-95E8-680B5141A73A@owasp.org>

Yes probably the best option if you can't upgrade. 

Ryan Barnett
OWASP ModSecurity CRS Project Leader

> On Mar 19, 2014, at 1:12 PM, Jamie Jackson <jamiejaxon at gmail.com> wrote:
> 
> [I neglected to Reply-All. I accidentally sent the following to just Ryan. Oldest to newest:]
> 
> Thanks, Ryan.
> 
> I'll ask on the ModSecurity mailing list about a package-management-friendly way to upgrade ModSecurity
> 
> -----
> 
> Actually, Ryan, I just came across the 2.7 rule-removing script in your Git repo: https://github.com/SpiderLabs/owasp-modsecurity-crs/blob/master/util/rule-management/remove-2.7-actions.pl
> 
> If it proves too much of a pain (I think it will) to upgrade the distro's (Ubuntu 12.04 and CentOS 6.4) ModSecurity, is that removal script the next best thing?
> 
> -----
> 
> Unless I'm doing something wrong, the script doesn't seem to do anything:
> 
> # perl /tmp/remove-2.7-actions.pl -t 2.6 -f /etc/modsecurity/optional_rules/ -n -v
> Processing /etc/modsecurity/optional_rules/modsecurity_crs_16_authentication_tracking.conf
> Processing /etc/modsecurity/optional_rules/modsecurity_crs_49_header_tagging.conf
> Processing /etc/modsecurity/optional_rules/modsecurity_crs_42_comment_spam.conf
> Processing /etc/modsecurity/optional_rules/modsecurity_crs_55_marketing.conf
> Processing /etc/modsecurity/optional_rules/modsecurity_crs_11_avs_traffic.conf
> Processing /etc/modsecurity/optional_rules/modsecurity_crs_13_xml_enabler.conf
> Processing /etc/modsecurity/optional_rules/modsecurity_crs_47_skip_outbound_checks.conf
> Processing /etc/modsecurity/optional_rules/modsecurity_crs_16_username_tracking.conf
> Processing /etc/modsecurity/optional_rules/modsecurity_crs_55_application_defects.conf
> Processing /etc/modsecurity/optional_rules/modsecurity_crs_16_session_hijacking.conf
> Processing /etc/modsecurity/optional_rules/modsecurity_crs_43_csrf_protection.conf
> Processing /etc/modsecurity/optional_rules/modsecurity_crs_25_cc_known.conf
> Processing /etc/modsecurity/optional_rules/modsecurity_crs_10_ignore_static.conf
> Processing /etc/modsecurity/optional_rules/modsecurity_crs_46_av_scanning.conf
> 
> I diffed a before and after copy of the directory, and they're the same.
> 
> 
> 
> 
>> On Wed, Mar 19, 2014 at 10:01 AM, Ryan Barnett <RBarnett at trustwave.com> wrote:
>> The "ver" action (https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual#ver) is only available in ModSecurity v2.7.x <.  You need to upgrade.
>> 
>> Ryan Barnett
>> Lead Security Researcher, SpiderLabs
>>  
>> Trustwave | SMART SECURITY ON DEMAND
>> www.trustwave.com
>> 
>> From: Jamie Jackson <jamiejaxon at gmail.com>
>> Date: Wednesday, March 19, 2014 9:39 AM
>> Cc: "owasp-modsecurity-core-rule-set at lists.owasp.org" <owasp-modsecurity-core-rule-set at lists.owasp.org>
>> Subject: Re: [Owasp-modsecurity-core-rule-set] Syntax error on line 51 of /etc/modsecurity/activated_rules/modsecurity_crs_16_session_hijacking.conf
>> 
>> Thanks, Ramy.
>> 
>> Now I'm past that, and onto the next syntax error:
>> 
>> $ sudo service apache2 restart
>> [Wed Mar 19 09:37:10 2014] [warn] module jrun_module is already loaded, skipping
>> [Wed Mar 19 09:37:10 2014] [warn] module jrun_module is already loaded, skipping
>> [Wed Mar 19 09:37:10 2014] [warn] module jrun_module is already loaded, skipping
>> Syntax error on line 52 of /etc/modsecurity/activated_rules/modsecurity_crs_20_protocol_violations.conf:
>> Error parsing actions: Unknown action: ver
>> Action 'configtest' failed.
>> The Apache error log may have more information.
>>    ...fail!
>> 
>> Line 52 is the last of this block:
>> 
>> SecRule REQUEST_LINE "!^(?i:(?:[a-z]{3,10}\s+(?:\w{3,7}?://[\w\-\./]*(?::\d+)?)?/[^?#]*(?:\?[^#\s]*)?(?:#[\S]*)?|connect (?:\d{1,3}\.){3}\d{1,3}\.?(?::\d+)?|options \*)\s+[\w\./]+|get /[^?#]*(?:\?[^#\s]*)?(?:#[\S]*)?)$"\
>>   "msg:'Invalid HTTP Request Line',\
>>   severity:'4',\
>>   id:'960911',\
>>   ver:'OWASP_CRS/2.2.9',\
>>   rev:'2',\
>>   maturity:'9',\
>>   accuracy:'9',\
>>   logdata:'%{request_line}',\
>>   phase:1,\
>>   block,\
>>   t:none,\
>>   tag:'OWASP_CRS/PROTOCOL_VIOLATION/INVALID_REQ',\
>>   tag:'CAPEC-272',\
>>   setvar:'tx.msg=%{rule.msg}',\
>>   setvar:tx.anomaly_score=+%{tx.notice_anomaly_score},\
>>   setvar:'tx.%{rule.id}-OWASP_CRS/PROTOCOL_VIOLATION/INVALID_REQ-%{matched_var_name}=%{matched_var}'"
>> 
>> 
>> 
>>> On Wed, Mar 19, 2014 at 9:31 AM, Ramy Darwish <jackbro.pluckah at gmail.com> wrote:
>>> Woops, that's actually a new contribution by me. My bad.
>>> I guess a newbie like me needs more supervision on Pull requests =S
>>> 
>>> The problem is actually on line 49, which specifies a "chain" where it should not.
>>> On line 49, replace:
>>> 
>>> SecRule TX:1 ".*" "chain,t:sha1,t:hexEncode,setvar:session.ip_hash=%{matched_var}"
>>> 
>>> with:
>>> 
>>> SecRule TX:1 ".*" "t:sha1,t:hexEncode,setvar:session.ip_hash=%{matched_var}"
>>> 
>>> Issuing a pull request right now.
>>> 
>>> So sorry, everyone.
>>> 
>>> Ramy Darwish
>>> 
>>> 
>>> 
>>> On 19/03/2014 13:58, Jamie Jackson wrote:
>>>> Hi Folks,
>>>> 
>>>> [Server version: Apache/2.2.22 (Ubuntu)]
>>>> 
>>>> I'm following along with this guide (http://www.thefanclub.co.za/how-to/how-install-apache2-modsecurity-and-modevasive-ubuntu-1204-lts-server), and I got to the apache restart command just before section 5.
>>>> 
>>>> However, I'm getting a rule error:
>>>> 
>>>> $ sudo service apache2 restart
>>>> [sudo] password for jamie: 
>>>> Syntax error on line 51 of /etc/modsecurity/activated_rules/modsecurity_crs_16_session_hijacking.conf:
>>>> ModSecurity: Disruptive actions can only be specified by chain starter rules.
>>>> Action 'configtest' failed.
>>>> The Apache error log may have more information.
>>>>    ...fail!
>>>> 
>>>> The line referenced is the last line of the file (the second of the following):
>>>> 
>>>> SecRule &SESSION:SESSIONID "@eq 1" "chain,phase:5,id:'981064',nolog,pass,t:none"
>>>>         SecRule REQUEST_HEADERS:User-Agent ".*" "t:none,t:sha1,t:hexEncode,nolog,setvar:session.ua_hash=%{matched_var}"
>>>> 
>>>> I have zero experience with ModSecurity yet, so I can't troubleshoot.
>>>> 
>>>> Please help me get past this.
>>>> 
>>>> Thanks,
>>>> Jamie
>>>> 
>>>> 
>>>> _______________________________________________
>>>> Owasp-modsecurity-core-rule-set mailing list
>>>> Owasp-modsecurity-core-rule-set at lists.owasp.orghttps://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
>> 
>> 
>> 
>> This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
> 
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20140319/70a8046d/attachment-0001.html>

From jamiejaxon at gmail.com  Wed Mar 19 18:05:14 2014
From: jamiejaxon at gmail.com (Jamie Jackson)
Date: Wed, 19 Mar 2014 14:05:14 -0400
Subject: [Owasp-modsecurity-core-rule-set] Syntax error on line 51 of
	/etc/modsecurity/activated_rules/modsecurity_crs_16_session_hijacking.conf
In-Reply-To: <B6DD107C-6E11-489D-95E8-680B5141A73A@owasp.org>
References: <CA+onWPc1Uva9j_7uJhqjK7+WowzCuUGoKeHPALMJKqmovyuMWw@mail.gmail.com>
	<53299C3D.6090003@gmail.com>
	<CA+onWPfO6h79GFLFWCAW3Uj=2BEf+uTAyPj0GeFNyAZHkmhGsw@mail.gmail.com>
	<CF4F1B2E.E26C4%rbarnett@trustwave.com>
	<CA+onWPeo8Y6P81zM0rvnyLbiZ3gR82svX7ye0TW-=q73cHD9=g@mail.gmail.com>
	<B6DD107C-6E11-489D-95E8-680B5141A73A@owasp.org>
Message-ID: <CA+onWPfJYEDhnoUD3Brmp63qkgn763FLeNdGX5H5+Q8SMjPKwQ@mail.gmail.com>

Hi Ryan, I think our emails crossed. I tried the script, but it didn't seem
to modify any files.

Did I make a mistake as far as my usage?

Thanks,
Jamie


On Wed, Mar 19, 2014 at 1:22 PM, Ryan Barnett <ryan.barnett at owasp.org>wrote:

> Yes probably the best option if you can't upgrade.
>
> *Ryan Barnett*
>
> OWASP ModSecurity CRS Project Leader
>
> On Mar 19, 2014, at 1:12 PM, Jamie Jackson <jamiejaxon at gmail.com> wrote:
>
> [I neglected to Reply-All. I accidentally sent the following to just Ryan.
> Oldest to newest:]
>
> Thanks, Ryan.
>
> I'll ask on the ModSecurity mailing list about a
> package-management-friendly way to upgrade ModSecurity
>
> -----
>
> Actually, Ryan, I just came across the 2.7 rule-removing script in your
> Git repo:
> https://github.com/SpiderLabs/owasp-modsecurity-crs/blob/master/util/rule-management/remove-2.7-actions.pl
>
> If it proves too much of a pain (I think it will) to upgrade the distro's
> (Ubuntu 12.04 and CentOS 6.4) ModSecurity, is that removal script the next
> best thing?
>
> -----
>
> Unless I'm doing something wrong, the script doesn't seem to do anything:
>
> # perl /tmp/remove-2.7-actions.pl -t 2.6 -f
> /etc/modsecurity/optional_rules/ -n -v
> Processing
> /etc/modsecurity/optional_rules/modsecurity_crs_16_authentication_tracking.conf
> Processing
> /etc/modsecurity/optional_rules/modsecurity_crs_49_header_tagging.conf
> Processing
> /etc/modsecurity/optional_rules/modsecurity_crs_42_comment_spam.conf
> Processing
> /etc/modsecurity/optional_rules/modsecurity_crs_55_marketing.conf
> Processing
> /etc/modsecurity/optional_rules/modsecurity_crs_11_avs_traffic.conf
> Processing
> /etc/modsecurity/optional_rules/modsecurity_crs_13_xml_enabler.conf
> Processing
> /etc/modsecurity/optional_rules/modsecurity_crs_47_skip_outbound_checks.conf
> Processing
> /etc/modsecurity/optional_rules/modsecurity_crs_16_username_tracking.conf
> Processing
> /etc/modsecurity/optional_rules/modsecurity_crs_55_application_defects.conf
> Processing
> /etc/modsecurity/optional_rules/modsecurity_crs_16_session_hijacking.conf
> Processing
> /etc/modsecurity/optional_rules/modsecurity_crs_43_csrf_protection.conf
> Processing /etc/modsecurity/optional_rules/modsecurity_crs_25_cc_known.conf
> Processing
> /etc/modsecurity/optional_rules/modsecurity_crs_10_ignore_static.conf
> Processing
> /etc/modsecurity/optional_rules/modsecurity_crs_46_av_scanning.conf
>
> I diffed a before and after copy of the directory, and they're the same.
>
>
>
>
> On Wed, Mar 19, 2014 at 10:01 AM, Ryan Barnett <RBarnett at trustwave.com>wrote:
>
>>  The "ver" action (
>> https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual#ver) is
>> only available in ModSecurity v2.7.x <.  You need to upgrade.
>>
>>  *Ryan Barnett*
>>
>> Lead Security Researcher, SpiderLabs
>>
>>
>>
>> *Trustwave* | SMART SECURITY ON DEMAND
>>
>> www.trustwave.com
>>
>>
>>   From: Jamie Jackson <jamiejaxon at gmail.com>
>> Date: Wednesday, March 19, 2014 9:39 AM
>> Cc: "owasp-modsecurity-core-rule-set at lists.owasp.org" <
>> owasp-modsecurity-core-rule-set at lists.owasp.org>
>> Subject: Re: [Owasp-modsecurity-core-rule-set] Syntax error on line 51
>> of
>> /etc/modsecurity/activated_rules/modsecurity_crs_16_session_hijacking.conf
>>
>>   Thanks, Ramy.
>>
>>  Now I'm past that, and onto the next syntax error:
>>
>>  $ sudo service apache2 restart
>> [Wed Mar 19 09:37:10 2014] [warn] module jrun_module is already loaded,
>> skipping
>> [Wed Mar 19 09:37:10 2014] [warn] module jrun_module is already loaded,
>> skipping
>> [Wed Mar 19 09:37:10 2014] [warn] module jrun_module is already loaded,
>> skipping
>> Syntax error on line 52 of
>> /etc/modsecurity/activated_rules/modsecurity_crs_20_protocol_violations.conf:
>> Error parsing actions: Unknown action: ver
>> Action 'configtest' failed.
>> The Apache error log may have more information.
>>    ...fail!
>>
>>  Line 52 is the last of this block:
>>
>>  SecRule REQUEST_LINE
>> "!^(?i:(?:[a-z]{3,10}\s+(?:\w{3,7}?://[\w\-\./]*(?::\d+)?)?/[^?#]*(?:\?[^#\s]*)?(?:#[\S]*)?|connect
>> (?:\d{1,3}\.){3}\d{1,3}\.?(?::\d+)?|options \*)\s+[\w\./]+|get
>> /[^?#]*(?:\?[^#\s]*)?(?:#[\S]*)?)$"\
>>   "msg:'Invalid HTTP Request Line',\
>>   severity:'4',\
>>   id:'960911',\
>>   ver:'OWASP_CRS/2.2.9',\
>>   rev:'2',\
>>   maturity:'9',\
>>   accuracy:'9',\
>>   logdata:'%{request_line}',\
>>   phase:1,\
>>   block,\
>>   t:none,\
>>   tag:'OWASP_CRS/PROTOCOL_VIOLATION/INVALID_REQ',\
>>   tag:'CAPEC-272',\
>>   setvar:'tx.msg=%{rule.msg}',\
>>   setvar:tx.anomaly_score=+%{tx.notice_anomaly_score},\
>>   setvar:'tx.%{rule.id
>> }-OWASP_CRS/PROTOCOL_VIOLATION/INVALID_REQ-%{matched_var_name}=%{matched_var}'"
>>
>>
>>
>> On Wed, Mar 19, 2014 at 9:31 AM, Ramy Darwish <jackbro.pluckah at gmail.com>wrote:
>>
>>>  Woops, that's actually a new contribution by me. My bad.
>>> I guess a newbie like me needs more supervision on Pull requests =S
>>>
>>> The problem is actually on line 49, which specifies a "chain" where it
>>> should not.
>>> On line 49, replace:
>>>
>>> SecRule TX:1 ".*"
>>> "chain,t:sha1,t:hexEncode,setvar:session.ip_hash=%{matched_var}"
>>>
>>> with:
>>>
>>> SecRule TX:1 ".*"
>>> "t:sha1,t:hexEncode,setvar:session.ip_hash=%{matched_var}"
>>>
>>> Issuing a pull request right now.
>>>
>>> So sorry, everyone.
>>>
>>> Ramy Darwish
>>>
>>>
>>>
>>> On 19/03/2014 13:58, Jamie Jackson wrote:
>>>
>>>  Hi Folks,
>>>
>>>  [Server version: Apache/2.2.22 (Ubuntu)]
>>>
>>>  I'm following along with this guide (
>>> http://www.thefanclub.co.za/how-to/how-install-apache2-modsecurity-and-modevasive-ubuntu-1204-lts-server),
>>> and I got to the apache restart command just before section 5.
>>>
>>>  However, I'm getting a rule error:
>>>
>>>  $ sudo service apache2 restart
>>> [sudo] password for jamie:
>>> Syntax error on line 51 of
>>> /etc/modsecurity/activated_rules/modsecurity_crs_16_session_hijacking.conf:
>>> ModSecurity: Disruptive actions can only be specified by chain starter
>>> rules.
>>> Action 'configtest' failed.
>>> The Apache error log may have more information.
>>>    ...fail!
>>>
>>>  The line referenced is the last line of the file (the second of the
>>> following):
>>>
>>>  SecRule &SESSION:SESSIONID "@eq 1"
>>> "chain,phase:5,id:'981064',nolog,pass,t:none"
>>>         SecRule REQUEST_HEADERS:User-Agent ".*"
>>> "t:none,t:sha1,t:hexEncode,nolog,setvar:session.ua_hash=%{matched_var}"
>>>
>>>  I have zero experience with ModSecurity yet, so I can't troubleshoot.
>>>
>>>  Please help me get past this.
>>>
>>>  Thanks,
>>> Jamie
>>>
>>>
>>>  _______________________________________________
>>> Owasp-modsecurity-core-rule-set mailing listOwasp-modsecurity-core-rule-set at lists.owasp.orghttps://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
>>>
>>>
>>>
>>
>> ------------------------------
>>
>> This transmission may contain information that is privileged,
>> confidential, and/or exempt from disclosure under applicable law. If you
>> are not the intended recipient, you are hereby notified that any
>> disclosure, copying, distribution, or use of the information contained
>> herein (including any reliance thereon) is strictly prohibited. If you
>> received this transmission in error, please immediately contact the sender
>> and destroy the material in its entirety, whether in electronic or hard
>> copy format.
>>
>
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20140319/de5f50e5/attachment.html>

From kevinhaefeli at gmail.com  Wed Mar 19 18:07:07 2014
From: kevinhaefeli at gmail.com (=?ISO-8859-1?Q?Kevin_H=E4feli?=)
Date: Wed, 19 Mar 2014 19:07:07 +0100
Subject: [Owasp-modsecurity-core-rule-set] version numbering,
	branches and github tags
Message-ID: <CADK9LQ9i1uVfwjnH7v1HjAHKNAnMqHSda1jhd8cF1L_Knpf=DA@mail.gmail.com>

Hi,

We're using the owasp CRS since many years successful in production and
we're very happy with it!

Now I have some questions to the mailing list ;-)

1) version numbering:

We're using debian squeeze in production (for sure, wheezy migration is in
progress)
our IT guidelines says, that we have to use the oldstable packages (no
backports):
so, we're running: libapache-mod-security 2.5.12-1+squeeze3
that means, we cant use the latest CRS 2.2.9 and unfortunately just the
"old" 2.2.5.

First I spent some minutes to figure out why the 2.2.9 CRS isnt running on
our infrastructure. (thx google) Now I'm a little bit confused about the
version numbering:
Normally I dont expect breaking changes in 2.2.x version updates.
I think it would be better to make a new 2.3 version:

CRS 2.3.x <==> modsecurity >= 2.6.x
CRS 2.2.x <==> modsecurity 2.5 and older

For sure, you cant change that anymore.
But maybe it would help to create an official wiki page with a
compatibility list?

2) stable and latest branch:

if I download / clone the CRS from github, I always get the latest version
with the newest bugfixes like:
https://github.com/SpiderLabs/owasp-modsecurity-crs/commit/7c0f59e1fd438a457529e754381ee1b2c248cc50
(master branch)

for sure, owasp is interested to get the most user on the latest rules.
but I'm interested to use the most stable version :-)
So I would be very happy if there are 2 branches (and I'm sure many other
sysadmins also):

* latest (always with the latest commits)
* stable (stable...)

3) git tags

is there a concept for the tags and github?
or did you forget to create the 2.2.9 tag?

cheers,
Kevin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20140319/fee0eea5/attachment-0001.html>

From jamiejaxon at gmail.com  Wed Mar 19 20:38:21 2014
From: jamiejaxon at gmail.com (Jamie Jackson)
Date: Wed, 19 Mar 2014 16:38:21 -0400
Subject: [Owasp-modsecurity-core-rule-set] Syntax error on line 51 of
	/etc/modsecurity/activated_rules/modsecurity_crs_16_session_hijacking.conf
In-Reply-To: <CA+onWPfJYEDhnoUD3Brmp63qkgn763FLeNdGX5H5+Q8SMjPKwQ@mail.gmail.com>
References: <CA+onWPc1Uva9j_7uJhqjK7+WowzCuUGoKeHPALMJKqmovyuMWw@mail.gmail.com>
	<53299C3D.6090003@gmail.com>
	<CA+onWPfO6h79GFLFWCAW3Uj=2BEf+uTAyPj0GeFNyAZHkmhGsw@mail.gmail.com>
	<CF4F1B2E.E26C4%rbarnett@trustwave.com>
	<CA+onWPeo8Y6P81zM0rvnyLbiZ3gR82svX7ye0TW-=q73cHD9=g@mail.gmail.com>
	<B6DD107C-6E11-489D-95E8-680B5141A73A@owasp.org>
	<CA+onWPfJYEDhnoUD3Brmp63qkgn763FLeNdGX5H5+Q8SMjPKwQ@mail.gmail.com>
Message-ID: <CA+onWPdQ6SCRCWboGVWSJP5FDNDKcQWQzfb4-Trn_R2Y5W0jjA@mail.gmail.com>

Never mind, so far so good, actually. I'm still learning my way around. I
needed to run that script on the base_rules directory (which does undergo
some changes from the script). After that, Apache starts.

Sorry about that.

Jamie


On Wed, Mar 19, 2014 at 2:05 PM, Jamie Jackson <jamiejaxon at gmail.com> wrote:

> Hi Ryan, I think our emails crossed. I tried the script, but it didn't
> seem to modify any files.
>
> Did I make a mistake as far as my usage?
>
> Thanks,
> Jamie
>
>
> On Wed, Mar 19, 2014 at 1:22 PM, Ryan Barnett <ryan.barnett at owasp.org>wrote:
>
>> Yes probably the best option if you can't upgrade.
>>
>> *Ryan Barnett*
>>
>> OWASP ModSecurity CRS Project Leader
>>
>> On Mar 19, 2014, at 1:12 PM, Jamie Jackson <jamiejaxon at gmail.com> wrote:
>>
>> [I neglected to Reply-All. I accidentally sent the following to just
>> Ryan. Oldest to newest:]
>>
>> Thanks, Ryan.
>>
>> I'll ask on the ModSecurity mailing list about a
>> package-management-friendly way to upgrade ModSecurity
>>
>> -----
>>
>> Actually, Ryan, I just came across the 2.7 rule-removing script in your
>> Git repo:
>> https://github.com/SpiderLabs/owasp-modsecurity-crs/blob/master/util/rule-management/remove-2.7-actions.pl
>>
>> If it proves too much of a pain (I think it will) to upgrade the distro's
>> (Ubuntu 12.04 and CentOS 6.4) ModSecurity, is that removal script the next
>> best thing?
>>
>> -----
>>
>> Unless I'm doing something wrong, the script doesn't seem to do anything:
>>
>> # perl /tmp/remove-2.7-actions.pl -t 2.6 -f
>> /etc/modsecurity/optional_rules/ -n -v
>> Processing
>> /etc/modsecurity/optional_rules/modsecurity_crs_16_authentication_tracking.conf
>> Processing
>> /etc/modsecurity/optional_rules/modsecurity_crs_49_header_tagging.conf
>> Processing
>> /etc/modsecurity/optional_rules/modsecurity_crs_42_comment_spam.conf
>> Processing
>> /etc/modsecurity/optional_rules/modsecurity_crs_55_marketing.conf
>> Processing
>> /etc/modsecurity/optional_rules/modsecurity_crs_11_avs_traffic.conf
>> Processing
>> /etc/modsecurity/optional_rules/modsecurity_crs_13_xml_enabler.conf
>> Processing
>> /etc/modsecurity/optional_rules/modsecurity_crs_47_skip_outbound_checks.conf
>> Processing
>> /etc/modsecurity/optional_rules/modsecurity_crs_16_username_tracking.conf
>> Processing
>> /etc/modsecurity/optional_rules/modsecurity_crs_55_application_defects.conf
>> Processing
>> /etc/modsecurity/optional_rules/modsecurity_crs_16_session_hijacking.conf
>> Processing
>> /etc/modsecurity/optional_rules/modsecurity_crs_43_csrf_protection.conf
>> Processing
>> /etc/modsecurity/optional_rules/modsecurity_crs_25_cc_known.conf
>> Processing
>> /etc/modsecurity/optional_rules/modsecurity_crs_10_ignore_static.conf
>> Processing
>> /etc/modsecurity/optional_rules/modsecurity_crs_46_av_scanning.conf
>>
>> I diffed a before and after copy of the directory, and they're the same.
>>
>>
>>
>>
>> On Wed, Mar 19, 2014 at 10:01 AM, Ryan Barnett <RBarnett at trustwave.com>wrote:
>>
>>>  The "ver" action (
>>> https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual#ver) is
>>> only available in ModSecurity v2.7.x <.  You need to upgrade.
>>>
>>>  *Ryan Barnett*
>>>
>>> Lead Security Researcher, SpiderLabs
>>>
>>>
>>>
>>> *Trustwave* | SMART SECURITY ON DEMAND
>>>
>>> www.trustwave.com
>>>
>>>
>>>   From: Jamie Jackson <jamiejaxon at gmail.com>
>>> Date: Wednesday, March 19, 2014 9:39 AM
>>> Cc: "owasp-modsecurity-core-rule-set at lists.owasp.org" <
>>> owasp-modsecurity-core-rule-set at lists.owasp.org>
>>> Subject: Re: [Owasp-modsecurity-core-rule-set] Syntax error on line 51
>>> of
>>> /etc/modsecurity/activated_rules/modsecurity_crs_16_session_hijacking.conf
>>>
>>>   Thanks, Ramy.
>>>
>>>  Now I'm past that, and onto the next syntax error:
>>>
>>>  $ sudo service apache2 restart
>>> [Wed Mar 19 09:37:10 2014] [warn] module jrun_module is already loaded,
>>> skipping
>>> [Wed Mar 19 09:37:10 2014] [warn] module jrun_module is already loaded,
>>> skipping
>>> [Wed Mar 19 09:37:10 2014] [warn] module jrun_module is already loaded,
>>> skipping
>>> Syntax error on line 52 of
>>> /etc/modsecurity/activated_rules/modsecurity_crs_20_protocol_violations.conf:
>>> Error parsing actions: Unknown action: ver
>>> Action 'configtest' failed.
>>> The Apache error log may have more information.
>>>    ...fail!
>>>
>>>  Line 52 is the last of this block:
>>>
>>>  SecRule REQUEST_LINE
>>> "!^(?i:(?:[a-z]{3,10}\s+(?:\w{3,7}?://[\w\-\./]*(?::\d+)?)?/[^?#]*(?:\?[^#\s]*)?(?:#[\S]*)?|connect
>>> (?:\d{1,3}\.){3}\d{1,3}\.?(?::\d+)?|options \*)\s+[\w\./]+|get
>>> /[^?#]*(?:\?[^#\s]*)?(?:#[\S]*)?)$"\
>>>   "msg:'Invalid HTTP Request Line',\
>>>   severity:'4',\
>>>   id:'960911',\
>>>   ver:'OWASP_CRS/2.2.9',\
>>>   rev:'2',\
>>>   maturity:'9',\
>>>   accuracy:'9',\
>>>   logdata:'%{request_line}',\
>>>   phase:1,\
>>>   block,\
>>>   t:none,\
>>>   tag:'OWASP_CRS/PROTOCOL_VIOLATION/INVALID_REQ',\
>>>   tag:'CAPEC-272',\
>>>   setvar:'tx.msg=%{rule.msg}',\
>>>   setvar:tx.anomaly_score=+%{tx.notice_anomaly_score},\
>>>   setvar:'tx.%{rule.id
>>> }-OWASP_CRS/PROTOCOL_VIOLATION/INVALID_REQ-%{matched_var_name}=%{matched_var}'"
>>>
>>>
>>>
>>> On Wed, Mar 19, 2014 at 9:31 AM, Ramy Darwish <jackbro.pluckah at gmail.com
>>> > wrote:
>>>
>>>>  Woops, that's actually a new contribution by me. My bad.
>>>> I guess a newbie like me needs more supervision on Pull requests =S
>>>>
>>>> The problem is actually on line 49, which specifies a "chain" where it
>>>> should not.
>>>> On line 49, replace:
>>>>
>>>> SecRule TX:1 ".*"
>>>> "chain,t:sha1,t:hexEncode,setvar:session.ip_hash=%{matched_var}"
>>>>
>>>> with:
>>>>
>>>> SecRule TX:1 ".*"
>>>> "t:sha1,t:hexEncode,setvar:session.ip_hash=%{matched_var}"
>>>>
>>>> Issuing a pull request right now.
>>>>
>>>> So sorry, everyone.
>>>>
>>>> Ramy Darwish
>>>>
>>>>
>>>>
>>>> On 19/03/2014 13:58, Jamie Jackson wrote:
>>>>
>>>>  Hi Folks,
>>>>
>>>>  [Server version: Apache/2.2.22 (Ubuntu)]
>>>>
>>>>  I'm following along with this guide (
>>>> http://www.thefanclub.co.za/how-to/how-install-apache2-modsecurity-and-modevasive-ubuntu-1204-lts-server),
>>>> and I got to the apache restart command just before section 5.
>>>>
>>>>  However, I'm getting a rule error:
>>>>
>>>>  $ sudo service apache2 restart
>>>> [sudo] password for jamie:
>>>> Syntax error on line 51 of
>>>> /etc/modsecurity/activated_rules/modsecurity_crs_16_session_hijacking.conf:
>>>> ModSecurity: Disruptive actions can only be specified by chain starter
>>>> rules.
>>>> Action 'configtest' failed.
>>>> The Apache error log may have more information.
>>>>    ...fail!
>>>>
>>>>  The line referenced is the last line of the file (the second of the
>>>> following):
>>>>
>>>>  SecRule &SESSION:SESSIONID "@eq 1"
>>>> "chain,phase:5,id:'981064',nolog,pass,t:none"
>>>>         SecRule REQUEST_HEADERS:User-Agent ".*"
>>>> "t:none,t:sha1,t:hexEncode,nolog,setvar:session.ua_hash=%{matched_var}"
>>>>
>>>>  I have zero experience with ModSecurity yet, so I can't troubleshoot.
>>>>
>>>>  Please help me get past this.
>>>>
>>>>  Thanks,
>>>> Jamie
>>>>
>>>>
>>>>  _______________________________________________
>>>> Owasp-modsecurity-core-rule-set mailing listOwasp-modsecurity-core-rule-set at lists.owasp.orghttps://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
>>>>
>>>>
>>>>
>>>
>>> ------------------------------
>>>
>>> This transmission may contain information that is privileged,
>>> confidential, and/or exempt from disclosure under applicable law. If you
>>> are not the intended recipient, you are hereby notified that any
>>> disclosure, copying, distribution, or use of the information contained
>>> herein (including any reliance thereon) is strictly prohibited. If you
>>> received this transmission in error, please immediately contact the sender
>>> and destroy the material in its entirety, whether in electronic or hard
>>> copy format.
>>>
>>
>> _______________________________________________
>> Owasp-modsecurity-core-rule-set mailing list
>> Owasp-modsecurity-core-rule-set at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20140319/14d2b64d/attachment.html>

From RBarnett at trustwave.com  Thu Mar 20 13:14:13 2014
From: RBarnett at trustwave.com (Ryan Barnett)
Date: Thu, 20 Mar 2014 13:14:13 +0000
Subject: [Owasp-modsecurity-core-rule-set] Google Summer of Code 2014
In-Reply-To: <B8100F0A-2478-4D80-ABA8-84F0C5E5A5E5@trustwave.com>
References: <B8100F0A-2478-4D80-ABA8-84F0C5E5A5E5@trustwave.com>
Message-ID: <CF506189.E28A1%rbarnett@trustwave.com>

Sending this out one last time as time is running out for Student Submissions -

http://blog.spiderlabs.com/2014/03/google-summer-of-code-gsoc-owasp-modsecurity-awesome.html

Ryan Barnett
Lead Security Researcher, SpiderLabs

Trustwave | SMART SECURITY ON DEMAND
www.trustwave.com<http://www.trustwave.com/>

From: Ryan Barnett <rbarnett at trustwave.com<mailto:rbarnett at trustwave.com>>
Date: Saturday, March 15, 2014 6:21 PM
To: "mod-security-users at lists.sourceforge.net<mailto:mod-security-users at lists.sourceforge.net>" <mod-security-users at lists.sourceforge.net<mailto:mod-security-users at lists.sourceforge.net>>, "<mod-security-developers at lists.sourceforge.net<mailto:mod-security-developers at lists.sourceforge.net>>" <mod-security-developers at lists.sourceforge.net<mailto:mod-security-developers at lists.sourceforge.net>>
Subject: Google Summer of Code 2014

FYI we are participating again int the Google Summer of Code (GSOC) program through OWASP.

Last year - we had a student develop the ModSecurity for Java version -
http://blog.spiderlabs.com/2013/09/modsecurity-for-java-beta-testers-needed.html

Here are some project ideas -
https://www.owasp.org/index.php/GSoC2014_Ideas#OWASP_ModSecurity_Core_Rule_Set_.28CRS.29

If you know of any students who might be interested in participating please refer them here to register -
https://www.google-melange.com/gsoc/homepage/google/gsoc2014

Ryan Barnett
Lead Security Researcher, SpiderLabs

Trustwave | SMART SECURITY ON DEMAND
www.trustwave.com<http://www.trustwave.com/>

________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20140320/4a62510f/attachment.html>

From jamiejaxon at gmail.com  Thu Mar 20 15:02:42 2014
From: jamiejaxon at gmail.com (Jamie Jackson)
Date: Thu, 20 Mar 2014 11:02:42 -0400
Subject: [Owasp-modsecurity-core-rule-set] Apache Error: Invalid URI in
	Request.
Message-ID: <CA+onWPe5PQJjp8nMcCW9qiQZ6xsxtC5Eoc+uhcvJJkXHRu4yPA@mail.gmail.com>

Hi Folks,

I'm just getting started experimenting with the CRS, so I'm going to have a
bunch of questions about some of the default rules.

Here's the first: I can't spot a problem in the requested URI. (In fact, it
looks typical to me.) Can you help me figure out what's triggering the
warning?

Thanks,
Jamie

--aa2d203d-A--
[20/Mar/2014:10:55:14 --0400] UysBUn8AAQEAACbzCEMAAAAK 127.0.0.1 53771
127.0.0.1 443
--aa2d203d-B--
GET / HTTP/1.1
Host: local.mysite.info
Connection: keep-alive
Accept:
text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like
Gecko) Chrome/33.0.1750.146 Safari/537.36
Referer: https://local.mysite.info/
Accept-Encoding: gzip,deflate,sdch
Accept-Language: en-US,en;q=0.8
Cookie: USERID=; USERHASH=;
ORIGINALURLTOKEN=967683ED%2DD2D8%2D4EFB%2D8EA1F7D5E610EA74;
MOBILEFORMAT=false; CFID=155102; CFTOKEN=61883191;
CFAUTHORIZATION_cfadmin=YWRtaW4NNkFBQTRCN0IzNDQ4NTRFQzg0RDQzNEVBNjBDMkE1NDI1Qjk3QTQxQw1jZmFkbWlu;
CFADMIN_LASTPAGE_ADMIN=%2FCFIDE%2Fadministrator%2Fdebugging%2Findex%2Ecfm;
JSESSIONID=9830fde5266a22573ad64313382327227d5d;
__utma=182783035.782843501.1395323759.1395323759.1395326921.2;
__utmb=182783035.3.10.1395326921; __utmc=182783035;
__utmz=182783035.1395323759.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)

--aa2d203d-F--
HTTP/1.1 200 OK
Content-Language: en-US
Vary: Accept-Encoding
Content-Encoding: gzip
Keep-Alive: timeout=5, max=100
Connection: Keep-Alive
Transfer-Encoding: chunked
Content-Type: text/html; charset=UTF-8

--aa2d203d-E--

<snip>

--aa2d203d-H--
Message: Warning. String match "Invalid URI in request" at
WEBSERVER_ERROR_LOG. [file
"/etc/modsecurity/activated_rules/modsecurity_crs_20_protocol_violations.conf"]
[line "82"] [id "981227"] [rev "1"] [msg "Apache Error: Invalid URI in
Request."] [data "GET / HTTP/1.1"] [severity "WARNING"] [tag
"OWASP_CRS/PROTOCOL_VIOLATION/INVALID_REQ"] [tag "CAPEC-272"]
Apache-Error: [file "core.c"] [line 3558] [level 3] Invalid URI in request
GET / HTTP/1.1, referer: https://local.mysite.info/
Apache-Handler: jrun-handler
Stopwatch: 1395327314069020 371594 (- - -)
Stopwatch2: 1395327314069020 371594; combined=23196, p1=524, p2=11283,
p3=38, p4=10878, p5=467, sr=154, sw=6, l=0, gc=0
Response-Body-Transformed: Dechunked
Producer: ModSecurity for Apache/2.6.6 (http://www.modsecurity.org/);
OWASP_CRS/2.2.9.
Server: Apache/2.2.22 (Ubuntu)
WebApp-Info: "default" "-" ""

--aa2d203d-Z--
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20140320/6ebf4156/attachment.html>

From jamie.riden at gmail.com  Thu Mar 20 15:13:44 2014
From: jamie.riden at gmail.com (Jamie Riden)
Date: Thu, 20 Mar 2014 15:13:44 +0000
Subject: [Owasp-modsecurity-core-rule-set] Apache Error: Invalid URI in
	Request.
In-Reply-To: <CA+onWPe5PQJjp8nMcCW9qiQZ6xsxtC5Eoc+uhcvJJkXHRu4yPA@mail.gmail.com>
References: <CA+onWPe5PQJjp8nMcCW9qiQZ6xsxtC5Eoc+uhcvJJkXHRu4yPA@mail.gmail.com>
Message-ID: <CAHno4i9hhFZRvqXaEFnt8DUpiGJwfXDy+abwbdZX7vU0KT8wqw@mail.gmail.com>

I'm no expert either, but it seems to be deciding this based on the
Apache response.

If you disable mod_sec briefly, and re-send the request, what response
do you get?

cheers,
 Jamie


https://github.com/SpiderLabs/owasp-modsecurity-crs/blob/master/base_rules/modsecurity_crs_20_protocol_violations.conf
#
# Identify Invalid URIs Blocked by Apache
#
# -=[ Rule Logic ]=-
#
# There are some request violations that Apache will handle
internally, prior to the
# ModSecurity phase:1 POST-READ-REQUEST hook.  For these requests, we
can still get
# visibility by running a check in phase:5 logging to look for the
Apache error msg.
#
# -=[ References ]=-
#
SecRule WEBSERVER_ERROR_LOG "@contains Invalid URI in request" \
  "msg:'Apache Error: Invalid URI in Request.', \
  severity:'4', \
  id:'981227', \
  ver:'OWASP_CRS/2.2.9', \
  rev:'1', \
  maturity:'9', \
  accuracy:'9', \
  logdata:'%{request_line}', \
  phase:5, \
  pass, \
  t:none, \
  tag:'OWASP_CRS/PROTOCOL_VIOLATION/INVALID_REQ', \
  tag:'CAPEC-272', \
  setvar:'tx.msg=%{rule.msg}', \
  setvar:tx.anomaly_score=+%{tx.notice_anomaly_score}, \
  setvar:'tx.%{rule.id}-OWASP_CRS/PROTOCOL_VIOLATION/INVALID_REQ-%{matched_var_name}=%{matched_var}'"

On 20 March 2014 15:02, Jamie Jackson <jamiejaxon at gmail.com> wrote:
> Hi Folks,
>
> I'm just getting started experimenting with the CRS, so I'm going to have a
> bunch of questions about some of the default rules.
>
> Here's the first: I can't spot a problem in the requested URI. (In fact, it
> looks typical to me.) Can you help me figure out what's triggering the
> warning?
>
> Thanks,
> Jamie
>
> --aa2d203d-A--
> [20/Mar/2014:10:55:14 --0400] UysBUn8AAQEAACbzCEMAAAAK 127.0.0.1 53771
> 127.0.0.1 443
> --aa2d203d-B--
> GET / HTTP/1.1
> Host: local.mysite.info
> Connection: keep-alive
> Accept:
> text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
> User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like
> Gecko) Chrome/33.0.1750.146 Safari/537.36
> Referer: https://local.mysite.info/
> Accept-Encoding: gzip,deflate,sdch
> Accept-Language: en-US,en;q=0.8
> Cookie: USERID=; USERHASH=;
> ORIGINALURLTOKEN=967683ED%2DD2D8%2D4EFB%2D8EA1F7D5E610EA74;
> MOBILEFORMAT=false; CFID=155102; CFTOKEN=61883191;
> CFAUTHORIZATION_cfadmin=YWRtaW4NNkFBQTRCN0IzNDQ4NTRFQzg0RDQzNEVBNjBDMkE1NDI1Qjk3QTQxQw1jZmFkbWlu;
> CFADMIN_LASTPAGE_ADMIN=%2FCFIDE%2Fadministrator%2Fdebugging%2Findex%2Ecfm;
> JSESSIONID=9830fde5266a22573ad64313382327227d5d;
> __utma=182783035.782843501.1395323759.1395323759.1395326921.2;
> __utmb=182783035.3.10.1395326921; __utmc=182783035;
> __utmz=182783035.1395323759.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)
>
> --aa2d203d-F--
> HTTP/1.1 200 OK
> Content-Language: en-US
> Vary: Accept-Encoding
> Content-Encoding: gzip
> Keep-Alive: timeout=5, max=100
> Connection: Keep-Alive
> Transfer-Encoding: chunked
> Content-Type: text/html; charset=UTF-8
>
> --aa2d203d-E--
>
> <snip>
>
> --aa2d203d-H--
> Message: Warning. String match "Invalid URI in request" at
> WEBSERVER_ERROR_LOG. [file
> "/etc/modsecurity/activated_rules/modsecurity_crs_20_protocol_violations.conf"]
> [line "82"] [id "981227"] [rev "1"] [msg "Apache Error: Invalid URI in
> Request."] [data "GET / HTTP/1.1"] [severity "WARNING"] [tag
> "OWASP_CRS/PROTOCOL_VIOLATION/INVALID_REQ"] [tag "CAPEC-272"]
> Apache-Error: [file "core.c"] [line 3558] [level 3] Invalid URI in request
> GET / HTTP/1.1, referer: https://local.mysite.info/
> Apache-Handler: jrun-handler
> Stopwatch: 1395327314069020 371594 (- - -)
> Stopwatch2: 1395327314069020 371594; combined=23196, p1=524, p2=11283,
> p3=38, p4=10878, p5=467, sr=154, sw=6, l=0, gc=0
> Response-Body-Transformed: Dechunked
> Producer: ModSecurity for Apache/2.6.6 (http://www.modsecurity.org/);
> OWASP_CRS/2.2.9.
> Server: Apache/2.2.22 (Ubuntu)
> WebApp-Info: "default" "-" ""
>
> --aa2d203d-Z--
>
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
>



-- 
Jamie Riden / jamie at honeynet.org / jamie.riden at gmail.com
http://uk.linkedin.com/in/jamieriden

From RBarnett at trustwave.com  Thu Mar 20 15:28:11 2014
From: RBarnett at trustwave.com (Ryan Barnett)
Date: Thu, 20 Mar 2014 15:28:11 +0000
Subject: [Owasp-modsecurity-core-rule-set] Apache Error: Invalid URI in
 Request.
In-Reply-To: <CAHno4i9hhFZRvqXaEFnt8DUpiGJwfXDy+abwbdZX7vU0KT8wqw@mail.gmail.com>
References: <CA+onWPe5PQJjp8nMcCW9qiQZ6xsxtC5Eoc+uhcvJJkXHRu4yPA@mail.gmail.com>
	<CAHno4i9hhFZRvqXaEFnt8DUpiGJwfXDy+abwbdZX7vU0KT8wqw@mail.gmail.com>
Message-ID: <CF508106.E292D%ryan.barnett@owasp.org>


On 3/20/14 11:13 AM, "Jamie Riden" <jamie.riden at gmail.com> wrote:

>I'm no expert either, but it seems to be deciding this based on the
>Apache response.

That is correct.  In this case, ModSecurty is alerting on Apache errors
generated by other Apache modules.

-Ryan

>
>If you disable mod_sec briefly, and re-send the request, what response
>do you get?
>
>cheers,
> Jamie
>
>
>https://github.com/SpiderLabs/owasp-modsecurity-crs/blob/master/base_rules
>/modsecurity_crs_20_protocol_violations.conf
>#
># Identify Invalid URIs Blocked by Apache
>#
># -=[ Rule Logic ]=-
>#
># There are some request violations that Apache will handle
>internally, prior to the
># ModSecurity phase:1 POST-READ-REQUEST hook.  For these requests, we
>can still get
># visibility by running a check in phase:5 logging to look for the
>Apache error msg.
>#
># -=[ References ]=-
>#
>SecRule WEBSERVER_ERROR_LOG "@contains Invalid URI in request" \
>  "msg:'Apache Error: Invalid URI in Request.', \
>  severity:'4', \
>  id:'981227', \
>  ver:'OWASP_CRS/2.2.9', \
>  rev:'1', \
>  maturity:'9', \
>  accuracy:'9', \
>  logdata:'%{request_line}', \
>  phase:5, \
>  pass, \
>  t:none, \
>  tag:'OWASP_CRS/PROTOCOL_VIOLATION/INVALID_REQ', \
>  tag:'CAPEC-272', \
>  setvar:'tx.msg=%{rule.msg}', \
>  setvar:tx.anomaly_score=+%{tx.notice_anomaly_score}, \
>
>setvar:'tx.%{rule.id}-OWASP_CRS/PROTOCOL_VIOLATION/INVALID_REQ-%{matched_v
>ar_name}=%{matched_var}'"
>
>On 20 March 2014 15:02, Jamie Jackson <jamiejaxon at gmail.com> wrote:
>> Hi Folks,
>>
>> I'm just getting started experimenting with the CRS, so I'm going to
>>have a
>> bunch of questions about some of the default rules.
>>
>> Here's the first: I can't spot a problem in the requested URI. (In
>>fact, it
>> looks typical to me.) Can you help me figure out what's triggering the
>> warning?
>>
>> Thanks,
>> Jamie
>>
>> --aa2d203d-A--
>> [20/Mar/2014:10:55:14 --0400] UysBUn8AAQEAACbzCEMAAAAK 127.0.0.1 53771
>> 127.0.0.1 443
>> --aa2d203d-B--
>> GET / HTTP/1.1
>> Host: local.mysite.info
>> Connection: keep-alive
>> Accept:
>>
>>text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.
>>8
>> User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML,
>>like
>> Gecko) Chrome/33.0.1750.146 Safari/537.36
>> Referer: https://local.mysite.info/
>> Accept-Encoding: gzip,deflate,sdch
>> Accept-Language: en-US,en;q=0.8
>> Cookie: USERID=; USERHASH=;
>> ORIGINALURLTOKEN=967683ED%2DD2D8%2D4EFB%2D8EA1F7D5E610EA74;
>> MOBILEFORMAT=false; CFID=155102; CFTOKEN=61883191;
>>
>>CFAUTHORIZATION_cfadmin=YWRtaW4NNkFBQTRCN0IzNDQ4NTRFQzg0RDQzNEVBNjBDMkE1N
>>DI1Qjk3QTQxQw1jZmFkbWlu;
>>
>>CFADMIN_LASTPAGE_ADMIN=%2FCFIDE%2Fadministrator%2Fdebugging%2Findex%2Ecfm
>>;
>> JSESSIONID=9830fde5266a22573ad64313382327227d5d;
>> __utma=182783035.782843501.1395323759.1395323759.1395326921.2;
>> __utmb=182783035.3.10.1395326921; __utmc=182783035;
>>
>>__utmz=182783035.1395323759.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(n
>>one)
>>
>> --aa2d203d-F--
>> HTTP/1.1 200 OK
>> Content-Language: en-US
>> Vary: Accept-Encoding
>> Content-Encoding: gzip
>> Keep-Alive: timeout=5, max=100
>> Connection: Keep-Alive
>> Transfer-Encoding: chunked
>> Content-Type: text/html; charset=UTF-8
>>
>> --aa2d203d-E--
>>
>> <snip>
>>
>> --aa2d203d-H--
>> Message: Warning. String match "Invalid URI in request" at
>> WEBSERVER_ERROR_LOG. [file
>>
>>"/etc/modsecurity/activated_rules/modsecurity_crs_20_protocol_violations.
>>conf"]
>> [line "82"] [id "981227"] [rev "1"] [msg "Apache Error: Invalid URI in
>> Request."] [data "GET / HTTP/1.1"] [severity "WARNING"] [tag
>> "OWASP_CRS/PROTOCOL_VIOLATION/INVALID_REQ"] [tag "CAPEC-272"]
>> Apache-Error: [file "core.c"] [line 3558] [level 3] Invalid URI in
>>request
>> GET / HTTP/1.1, referer: https://local.mysite.info/
>> Apache-Handler: jrun-handler
>> Stopwatch: 1395327314069020 371594 (- - -)
>> Stopwatch2: 1395327314069020 371594; combined=23196, p1=524, p2=11283,
>> p3=38, p4=10878, p5=467, sr=154, sw=6, l=0, gc=0
>> Response-Body-Transformed: Dechunked
>> Producer: ModSecurity for Apache/2.6.6 (http://www.modsecurity.org/);
>> OWASP_CRS/2.2.9.
>> Server: Apache/2.2.22 (Ubuntu)
>> WebApp-Info: "default" "-" ""
>>
>> --aa2d203d-Z--
>>
>> _______________________________________________
>> Owasp-modsecurity-core-rule-set mailing list
>> Owasp-modsecurity-core-rule-set at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
>>
>
>
>
>--
>Jamie Riden / jamie at honeynet.org / jamie.riden at gmail.com
>http://uk.linkedin.com/in/jamieriden
>_______________________________________________
>Owasp-modsecurity-core-rule-set mailing list
>Owasp-modsecurity-core-rule-set at lists.owasp.org
>https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set


________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.


From paul at paulmcgarry.com  Thu Mar 27 05:38:18 2014
From: paul at paulmcgarry.com (Paul McGarry)
Date: Thu, 27 Mar 2014 16:38:18 +1100
Subject: [Owasp-modsecurity-core-rule-set] Rule id:981318 SQL Injection
	problem
In-Reply-To: <CF4C7B0D.E163C%ryan.barnett@owasp.org>
References: <alpine.LRH.2.11.1403100001340.5202@gacek.intertele.pl>
	<53264A8A.10602@gmail.com>
	<alpine.LRH.2.11.1403171304220.15079@gacek.intertele.pl>
	<CF4C7B0D.E163C%ryan.barnett@owasp.org>
Message-ID: <CAPrE0SaFUH3oJHPAvqUPwKjO9G-1zbK0teWYPF4KqfpiceUMmQ@mail.gmail.com>

Hi Ryan, Piotr and all,

I'm just trying to get my head round this thread, so I'd appreciate it if
you'd see whether the following is a reasonable summary:

(Below I refer to the U+0084 character as an example, but the same is true
for the other non-ascii characters in the rule)

Rule 981318 checks for the U+0084 character because some application
environments transliterate that to an apostrophe/single quote, not because
U+0084 'dangerous' in it's own right.

False positives occur because when processing the U+0084 character (\xc2\xb4
in UTF8) the PCRE interprets the \xc2\xb4 as individual bytes and will
trigger on any string where the first/last character's first/last byte
(respectively) is \xc2 or \xb4.

There isn't a direct fix for this PCRE multibyte issue but by::

1)Adding a t:utf8toUnicode to the 981318 rule it will cause any \xc2\xb4 in
the input to be transformed to a %u0084 representation internally.
2)Setting up the
 SecUnicodeMapFile /etc/apache2/unicode.mapping 20127
it will cause the %u0084 representation to be transliterated to an ascii
apostrophe/single quote

The U+0084 character in the 981318 is now unnecessary because any instances
of that in the input will now just appear to the rule as an apostrophe
covered elsewhere in the rule.
This allows us to remove the U+0084 from the rule and eliminate the
multibyte PCRE collision issue.

So, in essence, t:utf8toUnicode and SecUnicodeMapFile don't solve the
underlying PCRE problem per se but avoid needing to put multibyte data into
the PCRE for the rule to have the same effect.

So the best way to 'fix' rule 981318 would be to:
-Set up the SecUnicodeMapFile
-Add t:utf8toUnicode to the 981318 rule
-Remove the U+0084 (and other non-ascii) characters from the 981318 regex.

Does that make sense?

Similarly if you were ultra confident nothing in your application stack did
do U+0084 to 'single quote' transliteration (and for other characters) you
could just remove them from the 981318 rule.

Paul





On Tue, Mar 18, 2014 at 1:16 AM, Ryan Barnett <ryan.barnett at owasp.org>wrote:

> On 3/17/14 10:01 AM, "Piotr Gackiewicz" <p.gackiewicz at intertele.pl> wrote:
>
> >On Mon, 17 Mar 2014, Ramy Darwish wrote:
> >
> >> Hi Piotr,
> >>
> >> In my experience, you need to use a utf8toUnicode transformation to
> >>properly
> >> map UTF8 strings to Unicode before the rule processes the input as
> >>Unicode,
> >> as well as fine-tune the urlDecodeUni transformation to properly
> >>normalize
> >> Central European Unicode characters.
> >>
> >> Provide a code point declaration for the urlDecodeUni transformation,
> >> in order to properly normalize Unicode strings (in modsecurity.conf)
> >> ---------------------------------------------------
> >> # With the 1250 code point for Central Europe:
> >> SecUnicodeMapFile /etc/modsecurity/unicode.mapping
> >> SecUnicodeCodePage 1250
> >> ---------------------------------------------------
> >>
> >> See these resources for more info:
> >> http:
> >>//
> blog.spiderlabs.com/2011/06/modsecurity-advanced-topic-of-the-week-unic
> >>ode-mapping-support.html
> >
> >Thanks for the response.
> >Unfortunately, both You and  Ryan Barnett in:
> >> http: //blog.spiderlabs.com/2012/08/waf-normalization-and-i18n.html
> >are probably missing the point.
> >
> >This is not the problem with URI normalization/Best-Fit Mapping. This is a
> >problem with UTF8 multibyte characters, put into rule regexp,
> >matched with UTF8-unaware PCRE code.
>
> You are correct.  These rules were made prior to the UTF8/Unicode mapping
> and transformation functions were added to the ModSecurity code.  These
> regexes in the rules will be updated (in CRS v.3.0.0) to be quote (')
> double-quote (") and backtick (`) characters instead.  The
> SecUnicodeMapFile directive + t:utf8toUnicode.t:urlDecodeUni
> transformation functions should then properly handle the data.
>
> -Ryan
>
>
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20140327/d74c1d31/attachment.html>

From jeanraymondferrer at gmail.com  Thu Mar 27 08:22:26 2014
From: jeanraymondferrer at gmail.com (Jean-Raymond Ferrer)
Date: Thu, 27 Mar 2014 09:22:26 +0100
Subject: [Owasp-modsecurity-core-rule-set] POST body is not inspected by
	modsecurity
Message-ID: <CAMe1vgu4BTP5RwaFdu3OM268zE9PVK4gXDA_E0DO6uVvhDM0bg@mail.gmail.com>

Hello,

I posted following issue on Github

https://github.com/SpiderLabs/ModSecurity/issues/684#issuecomment-38191745

 *Hi,*









*We are suffering an issue related to POST inspection. We are running
modsecurity 2.7.7 on apache 2.5.3 Backend application is running on Jetty
2.9. The application presents a login form to the end user. When filling in
the login fields with crafted data, like sql strings, the call is accepted
and sent to the backend application. But adding sql strings in the URL
blocks the call. Backend application is at risk as modsecurity is the only
security control in place. I've been suggested to enable
SecStreamInBodyInspection, but it doesn't work. Any help is welcome.*

*Kind regards*,

However I have no comment and our issue is still there.
Any help will be welcome

Kind regards,

Jean-Raymond
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20140327/9a532e70/attachment.html>

