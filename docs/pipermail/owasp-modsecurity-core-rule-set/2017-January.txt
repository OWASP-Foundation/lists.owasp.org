From gessycaetano at gmail.com  Mon Jan  2 13:51:06 2017
From: gessycaetano at gmail.com (Gessy)
Date: Mon, 02 Jan 2017 13:51:06 +0000
Subject: [Owasp-modsecurity-core-rule-set] Redirect to another URL on
	blocking problem
Message-ID: <CAGxhsK5s5XSCa9GQKV2TuZ9wHToFgzwNLjScFrz36thMDmQ+VQ@mail.gmail.com>

Hi

I installed modsecurity 2.9.1 on a CentOS 6 and tried to use the CRS3 rules.
Then I made the default configuration only modified the
RESPONSE-999-EXCLUSION-RULES-AFTER-CRS.conf file so when there is a
blocking action, the client is redirected to a specific page.

Then I used:

SecRuleUpdateActionById 949110 "t: none, redirect: 'http://<mycustompage>',
chain"
SecRuleUpdateActionById 959100 "t: none, redirect: 'http://<mycustompage>',
chain"

But it did not work when I tested it with http:
//<mytest>/?foo=../../../etc/passwd

When I comment the lines that change the Disruptive Action for Anomaly
Mode, the blocking occurs as expected with code 403

Does anyone know how to make this work.
Thank you!

Gessy
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20170102/eca370d1/attachment.html>

From paolo.luiseit at gmail.com  Wed Jan  4 09:16:15 2017
From: paolo.luiseit at gmail.com (Paolo Luise)
Date: Wed, 4 Jan 2017 10:16:15 +0100
Subject: [Owasp-modsecurity-core-rule-set]
	Owasp-modsecurity-core-rule-set Digest, Vol 93, Issue 1
In-Reply-To: <mailman.11.1483444816.25635.owasp-modsecurity-core-rule-set@lists.owasp.org>
References: <mailman.11.1483444816.25635.owasp-modsecurity-core-rule-set@lists.owasp.org>
Message-ID: <CAPF6YCnYuMux7-3y+tZfdF2uGvwZCgJj2Es-qmzTj6tCOp6gWQ@mail.gmail.com>

Hi Gessy,
I had some time to try and replicate your scenario and was able to
achieve the result you are aiming. The problem is the "chain" keyword
at the end of the SecRuleUpdateActionById directive; try with this:

SecRuleUpdateActionById 949110 "t: none, redirect: 'http://<mycustompage>'"

The manual says:
Note : If the target rule is a chained rule, you must currently
specify chain in the SecRuleUpdateActionById action list as well. This
will be fixed in a future version.

But rule 949110 is not a chained rule.

I'm not sure, but I think the chain word cause the following (changes
deny with redirect and appends chain at the end of the rule):

SecRule TX:ANOMALY_SCORE "@ge %{tx.inbound_anomaly_score_threshold}" \
    "msg:'Inbound Anomaly Score Exceeded (Total Score: %{TX.ANOMALY_SCORE})',\
    severity:CRITICAL,\
    phase:request,\
    id:949110,\
    t:none,\
    redirect:'http://<mycustompage>',\
    log,\
    tag:'application-multi',\
    tag:'language-multi',\
    tag:'platform-multi',\
    tag:'attack-generic',\
    setvar:tx.inbound_tx_msg=%{tx.msg},\
    setvar:tx.inbound_anomaly_score=%{tx.anomaly_score},
    chain"
    SecRule TX:PARANOIA_LEVEL "@lt 1"
"phase:1,id:949011,nolog,pass,skipAfter:END-REQUEST-949-BLOCKING-EVALUATION"

I say I'm not sure about the above chain because redirect and pass are
both disruptive actions, and there can be only one and in the first
rule of the chain, so modsecurity should raise an error (but I don't
get any).

Hope this will help you

Regards
Paolo Luise

> Date: Mon, 02 Jan 2017 13:51:06 +0000
> From: Gessy <gessycaetano at gmail.com>
> To: "owasp-modsecurity-core-rule-set at lists.owasp.org"
>         <owasp-modsecurity-core-rule-set at lists.owasp.org>
> Subject: [Owasp-modsecurity-core-rule-set] Redirect to another URL on
>         blocking problem
> Message-ID:
>         <CAGxhsK5s5XSCa9GQKV2TuZ9wHToFgzwNLjScFrz36thMDmQ+VQ at mail.gmail.com>
> Content-Type: text/plain; charset="utf-8"
>
> Hi
>
> I installed modsecurity 2.9.1 on a CentOS 6 and tried to use the CRS3 rules.
> Then I made the default configuration only modified the
> RESPONSE-999-EXCLUSION-RULES-AFTER-CRS.conf file so when there is a
> blocking action, the client is redirected to a specific page.
>
> Then I used:
>
> SecRuleUpdateActionById 949110 "t: none, redirect: 'http://<mycustompage>',
> chain"
> SecRuleUpdateActionById 959100 "t: none, redirect: 'http://<mycustompage>',
> chain"
>
> But it did not work when I tested it with http:
> //<mytest>/?foo=../../../etc/passwd
>
> When I comment the lines that change the Disruptive Action for Anomaly
> Mode, the blocking occurs as expected with code 403
>
> Does anyone know how to make this work.
> Thank you!
>
> Gessy

From gessycaetano at gmail.com  Wed Jan  4 13:52:34 2017
From: gessycaetano at gmail.com (Gessy)
Date: Wed, 04 Jan 2017 13:52:34 +0000
Subject: [Owasp-modsecurity-core-rule-set] Problem with ModSecurity internal
	error flagged: TX: MSC_PCRE_LIMITS_EXCEEDED
Message-ID: <CAGxhsK5R0uTD1O7h3=Qwj833CPv+h0H4-8k4x+4m_SgdWaW9Sw@mail.gmail.com>

Hi
Thanks to the community for all support and would like to ask one more
question
I used modsecurity with CRS 2.2.5 rules and everything worked as expected.
I have decided to upgrade to modsecurity 2.9.1 and CRS 3.0.0 by following
the INSTALL file.

Then I started having many blocking events with the message "ModSecurity
internal error flagged: TX: MSC_PCRE_LIMITS_EXCEEDED"

I googled it and tried the solution

     SecPcreMatchLimit 150000
     SecPcreMatchLimitRecursion 150000

But it did not work and it did not help to further increase the limits

So I thought about disabling the rule that generates this block but I saw
that several rules can generate this

I'm having many events of this mainly with sites that use shibboleth
authentication and I do not know how to solve it anymore ... Does anyone
know how to solve this problem?

Thank you so much!!!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20170104/7ff61521/attachment.html>

From christian.folini at netnea.com  Thu Jan  5 05:59:12 2017
From: christian.folini at netnea.com (Christian Folini)
Date: Thu, 5 Jan 2017 06:59:12 +0100
Subject: [Owasp-modsecurity-core-rule-set] Problem with ModSecurity
 internal error flagged: TX: MSC_PCRE_LIMITS_EXCEEDED
In-Reply-To: <CAGxhsK5R0uTD1O7h3=Qwj833CPv+h0H4-8k4x+4m_SgdWaW9Sw@mail.gmail.com>
References: <CAGxhsK5R0uTD1O7h3=Qwj833CPv+h0H4-8k4x+4m_SgdWaW9Sw@mail.gmail.com>
Message-ID: <20170105055912.GD31102@elias>

Hello Gessy,

Sorry to hear about your problems. PCRE limit issues are common with the
CRS. They are an inherent problems when using PCRE and not all rules
are optimised to avoid it.

The limit is here to protect you from DoS via Regex (-> REDoS). But in
the default ModSec setting the limit will stop a rule from being
executed. So if an attacker can construct the payload in a way that
fails with a PCRE limit exception - and still work as an exploit on the
backend - he has successfully circumvented one of your rules. Your
defense is raising the PCRE limits. Both, as you did. But this makes you
more vulnerable to REDoS. However in the age of the Mirai botnet,
REDoS might be your least DoS concern, so it is generally OK to
raise the limits to even higher levels. Personally, I run some prod
servers with a limit of 1M.

I investigated this throughly for the 2nd edition of the ModSecurity
Handbook. It was only at 1M that I started to see a performance impact.
You can monitor it fairly easily via the overall duration of the request
or the ModSecurity performance data for phase 2.

With that being said, I suggest you raise some more and then you look
at the rules in question. I would not mind you issuing some tickets
on github with the exact payload and the rules where you ran into
the PCRE limits.

I do not think you should disable the susceptible rules, but it is
generally OK to ignore the PCRE limit alerts. If you stick with the
default setting of ModSec and CRS, the rule is simply aborted and
execution continues with the next rule.

If this is still unclear, then just ask.

Ahoj,

Christian


On Wed, Jan 04, 2017 at 01:52:34PM +0000, Gessy wrote:
> Hi
> Thanks to the community for all support and would like to ask one more
> question
> I used modsecurity with CRS 2.2.5 rules and everything worked as expected.
> I have decided to upgrade to modsecurity 2.9.1 and CRS 3.0.0 by following
> the INSTALL file.
> 
> Then I started having many blocking events with the message "ModSecurity
> internal error flagged: TX: MSC_PCRE_LIMITS_EXCEEDED"
> 
> I googled it and tried the solution
> 
>      SecPcreMatchLimit 150000
>      SecPcreMatchLimitRecursion 150000
> 
> But it did not work and it did not help to further increase the limits
> 
> So I thought about disabling the rule that generates this block but I saw
> that several rules can generate this
> 
> I'm having many events of this mainly with sites that use shibboleth
> authentication and I do not know how to solve it anymore ... Does anyone
> know how to solve this problem?
> 
> Thank you so much!!!

> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set


-- 
https://www.feistyduck.com/training/modsecurity-training-course
mailto:christian.folini at netnea.com
twitter: @ChrFolini

From christian.folini at netnea.com  Thu Jan  5 08:23:40 2017
From: christian.folini at netnea.com (Christian Folini)
Date: Thu, 5 Jan 2017 09:23:40 +0100
Subject: [Owasp-modsecurity-core-rule-set] CRS3 article on lwn.net
Message-ID: <20170105082340.GB3638@elias>

Hi there,

Linux Weekly News ran an article about the Core Rule Set 3.0 before
Christmas. It has been made freely available yesterday:

https://lwn.net/Articles/709348/

I think it gives a good intro into the topic.

Ahoj,

Christian

P.S. The week before, there was a ModSecurity article that I wrote:
https://lwn.net/Articles/708673/

-- 
Only 4 tickets left for the next ModSec course:
https://www.feistyduck.com/training/modsecurity-training-course
mailto:christian.folini at netnea.com
twitter: @ChrFolini

From bghome at gmail.com  Sun Jan 15 18:11:51 2017
From: bghome at gmail.com (=?UTF-8?B?R8OpemEgQsO6emE=?=)
Date: Sun, 15 Jan 2017 18:11:51 +0000
Subject: [Owasp-modsecurity-core-rule-set] [CRS 3.0,
	Nginx] Anomaly detection rule does not trigger
In-Reply-To: <CABuZTB9x9ThiAV4XAuqCxJdc+NkCJx_Dduubxw=woc18-VA8AA@mail.gmail.com>
References: <CABuZTB9x9ThiAV4XAuqCxJdc+NkCJx_Dduubxw=woc18-VA8AA@mail.gmail.com>
Message-ID: <CABuZTB9tCjgUm6--C4W08xWOtAROM1tMKyUA2T9cS9owKExKBA@mail.gmail.com>

Hi all,

I'm new to ModSecurity and wanted to try it out by installing Nginx 1.10.2,
latest ModSecurity (master branch), with latest CRS (v3.0/master branch).

With the default settings on, I tried to send an attack request and
expected to see it blocked.
So I sent the request below to the demo application
GET http://172.17.0.1/?param="><script>alert(1);</script>
and it responded with 200 OK (which is okay since it's in detection only
mode by default),
but I expected to see the error "Inbound Anomaly Score Exceeded (Total
Score: 5)" in the audit log. There is no such message, but other rules have
triggered as I expected.
I attached the complete log of the HTTP GET request.

Could you give me guidance what am I missing?
-- 
?dv?zlettel,
B?za G?za
-- 
?dv?zlettel,
B?za G?za
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20170115/bacfc4fb/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: mod_security_audit.log
Type: application/octet-stream
Size: 4041 bytes
Desc: not available
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20170115/bacfc4fb/attachment.obj>

From christian.folini at netnea.com  Sun Jan 15 21:37:09 2017
From: christian.folini at netnea.com (Christian Folini)
Date: Sun, 15 Jan 2017 22:37:09 +0100
Subject: [Owasp-modsecurity-core-rule-set] [CRS 3.0,
 Nginx] Anomaly detection rule does not trigger
In-Reply-To: <CABuZTB9tCjgUm6--C4W08xWOtAROM1tMKyUA2T9cS9owKExKBA@mail.gmail.com>
References: <CABuZTB9x9ThiAV4XAuqCxJdc+NkCJx_Dduubxw=woc18-VA8AA@mail.gmail.com>
	<CABuZTB9tCjgUm6--C4W08xWOtAROM1tMKyUA2T9cS9owKExKBA@mail.gmail.com>
Message-ID: <20170115213709.GA32671@elias>

Hi there,

This is odd, I agree. I am personally not much into NginX, but I
take it, rule 949110 should be present.

Could you please set the debug log level to 9 and repeat the
request. Then look for 949110 in the debug log maybe send you that
piece of the log (remember to return to a reasonable loglevel
afterwards, or the file will grow like mad quickly.

Ahoj,

Christian


On Sun, Jan 15, 2017 at 06:11:51PM +0000, G?za B?za wrote:
> Hi all,
> 
> I'm new to ModSecurity and wanted to try it out by installing Nginx 1.10.2,
> latest ModSecurity (master branch), with latest CRS (v3.0/master branch).
> 
> With the default settings on, I tried to send an attack request and
> expected to see it blocked.
> So I sent the request below to the demo application
> GET http://172.17.0.1/?param="><script>alert(1);</script>
> and it responded with 200 OK (which is okay since it's in detection only
> mode by default),
> but I expected to see the error "Inbound Anomaly Score Exceeded (Total
> Score: 5)" in the audit log. There is no such message, but other rules have
> triggered as I expected.
> I attached the complete log of the HTTP GET request.
> 
> Could you give me guidance what am I missing?
> -- 
> ?dv?zlettel,
> B?za G?za
> -- 
> ?dv?zlettel,
> B?za G?za


> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set


-- 
https://www.feistyduck.com/training/modsecurity-training-course
mailto:christian.folini at netnea.com
twitter: @ChrFolini

From mase at partycrew-united.de  Mon Jan 16 08:08:12 2017
From: mase at partycrew-united.de (Muenz, Michael)
Date: Mon, 16 Jan 2017 09:08:12 +0100
Subject: [Owasp-modsecurity-core-rule-set] [CRS 3.0,
 Nginx] Anomaly detection rule does not trigger
In-Reply-To: <CABuZTB9tCjgUm6--C4W08xWOtAROM1tMKyUA2T9cS9owKExKBA@mail.gmail.com>
References: <CABuZTB9x9ThiAV4XAuqCxJdc+NkCJx_Dduubxw=woc18-VA8AA@mail.gmail.com>
	<CABuZTB9tCjgUm6--C4W08xWOtAROM1tMKyUA2T9cS9owKExKBA@mail.gmail.com>
Message-ID: <4fe19e19-550f-780b-4cd8-9976272c84d5@partycrew-united.de>

Am 15.01.2017 um 19:11 schrieb G?za B?za:
> Hi all,
>
> I'm new to ModSecurity and wanted to try it out by installing Nginx 
> 1.10.2, latest ModSecurity (master branch), with latest CRS 
> (v3.0/master branch).
>
> With the default settings on, I tried to send an attack request and 
> expected to see it blocked.
> So I sent the request below to the demo application
> GET http://172.17.0.1/?param="><script>alert(1);</script>
> and it responded with 200 OK (which is okay since it's in detection 
> only mode by default),
> but I expected to see the error "Inbound Anomaly Score Exceeded (Total 
> Score: 5)" in the audit log. There is no such message, but other rules 
> have triggered as I expected.
> I attached the complete log of the HTTP GET request.
>
> Could you give me guidance what am I missing?
Hi,

I've tested in on my installation with 
?param="><script>alert(1);</script> and I'm hitting 19 rules, so there's 
and error somewhere in your configuration.

Michael

-- 
www.routerperformance.net
- Cisco, Linux, Networks

From bghome at gmail.com  Mon Jan 16 20:15:22 2017
From: bghome at gmail.com (=?UTF-8?B?R8OpemEgQsO6emE=?=)
Date: Mon, 16 Jan 2017 20:15:22 +0000
Subject: [Owasp-modsecurity-core-rule-set] [CRS 3.0,
 Nginx] Anomaly detection rule does not trigger
In-Reply-To: <4fe19e19-550f-780b-4cd8-9976272c84d5@partycrew-united.de>
References: <CABuZTB9x9ThiAV4XAuqCxJdc+NkCJx_Dduubxw=woc18-VA8AA@mail.gmail.com>
	<CABuZTB9tCjgUm6--C4W08xWOtAROM1tMKyUA2T9cS9owKExKBA@mail.gmail.com>
	<4fe19e19-550f-780b-4cd8-9976272c84d5@partycrew-united.de>
Message-ID: <CABuZTB-c28n1B1abFkr38cFFd1rXJUhAzP2LY0g1bXAiKFk7sQ@mail.gmail.com>

Hi Christian and Michael,

Christian, I did what you suggested. See the relevant lines from the log
below.

[16/Jan/2017:19:49:15 +0000]
[25f09e180b51/sid#7fb16296a0a0][rid#7fb155a990a0][/][4] Recipe: Invoking
rule 7fb156958950; [file
"/usr/local/nginx/conf/rules/REQUEST-949-BLOCKING-EVALUATION.co
nf"] [line "57"] [id "949110"].
[16/Jan/2017:19:49:15 +0000]
[25f09e180b51/sid#7fb16296a0a0][rid#7fb155a990a0][/][5] Rule 7fb156958950:
SecRule "TX:ANOMALY_SCORE" "@ge %{tx.inbound_anomaly_score_threshold}"
"phase:request,
auditlog,msg:'Inbound Anomaly Score Exceeded (Total Score:
%{TX.ANOMALY_SCORE})',severity:CRITICAL,id:949110,t:none,deny,log,tag:application-multi,tag:language-multi,tag:platform-multi,tag:a
ttack-generic,setvar:tx.inbound_tx_msg=%{tx.msg},setvar:tx.inbound_anomaly_score=%{tx.anomaly_score}"
[16/Jan/2017:19:49:15 +0000]
[25f09e180b51/sid#7fb16296a0a0][rid#7fb155a990a0][/][4] Transformation
completed in 0 usec.
[16/Jan/2017:19:49:15 +0000]
[25f09e180b51/sid#7fb16296a0a0][rid#7fb155a990a0][/][4] Executing operator
"ge" with param "%{tx.inbound_anomaly_score_threshold}" against
TX:anomaly_score.
[16/Jan/2017:19:49:15 +0000]
[25f09e180b51/sid#7fb16296a0a0][rid#7fb155a990a0][/][9] Target value: "0"
[16/Jan/2017:19:49:15 +0000]
[25f09e180b51/sid#7fb16296a0a0][rid#7fb155a990a0][/][9] Resolved macro
%{tx.inbound_anomaly_score_threshold} to: 5
[16/Jan/2017:19:49:15 +0000]
[25f09e180b51/sid#7fb16296a0a0][rid#7fb155a990a0][/][4] Operator completed
in 8 usec.
[16/Jan/2017:19:49:15 +0000]
[25f09e180b51/sid#7fb16296a0a0][rid#7fb155a990a0][/][4] Rule returned 0.
[16/Jan/2017:19:49:15 +0000]
[25f09e180b51/sid#7fb16296a0a0][rid#7fb155a990a0][/][9] No match, not
chained -> mode NEXT_RULE.

>From this it looks like the anomaly score is zero.
Because audit log reported XSS detection, I searched the log for the
corresponding rule (941100), and it looks like this:

[16/Jan/2017:19:49:15 +0000]
[25f09e180b51/sid#7fb16296a0a0][rid#7fb155a990a0][/][9] T (0)
Utf8toUnicode: ""><script>alert(1);</script>"
[16/Jan/2017:19:49:15 +0000]
[25f09e180b51/sid#7fb16296a0a0][rid#7fb155a990a0][/][9] T (0) urlDecodeUni:
""><script>alert(1);</script>"
[16/Jan/2017:19:49:15 +0000]
[25f09e180b51/sid#7fb16296a0a0][rid#7fb155a990a0][/][9] T (0)
htmlEntityDecode: ""><script>alert(1);</script>"
[16/Jan/2017:19:49:15 +0000]
[25f09e180b51/sid#7fb16296a0a0][rid#7fb155a990a0][/][9] T (0) jsDecode:
""><script>alert(1);</script>"
[16/Jan/2017:19:49:15 +0000]
[25f09e180b51/sid#7fb16296a0a0][rid#7fb155a990a0][/][9] T (0) cssDecode:
""><script>alert(1);</script>"
[16/Jan/2017:19:49:15 +0000]
[25f09e180b51/sid#7fb16296a0a0][rid#7fb155a990a0][/][9] T (0) removeNulls:
""><script>alert(1);</script>"
[16/Jan/2017:19:49:15 +0000]
[25f09e180b51/sid#7fb16296a0a0][rid#7fb155a990a0][/][4] Transformation
completed in 36 usec.
[16/Jan/2017:19:49:15 +0000]
[25f09e180b51/sid#7fb16296a0a0][rid#7fb155a990a0][/][4] Executing operator
"detectXSS" with param "" against ARGS:param.
[16/Jan/2017:19:49:15 +0000]
[25f09e180b51/sid#7fb16296a0a0][rid#7fb155a990a0][/][9] Target value:
""><script>alert(1);</script>"
[16/Jan/2017:19:49:15 +0000]
[25f09e180b51/sid#7fb16296a0a0][rid#7fb155a990a0][/][9] IS_XSS:
libinjection detected XSS.
[16/Jan/2017:19:49:15 +0000]
[25f09e180b51/sid#7fb16296a0a0][rid#7fb155a990a0][/][4] Operator completed
in 6 usec.
[16/Jan/2017:19:49:15 +0000]
[25f09e180b51/sid#7fb16296a0a0][rid#7fb155a990a0][/][4] Ctl: Set
auditLogParts to ABIJDEFHZE.
[16/Jan/2017:19:49:15 +0000]
[25f09e180b51/sid#7fb16296a0a0][rid#7fb155a990a0][/][9] Setting variable:
tx.msg=%{rule.msg}
[16/Jan/2017:19:49:15 +0000]
[25f09e180b51/sid#7fb16296a0a0][rid#7fb155a990a0][/][9] Resolved macro
%{rule.msg} to: XSS Attack Detected via libinjection
[16/Jan/2017:19:49:15 +0000]
[25f09e180b51/sid#7fb16296a0a0][rid#7fb155a990a0][/][9] Set variable
"tx.msg" to "XSS Attack Detected via libinjection".
[16/Jan/2017:19:49:15 +0000]
[25f09e180b51/sid#7fb16296a0a0][rid#7fb155a990a0][/][9] Setting variable:
tx.xss_score=+%{tx.critical_anomaly_score}
[16/Jan/2017:19:49:15 +0000]
[25f09e180b51/sid#7fb16296a0a0][rid#7fb155a990a0][/][9] Recorded original
collection variable: tx.xss_score = "0"
[16/Jan/2017:19:49:15 +0000]
[25f09e180b51/sid#7fb16296a0a0][rid#7fb155a990a0][/][9] Resolved macro
%{tx.critical_anomaly_score} to: 5
[16/Jan/2017:19:49:15 +0000]
[25f09e180b51/sid#7fb16296a0a0][rid#7fb155a990a0][/][9] Relative change:
xss_score=0+5
[16/Jan/2017:19:49:15 +0000]
[25f09e180b51/sid#7fb16296a0a0][rid#7fb155a990a0][/][9] Set variable
"tx.xss_score" to "5".
[16/Jan/2017:19:49:15 +0000]
[25f09e180b51/sid#7fb16296a0a0][rid#7fb155a990a0][/][9] Setting variable:
tx.anomaly_score=+%{tx.critical_anomaly_score}
[16/Jan/2017:19:49:15 +0000]
[25f09e180b51/sid#7fb16296a0a0][rid#7fb155a990a0][/][9] Recorded original
collection variable: tx.anomaly_score = "0"
[16/Jan/2017:19:49:15 +0000]
[25f09e180b51/sid#7fb16296a0a0][rid#7fb155a990a0][/][9] Resolved macro
%{tx.critical_anomaly_score} to: 5
[16/Jan/2017:19:49:15 +0000]
[25f09e180b51/sid#7fb16296a0a0][rid#7fb155a990a0][/][9] Relative change:
anomaly_score=0+5
[16/Jan/2017:19:49:15 +0000]
[25f09e180b51/sid#7fb16296a0a0][rid#7fb155a990a0][/][9] Set variable
"tx.anomaly_score" to "5".
[16/Jan/2017:19:49:15 +0000]
[25f09e180b51/sid#7fb16296a0a0][rid#7fb155a990a0][/][9] Setting variable:
tx.%{rule.id}-OWASP_CRS/WEB_ATTACK/XSS-%{matched_var_name}=%{tx.0}
[16/Jan/2017:19:49:15 +0000]
[25f09e180b51/sid#7fb16296a0a0][rid#7fb155a990a0][/][9] Resolved macro %{
rule.id} to: 941100
[16/Jan/2017:19:49:15 +0000]
[25f09e180b51/sid#7fb16296a0a0][rid#7fb155a990a0][/][9] Resolved macro
%{matched_var_name} to: ARGS:param
[16/Jan/2017:19:49:15 +0000]
[25f09e180b51/sid#7fb16296a0a0][rid#7fb155a990a0][/][9] Set variable
"tx.941100-OWASP_CRS/WEB_ATTACK/XSS-ARGS:param" to "".
[16/Jan/2017:19:49:15 +0000]
[25f09e180b51/sid#7fb16296a0a0][rid#7fb155a990a0][/][9] Resolved macro
%{MATCHED_VAR_NAME} to: ARGS:param
[16/Jan/2017:19:49:15 +0000]
[25f09e180b51/sid#7fb16296a0a0][rid#7fb155a990a0][/][9] Resolved macro
%{MATCHED_VAR} to: "><script>alert(1);</script>
[16/Jan/2017:19:49:15 +0000]
[25f09e180b51/sid#7fb16296a0a0][rid#7fb155a990a0][/][2] Warning. detected
XSS using libinjection. [file
"/usr/local/nginx/conf/rules/REQUEST-941-APPLICATION-ATTA
CK-XSS.conf"] [line "56"] [id "941100"] [rev "2"] [msg "XSS Attack Detected
via libinjection"] [data "Matched Data:  found within ARGS:param:
\x22><script>alert(1);</script>"] [severity "CRI
TICAL"] [ver "OWASP_CRS/3.0.0"] [maturity "1"] [accuracy "9"] [tag
"application-multi"] [tag "language-multi"] [tag "platform-multi"] [tag
"attack-xss"] [tag "OWASP_CRS/WEB_ATTACK/XSS"] [tag
 "WASCTC/WASC-8"] [tag "WASCTC/WASC-22"] [tag "OWASP_TOP_10/A3"] [tag
"OWASP_AppSensor/IE1"] [tag "CAPEC-242"]
[16/Jan/2017:19:49:15 +0000]
[25f09e180b51/sid#7fb16296a0a0][rid#7fb155a990a0][/][4] Rule returned 1.
[16/Jan/2017:19:49:15 +0000]
[25f09e180b51/sid#7fb16296a0a0][rid#7fb155a990a0][/][9] Match -> mode
NEXT_RULE.

As I see it states that the anomaly score is 5 at that point.
It looks like REQUEST-949-BLOCKING-EVALUATION is evaluated before
REQUEST-941-APPLICATION-ATTACK-XSS, at least it appears earlier in the log.


Michael, I'm using this Docker based installation:
https://github.com/theonemule/docker-waf
Could you take a look at the configuration files located at
https://github.com/theonemule/docker-waf/tree/master/waf? You may spot a
mistake there.

Regards,
Geza


Muenz, Michael <mase at partycrew-united.de> ezt ?rta (id?pont: 2017. jan.
16., H, 9:09):

> Am 15.01.2017 um 19:11 schrieb G?za B?za:
> > Hi all,
> >
> > I'm new to ModSecurity and wanted to try it out by installing Nginx
> > 1.10.2, latest ModSecurity (master branch), with latest CRS
> > (v3.0/master branch).
> >
> > With the default settings on, I tried to send an attack request and
> > expected to see it blocked.
> > So I sent the request below to the demo application
> > GET http://172.17.0.1/?param="><script>alert(1);</script>
> > and it responded with 200 OK (which is okay since it's in detection
> > only mode by default),
> > but I expected to see the error "Inbound Anomaly Score Exceeded (Total
> > Score: 5)" in the audit log. There is no such message, but other rules
> > have triggered as I expected.
> > I attached the complete log of the HTTP GET request.
> >
> > Could you give me guidance what am I missing?
> Hi,
>
> I've tested in on my installation with
> ?param="><script>alert(1);</script> and I'm hitting 19 rules, so there's
> and error somewhere in your configuration.
>
> Michael
>
> --
> www.routerperformance.net
> - Cisco, Linux, Networks
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
>
-- 
?dv?zlettel,
B?za G?za
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20170116/aef73d4f/attachment.html>

From christian.folini at netnea.com  Mon Jan 16 20:25:54 2017
From: christian.folini at netnea.com (Christian Folini)
Date: Mon, 16 Jan 2017 21:25:54 +0100
Subject: [Owasp-modsecurity-core-rule-set] [CRS 3.0,
 Nginx] Anomaly detection rule does not trigger
In-Reply-To: <CABuZTB-c28n1B1abFkr38cFFd1rXJUhAzP2LY0g1bXAiKFk7sQ@mail.gmail.com>
References: <CABuZTB9x9ThiAV4XAuqCxJdc+NkCJx_Dduubxw=woc18-VA8AA@mail.gmail.com>
	<CABuZTB9tCjgUm6--C4W08xWOtAROM1tMKyUA2T9cS9owKExKBA@mail.gmail.com>
	<4fe19e19-550f-780b-4cd8-9976272c84d5@partycrew-united.de>
	<CABuZTB-c28n1B1abFkr38cFFd1rXJUhAzP2LY0g1bXAiKFk7sQ@mail.gmail.com>
Message-ID: <20170116202554.GA5362@elias>

On Mon, Jan 16, 2017 at 08:15:22PM +0000, G?za B?za wrote:
> As I see it states that the anomaly score is 5 at that point.
> It looks like REQUEST-949-BLOCKING-EVALUATION is evaluated before
> REQUEST-941-APPLICATION-ATTACK-XSS, at least it appears earlier in the log.

Bingo.

The install file says you need to install on NginX by naming the
rules files one by one:

    include modsecurity.conf
    include owasp-modsecurity-crs/crs-setup.conf
    include owasp-modsecurity-crs/rules/REQUEST-900-EXCLUSION-RULES-BEFORE-CRS.conf
    include owasp-modsecurity-crs/rules/REQUEST-901-INITIALIZATION.conf
    include owasp-modsecurity-crs/rules/REQUEST-905-COMMON-EXCEPTIONS.conf
    include owasp-modsecurity-crs/rules/REQUEST-910-IP-REPUTATION.conf
    include owasp-modsecurity-crs/rules/REQUEST-911-METHOD-ENFORCEMENT.conf
    include owasp-modsecurity-crs/rules/REQUEST-912-DOS-PROTECTION.conf
    include owasp-modsecurity-crs/rules/REQUEST-913-SCANNER-DETECTION.conf
    include owasp-modsecurity-crs/rules/REQUEST-920-PROTOCOL-ENFORCEMENT.conf
    include owasp-modsecurity-crs/rules/REQUEST-921-PROTOCOL-ATTACK.conf
    include owasp-modsecurity-crs/rules/REQUEST-930-APPLICATION-ATTACK-LFI.conf
    include owasp-modsecurity-crs/rules/REQUEST-931-APPLICATION-ATTACK-RFI.conf
    include owasp-modsecurity-crs/rules/REQUEST-932-APPLICATION-ATTACK-RCE.conf
    include owasp-modsecurity-crs/rules/REQUEST-933-APPLICATION-ATTACK-PHP.conf
    include owasp-modsecurity-crs/rules/REQUEST-941-APPLICATION-ATTACK-XSS.conf
    include owasp-modsecurity-crs/rules/REQUEST-942-APPLICATION-ATTACK-SQLI.conf
    include owasp-modsecurity-crs/rules/REQUEST-943-APPLICATION-ATTACK-SESSION-FIXATION.conf
    include owasp-modsecurity-crs/rules/REQUEST-949-BLOCKING-EVALUATION.conf
    include owasp-modsecurity-crs/rules/RESPONSE-950-DATA-LEAKAGES.conf
    include owasp-modsecurity-crs/rules/RESPONSE-951-DATA-LEAKAGES-SQL.conf
    include owasp-modsecurity-crs/rules/RESPONSE-952-DATA-LEAKAGES-JAVA.conf
    include owasp-modsecurity-crs/rules/RESPONSE-953-DATA-LEAKAGES-PHP.conf
    include owasp-modsecurity-crs/rules/RESPONSE-954-DATA-LEAKAGES-IIS.conf
    include owasp-modsecurity-crs/rules/RESPONSE-959-BLOCKING-EVALUATION.conf
    include owasp-modsecurity-crs/rules/RESPONSE-980-CORRELATION.conf
    include owasp-modsecurity-crs/rules/RESPONSE-999-EXCLUSION-RULES-AFTER-CRS.conf

Is this what you did?

Your logfiles looks like you did include rules/*.conf.

Ahoj,

Christian



> 
> 
> Michael, I'm using this Docker based installation:
> https://github.com/theonemule/docker-waf
> Could you take a look at the configuration files located at
> https://github.com/theonemule/docker-waf/tree/master/waf? You may spot a
> mistake there.
> 
> Regards,
> Geza
> 
> 
> Muenz, Michael <mase at partycrew-united.de> ezt ?rta (id?pont: 2017. jan.
> 16., H, 9:09):
> 
> > Am 15.01.2017 um 19:11 schrieb G?za B?za:
> > > Hi all,
> > >
> > > I'm new to ModSecurity and wanted to try it out by installing Nginx
> > > 1.10.2, latest ModSecurity (master branch), with latest CRS
> > > (v3.0/master branch).
> > >
> > > With the default settings on, I tried to send an attack request and
> > > expected to see it blocked.
> > > So I sent the request below to the demo application
> > > GET http://172.17.0.1/?param="><script>alert(1);</script>
> > > and it responded with 200 OK (which is okay since it's in detection
> > > only mode by default),
> > > but I expected to see the error "Inbound Anomaly Score Exceeded (Total
> > > Score: 5)" in the audit log. There is no such message, but other rules
> > > have triggered as I expected.
> > > I attached the complete log of the HTTP GET request.
> > >
> > > Could you give me guidance what am I missing?
> > Hi,
> >
> > I've tested in on my installation with
> > ?param="><script>alert(1);</script> and I'm hitting 19 rules, so there's
> > and error somewhere in your configuration.
> >
> > Michael
> >
> > --
> > www.routerperformance.net
> > - Cisco, Linux, Networks
> > _______________________________________________
> > Owasp-modsecurity-core-rule-set mailing list
> > Owasp-modsecurity-core-rule-set at lists.owasp.org
> > https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
> >
> -- 
> ?dv?zlettel,
> B?za G?za

> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set


-- 
https://www.feistyduck.com/training/modsecurity-training-course
mailto:christian.folini at netnea.com
twitter: @ChrFolini

From wbmilleriii at comcast.net  Mon Jan 16 20:50:49 2017
From: wbmilleriii at comcast.net (Bill Miller)
Date: Mon, 16 Jan 2017 14:50:49 -0600
Subject: [Owasp-modsecurity-core-rule-set] [CRS 3.0,
 Nginx] Anomaly detection rule does not trigger
In-Reply-To: <4fe19e19-550f-780b-4cd8-9976272c84d5@partycrew-united.de>
References: <CABuZTB9x9ThiAV4XAuqCxJdc+NkCJx_Dduubxw=woc18-VA8AA@mail.gmail.com>
	<CABuZTB9tCjgUm6--C4W08xWOtAROM1tMKyUA2T9cS9owKExKBA@mail.gmail.com>
	<4fe19e19-550f-780b-4cd8-9976272c84d5@partycrew-united.de>
Message-ID: <cfd3f638-461a-abca-e310-f10038197004@comcast.net>

I also tried it and got an Inbound Anomaly Score of 15

On 01/16/2017 02:08 AM, Muenz, Michael wrote:
> Am 15.01.2017 um 19:11 schrieb G?za B?za:
>> Hi all,
>>
>> I'm new to ModSecurity and wanted to try it out by installing Nginx 
>> 1.10.2, latest ModSecurity (master branch), with latest CRS 
>> (v3.0/master branch).
>>
>> With the default settings on, I tried to send an attack request and 
>> expected to see it blocked.
>> So I sent the request below to the demo application
>> GET http://172.17.0.1/?param="><script>alert(1);</script>
>> and it responded with 200 OK (which is okay since it's in detection 
>> only mode by default),
>> but I expected to see the error "Inbound Anomaly Score Exceeded 
>> (Total Score: 5)" in the audit log. There is no such message, but 
>> other rules have triggered as I expected.
>> I attached the complete log of the HTTP GET request.
>>
>> Could you give me guidance what am I missing?
> Hi,
>
> I've tested in on my installation with 
> ?param="><script>alert(1);</script> and I'm hitting 19 rules, so 
> there's and error somewhere in your configuration.
>
> Michael
>


From david.goudet at lyra-network.com  Tue Jan 31 14:25:43 2017
From: david.goudet at lyra-network.com (David Goudet)
Date: Tue, 31 Jan 2017 15:25:43 +0100 (CET)
Subject: [Owasp-modsecurity-core-rule-set] Usage of regex in action
	setvar:'tx.allowed_request_content_type'?
Message-ID: <859108510.11571491.1485872743466.JavaMail.zimbra@lyra-network.com>

Hi,

I have question about management of blocking case with rule 960010.

First information about context:

# Audit log
--7d320124-B--
# Request 
POST /foo HTTP/1.1
Host: <domaine>
..
Content-Type: application/foo.bar.v1+json
..

--7d320124-H--
# Trace of blocking action
Message: Access denied with code 406 (phase 2). Pattern match "(.*)" at TX:960010-OWASP_CRS/POLICY/CONTENT_TYPE_NOT_ALLOWED-TX:0. [file "/etc/httpd/modsecurity.d/base_rules/modsecurity_crs_49_inbound_blocking.conf"] [line "26"] [id "981176"] [msg "Inbound Anomaly Score Exceeded (Total Score: 10, SQLi=0, XSS=0): Last Matched Message: Request content type is not allowed by policy"] [data "Last Matched Data: application/foo.bar.v1+json"]
Message: Warning. Operator GE matched 10 at TX:inbound_anomaly_score. [file "/etc/httpd/modsecurity.d/base_rules/modsecurity_crs_60_correlation.conf"] [line "37"] [id "981204"] [msg "Inbound Anomaly Score Exceeded (Total Inbound Score: 10, SQLi=0, XSS=0): Request content type is not allowed by policy"]
Action: Intercepted (phase 2)

# Rule: 960010 (modsecurity_crs_30_http_policy.conf)
SecRule REQUEST_METHOD "!^(?:GET|HEAD|PROPFIND|OPTIONS)$" "phase:1,chain,t:none,block,msg:'Request content type is not allowed by policy',rev:'2',ver:'OWASP_CRS/2.2.9',maturity:'9',accuracy:'9',id:'960010',tag:'OWASP_CRS/POLICY/ENCODING_NOT_ALLOWED',tag:'WASCTC/WASC-20',tag:'OWASP_TOP_10/A1',tag:'OWASP_AppSensor/EE2',tag:'PCI/12.1',severity:'2',logdata:'%{matched_var}'" 
        SecRule REQUEST_HEADERS:Content-Type "^([^;\s]+)" "chain,capture"
                SecRule TX:0 "!^%{tx.allowed_request_content_type}$" "t:none,ctl:forceRequestBodyVariable=On,setvar:'tx.msg=%{rule.msg}',setvar:tx.anomaly_score=+%{tx.critical_anomaly_score},setvar:tx.%{rule.id}-OWASP_CRS/POLICY/CONTENT_TYPE_NOT_ALLOWED-%{matched_var_name}=%{matched_var}"

# Configuration of variable allowed_request_content_type (modsecurity_crs_10_setup.conf)
SecAction \
  "id:'900012', \
  phase:1, \
  t:none, \
...
  setvar:'tx.allowed_request_content_type=application/x-www-form-urlencoded|multipart/form-data|text/xml|text/plain|application/xml|application/x-amf|application/json|application/soap+xml|application/octet-stream|multipart/related', \
...
  nolog, \
  pass"

Whitelist on this specific case is working with something like this:
SecRule SERVER_NAME <domaine> "chain,phase:1,id:'2414',t:none,nolog,pass,msg:'authorize special content-type'"
        SecRule REQUEST_URI /foo/ setvar:'tx.allowed_request_content_type=%{tx.allowed_request_content_type}|application/foo.bar.v1+json'

But the version in the content-type will change (foo.bar.v1.1+json, foo.bar.v2+json, ...) and i want to prevent to add new value at each new version of application. (I know, it is recommanded to use dedicated field for this custom usage).

To enable multiple version, I am trying to use regex on setvar:'tx.allowed_request_content_type' action but regex is escaped:
setvar:'tx.allowed_request_content_type=...|application/foo.bar.v?+json'

# Debug log
[31/Jan/2017:15:09:36 +0100] [<domaine>/sid#7f9d2318ec38][rid#7f9ce4019ed0][/foo][9] Target value: "application/foo.bar.v1+json"
[31/Jan/2017:15:09:36 +0100] [<domaine>/sid#7f9d2318ec38][rid#7f9ce4019ed0][/foo][9] Resolved macro %{tx.allowed_request_content_type} to: ....|application/foo.bar.v1+json
[31/Jan/2017:15:09:36 +0100] [<domaine>/sid#7f9d2318ec38][rid#7f9ce4019ed0][/foo][6] Escaping pattern [^...|application\/foo\.bar\.v\?\+json$]

Is it possible to use regex on setvar:'tx.allowed_request_content_type' action (prevent escaping regex)? Which solution is recommanded to cover this case (whitelist multiple value in variable allowed_request_content_type without add one by one each version)?

My environnement is Centons7, versions of packages:
mod_security-2.7.3-5.el7.x86_64
modsecurity-crs_2.2.9


Thank you for your help !


--
 
David GOUDET 

LYRA NETWORK 
Poste | Service 
Tel : +33 (0)5 32 09 09 74 | Poste : 574

