From ken at pumastudios.com  Wed Jan 10 19:23:48 2018
From: ken at pumastudios.com (Ken Brucker)
Date: Wed, 10 Jan 2018 11:23:48 -0800
Subject: [Owasp-modsecurity-core-rule-set] RegEx in CRS 3.0.2 942200 too
	broad?
Message-ID: <1400F7C2-3406-4577-8BB0-2FBE61ADD76E@pumastudios.com>

I've been looking at some false positives related to rule 942200.

Side note, I'm running CRS 3.0.2 but the rules still have a version 3.0.0 tag. I was surprised to see that.

Here's an exemplar from the audit file:

Message: Warning. Pattern match "(?i:(?:,.*?[)\\da-f\"'`][\"'`](?:[\"'`].*?[\"'`]|\\Z|[^\"'`]+))|(?:\\Wselect.+\\W*?from)|((?:select|create|rename|truncate|load|alter|delete|update|insert|desc)\\s*?\\(\\s*?space\\s*?\\())" at ARGS:data[]. [file "/etc/httpd/modsecurity.d/crs/rules/REQUEST-942-APPLICATION-ATTACK-SQLI.conf"] [line "649"] [id "942200"] [rev "2"] [msg "Detects MySQL comment-/space-obfuscated injections and backtick termination"] [data "Matched Data: ,4947,4937,4935,4929,4463,4430,5905,5766,7878,7570\x22] found within ARGS:data[]: [gallery columns=\x225\x22 size=\x22medium\x22 ids=\x224953,4947,4937,4935,4929,4463,4430,5905,5766,7878,7570\x22]"] [severity "CRITICAL"] [ver "OWASP_CRS/3.0.0"] [maturity "9"] [accuracy "8"] [tag "application-multi"] [tag "language-multi"] [tag "platform-multi"] [tag "attack-sqli"] [tag "OWASP_CRS/WEB_ATTACK/SQL_INJECTION"] [tag "WASCTC/WASC-19"] [tag "OWASP_TOP_10/A1"] [tag "OWASP_AppSensor/CIE1"] [tag "PCI/6.5.2"] [tag "paranoia-level/2"]

After looking at this rule a bit, it will trigger on a string like:

	To quote William Shakespeare, "to be, or not to be".

The first alternative in the regex matches a very broad range of text and seems far too general. Is this intentional? It looks like the intent is to capture variations on quoted numbers but it's going above and beyond.

The rule:

SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAME
S|ARGS|XML:/* "(?i:(?:,.*?[)\da-f\"'`][\"'`](?:[\"'`].*?[\"'`]|\Z|[^\"'`]+))|(?:
\Wselect.+\W*?from)|((?:select|create|rename|truncate|load|alter|delete|update|i
nsert|desc)\s*?\(\s*?space\s*?\())" \
        "phase:request,\
        rev:'2',\
        ver:'OWASP_CRS/3.0.0',\
        maturity:'9',\
        accuracy:'8',\
        capture,\
        t:none,t:urlDecodeUni,\
        block,\
        msg:'Detects MySQL comment-/space-obfuscated injections and backtick ter
mination',\
        id:942200,\
        tag:'application-multi',\
        tag:'language-multi',\
        tag:'platform-multi',\
        tag:'attack-sqli',\
        tag:'OWASP_CRS/WEB_ATTACK/SQL_INJECTION',\
        tag:'WASCTC/WASC-19',\
        tag:'OWASP_TOP_10/A1',\
        tag:'OWASP_AppSensor/CIE1',\
        tag:'PCI/6.5.2',\
        tag:'paranoia-level/2',\
        logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\
        severity:'CRITICAL',\
        setvar:'tx.msg=%{rule.msg}',\
        setvar:tx.sql_injection_score=+%{tx.critical_anomaly_score},\
        setvar:tx.anomaly_score=+%{tx.critical_anomaly_score},\
        setvar:'tx.%{rule.id}-OWASP_CRS/WEB_ATTACK/SQLI-%{matched_var_name}=%{tx.0}'"
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20180110/f1949f66/attachment.html>

From christian.folini at netnea.com  Thu Jan 11 06:31:29 2018
From: christian.folini at netnea.com (Christian Folini)
Date: Thu, 11 Jan 2018 07:31:29 +0100
Subject: [Owasp-modsecurity-core-rule-set] RegEx in CRS 3.0.2 942200 too
 broad?
In-Reply-To: <1400F7C2-3406-4577-8BB0-2FBE61ADD76E@pumastudios.com>
References: <1400F7C2-3406-4577-8BB0-2FBE61ADD76E@pumastudios.com>
Message-ID: <20180111063129.pvppucrz7ojsjuvf@leander>

Hi Ken,

We used to have ML problems, but it seems at least your message went through.
Hopefully OWASP HQ has fixed it for good.

I confirm the FP here and can only add that 942200 has been set to PL2
for causing FPs from time to time.

Franziska B?hler disassembled the regexes of the SQL rules, so you can
take a better look at the sources behind the performance optimized
regexes:

https://github.com/SpiderLabs/owasp-modsecurity-crs/blob/v3.1/dev/util/regexp-assemble/regexp-942200.data

Maybe she can chime in here and add her thoughts on this rule.

Best,

Christian

On Wed, Jan 10, 2018 at 11:23:48AM -0800, Ken Brucker wrote:
>    I've been looking at some false positives related to rule 942200.
> 
>    Side note, I'm running CRS 3.0.2 but the rules still have a version
>    3.0.0 tag. I was surprised to see that.
>    Here's an exemplar from the audit file:
>    Message: Warning. Pattern match
>    "(?i:(?:,.*?[)\\da-f\"'`][\"'`](?:[\"'`].*?[\"'`]|\\Z|[^\"'`]+))|(?:\\W
>    select.+\\W*?from)|((?:select|create|rename|truncate|load|alter|delete|
>    update|insert|desc)\\s*?\\(\\s*?space\\s*?\\())" at ARGS:data[]. [file
>    "/etc/httpd/modsecurity.d/crs/rules/REQUEST-942-APPLICATION-ATTACK-SQLI
>    .conf"] [line "649"] [id "942200"] [rev "2"] [msg "Detects MySQL
>    comment-/space-obfuscated injections and backtick termination"] [data
>    "Matched Data: ,4947,4937,4935,4929,4463,4430,5905,5766,7878,7570\x22]
>    found within ARGS:data[]: [gallery columns=\x225\x22
>    size=\x22medium\x22
>    ids=\x224953,4947,4937,4935,4929,4463,4430,5905,5766,7878,7570\x22]"]
>    [severity "CRITICAL"] [ver "OWASP_CRS/3.0.0"] [maturity "9"] [accuracy
>    "8"] [tag "application-multi"] [tag "language-multi"] [tag
>    "platform-multi"] [tag "attack-sqli"] [tag
>    "OWASP_CRS/WEB_ATTACK/SQL_INJECTION"] [tag "WASCTC/WASC-19"] [tag
>    "OWASP_TOP_10/A1"] [tag "OWASP_AppSensor/CIE1"] [tag "PCI/6.5.2"] [tag
>    "paranoia-level/2"]
>    After looking at this rule a bit, it will trigger on a string like:
>    To quote William Shakespeare, "to be, or not to be".
>    The first alternative in the regex matches a very broad range of text
>    and seems far too general. Is this intentional? It looks like the
>    intent is to capture variations on quoted numbers but it's going above
>    and beyond.
> 
>    The rule:
> 
>    SecRule
>    REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAM
>    E
>    S|ARGS|XML:/*
>    "(?i:(?:,.*?[)\da-f\"'`][\"'`](?:[\"'`].*?[\"'`]|\Z|[^\"'`]+))|(?:
>    \Wselect.+\W*?from)|((?:select|create|rename|truncate|load|alter|delete
>    |update|i
>    nsert|desc)\s*?\(\s*?space\s*?\())" \
>            "phase:request,\
>            rev:'2',\
>            ver:'OWASP_CRS/3.0.0',\
>            maturity:'9',\
>            accuracy:'8',\
>            capture,\
>            t:none,t:urlDecodeUni,\
>            block,\
>            msg:'Detects MySQL comment-/space-obfuscated injections and
>    backtick ter
>    mination',\
>            id:942200,\
>            tag:'application-multi',\
>            tag:'language-multi',\
>            tag:'platform-multi',\
>            tag:'attack-sqli',\
>            tag:'OWASP_CRS/WEB_ATTACK/SQL_INJECTION',\
>            tag:'WASCTC/WASC-19',\
>            tag:'OWASP_TOP_10/A1',\
>            tag:'OWASP_AppSensor/CIE1',\
>            tag:'PCI/6.5.2',\
>            tag:'paranoia-level/2',\
>            logdata:'Matched Data: %{TX.0} found within
>    %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\
>            severity:'CRITICAL',\
>            setvar:'tx.msg=%{rule.msg}',\
>            setvar:tx.sql_injection_score=+%{tx.critical_anomaly_score},\
>            setvar:tx.anomaly_score=+%{tx.critical_anomaly_score},\
> 
>    setvar:'tx.%{[1]rule.id}-OWASP_CRS/WEB_ATTACK/SQLI-%{matched_var_name}=
>    %{tx.0}'"
> 
> References
> 
>    1. http://rule.id/

> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set


-- 
https://www.feistyduck.com/training/modsecurity-training-course
https://www.feistyduck.com/books/modsecurity-handbook/
mailto:christian.folini at netnea.com
twitter: @ChrFolini

From franziska.buehler.schmocker at gmail.com  Thu Jan 11 21:10:56 2018
From: franziska.buehler.schmocker at gmail.com (Franziska Buehler)
Date: Thu, 11 Jan 2018 22:10:56 +0100
Subject: [Owasp-modsecurity-core-rule-set] RegEx in CRS 3.0.2 942200 too
	broad?
In-Reply-To: <20180111063129.pvppucrz7ojsjuvf@leander>
References: <1400F7C2-3406-4577-8BB0-2FBE61ADD76E@pumastudios.com>
	<20180111063129.pvppucrz7ojsjuvf@leander>
Message-ID: <CALrdzmLkUKiUXkXd5WzZkrU=bFPX3Ne_vL6d2c0s+-31s2bDxg@mail.gmail.com>

Hi Ken,

The regex is: ,.*?[)\da-f\"'`][\"'`][^\"'`]+
from: https://github.com/SpiderLabs/owasp-modsecurity-crs/blob/v3.1/dev/util/regexp-assemble/regexp-942200.data#L3

What exactly matches from your quote is: , "to be, or not to be".
, from regex matches ,
.*? from regex matches  "to be, or not to b
[)\da-f\"'`] from regex matches e
[\"'`] from regex matches "
[^\"'`]+ from regex matches .

The following sentence would not match, because of the x instead of the e:
To quote William Shakespeare, "to be, or not to bx".

These are short examples which also match:
,"".
,2".
,a".

I have to admit that I don't have the expertise to fully understand
the sql injection covered with it.

The message of the rule is: msg:'Detects MySQL
comment-/space-obfuscated injections and backtick termination'.
The whole source of the rule is:

,.*?[)\da-f\"'`][\"'`][\"'`].*?[\"'`]
,.*?[)\da-f\"'`][\"'`]\Z
,.*?[)\da-f\"'`][\"'`][^\"'`]+
\Wselect.+\W*?from
select\s*?\(\s*?space\s*?\(
create\s*?\(\s*?space\s*?\(
rename\s*?\(\s*?space\s*?\(
truncate\s*?\(\s*?space\s*?\(
load\s*?\(\s*?space\s*?\(
alter\s*?\(\s*?space\s*?\(
delete\s*?\(\s*?space\s*?\(
update\s*?\(\s*?space\s*?\(
insert\s*?\(\s*?space\s*?\(
desc\s*?\(\s*?space\s*?\(

I don't see any checks for comment obfuscated injections here. We have
other rules which check for comments, for example: 942440.
I am also not sure if these checks for literally "spaces" are
originally intended?
I think this example shows us that we need to revise the sqli rules as a whole.

The rule is already on PL2 because of reported false positives.
In the meantime, I think might be considering moving the third or
maybe the first three lines of the source file to a stricter sibling
on PL3, or we are waiting for the revision of the sqli rules.

Franziska

From chaim at chaimsanders.com  Fri Jan 12 06:17:13 2018
From: chaim at chaimsanders.com (Chaim Sanders)
Date: Fri, 12 Jan 2018 01:17:13 -0500
Subject: [Owasp-modsecurity-core-rule-set] Core Rule Set Project January 2018
Message-ID: <CAE8hE=pPS2oswGS6OSZG0nhPMjnkHyM9pVDFZUoC68O3+bVFOg@mail.gmail.com>

This is the CRS newsletter covering the period from Early December until
today (Now in 2018, Happy New Year!!).

We held our monthly community chat. We had quite a few people stop by.
Special thanks to lifeforms for leading the chat.

   -
      - csanders
      - fzipi
      - spartantri
      - dune73
      - emphazer
      - fgs
      - franbuehler

Our agenda from before the chat is available here
<https://github.com/SpiderLabs/owasp-modsecurity-crs/issues/991>. We had a
short chat, during the chat we discussed the following:

   - The OWASP CRS Mailing list seemed to be broken for a bit, we confirmed
   that it is currently working, and who the administrators are (dune73,
   lifeforms, and csanders)
   - csanders committed to making changes to FTW necessary to
   get azhao155's PR's (and #989 which deals with FTW) merged.
   - A number of folks are testing the Java protections PR that is slotted
   for 3.1
   - The Java rules (#990), that are a key feature of 3.1 need some
   attention
      - We'd like to see correct formatting before merger
      - And a number of FTW tests added for it.
   - There was interest expressed in a format checker script
      - A reminder the required format is available via
      https://github.com/SpiderLabs/owasp-modsecurity-crs/blob/v3.1/dev/CONTRIBUTING.md
   -  OWASP_TOP_10 tags are outdated with new release and will be updated
   as part of rule cleanup 2.0
      - The older versions are available here:
      https://github.com/SpiderLabs/owasp-modsecurity-crs/blob/95e7e6b3982eca93989c7948faca4a961737eace/rules/REQUEST-944-APPLICATION-ATTACK-JAVA.conf
      - A new ticket will be opened taking into account discussions from
      https://github.com/SpiderLabs/owasp-modsecurity-crs/pull/881/files
   - Dune73 will review #983 and #982 and merge if ready.
   - csanders will write some of the documentation from #986 and provide a
   space on coreruleset.org for the information to live.
   - #974, which deals with transfer encoding, is awaiting PR, this change
   requires both correctly evaluating the TE RFC and the extensions. For 3.1
   we're gonna do basic abuse checks in PL and any extension checks will be in
   PL minimum with further review planed for 3.2.
   - We'd like to add the PR for CPanel exclusion to 3.1, due to how CPanel
   sets up their system it causes false positives, ideally CPanel would fix
   this but they haven't yet so we'll add a class exclusion similar to how we
   did with Wordpress, Drupal, etc. emphazer said he could take this on.
   - We reviewed spartantri idea for filetype checking based on
   STREAM_INPUT_BODY. It is unclear if this feature will be exposed as part of
   libmodsecurity. A PR will be prepared with the known compatible stuff
   enabled and the other stuff commented out and possible enabled over time.
   - Dune73 discussed a project for a volunteer that would shift rules that
   only require Phase 1 variables to use the phase:1 action for performance
   reasons.
   - AppSecEU has been moved from Israel to UK and shifted to match the dev
   summit two weeks earlier. This would thus be perfect for our planned little
   CRS summit. dune73 is in charge of this.
   - dune73 is doing a ModSec/CRS/NGINX webinar with O'Reilly on January 9.
   Subscription is free, the slides will be shared afterwards.

The next community chats will be held on the following dates:

   - February 5, 2018 20:30 CET
   - March 5, 2018 20:30 CET
   - April 2, 2018 20:30 CET

Some nice new blog posts have come out on coreruleset.org

   - Core Rule Set: The evolution of an OWASP Project
   <https://owasp.blogspot.ch/2017/12/core-rule-set-evolution-of-an-owasp-project.html>


-- 
-- 
Chaim Sanders
http://www.ChaimSanders.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20180112/f0137b03/attachment.html>

