From guillaume.bilodeau at gmail.com  Mon May  2 09:16:55 2011
From: guillaume.bilodeau at gmail.com (Guillaume Bilodeau)
Date: Mon, 2 May 2011 09:16:55 -0400
Subject: [Owasp-modsecurity-core-rule-set] Slow HTTP DOS protection not
 behaving as expected
In-Reply-To: <BANLkTikooBwvcxDfMOdEdbw-Bgy9gBccZg@mail.gmail.com>
References: <BANLkTimBWTGjsvmjWYFF11qGzotUQ1o_bQ@mail.gmail.com>
	<C9CCB08D.1E7EC%rbarnett@trustwave.com>
	<BANLkTinT0vLkL4KUw_A-qjvHHjarahaazg@mail.gmail.com>
	<BANLkTik_H1-6gSvwpRHkaRDrSN19bfu5gQ@mail.gmail.com>
	<BANLkTim8ZhSQG4W66RU8SbZwmOYnk5Bdcg@mail.gmail.com>
	<BANLkTimWkMgO93hKoiBQ8G5FCwzVGXr4oA@mail.gmail.com>
	<BANLkTi=ND-4Qxb5gdpak3tWuYp7eUFTHTQ@mail.gmail.com>
	<A93DF055-511D-48CB-81B3-F1870C73BEE0@trustwave.com>
	<BANLkTi=9pNrixNSR6asB-Jp8Np_10-2FbQ@mail.gmail.com>
	<F82041C7-B14D-4427-BD6E-2D117BAC69F0@trustwave.com>
	<BANLkTikooBwvcxDfMOdEdbw-Bgy9gBccZg@mail.gmail.com>
Message-ID: <BANLkTik3r4nZup52Yb1oRjGuzwDTscXu3g@mail.gmail.com>

Hi all,

I have opened a bug report at Apache and they have confirmed that issues in
HTTPD Core are causing the following problems:

- Apache doesn't always return a 408 when a request time out is detected
(various cases)
- Apache doesn't handle a request time out properly when the URL corresponds
to a RedirectMatch directive

More details here: https://issues.apache.org/bugzilla/show_bug.cgi?id=51103

Thank you all for your time and precious help!

Cheers,
GB

On Tue, Apr 19, 2011 at 9:16 AM, Guillaume Bilodeau <
guillaume.bilodeau at gmail.com> wrote:

> Our latest tries looked like this:
>
> In modsecurity_crs_11_slow_dos_protection.conf:
>
> #SecReadStateLimit 10
> <IfModule reqtimeout_module>
> RequestReadTimeout header=20-40,MinRate=500 body=20,MinRate=500
> </IfModule>
> SecRule RESPONSE_STATUS "@streq 408"
> "phase:5,t:none,nolog,pass,setvar:ip.slow_dos_counter=+1,expirevar:ip.slow_dos_counter=60"
> SecRule IP:SLOW_DOS_COUNTER "@gt 5" "phase:1,t:none,log,drop,msg:'Client
> Connection Dropped due to high # of slow DoS alerts'"
>
> First test**
>
> http_dos_cli --host 1.2.3.4 --port 80 --path /doLogin.html --slow-headers
> --post --connections 1000 --rate 1000 --timeout 5
>
>
>
> Tool establishes connections, starts sending headers
>
> After 20 seconds, requests start timing out
>
> Within a minute, tool cannot connect anymore
>
> Outside IP can connect to Apache
>
>
>
> In error_log:
>
> [Tue Apr 19 08:55:09 2011] [info] [client 5.6.7.8] Request header read
> timeout
>
> [Tue Apr 19 08:55:09 2011] [error] [client 5.6.7.8] request failed: error
> reading the headers
>
>
>
> In Wireshark:
>
> HTTP response code 400 (Bad Request)
>
>
>
> Second test**
>
> http_dos_cli --host 1.2.3.4 --port 80 --path /doLogin.html --slow-post
> --post-field j_username --connections 1000 --rate 1000 --timeout 5
>
>
>
> Tool establishes connections, starts sending post data
>
> Tool caps at 1000 connections, never receives any error
>
> Outside IP cannot connect to Apache
>
>
>
> In error_log:
>
> [Tue Apr 19 09:01:20 2011] [info] [client 5.6.7.8] Request body read
> timeout
>
>
>
> In Wireshark:
>
> HTTP response code 200 (Found)
>
> So...
>
> In both cases, Apache (mod_reqtimeout I suppose) seems to be enforcing the
> header / body timeout correctly.  It's just that it's not returning a 408 in
> either case.
>
> On Sat, Apr 16, 2011 at 10:18 AM, Ryan Barnett <RBarnett at trustwave.com>wrote:
>
>> Have you tried using header=timeout  directive against the slow dos tool
>> to prevent slow headers?  Wonder if that part works for you or if it also is
>> returning the 200. If that doesn't work then maybe it is related to Solaris
>> OS. These settings worked for me on Mac OSX and Ubuntu.
>>
>> On Apr 16, 2011, at 9:58 AM, "Guillaume Bilodeau" <
>> guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>> wrote:
>>
>> We're using an Apache 2.2.17 that was built from scratch on a Solaris box.
>>
>> On Sat, Apr 16, 2011 at 9:44 AM, Ryan Barnett <<mailto:
>> RBarnett at trustwave.com>RBarnett at trustwave.com<mailto:
>> RBarnett at trustwave.com>> wrote:
>> What apache version are you using?
>>
>> On Apr 16, 2011, at 9:43 AM, "Guillaume Bilodeau" <<mailto:
>> guillaume.bilodeau at gmail.com>guillaume.bilodeau at gmail.com<mailto:
>> guillaume.bilodeau at gmail.com><mailto:<mailto:guillaume.bilodeau at gmail.com
>> >guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>>>
>> wrote:
>>
>> A little more information on the 200 return code:
>>
>> It seems that mod_reqtimeout is not closing the connection after the 20
>> seconds, but rather truncating the request and letting it go through.  So
>> the request is actually processed, and since the URL is referring to an
>> actual resource, a 200 code is returned.
>>
>> Surely there must be a problem with our configuration?  Or maybe our
>> Apache build?
>>
>> Cheers,
>> GB
>>
>> On Sat, Apr 16, 2011 at 12:55 AM, Brian Rectanus <<mailto:<mailto:
>> brectanu at gmail.com>brectanu at gmail.com<mailto:brectanu at gmail.com>><mailto:
>> brectanu at gmail.com>brectanu at gmail.com<mailto:brectanu at gmail.com><mailto:
>> <mailto:brectanu at gmail.com>brectanu at gmail.com<mailto:brectanu at gmail.com>>>
>> wrote:
>> Probably not "disastrous" :)  You have the overhead of the TCP 3-way
>> handshake and also the shutdown, but the browsers should be using SSL
>> session resumption, which is not connection based.  It uses cached SSL
>> session IDs and should be reused on each connection up to the timeout
>> - just make sure this is enabled in the Apache config.  Personally, I
>> find that about 3 second timeouts w/low request limit works well for
>> keepalives, so it may be enough to just limit the keepalive timeout
>> and number of requests  (say 3 second timeout w/9 requests limit
>> instead of completely disabling them).  It really depends on your
>> latency requirements for your site.
>>
>> -B
>>
>> On Thu, Apr 14, 2011 at 2:37 PM, Guillaume Bilodeau
>> <<mailto:<mailto:guillaume.bilodeau at gmail.com>
>> guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com
>> >><mailto:guillaume.bilodeau at gmail.com>guillaume.bilodeau at gmail.com
>> <mailto:guillaume.bilodeau at gmail.com><mailto:<mailto:
>> guillaume.bilodeau at gmail.com>guillaume.bilodeau at gmail.com<mailto:
>> guillaume.bilodeau at gmail.com>>> wrote:
>> > We will try turning off connection keep-alive to see how Apache will
>> react.
>> >  However, isn't turning this off going to have a disastrous impact on
>> > connection performance, especially since all traffic will be SSL?
>> >
>> > On Thu, Apr 14, 2011 at 3:19 PM, Ivan Ristic <<mailto:<mailto:
>> ivan.ristic at gmail.com>ivan.ristic at gmail.com<mailto:ivan.ristic at gmail.com
>> >><mailto:ivan.ristic at gmail.com>ivan.ristic at gmail.com<mailto:
>> ivan.ristic at gmail.com><mailto:<mailto:ivan.ristic at gmail.com>
>> ivan.ristic at gmail.com<mailto:ivan.ristic at gmail.com>>> wrote:
>> >>
>> >> Yes, it's probably because of keep-alives. Sounds like a bug in the
>> >> reqtimeout module, because, if the connection stays open, the module
>> >> isn't achieving much.
>> >>
>> >> IIRC, ModSecurity will turn off keep-alives on a connection on which it
>> >> blocks.
>> >>
>> >>
>> >> On Thu, Apr 14, 2011 at 8:11 PM, Guillaume Bilodeau
>> >> <<mailto:<mailto:guillaume.bilodeau at gmail.com>
>> guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com
>> >><mailto:guillaume.bilodeau at gmail.com>guillaume.bilodeau at gmail.com
>> <mailto:guillaume.bilodeau at gmail.com><mailto:<mailto:
>> guillaume.bilodeau at gmail.com>guillaume.bilodeau at gmail.com<mailto:
>> guillaume.bilodeau at gmail.com>>> wrote:
>> >> > Hi Ryan,
>> >> > We installed WireShark and started sniffing on all traffic.  It seems
>> >> > that
>> >> > Apache is returning a 200 status code instead of a 408 when the
>> request
>> >> > reaches 30 seconds, so from what I understand ModSecurity can't do
>> much
>> >> > about that.  The funny thing is, if we follow one of the TCP streams,
>> we
>> >> > see
>> >> > that http_dos_cli keeps sending data even after receiving the 200
>> code.
>> >> >  Maybe something to do with  keep-alive connections?
>> >> > Cheers,
>> >> > GB
>> >> > On Thu, Apr 14, 2011 at 2:12 PM, Ryan Barnett <<mailto:<mailto:
>> RBarnett at trustwave.com>RBarnett at trustwave.com<mailto:
>> RBarnett at trustwave.com>><mailto:RBarnett at trustwave.com>
>> RBarnett at trustwave.com<mailto:RBarnett at trustwave.com><mailto:<mailto:
>> RBarnett at trustwave.com>RBarnett at trustwave.com<mailto:
>> RBarnett at trustwave.com>>>
>> >> > wrote:
>> >> >>
>> >> >> OK, if mod_reqtimeout is installed and that directive is working,
>> then
>> >> >> after 30 sec if Apache has not received the entire request body then
>> it
>> >> >> should terminate the request with a 408 status code.  The
>> ModSecurity
>> >> >> CRS
>> >> >> rules are simply monitoring if/how many 408 alerts are generated by
>> >> >> Apache
>> >> >> per client.  After a certain amount, then ModSecurity will step in
>> on
>> >> >> subsequent requests in phase:1 and do drop actions.
>> >> >>
>> >> >> So, by monitoring your Apache error log while you are running your
>> >> >> http_dos_cli tool, does Apache generate 408 alerts after 30 secs?
>>  If
>> >> >> not,
>> >> >> then I don't think that the mod_reqtimeout module or directive is
>> >> >> working.
>> >> >>
>> >> >> -Ryan
>> >> >>
>> >> >>
>> >> >> From: Guillaume Bilodeau
>> >> >> <<mailto:<mailto:guillaume.bilodeau at gmail.com>
>> guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com
>> >><mailto:guillaume.bilodeau at gmail.com>guillaume.bilodeau at gmail.com
>> <mailto:guillaume.bilodeau at gmail.com><mailto:<mailto:
>> guillaume.bilodeau at gmail.com>guillaume.bilodeau at gmail.com<mailto:
>> guillaume.bilodeau at gmail.com>><mailto:<mailto:<mailto:
>> guillaume.bilodeau at gmail.com>guillaume.bilodeau at gmail.com<mailto:
>> guillaume.bilodeau at gmail.com>><mailto:guillaume.bilodeau at gmail.com>
>> guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com><mailto:
>> <mailto:guillaume.bilodeau at gmail.com>guillaume.bilodeau at gmail.com<mailto:
>> guillaume.bilodeau at gmail.com>>>>
>> >> >> Date: Thu, 14 Apr 2011 13:07:41 -0500
>> >> >> To: Ryan Barnett
>> >> >> <<mailto:<mailto:rbarnett at trustwave.com>rbarnett at trustwave.com
>> <mailto:rbarnett at trustwave.com>><mailto:rbarnett at trustwave.com>
>> rbarnett at trustwave.com<mailto:rbarnett at trustwave.com><mailto:<mailto:
>> rbarnett at trustwave.com>rbarnett at trustwave.com<mailto:
>> rbarnett at trustwave.com>><mailto:<mailto:<mailto:rbarnett at trustwave.com>
>> rbarnett at trustwave.com<mailto:rbarnett at trustwave.com>><mailto:
>> rbarnett at trustwave.com>rbarnett at trustwave.com<mailto:
>> rbarnett at trustwave.com><mailto:<mailto:rbarnett at trustwave.com>
>> rbarnett at trustwave.com<mailto:rbarnett at trustwave.com>>>>
>> >> >> Cc:
>> >> >>
>> >> >> "<mailto:<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>
>> owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>><mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>
>> owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>
>> owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>><mailto:<mailto:<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>
>> owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>><mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>
>> owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>
>> owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>>>"
>> >> >>
>> >> >> <<mailto:<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>
>> owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>><mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>
>> owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>
>> owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>><mailto:<mailto:<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>
>> owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>><mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>
>> owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>
>> owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>>>>
>> >> >> Subject: Re: [Owasp-modsecurity-core-rule-set] Slow HTTP DOS
>> protection
>> >> >> not behaving as expected
>> >> >>
>> >> >> Hi Ryan,
>> >> >>
>> >> >> I'm no Apache expert, but AFAICT the req_timeout module is
>> installed.
>> >> >>  A
>> >> >> /server-info shows the req_timeout.c module with the
>> RequestReadTimeout
>> >> >> parameter.
>> >> >>
>> >> >> Thanks,
>> >> >> GB
>> >> >>
>> >> >> On Thu, Apr 14, 2011 at 1:56 PM, Ryan Barnett
>> >> >> <<mailto:<mailto:RBarnett at trustwave.com>RBarnett at trustwave.com
>> <mailto:RBarnett at trustwave.com>><mailto:RBarnett at trustwave.com>
>> RBarnett at trustwave.com<mailto:RBarnett at trustwave.com><mailto:<mailto:
>> RBarnett at trustwave.com>RBarnett at trustwave.com<mailto:
>> RBarnett at trustwave.com>><mailto:<mailto:<mailto:RBarnett at trustwave.com>
>> RBarnett at trustwave.com<mailto:RBarnett at trustwave.com>><mailto:
>> RBarnett at trustwave.com>RBarnett at trustwave.com<mailto:
>> RBarnett at trustwave.com><mailto:<mailto:RBarnett at trustwave.com>
>> RBarnett at trustwave.com<mailto:RBarnett at trustwave.com>>>> wrote:
>> >> >> Did you install the reqtimeout module?
>> >> >>
>> >> >> #
>> >> >> # Mitigate Slow HTTP POST attacks
>> >> >> #
>> >> >> # Must have the mod_reqtimeout module installed
>> >> >> # You should adjust the RequestReadTimeout body directive setting to
>> a
>> >> >> limit
>> >> >> # that will allow any legitimate slow clients or large file uplaods.
>> >> >> #
>> >> >> <IfModule reqtimeout_module>
>> >> >> RequestReadTimeout body=30
>> >> >> </IfModule>
>> >> >>
>> >> >> -Ryan
>> >> >>
>> >> >>
>> >> >>
>> >> >> From: Guillaume Bilodeau
>> >> >>
>> >> >> <<mailto:<mailto:guillaume.bilodeau at gmail.com>
>> guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com
>> >><mailto:guillaume.bilodeau at gmail.com>guillaume.bilodeau at gmail.com
>> <mailto:guillaume.bilodeau at gmail.com><mailto:<mailto:
>> guillaume.bilodeau at gmail.com>guillaume.bilodeau at gmail.com<mailto:
>> guillaume.bilodeau at gmail.com>><mailto:<mailto:<mailto:
>> guillaume.bilodeau at gmail.com>guillaume.bilodeau at gmail.com<mailto:
>> guillaume.bilodeau at gmail.com>><mailto:guillaume.bilodeau at gmail.com>
>> guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com><mailto:
>> <mailto:guillaume.bilodeau at gmail.com>guillaume.bilodeau at gmail.com<mailto:
>> guillaume.bilodeau at gmail.com>>><mailto:<mailto:<mailto:
>> guillaume.bilodeau at gmail.com>guillaume.bilodeau at gmail.com<mailto:
>> guillaume.bilodeau at gmail.com>><mailto:guillaume.bilodeau at gmail.com>
>> guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com><mailto:
>> <mailto:guillaume.bilodeau at gmail.com>guillaume.bilodeau at gmail.com<mailto:
>> guillaume.bilodeau at gmail.com>><mailto:<mailto:<mailto:
>> guillaume.bilodeau at gmail.com>guillaume.bilodeau at gmail.com<mailto:
>> guillaume.bilodeau at gmail.com>><mailto:guillaume.bilodeau at gmail.com>
>> guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com><mailto:
>> <mailto:guillaume.bilodeau at gmail.com>guillaume.bilodeau at gmail.com<mailto:
>> guillaume.bilodeau at gmail.com>>>>>
>> >> >> Date: Thu, 14 Apr 2011 12:33:52 -0500
>> >> >> To:
>> >> >>
>> >> >> "<mailto:<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>
>> owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>><mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>
>> owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>
>> owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>><mailto:<mailto:<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>
>> owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>><mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>
>> owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>
>> owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>>><mailto:<mailto:
>> <mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>
>> owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>><mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>
>> owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>
>> owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>><mailto:<mailto:<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>
>> owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>><mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>
>> owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>
>> owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>>>>"
>> >> >>
>> >> >> <<mailto:<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>
>> owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>><mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>
>> owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>
>> owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>><mailto:<mailto:<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>
>> owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>><mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>
>> owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>
>> owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>>><mailto:<mailto:
>> <mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>
>> owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>><mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>
>> owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>
>> owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>><mailto:<mailto:<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>
>> owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>><mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>
>> owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>
>> owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:
>> owasp-modsecurity-core-rule-set at lists.owasp.org>>>>>
>> >> >> Subject: [Owasp-modsecurity-core-rule-set] Slow HTTP DOS protection
>> not
>> >> >> behaving as expected
>> >> >>
>> >> >> Hi all,
>> >> >>
>> >> >> We are trying to setup the OWASP Core Rule Set to protect our
>> >> >> application
>> >> >> from Slow HTTP DOS attacks.
>> >> >>
>> >> >> We have setup ModSecurity 2.5.13 on our Apache 2.2.17 instance,
>> loaded
>> >> >> the
>> >> >> module, and included all CRS base rules plus
>> >> >> modsecurity_crs_11_slow_dos_protection.conf.  We didn't change the
>> >> >> settings
>> >> >> defined in the conf file, so SecReadStateLimit is set to 5 and
>> >> >> RequestReadTimeout is set to body=30.  We are using the http_dos_cli
>> >> >> command
>> >> >> line tool to do our tests, with the connection parameter set to 500.
>> >> >>
>> >> >> When running the slow-headers test, ModSecurity seems to be
>> protecting
>> >> >> the
>> >> >> application correctly, dropping most (all?) requests from the
>> tester's
>> >> >> IP
>> >> >> and allowing requests from a different IP to be served.  However,
>> when
>> >> >> running the slow-post test, ModSecurity doesn't seem to be doing
>> >> >> anything.
>> >> >>  From what I understand, the test successfully creates the 500
>> >> >> connections
>> >> >> and keeps them open; none of them are dropped.  Requests coming from
>> a
>> >> >> different IP are not served and eventually time out.  A tail -f
>> >> >> error_log
>> >> >> shows nothing except the eventual message on MaxClients (set to 300
>> >> >> now)
>> >> >> being reached.  Interestingly, when we kill the http_dos_cli
>> process,
>> >> >> the
>> >> >> error_log is then flooded with hundreds of entries such as this:
>> >> >>
>> >> >>
>> >> >> [Mon Nov 22 17:44:46 2010] [warn] ModSecurity: Access denied with
>> code
>> >> >> 400.
>> >> >> Too many connections [6] of 5 allowed in READ state from
>> 211.144.112.20
>> >> >> -
>> >> >> Possible DoS Consumption Attack [Rejected]
>> >> >>
>> >> >> (this has been taken from the SpiderLabs blog entry, dates and IPs
>> are
>> >> >> obviously different)
>> >> >>
>> >> >> Any idea on why this isn't behaving like we're expecting it to be?
>> >> >>
>> >> >> Thanks!
>> >> >> GB
>> >> >>
>> >> >>
>> >> >>
>> >> >>
>> >> >
>> >> >
>> >> > _______________________________________________
>> >> > Owasp-modsecurity-core-rule-set mailing list
>> >> > <mailto:<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org>
>> Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:
>> Owasp-modsecurity-core-rule-set at lists.owasp.org>> <mailto:
>> Owasp-modsecurity-core-rule-set at lists.owasp.org>
>> Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:
>> Owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:<mailto:
>> Owasp-modsecurity-core-rule-set at lists.owasp.org>
>> Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:
>> Owasp-modsecurity-core-rule-set at lists.owasp.org>>
>> >> > <<
>> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set>
>> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set>
>> <https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set>
>> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
>> >> >
>> >> >
>> >>
>> >>
>> >>
>> >> --
>> >> Ivan Risti?
>> >
>> >
>> > _______________________________________________
>> > Owasp-modsecurity-core-rule-set mailing list
>> > <mailto:<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org>
>> Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:
>> Owasp-modsecurity-core-rule-set at lists.owasp.org>> <mailto:
>> Owasp-modsecurity-core-rule-set at lists.owasp.org>
>> Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:
>> Owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:<mailto:
>> Owasp-modsecurity-core-rule-set at lists.owasp.org>
>> Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:
>> Owasp-modsecurity-core-rule-set at lists.owasp.org>>
>> > <<
>> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set>
>> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set>
>> <https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set>
>> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
>> >
>> >
>>
>> _______________________________________________
>> Owasp-modsecurity-core-rule-set mailing list
>> <mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org>
>> Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:
>> Owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:<mailto:
>> Owasp-modsecurity-core-rule-set at lists.owasp.org>
>> Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:
>> Owasp-modsecurity-core-rule-set at lists.owasp.org>>
>> <https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
>> >https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
>>
>> ________________________________
>> This transmission may contain information that is privileged,
>> confidential, and/or exempt from disclosure under applicable law. If you are
>> not the intended recipient, you are hereby notified that any disclosure,
>> copying, distribution, or use of the information contained herein (including
>> any reliance thereon) is STRICTLY PROHIBITED. If you received this
>> transmission in error, please immediately contact the sender and destroy the
>> material in its entirety, whether in electronic or hard copy format.
>>
>> _______________________________________________
>> Owasp-modsecurity-core-rule-set mailing list
>> Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:
>> Owasp-modsecurity-core-rule-set at lists.owasp.org>
>> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20110502/35a33865/attachment-0001.html 

From RBarnett at trustwave.com  Mon May  2 09:25:31 2011
From: RBarnett at trustwave.com (Ryan Barnett)
Date: Mon, 2 May 2011 08:25:31 -0500
Subject: [Owasp-modsecurity-core-rule-set] Slow HTTP DOS protection not
 behaving as expected
In-Reply-To: <BANLkTik3r4nZup52Yb1oRjGuzwDTscXu3g@mail.gmail.com>
Message-ID: <C9E428CE.2533D%rbarnett@trustwave.com>

Thanks for the update Guillaume.  Good to know so that we don't spin our wheels on our end.  We should still look to see if there is another method for identifying these conditions.

-Ryan

From: Guillaume Bilodeau <guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>>
Date: Mon, 2 May 2011 08:16:55 -0500
To: "owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>" <owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>
Subject: Re: [Owasp-modsecurity-core-rule-set] Slow HTTP DOS protection not behaving as expected

Hi all,

I have opened a bug report at Apache and they have confirmed that issues in HTTPD Core are causing the following problems:

- Apache doesn't always return a 408 when a request time out is detected (various cases)
- Apache doesn't handle a request time out properly when the URL corresponds to a RedirectMatch directive

More details here: https://issues.apache.org/bugzilla/show_bug.cgi?id=51103

Thank you all for your time and precious help!

Cheers,
GB

On Tue, Apr 19, 2011 at 9:16 AM, Guillaume Bilodeau <guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>> wrote:
Our latest tries looked like this:

In modsecurity_crs_11_slow_dos_protection.conf:

#SecReadStateLimit 10
<IfModule reqtimeout_module>
RequestReadTimeout header=20-40,MinRate=500 body=20,MinRate=500
</IfModule>
SecRule RESPONSE_STATUS "@streq 408" "phase:5,t:none,nolog,pass,setvar:ip.slow_dos_counter=+1,expirevar:ip.slow_dos_counter=60"
SecRule IP:SLOW_DOS_COUNTER "@gt 5" "phase:1,t:none,log,drop,msg:'Client Connection Dropped due to high # of slow DoS alerts'"

First test
http_dos_cli --host 1.2.3.4 --port 80 --path /doLogin.html --slow-headers --post --connections 1000 --rate 1000 --timeout 5

Tool establishes connections, starts sending headers
After 20 seconds, requests start timing out
Within a minute, tool cannot connect anymore
Outside IP can connect to Apache

In error_log:
[Tue Apr 19 08:55:09 2011] [info] [client 5.6.7.8] Request header read timeout
[Tue Apr 19 08:55:09 2011] [error] [client 5.6.7.8] request failed: error reading the headers

In Wireshark:
HTTP response code 400 (Bad Request)

Second test
http_dos_cli --host 1.2.3.4 --port 80 --path /doLogin.html --slow-post --post-field j_username --connections 1000 --rate 1000 --timeout 5

Tool establishes connections, starts sending post data
Tool caps at 1000 connections, never receives any error
Outside IP cannot connect to Apache

In error_log:
[Tue Apr 19 09:01:20 2011] [info] [client 5.6.7.8] Request body read timeout

In Wireshark:
HTTP response code 200 (Found)

So...

In both cases, Apache (mod_reqtimeout I suppose) seems to be enforcing the header / body timeout correctly.  It's just that it's not returning a 408 in either case.

On Sat, Apr 16, 2011 at 10:18 AM, Ryan Barnett <RBarnett at trustwave.com<mailto:RBarnett at trustwave.com>> wrote:
Have you tried using header=timeout  directive against the slow dos tool to prevent slow headers?  Wonder if that part works for you or if it also is returning the 200. If that doesn't work then maybe it is related to Solaris OS. These settings worked for me on Mac OSX and Ubuntu.

On Apr 16, 2011, at 9:58 AM, "Guillaume Bilodeau" <guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com><mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>>> wrote:

We're using an Apache 2.2.17 that was built from scratch on a Solaris box.

On Sat, Apr 16, 2011 at 9:44 AM, Ryan Barnett <<mailto:RBarnett at trustwave.com<mailto:RBarnett at trustwave.com>>RBarnett at trustwave.com<mailto:RBarnett at trustwave.com><mailto:RBarnett at trustwave.com<mailto:RBarnett at trustwave.com>>> wrote:
What apache version are you using?

On Apr 16, 2011, at 9:43 AM, "Guillaume Bilodeau" <<mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>>guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com><mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>><mailto:<mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>>guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com><mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>>>> wrote:

A little more information on the 200 return code:

It seems that mod_reqtimeout is not closing the connection after the 20 seconds, but rather truncating the request and letting it go through.  So the request is actually processed, and since the URL is referring to an actual resource, a 200 code is returned.

Surely there must be a problem with our configuration?  Or maybe our Apache build?

Cheers,
GB

On Sat, Apr 16, 2011 at 12:55 AM, Brian Rectanus <<mailto:<mailto:brectanu at gmail.com<mailto:brectanu at gmail.com>>brectanu at gmail.com<mailto:brectanu at gmail.com><mailto:brectanu at gmail.com<mailto:brectanu at gmail.com>>><mailto:brectanu at gmail.com<mailto:brectanu at gmail.com>>brectanu at gmail.com<mailto:brectanu at gmail.com><mailto:brectanu at gmail.com<mailto:brectanu at gmail.com>><mailto:<mailto:brectanu at gmail.com<mailto:brectanu at gmail.com>>brectanu at gmail.com<mailto:brectanu at gmail.com><mailto:brectanu at gmail.com<mailto:brectanu at gmail.com>>>> wrote:
Probably not "disastrous" :)  You have the overhead of the TCP 3-way
handshake and also the shutdown, but the browsers should be using SSL
session resumption, which is not connection based.  It uses cached SSL
session IDs and should be reused on each connection up to the timeout
- just make sure this is enabled in the Apache config.  Personally, I
find that about 3 second timeouts w/low request limit works well for
keepalives, so it may be enough to just limit the keepalive timeout
and number of requests  (say 3 second timeout w/9 requests limit
instead of completely disabling them).  It really depends on your
latency requirements for your site.

-B

On Thu, Apr 14, 2011 at 2:37 PM, Guillaume Bilodeau
<<mailto:<mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>>guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com><mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>>><mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>>guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com><mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>><mailto:<mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>>guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com><mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>>>> wrote:
> We will try turning off connection keep-alive to see how Apache will react.
>  However, isn't turning this off going to have a disastrous impact on
> connection performance, especially since all traffic will be SSL?
>
> On Thu, Apr 14, 2011 at 3:19 PM, Ivan Ristic <<mailto:<mailto:ivan.ristic at gmail.com<mailto:ivan.ristic at gmail.com>>ivan.ristic at gmail.com<mailto:ivan.ristic at gmail.com><mailto:ivan.ristic at gmail.com<mailto:ivan.ristic at gmail.com>>><mailto:ivan.ristic at gmail.com<mailto:ivan.ristic at gmail.com>>ivan.ristic at gmail.com<mailto:ivan.ristic at gmail.com><mailto:ivan.ristic at gmail.com<mailto:ivan.ristic at gmail.com>><mailto:<mailto:ivan.ristic at gmail.com<mailto:ivan.ristic at gmail.com>>ivan.ristic at gmail.com<mailto:ivan.ristic at gmail.com><mailto:ivan.ristic at gmail.com<mailto:ivan.ristic at gmail.com>>>> wrote:
>>
>> Yes, it's probably because of keep-alives. Sounds like a bug in the
>> reqtimeout module, because, if the connection stays open, the module
>> isn't achieving much.
>>
>> IIRC, ModSecurity will turn off keep-alives on a connection on which it
>> blocks.
>>
>>
>> On Thu, Apr 14, 2011 at 8:11 PM, Guillaume Bilodeau
>> <<mailto:<mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>>guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com><mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>>><mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>>guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com><mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>><mailto:<mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>>guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com><mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>>>> wrote:
>> > Hi Ryan,
>> > We installed WireShark and started sniffing on all traffic.  It seems
>> > that
>> > Apache is returning a 200 status code instead of a 408 when the request
>> > reaches 30 seconds, so from what I understand ModSecurity can't do much
>> > about that.  The funny thing is, if we follow one of the TCP streams, we
>> > see
>> > that http_dos_cli keeps sending data even after receiving the 200 code.
>> >  Maybe something to do with  keep-alive connections?
>> > Cheers,
>> > GB
>> > On Thu, Apr 14, 2011 at 2:12 PM, Ryan Barnett <<mailto:<mailto:RBarnett at trustwave.com<mailto:RBarnett at trustwave.com>>RBarnett at trustwave.com<mailto:RBarnett at trustwave.com><mailto:RBarnett at trustwave.com<mailto:RBarnett at trustwave.com>>><mailto:RBarnett at trustwave.com<mailto:RBarnett at trustwave.com>>RBarnett at trustwave.com<mailto:RBarnett at trustwave.com><mailto:RBarnett at trustwave.com<mailto:RBarnett at trustwave.com>><mailto:<mailto:RBarnett at trustwave.com<mailto:RBarnett at trustwave.com>>RBarnett at trustwave.com<mailto:RBarnett at trustwave.com><mailto:RBarnett at trustwave.com<mailto:RBarnett at trustwave.com>>>>
>> > wrote:
>> >>
>> >> OK, if mod_reqtimeout is installed and that directive is working, then
>> >> after 30 sec if Apache has not received the entire request body then it
>> >> should terminate the request with a 408 status code.  The ModSecurity
>> >> CRS
>> >> rules are simply monitoring if/how many 408 alerts are generated by
>> >> Apache
>> >> per client.  After a certain amount, then ModSecurity will step in on
>> >> subsequent requests in phase:1 and do drop actions.
>> >>
>> >> So, by monitoring your Apache error log while you are running your
>> >> http_dos_cli tool, does Apache generate 408 alerts after 30 secs?  If
>> >> not,
>> >> then I don't think that the mod_reqtimeout module or directive is
>> >> working.
>> >>
>> >> -Ryan
>> >>
>> >>
>> >> From: Guillaume Bilodeau
>> >> <<mailto:<mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>>guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com><mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>>><mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>>guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com><mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>><mailto:<mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>>guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com><mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>>><mailto:<mailto:<mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>>guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com><mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>>><mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>>guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com><mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>><mailto:<mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>>guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com><mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>>>>>
>> >> Date: Thu, 14 Apr 2011 13:07:41 -0500
>> >> To: Ryan Barnett
>> >> <<mailto:<mailto:rbarnett at trustwave.com<mailto:rbarnett at trustwave.com>>rbarnett at trustwave.com<mailto:rbarnett at trustwave.com><mailto:rbarnett at trustwave.com<mailto:rbarnett at trustwave.com>>><mailto:rbarnett at trustwave.com<mailto:rbarnett at trustwave.com>>rbarnett at trustwave.com<mailto:rbarnett at trustwave.com><mailto:rbarnett at trustwave.com<mailto:rbarnett at trustwave.com>><mailto:<mailto:rbarnett at trustwave.com<mailto:rbarnett at trustwave.com>>rbarnett at trustwave.com<mailto:rbarnett at trustwave.com><mailto:rbarnett at trustwave.com<mailto:rbarnett at trustwave.com>>><mailto:<mailto:<mailto:rbarnett at trustwave.com<mailto:rbarnett at trustwave.com>>rbarnett at trustwave.com<mailto:rbarnett at trustwave.com><mailto:rbarnett at trustwave.com<mailto:rbarnett at trustwave.com>>><mailto:rbarnett at trustwave.com<mailto:rbarnett at trustwave.com>>rbarnett at trustwave.com<mailto:rbarnett at trustwave.com><mailto:rbarnett at trustwave.com<mailto:rbarnett at trustwave.com>><mailto:<mailto:rbarnett at trustwave.com<mailto:rbarnett at trustwave.com>>rbarnett at trustwave.com<mailto:rbarnett at trustwave.com><mailto:rbarnett at trustwave.com<mailto:rbarnett at trustwave.com>>>>>
>> >> Cc:
>> >>
>> >> "<mailto:<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>><mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>><mailto:<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>><mailto:<mailto:<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>><mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>><mailto:<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>>>"
>> >>
>> >> <<mailto:<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>><mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>><mailto:<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>><mailto:<mailto:<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>><mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>><mailto:<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>>>>
>> >> Subject: Re: [Owasp-modsecurity-core-rule-set] Slow HTTP DOS protection
>> >> not behaving as expected
>> >>
>> >> Hi Ryan,
>> >>
>> >> I'm no Apache expert, but AFAICT the req_timeout module is installed.
>> >>  A
>> >> /server-info shows the req_timeout.c module with the RequestReadTimeout
>> >> parameter.
>> >>
>> >> Thanks,
>> >> GB
>> >>
>> >> On Thu, Apr 14, 2011 at 1:56 PM, Ryan Barnett
>> >> <<mailto:<mailto:RBarnett at trustwave.com<mailto:RBarnett at trustwave.com>>RBarnett at trustwave.com<mailto:RBarnett at trustwave.com><mailto:RBarnett at trustwave.com<mailto:RBarnett at trustwave.com>>><mailto:RBarnett at trustwave.com<mailto:RBarnett at trustwave.com>>RBarnett at trustwave.com<mailto:RBarnett at trustwave.com><mailto:RBarnett at trustwave.com<mailto:RBarnett at trustwave.com>><mailto:<mailto:RBarnett at trustwave.com<mailto:RBarnett at trustwave.com>>RBarnett at trustwave.com<mailto:RBarnett at trustwave.com><mailto:RBarnett at trustwave.com<mailto:RBarnett at trustwave.com>>><mailto:<mailto:<mailto:RBarnett at trustwave.com<mailto:RBarnett at trustwave.com>>RBarnett at trustwave.com<mailto:RBarnett at trustwave.com><mailto:RBarnett at trustwave.com<mailto:RBarnett at trustwave.com>>><mailto:RBarnett at trustwave.com<mailto:RBarnett at trustwave.com>>RBarnett at trustwave.com<mailto:RBarnett at trustwave.com><mailto:RBarnett at trustwave.com<mailto:RBarnett at trustwave.com>><mailto:<mailto:RBarnett at trustwave.com<mailto:RBarnett at trustwave.com>>RBarnett at trustwave.com<mailto:RBarnett at trustwave.com><mailto:RBarnett at trustwave.com<mailto:RBarnett at trustwave.com>>>>> wrote:
>> >> Did you install the reqtimeout module?
>> >>
>> >> #
>> >> # Mitigate Slow HTTP POST attacks
>> >> #
>> >> # Must have the mod_reqtimeout module installed
>> >> # You should adjust the RequestReadTimeout body directive setting to a
>> >> limit
>> >> # that will allow any legitimate slow clients or large file uplaods.
>> >> #
>> >> <IfModule reqtimeout_module>
>> >> RequestReadTimeout body=30
>> >> </IfModule>
>> >>
>> >> -Ryan
>> >>
>> >>
>> >>
>> >> From: Guillaume Bilodeau
>> >>
>> >> <<mailto:<mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>>guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com><mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>>><mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>>guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com><mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>><mailto:<mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>>guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com><mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>>><mailto:<mailto:<mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>>guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com><mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>>><mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>>guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com><mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>><mailto:<mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>>guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com><mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>>>><mailto:<mailto:<mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>>guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com><mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>>><mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>>guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com><mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>><mailto:<mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>>guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com><mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>>><mailto:<mailto:<mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>>guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com><mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>>><mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>>guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com><mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>><mailto:<mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>>guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com><mailto:guillaume.bilodeau at gmail.com<mailto:guillaume.bilodeau at gmail.com>>>>>>
>> >> Date: Thu, 14 Apr 2011 12:33:52 -0500
>> >> To:
>> >>
>> >> "<mailto:<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>><mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>><mailto:<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>><mailto:<mailto:<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>><mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>><mailto:<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>>><mailto:<mailto:<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>><mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>><mailto:<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>><mailto:<mailto:<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>><mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>><mailto:<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>>>>"
>> >>
>> >> <<mailto:<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>><mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>><mailto:<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>><mailto:<mailto:<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>><mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>><mailto:<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>>><mailto:<mailto:<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>><mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>><mailto:<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>><mailto:<mailto:<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>><mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>><mailto:<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>>>>>
>> >> Subject: [Owasp-modsecurity-core-rule-set] Slow HTTP DOS protection not
>> >> behaving as expected
>> >>
>> >> Hi all,
>> >>
>> >> We are trying to setup the OWASP Core Rule Set to protect our
>> >> application
>> >> from Slow HTTP DOS attacks.
>> >>
>> >> We have setup ModSecurity 2.5.13 on our Apache 2.2.17 instance, loaded
>> >> the
>> >> module, and included all CRS base rules plus
>> >> modsecurity_crs_11_slow_dos_protection.conf.  We didn't change the
>> >> settings
>> >> defined in the conf file, so SecReadStateLimit is set to 5 and
>> >> RequestReadTimeout is set to body=30.  We are using the http_dos_cli
>> >> command
>> >> line tool to do our tests, with the connection parameter set to 500.
>> >>
>> >> When running the slow-headers test, ModSecurity seems to be protecting
>> >> the
>> >> application correctly, dropping most (all?) requests from the tester's
>> >> IP
>> >> and allowing requests from a different IP to be served.  However, when
>> >> running the slow-post test, ModSecurity doesn't seem to be doing
>> >> anything.
>> >>  From what I understand, the test successfully creates the 500
>> >> connections
>> >> and keeps them open; none of them are dropped.  Requests coming from a
>> >> different IP are not served and eventually time out.  A tail -f
>> >> error_log
>> >> shows nothing except the eventual message on MaxClients (set to 300
>> >> now)
>> >> being reached.  Interestingly, when we kill the http_dos_cli process,
>> >> the
>> >> error_log is then flooded with hundreds of entries such as this:
>> >>
>> >>
>> >> [Mon Nov 22 17:44:46 2010] [warn] ModSecurity: Access denied with code
>> >> 400.
>> >> Too many connections [6] of 5 allowed in READ state from 211.144.112.20
>> >> -
>> >> Possible DoS Consumption Attack [Rejected]
>> >>
>> >> (this has been taken from the SpiderLabs blog entry, dates and IPs are
>> >> obviously different)
>> >>
>> >> Any idea on why this isn't behaving like we're expecting it to be?
>> >>
>> >> Thanks!
>> >> GB
>> >>
>> >>
>> >>
>> >>
>> >
>> >
>> > _______________________________________________
>> > Owasp-modsecurity-core-rule-set mailing list
>> > <mailto:<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org>>Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org>>> <mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org>> Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org>><mailto:<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org>>Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org>>>
>> > <<https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set>https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set> <https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
>> >
>> >
>>
>>
>>
>> --
>> Ivan Risti?
>
>
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> <mailto:<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org>>Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org>>> <mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org>> Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org>><mailto:<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org>>Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org>>>
> <<https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set>https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set> <https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
>
>

_______________________________________________
Owasp-modsecurity-core-rule-set mailing list
<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org>>Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org>><mailto:<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org>>Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org>>>
<https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set>https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set

________________________________
This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is STRICTLY PROHIBITED. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

_______________________________________________
Owasp-modsecurity-core-rule-set mailing list
Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org><mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org>>
https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set



________________________________
This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is STRICTLY PROHIBITED. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.


From RBarnett at trustwave.com  Tue May  3 19:47:02 2011
From: RBarnett at trustwave.com (Ryan Barnett)
Date: Tue, 3 May 2011 18:47:02 -0500
Subject: [Owasp-modsecurity-core-rule-set] ModSecurity Advanced Topic of the
 Week: Passive Vulnerability Scanning Part 2 - Watcher Checks
Message-ID: <C9E60C36.25649%rbarnett@trustwave.com>

Latest blog post discusses some application defect rules for identifying charset declaration issues -
http://blog.spiderlabs.com/2011/05/modsecurity-advanced-topic-of-the-week-passive-vulnerability-scanning-part-2-watcher-checks.html

-Ryan

________________________________
This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is STRICTLY PROHIBITED. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.


From zhangzhangbin at ruijie.com.cn  Thu May  5 04:49:59 2011
From: zhangzhangbin at ruijie.com.cn (=?gb2312?B?1cXVwrHzKNHQwfkguKPW3Sk=?=)
Date: Thu, 5 May 2011 08:49:59 +0000
Subject: [Owasp-modsecurity-core-rule-set] how to get the description of
	each rule..
Message-ID: <9544A84EE3EB7E45BDC11507F4ED40EE1E2C15CC@fzex.ruijie.com.cn>

Hello!

    Many rule in the core-rule-set are complicated and I can?t understant it.
Does anyone know where to find the description of each rule?

    Thanks!

James
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20110505/b72e82d4/attachment.html 

From jamuse at gmail.com  Thu May  5 04:57:20 2011
From: jamuse at gmail.com (Josh Amishav-Zlatin)
Date: Thu, 5 May 2011 11:57:20 +0300
Subject: [Owasp-modsecurity-core-rule-set] how to get the description of
 each rule..
In-Reply-To: <9544A84EE3EB7E45BDC11507F4ED40EE1E2C15CC@fzex.ruijie.com.cn>
References: <9544A84EE3EB7E45BDC11507F4ED40EE1E2C15CC@fzex.ruijie.com.cn>
Message-ID: <BANLkTinj+yoL9riCJ458EQY5OO2Yc09B2g@mail.gmail.com>

2011/5/5 ???(?? ??) <zhangzhangbin at ruijie.com.cn>:
> Hello!
>
>
>
> ??? Many rule in the core-rule-set are complicated and I can?t understant
> it.
>
> Does anyone know where to find the description of each rule?

There was a push to start documenting the CRS rules a while back,
though it doesn't look like that much was completed:

https://www.owasp.org/index.php/Category:OWASP_ModSecurity_Core_Rule_Set_Project#tab=Documentation

To get a good understand of the ModSecurity rules language, I highly
recommend getting a copy the ModSecurity Handbook.

--
 - Josh

From RBarnett at trustwave.com  Thu May  5 09:05:59 2011
From: RBarnett at trustwave.com (Ryan Barnett)
Date: Thu, 5 May 2011 08:05:59 -0500
Subject: [Owasp-modsecurity-core-rule-set] how to get the description of
 each rule..
In-Reply-To: <BANLkTinj+yoL9riCJ458EQY5OO2Yc09B2g@mail.gmail.com>
Message-ID: <C9E817D7.2576E%rbarnett@trustwave.com>

Yep - I was hoping that some folks from the community would help with the
documentation but that hasn't materialized...  If anyone wants to help
with Documentation please ping me so we can coordinate.

Besides the OWASP Rule Document pages, I did start updating the comments
preceding each rule in the rules files.  I only finished two files so far -

modsecurity_crs_20_protocol_violations.conf
modsecurity_crs_21_protocol_anomalies.conf

Each rule has Rules Logic and Reference sections to help provide
information as to the rule's purpose.

#
# -=[ Rule Logic ]=-
# Uses rule negation against the regex for positive security.  The regex
specifies the proper
# construction of URI request lines such as:
#
#       "http:" "//" host [ ":" port ] [ abs_path [ "?" query ]]
#
# It also outlines proper construction for CONNECT, OPTIONS and GET
requests.
#
# -=[ References ]=-
# http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.2.1
#
SecRule REQUEST_LINE
"!^(?:(?:[a-z]{3,10}\s+(?:\w{3,7}?://[\w\-\./]*(?::\d+)?)?/[^?#]*(?:\?[^#\s
]*)?(?:#[\S]*)?|connect (?:\d{1,3}\.){3}\d{1,3}\.?(?::\d+)?|options
\*)\s+[\w\./]+|get /[^?#]*(?:\?[^#\s]*)?(?:#[\S]*)?)$" \
    "t:none,t:lowercase,phase:1,rev:'2.1.3',block,msg:'Invalid HTTP
Request
Line',id:'960911',severity:'4',tag:'http://www.w3.org/Protocols/rfc2616/rfc
2616-sec3.html#sec3.2.1',setvar:'tx.msg=%{rule.msg}',setvar:tx.anomaly_scor
e=+%{tx.notice_anomaly_score},setvar:tx.protocol_violation_score=+%{tx.noti
ce_anomaly_score},setvar:'tx.%{rule.id}-PROTOCOL_VIOLATION/INVALID_REQ-%{ma
tched_var_name}=%{matched_var}'"

Again - if anyone wants to help with documentation improvements, we are
certainly looking for help.


-Ryan





On 5/5/11 4:57 AM, "Josh Amishav-Zlatin" <jamuse at gmail.com> wrote:

>2011/5/5 ???(?? ??) <zhangzhangbin at ruijie.com.cn>:
>> Hello!
>>
>>
>>
>>     Many rule in the core-rule-set are complicated and I can?t
>>understant
>> it.
>>
>> Does anyone know where to find the description of each rule?
>
>There was a push to start documenting the CRS rules a while back,
>though it doesn't look like that much was completed:
>
>https://www.owasp.org/index.php/Category:OWASP_ModSecurity_Core_Rule_Set_P
>roject#tab=Documentation
>
>To get a good understand of the ModSecurity rules language, I highly
>recommend getting a copy the ModSecurity Handbook.
>
>--
> - Josh
>_______________________________________________
>Owasp-modsecurity-core-rule-set mailing list
>Owasp-modsecurity-core-rule-set at lists.owasp.org
>https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set


This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is STRICTLY PROHIBITED. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

From RBarnett at trustwave.com  Thu May  5 10:46:15 2011
From: RBarnett at trustwave.com (Ryan Barnett)
Date: Thu, 5 May 2011 09:46:15 -0500
Subject: [Owasp-modsecurity-core-rule-set] [Mod-security-developers] CRS
 DoS protection & x-forwarded-for header
In-Reply-To: <538135.39824.qm@web37604.mail.mud.yahoo.com>
Message-ID: <C9E82F86.2582B%rbarnett@trustwave.com>

FYI - updated the CRS 10 config file to add in this logic and uploaded it to SVN -
http://mod-security.svn.sourceforge.net/viewvc/mod-security/crs/trunk/modsecurity_crs_10_config.conf.example?revision=1772

#
# -=[ Global and IP Collections ]=-
#
# Create both Global and IP collections for rules to use
# There are some CRS rules that assume that these two collections
# have already been initiated.
#
SecRule REQUEST_HEADERS:User-Agent "^(.*)$" "phase:1,id:'981217',t:none,pass,nolog,t:sha1,t:hexEncode,setvar:tx.ua_hash=%{matched_var}"
SecRule REQUEST_HEADERS:x-forwarded-for "^\b(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\b" "phase:1,id:'981225',t:none,pass,nolog,capture,setvar:tx.real_ip=%{tx.1}"
SecRule &TX:REAL_IP "!@eq 0" "phase:1,id:'981226',t:none,pass,nolog,initcol:global=global,initcol:ip=%{tx.real_ip}_%{tx.ua_hash}"
SecRule &TX:REAL_IP "@eq 0"  "phase:1,id:'981218',t:none,pass,nolog,initcol:global=global,initcol:ip=%{remote_addr}_%{tx.ua_hash}"

The new rules will grab the first IP address listed in an X-Forwared-For header and use that for the IP collection key.  If X-Forwarded-For is not present, then it will use REMOTE_ADDR.

Thanks for the suggestion!

-Ryan


On 4/28/11 8:19 PM, "Oleg Gryb" <oleg_gryb at yahoo.com<mailto:oleg_gryb at yahoo.com>> wrote:

I've just realized that there might be a problem with relying on that header: if
an attacker intentionally sends different random IPs in there, DoS protection
can be efficiently by-passed. In my case it should not happen, because an LB is
the one who adds the header, but in general we should warn engineers about the
possible exploit.


Actually, even in LB case: if a request has already had the header, LB will
create a new one with the existing value appended to the client IP:

x-forwarded-for: real-client-ip, whatever-client-sent-to-LB

It means that we would need to rely on the the first IP in the list, everything
else should be considered as untrusted.

Thanks,
Oleg.


----- Original Message ----
From: Ryan Barnett <RBarnett at trustwave.com<mailto:RBarnett at trustwave.com>>
To: Oleg Gryb <oleg at gryb.info<mailto:oleg at gryb.info>>; "mod-security-developers at lists.sourceforge.net<mailto:mod-security-developers at lists.sourceforge.net>"
<mod-security-developers at lists.sourceforge.net<mailto:mod-security-developers at lists.sourceforge.net>>
Cc: "owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>"
<owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>
Sent: Thu, April 28, 2011 4:41:14 PM
Subject: Re: [Mod-security-developers] CRS DoS protection & x-forwarded-for
header
Thanks for the updates Oleg!  This will certainly be a useful update  to
not only the DoS rules buy any rules that will be based on the client  IP.
I will actually go back to check other uses of REMOTE_ADDR and see if  we
can swap it for tx.real_ip instead.
I will add this to the CRS  v2.2.0 that I am working on.
For future reference - here is the OWASP CRS  mail-list -
https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
--
Ryan  Barnett
Senior Security Researcher
Trustwave -  SpiderLabs
On 4/28/11 7:32 PM, "Oleg Gryb" <oleg_gryb at yahoo.com<mailto:oleg_gryb at yahoo.com>>  wrote:
>I'm not sure if I can discuss CRS rules here. If not, please  let me know
>what
>the right place is. I want to suggest an  improvement to DoS protection in
>CRS
>2.1.2. The problem is that  enterprise applications usually run behind
>load
>balancers, so  relying on remote_addr doesn't make too much sense, because
>you'll
>always have an LB's IP in there.
>
>
>My improved  rules (attached)  check for x-forwarded-for header and if
>it's
>present, this IP will be used to initialize IP collection. If it's  not
>then the
>old logic will be used.
>
>It would be  great if we can include this improvement to the next  CRS
>release.
>
>Thanks,
>Oleg.
------------------------------------------------------------------------------
WhatsUp  Gold - Download Free Network Management Software
The most intuitive,  comprehensive, and cost-effective network
management toolset available  today.  Delivers lowest initial
acquisition cost and overall TCO of any  competing  solution.
http://p.sf.net/sfu/whatsupgold-sd
_______________________________________________
mod-security-developers  mailing list
mod-security-developers at lists.sourceforge.net<mailto:mod-security-developers at lists.sourceforge.net>
https://lists.sourceforge.net/lists/listinfo/mod-security-developers
ModSecurity  Services from Trustwave's SpiderLabs:
https://www.trustwave.com/spiderLabs.php

------------------------------------------------------------------------------
WhatsUp Gold - Download Free Network Management Software
The most intuitive, comprehensive, and cost-effective network
management toolset available today.  Delivers lowest initial
acquisition cost and overall TCO of any competing solution.
http://p.sf.net/sfu/whatsupgold-sd
_______________________________________________
mod-security-developers mailing list
mod-security-developers at lists.sourceforge.net<mailto:mod-security-developers at lists.sourceforge.net>
https://lists.sourceforge.net/lists/listinfo/mod-security-developers
ModSecurity Services from Trustwave's SpiderLabs:
https://www.trustwave.com/spiderLabs.php



________________________________
This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is STRICTLY PROHIBITED. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.


From Ken at pumastudios.com  Thu May  5 11:54:21 2011
From: Ken at pumastudios.com (Ken Brucker)
Date: Thu, 5 May 2011 10:54:21 -0500
Subject: [Owasp-modsecurity-core-rule-set] Testing Custom Rules
Message-ID: <78906653-FB08-48F6-9319-341245EE04B5@pumastudios.com>

Hi - I have some custom rules I'd like to create and I'm looking for a test engine to drive the rules and ensure I'm getting the expected results.  I checked the FAQ and found this question that directly relates:

 How do I handle False Positives and creating Custom Rules?

It is inevitable; you will run into some False Positive hits when using web application firewalls. This is not something that is unique to ModSecurity. All web application firewalls will generate false positives from time to time. The following Blog post information will help to guide you through the process of identifying, fixing, implementing and testing new custom rules to address false positives.

But...  the last sentence states "The following blog post information ..."  and there is no blog post information following.  Where do I find the referenced material?

Does a test engine exist outside Apache to feed data through the rules to enable easy regression testing in addition to focused testing of new rules?

Regards,
Ken
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20110505/b70ace4b/attachment.html 

From chris at jwall.org  Thu May  5 12:41:40 2011
From: chris at jwall.org (Christian Bockermann)
Date: Thu, 5 May 2011 18:41:40 +0200
Subject: [Owasp-modsecurity-core-rule-set] Testing Custom Rules
In-Reply-To: <78906653-FB08-48F6-9319-341245EE04B5@pumastudios.com>
References: <78906653-FB08-48F6-9319-341245EE04B5@pumastudios.com>
Message-ID: <929CE6E6-00AE-40F7-A6B6-7C21C7CB3CE5@jwall.org>

Hi Ken,

your question is hitting the spot. Currently there is no such test engine available.
I've done some work on that by implementing a TestClient in Java, which basically
can re-inject all requests from a recorded ModSecurity audit-log.

I've had plans (and started some of that) to implement an "X"-Section which can be
used to define "expected behaviour". For example, you could add some tests like:

     RESPONSE_STATUS @eq 404
     RESPONSE_BODY "@rx !MySQL Error"
     ...

However, since such a test-client can only check for expected results within the
server response, this is somewhat limitted. An extension might be to connect to the
AuditConsole and check the resulting "newly created" audit log events for the requests
that are injected for testing.

If that sounds interesting to you, just drop me a line. I'd be happy to include such
a thing in the jwall-tools (open-source).

Chris


   

Am 05.05.2011 um 17:54 schrieb Ken Brucker:

> Hi - I have some custom rules I'd like to create and I'm looking for a test engine to drive the rules and ensure I'm getting the expected results.  I checked the FAQ and found this question that directly relates:
> 
>  How do I handle False Positives and creating Custom Rules?
> 
> It is inevitable; you will run into some False Positive hits when using web application firewalls. This is not something that is unique to ModSecurity. All web application firewalls will generate false positives from time to time. The following Blog post information will help to guide you through the process of identifying, fixing, implementing and testing new custom rules to address false positives.
> 
> But...  the last sentence states "The following blog post information ..."  and there is no blog post information following.  Where do I find the referenced material?
> 
> Does a test engine exist outside Apache to feed data through the rules to enable easy regression testing in addition to focused testing of new rules?
> 
> Regards,
> Ken
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set


From RBarnett at trustwave.com  Thu May  5 12:45:23 2011
From: RBarnett at trustwave.com (Ryan Barnett)
Date: Thu, 5 May 2011 11:45:23 -0500
Subject: [Owasp-modsecurity-core-rule-set] Testing Custom Rules
In-Reply-To: <78906653-FB08-48F6-9319-341245EE04B5@pumastudios.com>
References: <78906653-FB08-48F6-9319-341245EE04B5@pumastudios.com>
Message-ID: <F53DC525-2CCF-48C7-BC2D-2F38DC64FECF@trustwave.com>

Ken,
This is a good point. We have an internal rules test suite for the CRS. I will work on updating it for the most recent rules and then releasing it in the CRS util directory.

I will send more info soon.

Ryan

On May 5, 2011, at 11:54 AM, "Ken Brucker" <Ken at pumastudios.com<mailto:Ken at pumastudios.com>> wrote:

Hi - I have some custom rules I'd like to create and I'm looking for a test engine to drive the rules and ensure I'm getting the expected results.  I checked the FAQ and found this question that directly relates:

 How do I handle False Positives and creating Custom Rules?

It is inevitable; you will run into some False Positive hits when using web application firewalls. This is not something that is unique to ModSecurity. All web application firewalls will generate false positives from time to time. The following Blog post information will help to guide you through the process of identifying, fixing, implementing and testing new custom rules to address false positives.

But...  the last sentence states "The following blog post information ..."  and there is no blog post information following.  Where do I find the referenced material?

Does a test engine exist outside Apache to feed data through the rules to enable easy regression testing in addition to focused testing of new rules?

Regards,
Ken
_______________________________________________
Owasp-modsecurity-core-rule-set mailing list
Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org>
https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set

________________________________
This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is STRICTLY PROHIBITED. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

From Ken at pumastudios.com  Thu May  5 13:33:25 2011
From: Ken at pumastudios.com (Ken Brucker)
Date: Thu, 5 May 2011 12:33:25 -0500
Subject: [Owasp-modsecurity-core-rule-set] Testing Custom Rules
In-Reply-To: <929CE6E6-00AE-40F7-A6B6-7C21C7CB3CE5@jwall.org>
References: <78906653-FB08-48F6-9319-341245EE04B5@pumastudios.com>
	<929CE6E6-00AE-40F7-A6B6-7C21C7CB3CE5@jwall.org>
Message-ID: <04848BF3-D915-465C-9423-D413EAF33D8E@pumastudios.com>

If I'm understanding this tool the method of use is:

- turn on ModSecurity audit log on target website
- Run traffic to the site, including break-in attempts, normal usage, etc.
- turn off audit log

Update rules on the target website
Test client will parse audit log and replay the web events to the target website.

Review logs, rinse, repeat...

Have I understood the scheme?

On May 5, 2011, at 11:41 AM, Christian Bockermann wrote:

> Hi Ken,
> 
> your question is hitting the spot. Currently there is no such test engine available.
> I've done some work on that by implementing a TestClient in Java, which basically
> can re-inject all requests from a recorded ModSecurity audit-log.
> 
> I've had plans (and started some of that) to implement an "X"-Section which can be
> used to define "expected behaviour". For example, you could add some tests like:
> 
>     RESPONSE_STATUS @eq 404
>     RESPONSE_BODY "@rx !MySQL Error"
>     ...
> 
> However, since such a test-client can only check for expected results within the
> server response, this is somewhat limitted. An extension might be to connect to the
> AuditConsole and check the resulting "newly created" audit log events for the requests
> that are injected for testing.
> 
> If that sounds interesting to you, just drop me a line. I'd be happy to include such
> a thing in the jwall-tools (open-source).
> 
> Chris
> 
> 
> 
> 
> Am 05.05.2011 um 17:54 schrieb Ken Brucker:
> 
>> Hi - I have some custom rules I'd like to create and I'm looking for a test engine to drive the rules and ensure I'm getting the expected results.  I checked the FAQ and found this question that directly relates:
>> 
>> How do I handle False Positives and creating Custom Rules?
>> 
>> It is inevitable; you will run into some False Positive hits when using web application firewalls. This is not something that is unique to ModSecurity. All web application firewalls will generate false positives from time to time. The following Blog post information will help to guide you through the process of identifying, fixing, implementing and testing new custom rules to address false positives.
>> 
>> But...  the last sentence states "The following blog post information ..."  and there is no blog post information following.  Where do I find the referenced material?
>> 
>> Does a test engine exist outside Apache to feed data through the rules to enable easy regression testing in addition to focused testing of new rules?
>> 
>> Regards,
>> Ken
>> _______________________________________________
>> Owasp-modsecurity-core-rule-set mailing list
>> Owasp-modsecurity-core-rule-set at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
> 


From Ken at pumastudios.com  Thu May  5 13:35:31 2011
From: Ken at pumastudios.com (Ken Brucker)
Date: Thu, 5 May 2011 12:35:31 -0500
Subject: [Owasp-modsecurity-core-rule-set] Testing Custom Rules
In-Reply-To: <F53DC525-2CCF-48C7-BC2D-2F38DC64FECF@trustwave.com>
References: <78906653-FB08-48F6-9319-341245EE04B5@pumastudios.com>
	<F53DC525-2CCF-48C7-BC2D-2F38DC64FECF@trustwave.com>
Message-ID: <4E4261B7-A0D0-4EEB-B572-D9FE63B11783@pumastudios.com>

I figured you must have something!  This is way to hard to maintain with manual testing.  :)

Looking forward to having a look.

On May 5, 2011, at 11:45 AM, Ryan Barnett wrote:

> Ken,
> This is a good point. We have an internal rules test suite for the CRS. I will work on updating it for the most recent rules and then releasing it in the CRS util directory.
> 
> I will send more info soon.
> 
> Ryan
> 
> On May 5, 2011, at 11:54 AM, "Ken Brucker" <Ken at pumastudios.com<mailto:Ken at pumastudios.com>> wrote:
> 
> Hi - I have some custom rules I'd like to create and I'm looking for a test engine to drive the rules and ensure I'm getting the expected results.  I checked the FAQ and found this question that directly relates:
> 
> How do I handle False Positives and creating Custom Rules?
> 
> It is inevitable; you will run into some False Positive hits when using web application firewalls. This is not something that is unique to ModSecurity. All web application firewalls will generate false positives from time to time. The following Blog post information will help to guide you through the process of identifying, fixing, implementing and testing new custom rules to address false positives.
> 
> But...  the last sentence states "The following blog post information ..."  and there is no blog post information following.  Where do I find the referenced material?
> 
> Does a test engine exist outside Apache to feed data through the rules to enable easy regression testing in addition to focused testing of new rules?
> 
> Regards,
> Ken
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org>
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
> 
> ________________________________
> This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is STRICTLY PROHIBITED. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.


From chris at jwall.org  Thu May  5 14:04:50 2011
From: chris at jwall.org (Christian Bockermann)
Date: Thu, 5 May 2011 20:04:50 +0200
Subject: [Owasp-modsecurity-core-rule-set] Testing Custom Rules
In-Reply-To: <04848BF3-D915-465C-9423-D413EAF33D8E@pumastudios.com>
References: <78906653-FB08-48F6-9319-341245EE04B5@pumastudios.com>
	<929CE6E6-00AE-40F7-A6B6-7C21C7CB3CE5@jwall.org>
	<04848BF3-D915-465C-9423-D413EAF33D8E@pumastudios.com>
Message-ID: <E8847E6A-E081-46F6-A7A2-DCD15010A16E@jwall.org>


Am 05.05.2011 um 19:33 schrieb Ken Brucker:

> If I'm understanding this tool the method of use is:
> 
> - turn on ModSecurity audit log on target website
> - Run traffic to the site, including break-in attempts, normal usage, etc.
> - turn off audit log
> 
> Update rules on the target website
> Test client will parse audit log and replay the web events to the target website.
> 
> Review logs, rinse, repeat...
> 
> Have I understood the scheme?


Basically, yes.
The workflow I had in mind was like this:

  * Use the AuditConsole to receive ModSecurity events from the target website

  * Define specific test-Tags and associate a set of tests with each tag, for example

       tag: 'test-ruleId-123'     =>   RULE_IDS @contains 123
       tag: 'test-forbidden-403'  =>  RESPONSE_STATUS @eq 403 

  * Now, tag the events you want to use for testing, i.e. by tagging an event
    with "test-forbidden-403", which means: In my regression-tests, make sure that
    request will be tested against "RESPONSE_STATUS @eq 403"

  * Download all events tagged as 'test*' from the AuditConsole, which will basically
    create a serial-audit-log file with the tests attached to each event.
    This can then be re-injected into any ModSecurity-enabled Apache server. Ideally,
    this will be done on a special test-system.
    Thus, you can easily flag events as "test-false-positive" and associate:

        tag: 'test-false-positive'  =>  RESPONSE_STATUS @rx (20|30).


  * Run the TestClient, which reads the serial audit-log, send these to the Apache server
    (test-server) and assures, whether the events have been blocked by the Apache/ModSec
    as expected.    


I did some stuff like that for testing different rule sets some time ago (Before I
started implementing the AuditConsole):

	https://secure.jwall.org/articles/eval_rules.jsp


Regards,
    Chris



> 
> On May 5, 2011, at 11:41 AM, Christian Bockermann wrote:
> 
>> Hi Ken,
>> 
>> your question is hitting the spot. Currently there is no such test engine available.
>> I've done some work on that by implementing a TestClient in Java, which basically
>> can re-inject all requests from a recorded ModSecurity audit-log.
>> 
>> I've had plans (and started some of that) to implement an "X"-Section which can be
>> used to define "expected behaviour". For example, you could add some tests like:
>> 
>>    RESPONSE_STATUS @eq 404
>>    RESPONSE_BODY "@rx !MySQL Error"
>>    ...
>> 
>> However, since such a test-client can only check for expected results within the
>> server response, this is somewhat limitted. An extension might be to connect to the
>> AuditConsole and check the resulting "newly created" audit log events for the requests
>> that are injected for testing.
>> 
>> If that sounds interesting to you, just drop me a line. I'd be happy to include such
>> a thing in the jwall-tools (open-source).
>> 
>> Chris
>> 
>> 
>> 
>> 
>> Am 05.05.2011 um 17:54 schrieb Ken Brucker:
>> 
>>> Hi - I have some custom rules I'd like to create and I'm looking for a test engine to drive the rules and ensure I'm getting the expected results.  I checked the FAQ and found this question that directly relates:
>>> 
>>> How do I handle False Positives and creating Custom Rules?
>>> 
>>> It is inevitable; you will run into some False Positive hits when using web application firewalls. This is not something that is unique to ModSecurity. All web application firewalls will generate false positives from time to time. The following Blog post information will help to guide you through the process of identifying, fixing, implementing and testing new custom rules to address false positives.
>>> 
>>> But...  the last sentence states "The following blog post information ..."  and there is no blog post information following.  Where do I find the referenced material?
>>> 
>>> Does a test engine exist outside Apache to feed data through the rules to enable easy regression testing in addition to focused testing of new rules?
>>> 
>>> Regards,
>>> Ken
>>> _______________________________________________
>>> Owasp-modsecurity-core-rule-set mailing list
>>> Owasp-modsecurity-core-rule-set at lists.owasp.org
>>> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
>> 
> 


From RBarnett at trustwave.com  Thu May  5 14:14:00 2011
From: RBarnett at trustwave.com (Ryan Barnett)
Date: Thu, 5 May 2011 13:14:00 -0500
Subject: [Owasp-modsecurity-core-rule-set] how to get the description of
 each rule..
In-Reply-To: <C9E817D7.2576E%rbarnett@trustwave.com>
Message-ID: <C9E85FEE.258A6%rbarnett@trustwave.com>

On a somewhat related note - some of you may have seen this email today -
https://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/2011-May/
000760.html


I have started some work on updating the CRS rules regression testing
suite scripts.  As part of the testing suite, you have to create actual
template HTTP requests that the script uses to craft actual requests that
it will send to a ModSec install.  As part of this process, we will need
to go through each and every rule and develop an actual testing case for
it.  This will actually help with regards to the Rule ID documentation
pages
(https://www.owasp.org/index.php/ModSecurity_CRS_Rule_Description_Template)
 as we will be able to then provide the "Example Payload" and "Example
Audit Log Entry" data taken from the regression tests.

I will send a note to the mail-list when I have released the rules
regression testing suite.  My plan is to get this out sooner rather than
later.  It may not be totally updated with tests for all CRS rules, but I
want to get the framework out for testing by the community and hopefully
some people will help to actually create some tests :)

-=Ryan



On 5/5/11 9:05 AM, "Ryan Barnett" <RBarnett at trustwave.com> wrote:

>Yep - I was hoping that some folks from the community would help with the
>documentation but that hasn't materialized...  If anyone wants to help
>with Documentation please ping me so we can coordinate.
>
>Besides the OWASP Rule Document pages, I did start updating the comments
>preceding each rule in the rules files.  I only finished two files so far
>-
>
>modsecurity_crs_20_protocol_violations.conf
>modsecurity_crs_21_protocol_anomalies.conf
>
>Each rule has Rules Logic and Reference sections to help provide
>information as to the rule's purpose.
>
>#
># -=[ Rule Logic ]=-
># Uses rule negation against the regex for positive security.  The regex
>specifies the proper
># construction of URI request lines such as:
>#
>#       "http:" "//" host [ ":" port ] [ abs_path [ "?" query ]]
>#
># It also outlines proper construction for CONNECT, OPTIONS and GET
>requests.
>#
># -=[ References ]=-
># http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.2.1
>#
>SecRule REQUEST_LINE
>"!^(?:(?:[a-z]{3,10}\s+(?:\w{3,7}?://[\w\-\./]*(?::\d+)?)?/[^?#]*(?:\?[^#\
>s
>]*)?(?:#[\S]*)?|connect (?:\d{1,3}\.){3}\d{1,3}\.?(?::\d+)?|options
>\*)\s+[\w\./]+|get /[^?#]*(?:\?[^#\s]*)?(?:#[\S]*)?)$" \
>    "t:none,t:lowercase,phase:1,rev:'2.1.3',block,msg:'Invalid HTTP
>Request
>Line',id:'960911',severity:'4',tag:'http://www.w3.org/Protocols/rfc2616/rf
>c
>2616-sec3.html#sec3.2.1',setvar:'tx.msg=%{rule.msg}',setvar:tx.anomaly_sco
>r
>e=+%{tx.notice_anomaly_score},setvar:tx.protocol_violation_score=+%{tx.not
>i
>ce_anomaly_score},setvar:'tx.%{rule.id}-PROTOCOL_VIOLATION/INVALID_REQ-%{m
>a
>tched_var_name}=%{matched_var}'"
>
>Again - if anyone wants to help with documentation improvements, we are
>certainly looking for help.
>
>
>-Ryan
>
>
>
>
>
>On 5/5/11 4:57 AM, "Josh Amishav-Zlatin" <jamuse at gmail.com> wrote:
>
>>2011/5/5 ???(?? ??) <zhangzhangbin at ruijie.com.cn>:
>>> Hello!
>>>
>>>
>>>
>>>     Many rule in the core-rule-set are complicated and I can?t
>>>understant
>>> it.
>>>
>>> Does anyone know where to find the description of each rule?
>>
>>There was a push to start documenting the CRS rules a while back,
>>though it doesn't look like that much was completed:
>>
>>https://www.owasp.org/index.php/Category:OWASP_ModSecurity_Core_Rule_Set_
>>P
>>roject#tab=Documentation
>>
>>To get a good understand of the ModSecurity rules language, I highly
>>recommend getting a copy the ModSecurity Handbook.
>>
>>--
>> - Josh
>>_______________________________________________
>>Owasp-modsecurity-core-rule-set mailing list
>>Owasp-modsecurity-core-rule-set at lists.owasp.org
>>https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
>


This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is STRICTLY PROHIBITED. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

From hendrikdm at gmail.com  Fri May  6 09:29:53 2011
From: hendrikdm at gmail.com (hendrikdm at gmail.com)
Date: Fri, 06 May 2011 13:29:53 +0000
Subject: [Owasp-modsecurity-core-rule-set] Joomla jforms issue
Message-ID: <00163646bc7027269e04a29b7c3e@google.com>

Good day,

I have a problem with a site that is currently running joomla 1.6.0, when  
working in the admin panel.

The site gives false positives on the below rule in:  
modsecurity_crs_41_phpids_filters.conf

SecRule ARGS|ARGS_NAMES|XML:/* "(?:=\s*\w+\s*\+\s*\")|(?:\+=\s*\(\s\")| 
(?:!+\s*[\d.,]+\w?\d*\s*\?)|(?:=\s*\[s*\])|(?:\"\s*\+\s*\")| 
(?:[^\s]\[\s*\d+\s*\]\s*[;+])|(?:\"\s*[&|]+\s*\")|(?:\/\s*\?\s*\")|(?:\
/\s*\)\s*\[)|(?:\d\?.+:\d)|(?:]\s*\[\W*\w)| 
(?:[^\s]\s*=\s*\/)" "phase:2,capture,t:none,t:cssDecode,t:jsDecode,t:htmlEntityDecode,t:replaceComments,t:compressWhiteSpace,t:lowercase,ctl:auditLogParts=+E,b
lock,nolog,auditlog,msg:'Detects common XSS concatenation patterns  
1/2',id:'900030',tag:'WEB_ATTACK/XSS',tag:'WEB_ATTACK/CSRF',tag:'WEB_ATTACK/ID',tag:'WEB_ATTACK/RFE',logdata:'%{TX.0}',severity:'2',set
var:'tx.msg=%{rule.id}-%{rule.msg}',setvar:tx.anomaly_score=+4,setvar:tx.%{tx.msg}-WEB_ATTACK/INJECTION-%{matched_var_name}=%{tx.0}"

The reason for the matching seems to be the posting of the data once the  
particular article has been updated, some snippets of the audit log for  
this site:

Message: Pattern match "(?:=\s*\w+\s*\+\s*")|(?:\+=\s*\(\s")| 
(?:!+\s*[\d.,]+\w?\d*\s*\?)|(?:=\s*\[s*\])|(?:"\s*\+\s*")| 
(?:[^\s]\[\s*\d+\s*\]\s*[;+])|(?:"\s*[&|]+\s*")|(?:\/\s*\?\s*")| 
(?:\/\s*\)\s*\[)|(?:\d\?.+:\d)|(?:]\s*\[\W*\w)|(?:[^\s]\s*=\s*\/)" at  
ARGS_NAMES:jform[rules][core.edit][6].  
[file "/usr/local/etc/apache22/Includes/mod_security2/base_rules/modsecurity_crs_41_phpids_filters.conf"]  
[line "205"] [id "900030"] [msg "Detects common XSS concatenation patterns  
1/2"] [data "][c"] [severity "CRITICAL"] [tag "WEB_ATTACK/XSS"]  
[tag "WEB_ATTACK/CSRF"] [tag "WEB_ATTACK/ID"] [tag "WEB_ATTACK/RFE"]

Message: Pattern match "(?:=\s*\w+\s*\+\s*")|(?:\+=\s*\(\s")| 
(?:!+\s*[\d.,]+\w?\d*\s*\?)|(?:=\s*\[s*\])|(?:"\s*\+\s*")| 
(?:[^\s]\[\s*\d+\s*\]\s*[;+])|(?:"\s*[&|]+\s*")|(?:\/\s*\?\s*")| 
(?:\/\s*\)\s*\[)|(?:\d\?.+:\d)|(?:]\s*\[\W*\w)|(?:[^\s]\s*=\s*\/)" at  
ARGS_NAMES:jform[rules][core.edit.state][6].  
[file "/usr/local/etc/apache22/Includes/mod_security2/base_rules/modsecurity_crs_41_phpids_filters.conf"]  
[line "205"] [id "900030"] [msg "Detects common XSS concatenation patterns  
1/2"] [data "][c"] [severity "CRITICAL"] [tag "WEB_ATTACK/XSS"]  
[tag "WEB_ATTACK/CSRF"] [tag "WEB_ATTACK/ID"] [tag "WEB_ATTACK/RFE"]

Message: Pattern match "(?:=\s*\w+\s*\+\s*")|(?:\+=\s*\(\s")| 
(?:!+\s*[\d.,]+\w?\d*\s*\?)|(?:=\s*\[s*\])|(?:"\s*\+\s*")| 
(?:[^\s]\[\s*\d+\s*\]\s*[;+])|(?:"\s*[&|]+\s*")|(?:\/\s*\?\s*")| 
(?:\/\s*\)\s*\[)|(?:\d\?.+:\d)|(?:]\s*\[\W*\w)|(?:[^\s]\s*=\s*\/)" at  
ARGS_NAMES:jform[rules][core.delete][7].  
[file "/usr/local/etc/apache22/Includes/mod_security2/base_rules/modsecurity_crs_41_phpids_filters.conf"]  
[line "205"] [id "900030"] [msg "Detects common XSS concatenation patterns  
1/2"] [data "][c"] [severity "CRITICAL"] [tag "WEB_ATTACK/XSS"]  
[tag "WEB_ATTACK/CSRF"] [tag "WEB_ATTACK/ID"] [tag "WEB_ATTACK/RFE"]

Message: Pattern match "(?:=\s*\w+\s*\+\s*")|(?:\+=\s*\(\s")| 
(?:!+\s*[\d.,]+\w?\d*\s*\?)|(?:=\s*\[s*\])|(?:"\s*\+\s*")| 
(?:[^\s]\[\s*\d+\s*\]\s*[;+])|(?:"\s*[&|]+\s*")|(?:\/\s*\?\s*")| 
(?:\/\s*\)\s*\[)|(?:\d\?.+:\d)|(?:]\s*\[\W*\w)|(?:[^\s]\s*=\s*\/)" at  
ARGS_NAMES:jform[rules][core.edit][7].  
[file "/usr/local/etc/apache22/Includes/mod_security2/base_rules/modsecurity_crs_41_phpids_filters.conf"]  
[line "205"] [id "900030"] [msg "Detects common XSS concatenation patterns  
1/2"] [data "][c"] [severity "CRITICAL"] [tag "WEB_ATTACK/XSS"]  
[tag "WEB_ATTACK/CSRF"] [tag "WEB_ATTACK/ID"] [tag "WEB_ATTACK/RFE"]

Message: Pattern match "(?:=\s*\w+\s*\+\s*")|(?:\+=\s*\(\s")| 
(?:!+\s*[\d.,]+\w?\d*\s*\?)|(?:=\s*\[s*\])|(?:"\s*\+\s*")| 
(?:[^\s]\[\s*\d+\s*\]\s*[;+])|(?:"\s*[&|]+\s*")|(?:\/\s*\?\s*")| 
(?:\/\s*\)\s*\[)|(?:\d\?.+:\d)|(?:]\s*\[\W*\w)|(?:[^\s]\s*=\s*\/)" at  
ARGS_NAMES:jform[rules][core.edit.state][7].  
[file "/usr/local/etc/apache22/Includes/mod_security2/base_rules/modsecurity_crs_41_phpids_filters.conf"]  
[line "205"] [id "900030"] [msg "Detects common XSS concatenation patterns  
1/2"] [data "][c"] [severity "CRITICAL"] [tag "WEB_ATTACK/XSS"]  
[tag "WEB_ATTACK/CSRF"] [tag "WEB_ATTACK/ID"] [tag "WEB_ATTACK/RFE"]

Message: Pattern match "(?:=\s*\w+\s*\+\s*")|(?:\+=\s*\(\s")| 
(?:!+\s*[\d.,]+\w?\d*\s*\?)|(?:=\s*\[s*\])|(?:"\s*\+\s*")| 
(?:[^\s]\[\s*\d+\s*\]\s*[;+])|(?:"\s*[&|]+\s*")|(?:\/\s*\?\s*")| 
(?:\/\s*\)\s*\[)|(?:\d\?.+:\d)|(?:]\s*\[\W*\w)|(?:[^\s]\s*=\s*\/)" at  
ARGS_NAMES:jform[rules][core.delete][2].  
[file "/usr/local/etc/apache22/Includes/mod_security2/base_rules/modsecurity_crs_41_phpids_filters.conf"]  
[line "205"] [id "900030"] [msg "Detects common XSS concatenation patterns  
1/2"] [data "][c"] [severity "CRITICAL"] [tag "WEB_ATTACK/XSS"]  
[tag "WEB_ATTACK/CSRF"] [tag "WEB_ATTACK/ID"] [tag "WEB_ATTACK/RFE"]

Seeing that the rule set the variable I wanted to matched based on that  
variable:
[06/May/2011:14:18:50 +0200]  
[/sid#809b82900][rid#81de4e0a8][/administrator/index.php][9] Set  
variable "tx.900030-Detects common XSS concatenation patterns  
1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[attribs][show_icons]" to "][s".

I used a combination of resources from the below sites to create the  
correct rule structure:
https://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/2010-January/000257.html
http://www.modsecurity.org/blog/archives/2007/12/using_transacti.html

The file that I used for my rule is:
modsecurity_crs_48_local_exceptions.conf

The rules are as follows.

1) SecRule TX:"/tx.900030-Detects\s(.*)-ARGS_NAMES:jform/" "@contains  
][" "chain,phase:2,t:none,ctl:auditLogParts=+E,block,nolog,auditlog,msg:'Fix  
false positive',pass"
SecRule  
MATCHED_VAR_NAME "TX\:(.*)" "capture,t:none,setvar:!tx.%{tx.1},setvar:tx.anomaly_score=-4"

2) SecRule TX:"/tx.900030-Detects\s(.*)-ARGS_NAMES:jform/" "@contains  
][" "capture,t:none,setvar:!tx.%{tx.1},setvar:tx.anomaly_score=-4"

3) SecRule TX:'/tx.900030-Detects(.*)-ARGS_NAMES:jform/' "@contains  
][" "capture,t:none,setvar:!tx.%{tx.1},setvar:tx.anomaly_score=-4" ####  
This rule did not want to work with the single quotes.

 From what I have tested so far, the regex should works for all variants of  
the variables set, however the anomaly score does not decrease, and from  
what I could see in both the audit and debug logs it does not look like it  
follows the logic as I understand it, so either the regex is incorrect or I  
am placing it in the incorrect file, but then why would it then work when I  
remove the rule in the same file using SecRuleRemoveById.

Some of the variants, there are currently 55.
tx.900030-Detects common XSS concatenation patterns  
1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[attribs][show_item_navigation]
tx.900030-Detects common XSS concatenation patterns  
1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[attribs][show_icons]
tx.900030-Detects common XSS concatenation patterns  
1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[attribs][show_print_icon]
tx.900030-Detects common XSS concatenation patterns  
1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[attribs][show_email_icon]
tx.900030-Detects common XSS concatenation patterns  
1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[attribs][show_vote]
tx.900030-Detects common XSS concatenation patterns  
1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[attribs][show_hits]
tx.900030-Detects common XSS concatenation patterns  
1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[attribs][show_noauth]
tx.900030-Detects common XSS concatenation patterns  
1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[attribs][alternative_readmore]
tx.900030-Detects common XSS concatenation patterns  
1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[attribs][article_layout]
tx.900030-Detects common XSS concatenation patterns  
1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[metadata][robots]
tx.900030-Detects common XSS concatenation patterns  
1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[metadata][author]
tx.900030-Detects common XSS concatenation patterns  
1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[metadata][rights]
tx.900030-Detects common XSS concatenation patterns  
1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[metadata][xreference]
tx.900030-Detects common XSS concatenation patterns  
1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[rules][core.delete][1]
tx.900030-Detects common XSS concatenation patterns  
1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[rules][core.edit][1]
tx.900030-Detects common XSS concatenation patterns  
1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[rules][core.edit.state][1]
tx.900030-Detects common XSS concatenation patterns  
1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[rules][core.delete][6]
tx.900030-Detects common XSS concatenation patterns  
1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[rules][core.edit][6]
tx.900030-Detects common XSS concatenation patterns  
1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[rules][core.edit.state][6]
tx.900030-Detects common XSS concatenation patterns  
1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[rules][core.delete][7]
tx.900030-Detects common XSS concatenation patterns  
1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[rules][core.edit][7]
tx.900030-Detects common XSS concatenation patterns  
1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[rules][core.edit.state][7]
tx.900030-Detects common XSS concatenation patterns  
1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[rules][core.delete][2]
tx.900030-Detects common XSS concatenation patterns  
1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[rules][core.edit][2]
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20110506/9cf233c9/attachment-0001.html 

From RBarnett at trustwave.com  Fri May  6 09:38:54 2011
From: RBarnett at trustwave.com (Ryan Barnett)
Date: Fri, 6 May 2011 08:38:54 -0500
Subject: [Owasp-modsecurity-core-rule-set] Joomla jforms issue
In-Reply-To: <00163646bc7027269e04a29b7c3e@google.com>
Message-ID: <C9E9718D.259FE%rbarnett@trustwave.com>

What does the debug log show when you run these checks?

Try this -

SecRule "TX:'/tx.900030-Detects\s(.*)-ARGS_NAMES:jform/'" "@contains ][" "chain,phase:2,t:none,nolog,pass"
SecRule MATCHED_VAR_NAME "TX\:(.*)" "capture,t:none,setvar:!tx.%{tx.1},setvar:tx.anomaly_score=-4"

-Ryan

From: "hendrikdm at gmail.com<mailto:hendrikdm at gmail.com>" <hendrikdm at gmail.com<mailto:hendrikdm at gmail.com>>
Date: Fri, 6 May 2011 08:29:53 -0500
To: "owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>" <owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>
Subject: [Owasp-modsecurity-core-rule-set] Joomla jforms issue

Good day,

I have a problem with a site that is currently running joomla 1.6.0, when working in the admin panel.

The site gives false positives on the below rule in: modsecurity_crs_41_phpids_filters.conf

SecRule ARGS|ARGS_NAMES|XML:/* "(?:=\s*\w+\s*\+\s*\")|(?:\+=\s*\(\s\")|(?:!+\s*[\d.,]+\w?\d*\s*\?)|(?:=\s*\[s*\])|(?:\"\s*\+\s*\")|(?:[^\s]\[\s*\d+\s*\]\s*[;+])|(?:\"\s*[&|]+\s*\")|(?:\/\s*\?\s*\")|(?:\
/\s*\)\s*\[)|(?:\d\?.+:\d)|(?:]\s*\[\W*\w)|(?:[^\s]\s*=\s*\/)" "phase:2,capture,t:none,t:cssDecode,t:jsDecode,t:htmlEntityDecode,t:replaceComments,t:compressWhiteSpace,t:lowercase,ctl:auditLogParts=+E,b
lock,nolog,auditlog,msg:'Detects common XSS concatenation patterns 1/2',id:'900030',tag:'WEB_ATTACK/XSS',tag:'WEB_ATTACK/CSRF',tag:'WEB_ATTACK/ID',tag:'WEB_ATTACK/RFE',logdata:'%{TX.0}',severity:'2',set
var:'tx.msg=%{rule.id}-%{rule.msg}',setvar:tx.anomaly_score=+4,setvar:tx.%{tx.msg}-WEB_ATTACK/INJECTION-%{matched_var_name}=%{tx.0}"

The reason for the matching seems to be the posting of the data once the particular article has been updated, some snippets of the audit log for this site:

Message: Pattern match "(?:=\s*\w+\s*\+\s*")|(?:\+=\s*\(\s")|(?:!+\s*[\d.,]+\w?\d*\s*\?)|(?:=\s*\[s*\])|(?:"\s*\+\s*")|(?:[^\s]\[\s*\d+\s*\]\s*[;+])|(?:"\s*[&|]+\s*")|(?:\/\s*\?\s*")|(?:\/\s*\)\s*\[)|(?:\d\?.+:\d)|(?:]\s*\[\W*\w)|(?:[^\s]\s*=\s*\/)" at ARGS_NAMES:jform[rules][core.edit][6]. [file "/usr/local/etc/apache22/Includes/mod_security2/base_rules/modsecurity_crs_41_phpids_filters.conf"] [line "205"] [id "900030"] [msg "Detects common XSS concatenation patterns 1/2"] [data "][c"] [severity "CRITICAL"] [tag "WEB_ATTACK/XSS"] [tag "WEB_ATTACK/CSRF"] [tag "WEB_ATTACK/ID"] [tag "WEB_ATTACK/RFE"]

Message: Pattern match "(?:=\s*\w+\s*\+\s*")|(?:\+=\s*\(\s")|(?:!+\s*[\d.,]+\w?\d*\s*\?)|(?:=\s*\[s*\])|(?:"\s*\+\s*")|(?:[^\s]\[\s*\d+\s*\]\s*[;+])|(?:"\s*[&|]+\s*")|(?:\/\s*\?\s*")|(?:\/\s*\)\s*\[)|(?:\d\?.+:\d)|(?:]\s*\[\W*\w)|(?:[^\s]\s*=\s*\/)" at ARGS_NAMES:jform[rules][core.edit.state][6]. [file "/usr/local/etc/apache22/Includes/mod_security2/base_rules/modsecurity_crs_41_phpids_filters.conf"] [line "205"] [id "900030"] [msg "Detects common XSS concatenation patterns 1/2"] [data "][c"] [severity "CRITICAL"] [tag "WEB_ATTACK/XSS"] [tag "WEB_ATTACK/CSRF"] [tag "WEB_ATTACK/ID"] [tag "WEB_ATTACK/RFE"]

Message: Pattern match "(?:=\s*\w+\s*\+\s*")|(?:\+=\s*\(\s")|(?:!+\s*[\d.,]+\w?\d*\s*\?)|(?:=\s*\[s*\])|(?:"\s*\+\s*")|(?:[^\s]\[\s*\d+\s*\]\s*[;+])|(?:"\s*[&|]+\s*")|(?:\/\s*\?\s*")|(?:\/\s*\)\s*\[)|(?:\d\?.+:\d)|(?:]\s*\[\W*\w)|(?:[^\s]\s*=\s*\/)" at ARGS_NAMES:jform[rules][core.delete][7]. [file "/usr/local/etc/apache22/Includes/mod_security2/base_rules/modsecurity_crs_41_phpids_filters.conf"] [line "205"] [id "900030"] [msg "Detects common XSS concatenation patterns 1/2"] [data "][c"] [severity "CRITICAL"] [tag "WEB_ATTACK/XSS"] [tag "WEB_ATTACK/CSRF"] [tag "WEB_ATTACK/ID"] [tag "WEB_ATTACK/RFE"]

Message: Pattern match "(?:=\s*\w+\s*\+\s*")|(?:\+=\s*\(\s")|(?:!+\s*[\d.,]+\w?\d*\s*\?)|(?:=\s*\[s*\])|(?:"\s*\+\s*")|(?:[^\s]\[\s*\d+\s*\]\s*[;+])|(?:"\s*[&|]+\s*")|(?:\/\s*\?\s*")|(?:\/\s*\)\s*\[)|(?:\d\?.+:\d)|(?:]\s*\[\W*\w)|(?:[^\s]\s*=\s*\/)" at ARGS_NAMES:jform[rules][core.edit][7]. [file "/usr/local/etc/apache22/Includes/mod_security2/base_rules/modsecurity_crs_41_phpids_filters.conf"] [line "205"] [id "900030"] [msg "Detects common XSS concatenation patterns 1/2"] [data "][c"] [severity "CRITICAL"] [tag "WEB_ATTACK/XSS"] [tag "WEB_ATTACK/CSRF"] [tag "WEB_ATTACK/ID"] [tag "WEB_ATTACK/RFE"]

Message: Pattern match "(?:=\s*\w+\s*\+\s*")|(?:\+=\s*\(\s")|(?:!+\s*[\d.,]+\w?\d*\s*\?)|(?:=\s*\[s*\])|(?:"\s*\+\s*")|(?:[^\s]\[\s*\d+\s*\]\s*[;+])|(?:"\s*[&|]+\s*")|(?:\/\s*\?\s*")|(?:\/\s*\)\s*\[)|(?:\d\?.+:\d)|(?:]\s*\[\W*\w)|(?:[^\s]\s*=\s*\/)" at ARGS_NAMES:jform[rules][core.edit.state][7]. [file "/usr/local/etc/apache22/Includes/mod_security2/base_rules/modsecurity_crs_41_phpids_filters.conf"] [line "205"] [id "900030"] [msg "Detects common XSS concatenation patterns 1/2"] [data "][c"] [severity "CRITICAL"] [tag "WEB_ATTACK/XSS"] [tag "WEB_ATTACK/CSRF"] [tag "WEB_ATTACK/ID"] [tag "WEB_ATTACK/RFE"]

Message: Pattern match "(?:=\s*\w+\s*\+\s*")|(?:\+=\s*\(\s")|(?:!+\s*[\d.,]+\w?\d*\s*\?)|(?:=\s*\[s*\])|(?:"\s*\+\s*")|(?:[^\s]\[\s*\d+\s*\]\s*[;+])|(?:"\s*[&|]+\s*")|(?:\/\s*\?\s*")|(?:\/\s*\)\s*\[)|(?:\d\?.+:\d)|(?:]\s*\[\W*\w)|(?:[^\s]\s*=\s*\/)" at ARGS_NAMES:jform[rules][core.delete][2]. [file "/usr/local/etc/apache22/Includes/mod_security2/base_rules/modsecurity_crs_41_phpids_filters.conf"] [line "205"] [id "900030"] [msg "Detects common XSS concatenation patterns 1/2"] [data "][c"] [severity "CRITICAL"] [tag "WEB_ATTACK/XSS"] [tag "WEB_ATTACK/CSRF"] [tag "WEB_ATTACK/ID"] [tag "WEB_ATTACK/RFE"]

Seeing that the rule set the variable I wanted to matched based on that variable:
[06/May/2011:14:18:50 +0200] [/sid#809b82900][rid#81de4e0a8][/administrator/index.php][9] Set variable "tx.900030-Detects common XSS concatenation patterns 1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[attribs][show_icons]" to "][s".

I used a combination of resources from the below sites to create the correct rule structure:
https://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/2010-January/000257.html
http://www.modsecurity.org/blog/archives/2007/12/using_transacti.html

The file that I used for my rule is:
modsecurity_crs_48_local_exceptions.conf

The rules are as follows.

1) SecRule TX:"/tx.900030-Detects\s(.*)-ARGS_NAMES:jform/" "@contains ][" "chain,phase:2,t:none,ctl:auditLogParts=+E,block,nolog,auditlog,msg:'Fix false positive',pass"
SecRule MATCHED_VAR_NAME "TX\:(.*)" "capture,t:none,setvar:!tx.%{tx.1},setvar:tx.anomaly_score=-4"

2) SecRule TX:"/tx.900030-Detects\s(.*)-ARGS_NAMES:jform/" "@contains ][" "capture,t:none,setvar:!tx.%{tx.1},setvar:tx.anomaly_score=-4"

3) SecRule TX:'/tx.900030-Detects(.*)-ARGS_NAMES:jform/' "@contains ][" "capture,t:none,setvar:!tx.%{tx.1},setvar:tx.anomaly_score=-4" #### This rule did not want to work with the single quotes.

>From what I have tested so far, the regex should works for all variants of the variables set, however the anomaly score does not decrease, and from what I could see in both the audit and debug logs it does not look like it follows the logic as I understand it, so either the regex is incorrect or I am placing it in the incorrect file, but then why would it then work when I remove the rule in the same file using SecRuleRemoveById.

Some of the variants, there are currently 55.
tx.900030-Detects common XSS concatenation patterns 1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[attribs][show_item_navigation]
tx.900030-Detects common XSS concatenation patterns 1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[attribs][show_icons]
tx.900030-Detects common XSS concatenation patterns 1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[attribs][show_print_icon]
tx.900030-Detects common XSS concatenation patterns 1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[attribs][show_email_icon]
tx.900030-Detects common XSS concatenation patterns 1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[attribs][show_vote]
tx.900030-Detects common XSS concatenation patterns 1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[attribs][show_hits]
tx.900030-Detects common XSS concatenation patterns 1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[attribs][show_noauth]
tx.900030-Detects common XSS concatenation patterns 1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[attribs][alternative_readmore]
tx.900030-Detects common XSS concatenation patterns 1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[attribs][article_layout]
tx.900030-Detects common XSS concatenation patterns 1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[metadata][robots]
tx.900030-Detects common XSS concatenation patterns 1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[metadata][author]
tx.900030-Detects common XSS concatenation patterns 1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[metadata][rights]
tx.900030-Detects common XSS concatenation patterns 1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[metadata][xreference]
tx.900030-Detects common XSS concatenation patterns 1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[rules][core.delete][1]
tx.900030-Detects common XSS concatenation patterns 1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[rules][core.edit][1]
tx.900030-Detects common XSS concatenation patterns 1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[rules][core.edit.state][1]
tx.900030-Detects common XSS concatenation patterns 1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[rules][core.delete][6]
tx.900030-Detects common XSS concatenation patterns 1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[rules][core.edit][6]
tx.900030-Detects common XSS concatenation patterns 1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[rules][core.edit.state][6]
tx.900030-Detects common XSS concatenation patterns 1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[rules][core.delete][7]
tx.900030-Detects common XSS concatenation patterns 1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[rules][core.edit][7]
tx.900030-Detects common XSS concatenation patterns 1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[rules][core.edit.state][7]
tx.900030-Detects common XSS concatenation patterns 1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[rules][core.delete][2]
tx.900030-Detects common XSS concatenation patterns 1/2-WEB_ATTACK/INJECTION-ARGS_NAMES:jform[rules][core.edit][2]

________________________________
This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is STRICTLY PROHIBITED. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.


From RBarnett at trustwave.com  Fri May  6 10:54:43 2011
From: RBarnett at trustwave.com (Ryan Barnett)
Date: Fri, 6 May 2011 09:54:43 -0500
Subject: [Owasp-modsecurity-core-rule-set] Rule Updates Are Coming!
Message-ID: <C9E983F3.25A86%rbarnett@trustwave.com>

Greetings everyone,
I am sending this note to let you know that SpiderLabs is working on a number of rule updates for the upcoming release of CRS v2.2.0.  Some of the big items are:

Rule Documentation
We have a template rule description page here - https://www.owasp.org/index.php/ModSecurity_CRS_Rule_Description_Template.  We will continue work on new description pages for each rule, however, we need community help with this effort.  Specifically, we have sections for documenting False Positives/False Negatives for each rule.  If you are having any issues with CRS rules, please sign-up for the FP Reporting mail-list - https://lists.sourceforge.net/lists/listinfo/mod-security-report-false-positives and send a note with the FP details.

If you want to create a rule documentation page on the OWASP wiki site, simply copy the wiki html from the Description Template link above and then type in your browser the path to the new page like this - http://www.owasp.org/index.php?title=ModSecurity_CRS_RuleID-XXXXX where XXXXX is the Rule ID you are creating the page for.  If that page doesn't exist yet, the OWASP wiki page will allow you to EDIT and create it.  Then simply paste in the html from the Documentation Template page you fill in the data.  Here is an example page - https://www.owasp.org/index.php/ModSecurity_CRS_RuleID-960911

Rule Tag Updates
I have started to add in new rule tag actions which will help users to identify the current accuracy level of each rule.  The purpose of this tag is to help the user to decide if this rules has a high FP rate or if it is a strong signature that they can be confident in applying blocking actions.  The new tag has the following format -

tag:'RULE_ACCURACY_LEVEL/N'

Where N is a number between 1-5 with:
1 = Beta/Experimental rule or the rule has a high number of reported false positives (via the mail-list).
5 = Heavily tested rule with no false positives reported (via the mail-list).

Again, we need your help!!!  SpiderLabs will provide the initial rule accuracy level tagging for the rules, however we need the community to report FP issues so that these rule tags may be adjusted.  The advantage of this approach, is that with new ModSecurity v2.6.0, you will be able to systematically remove rules by using data within the TAG action.  So, you could easily choose to only run Level 5 accuracy rules on your site.

Regression Testing Suite
As stated in a separate email thread ? I am currently working on updating our rules regression testing suite and we will be releasing it to the community soon.  The idea is that the testing suite will have example request payloads that can be actively sent to your ModSecurity install so that can verify that the detection engine is working properly.  I will complete the first few testing files and then release it to the public so that we can hopefully get some more help with developing tests.  This will also allow end-users to develop their own tests for their own custom rules.  This will help to verify that your ModSecurity/CRS installs are working correctly which is vitally important especially after any type of upgrade.

Please keep an eye out for email related to these topics.  I will be sending emails ? related to each rule where we can provide a status on the items discussed.

Thanks,
Ryan

________________________________
This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is STRICTLY PROHIBITED. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.


From RBarnett at trustwave.com  Fri May  6 11:13:29 2011
From: RBarnett at trustwave.com (Ryan Barnett)
Date: Fri, 6 May 2011 10:13:29 -0500
Subject: [Owasp-modsecurity-core-rule-set] Rule Review: 960911 - Invalid
	HTTP Request Line
Message-ID: <C9E98859.25AA1%rbarnett@trustwave.com>

If you have any comments related to this rule (improvements, questions, etc?), please reply to this email thread.

For False Positives, please sign up for
https://lists.sourceforge.net/lists/listinfo/mod-security-report-false-positives

Email the FP Report list here:
mod-security-report-false-positives at lists.sourceforge.net<mailto:mod-security-report-false-positives at lists.sourceforge.net>

Rule File:
http://mod-security.svn.sourceforge.net/viewvc/mod-security/crs/trunk/base_rules/modsecurity_crs_20_protocol_violations.conf

Current Rule:
#
# Validate request line against the format specified in the HTTP RFC
#
# -=[ Rule Logic ]=-
#
# Uses rule negation against the regex for positive security.  The regex specifies the proper
# construction of URI request lines such as:
#
#       "http:" "//" host [ ":" port ] [ abs_path [ "?" query ]]
#
# It also outlines proper construction for CONNECT, OPTIONS and GET requests.
#
# -=[ References ]=-
# https://www.owasp.org/index.php/ModSecurity_CRS_RuleID-960911
# http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.2.1
#
SecRule REQUEST_LINE "!^(?:(?:[a-z]{3,10}\s+(?:\w{3,7}?://[\w\-\./]*(?::\d+)?)?/[^?#]*(?:\?[^#\s]*)?(?:#[\S]*)?|connect (?:\d{1,3}\.){3}\d{1,3}\.?(?::\d+)?|options \*)\s+[\w\./]+|get /[^?#]*(?:\?[^#\s]*)?(?:#[\S]*)?)$" \
    "phase:1,t:none,t:lowercase,block,msg:'Invalid HTTP Request Line',id:'960911',severity:'4',rev:'2.2.0',logdata:'%{request_line}',tag:'https://www.owasp.org/index.php/ModSecurity_CRS_RuleID-%{tx.id}',tag:'http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.2.1',tag:'RULE_ACCURACY_LEVEL/5',setvar:'tx.msg=%{rule.msg}',setvar:'tx.id=%{rule.id}',setvar:tx.anomaly_score=+%{tx.notice_anomaly_score},setvar:tx.protocol_violation_score=+%{tx.notice_anomaly_score},setvar:'tx.%{rule.id}-PROTOCOL_VIOLATION/INVALID_REQ-%{matched_var_name}=%{matched_var}'"

Rule Documentation Page:
https://www.owasp.org/index.php/ModSecurity_CRS_RuleID-960911

________________________________
This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is STRICTLY PROHIBITED. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.


From RBarnett at trustwave.com  Fri May  6 11:28:43 2011
From: RBarnett at trustwave.com (Ryan Barnett)
Date: Fri, 6 May 2011 10:28:43 -0500
Subject: [Owasp-modsecurity-core-rule-set] Rule Review: 981227 - Apache
	Error: Invalid URI in Request
Message-ID: <C9E98BEB.25AC0%rbarnett@trustwave.com>

If you have any comments related to this rule (improvements, questions, etc?), please reply to this email thread.

For False Positives, please sign up for
https://lists.sourceforge.net/lists/listinfo/mod-security-report-false-positives

Email the FP Report list here:
mod-security-report-false-positives at lists.sourceforge.net<mailto:mod-security-report-false-positives at lists.sourceforge.net>

Rule File:
http://mod-security.svn.sourceforge.net/viewvc/mod-security/crs/trunk/base_rules/modsecurity_crs_20_protocol_violations.conf

Current Rule:

#
# Identify Invalid URIs Blocked by Apache
#
# -=[ Rule Logic ]=-
#
# There are some request violations that Apache will handle internally, prior to the
# ModSecurity phase:1 POST-READ-REQUEST hook.  For these requests, we can still get
# visibility by running a check in phase:5 logging to look for the Apache error msg.
#
# -=[ References ]=-
# https://www.owasp.org/index.php/ModSecurity_CRS_RuleID-981227
#
SecRule WEBSERVER_ERROR_LOG "@contains Invalid URI in request" "phase:5,t:none,log,pass,msg:'Apache Error: Invalid URI in Request',id:'981227',rev:'2.2.0',logdata:'%{matched_var}',severity:'4',tag:'https://www.owasp.org/index.php/ModSecurity_CRS_RuleID-%{tx.id}',tag:'http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.2.1',tag:'RULE_ACCURACY_LEVEL/5',setvar:'tx.msg=%{rule.msg}',setvar:'tx.id=%{rule.id}',setvar:tx.anomaly_score=+%{tx.notice_anomaly_score},setvar:tx.protocol_violation_score=+%{tx.notice_anomaly_score},setvar:'tx.%{rule.id}-PROTOCOL_VIOLATION/INVALID_REQ-%{matched_var_name}=%{matched_var}'"

Rule Documentation Page:
https://www.owasp.org/index.php/ModSecurity_CRS_RuleID-981227

________________________________
This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is STRICTLY PROHIBITED. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.


From RBarnett at trustwave.com  Fri May  6 13:29:57 2011
From: RBarnett at trustwave.com (Ryan Barnett)
Date: Fri, 6 May 2011 12:29:57 -0500
Subject: [Owasp-modsecurity-core-rule-set] [Mod-security-developers] CRS
 DoS protection & x-forwarded-for header
In-Reply-To: <112576.85124.qm@web37605.mail.mud.yahoo.com>
Message-ID: <C9E9A7A2.25B6E%rbarnett@trustwave.com>

Good point about IPv6.  Looks like we could still do this using the same #
of SecRules and just not using an IP regex like this -

SecRule REQUEST_HEADERS:User-Agent "^(.*)$"
"phase:1,t:none,pass,nolog,t:sha1,t:hexEncode,setvar:tx.ua_hash=%{matched_v
ar}"
SecRule REQUEST_HEADERS:x-forwarded-for "^(.*?),?.*$"
"phase:1,t:none,pass,nolog,setvar:tx.real_ip=%{matched_var}"

SecRule &TX:REAL_IP "@eq 0"
"phase:1,t:none,pass,nolog,initcol:global=global,initcol:ip=%{remote_addr}_
%{tx.ua_hash},,setvar:tx.real_ip=%{remote_addr}"
SecRule &TX:REAL_IP "!@eq 0"
"phase:1,t:none,pass,nolog,initcol:global=global,initcol:ip=%{tx.real_ip}_%
{tx.ua_hash}"



--
Ryan



On 5/6/11 1:16 PM, "Oleg Gryb" <oleg_gryb at yahoo.com> wrote:

>Ryan,
>
>Thanks for the update. It might have problems with IPv6 though. Here are
>my rules: they search for ',' and disregard the IP structure:
>
>
>SecRule REQUEST_HEADERS:User-Agent "^(.*)$"
>"phase:1,t:none,pass,nolog,t:sha1,t:hexEncode,setvar:tx.ua_hash=%{matched_
>var}"
>SecRule REQUEST_HEADERS:x-forwarded-for "^(.*)$"
>"phase:1,t:none,pass,nolog,setvar:tx.real_ip=%{matched_var}"
>SecRule TX:REAL_IP "^(.*?),.*$"
>"phase:1,t:none,pass,nolog,capture,setvar:tx.real_ip=%{TX.1}"
>
>SecRule &TX:REAL_IP "@eq 0"
>"phase:1,t:none,pass,nolog,initcol:global=global,initcol:ip=%{remote_addr}
>_%{tx.ua_hash},,setvar:tx.real_ip=%{remote_addr}"
>SecRule &TX:REAL_IP "!@eq 0"
>"phase:1,t:none,pass,nolog,initcol:global=global,initcol:ip=%{tx.real_ip}_
>%{tx.ua_hash}"
>
>Thanks,
>Oleg.
>
>--- On Thu, 5/5/11, Ryan Barnett <RBarnett at trustwave.com> wrote:
>
>> From: Ryan Barnett <RBarnett at trustwave.com>
>> Subject: Re: [Mod-security-developers] CRS DoS protection &
>>x-forwarded-for header
>> To: "Oleg Gryb" <oleg at gryb.info>,
>>"mod-security-developers at lists.sourceforge.net"
>><mod-security-developers at lists.sourceforge.net>
>> Cc: "owasp-modsecurity-core-rule-set at lists.owasp.org"
>><owasp-modsecurity-core-rule-set at lists.owasp.org>
>> Date: Thursday, May 5, 2011, 10:46 AM
>> FYI - updated the CRS 10 config file
>> to add in this logic and uploaded it to SVN -
>>
>>http://mod-security.svn.sourceforge.net/viewvc/mod-security/crs/trunk/mod
>>security_crs_10_config.conf.example?revision=1772
>>
>> #
>> # -=[ Global and IP Collections ]=-
>> #
>> # Create both Global and IP collections for rules to use
>> # There are some CRS rules that assume that these two
>> collections
>> # have already been initiated.
>> #
>> SecRule REQUEST_HEADERS:User-Agent "^(.*)$"
>>
>>"phase:1,id:'981217',t:none,pass,nolog,t:sha1,t:hexEncode,setvar:tx.ua_ha
>>sh=%{matched_var}"
>> SecRule REQUEST_HEADERS:x-forwarded-for
>> "^\b(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\b"
>>
>>"phase:1,id:'981225',t:none,pass,nolog,capture,setvar:tx.real_ip=%{tx.1}"
>> SecRule &TX:REAL_IP "!@eq 0"
>>
>>"phase:1,id:'981226',t:none,pass,nolog,initcol:global=global,initcol:ip=%
>>{tx.real_ip}_%{tx.ua_hash}"
>> SecRule &TX:REAL_IP "@eq 0"
>>
>>"phase:1,id:'981218',t:none,pass,nolog,initcol:global=global,initcol:ip=%
>>{remote_addr}_%{tx.ua_hash}"
>>
>> The new rules will grab the first IP address listed in an
>> X-Forwared-For header and use that for the IP collection
>> key.  If X-Forwarded-For is not present, then it will
>> use REMOTE_ADDR.
>>
>> Thanks for the suggestion!
>>
>> -Ryan
>>
>>
>> On 4/28/11 8:19 PM, "Oleg Gryb"
>><oleg_gryb at yahoo.com<mailto:oleg_gryb at yahoo.com>>
>> wrote:
>>
>> I've just realized that there might be a problem with
>> relying on that header: if
>> an attacker intentionally sends different random IPs in
>> there, DoS protection
>> can be efficiently by-passed. In my case it should not
>> happen, because an LB is
>> the one who adds the header, but in general we should warn
>> engineers about the
>> possible exploit.
>>
>>
>> Actually, even in LB case: if a request has already had the
>> header, LB will
>> create a new one with the existing value appended to the
>> client IP:
>>
>> x-forwarded-for: real-client-ip,
>> whatever-client-sent-to-LB
>>
>> It means that we would need to rely on the the first IP in
>> the list, everything
>> else should be considered as untrusted.
>>
>> Thanks,
>> Oleg.
>>
>>
>> ----- Original Message ----
>> From: Ryan Barnett
>><RBarnett at trustwave.com<mailto:RBarnett at trustwave.com>>
>> To: Oleg Gryb <oleg at gryb.info<mailto:oleg at gryb.info>>;
>>
>>"mod-security-developers at lists.sourceforge.net<mailto:mod-security-develo
>>pers at lists.sourceforge.net>"
>>
>><mod-security-developers at lists.sourceforge.net<mailto:mod-security-develo
>>pers at lists.sourceforge.net>>
>> Cc:
>>"owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity
>>-core-rule-set at lists.owasp.org>"
>>
>><owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity
>>-core-rule-set at lists.owasp.org>>
>> Sent: Thu, April 28, 2011 4:41:14 PM
>> Subject: Re: [Mod-security-developers] CRS DoS protection
>> & x-forwarded-for
>> header
>> Thanks for the updates Oleg!  This will certainly be a
>> useful update  to
>> not only the DoS rules buy any rules that will be based on
>> the client  IP.
>> I will actually go back to check other uses of REMOTE_ADDR
>> and see if  we
>> can swap it for tx.real_ip instead.
>> I will add this to the CRS  v2.2.0 that I am working
>> on.
>> For future reference - here is the OWASP CRS
>> mail-list -
>> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
>> --
>> Ryan  Barnett
>> Senior Security Researcher
>> Trustwave -  SpiderLabs
>> On 4/28/11 7:32 PM, "Oleg Gryb"
>><oleg_gryb at yahoo.com<mailto:oleg_gryb at yahoo.com>>
>> wrote:
>> >I'm not sure if I can discuss CRS rules here. If not,
>> please  let me know
>> >what
>> >the right place is. I want to suggest an
>> improvement to DoS protection in
>> >CRS
>> >2.1.2. The problem is that  enterprise
>> applications usually run behind
>> >load
>> >balancers, so  relying on remote_addr doesn't make
>> too much sense, because
>> >you'll
>> >always have an LB's IP in there.
>> >
>> >
>> >My improved  rules (attached)  check for
>> x-forwarded-for header and if
>> >it's
>> >present, this IP will be used to initialize IP
>> collection. If it's  not
>> >then the
>> >old logic will be used.
>> >
>> >It would be  great if we can include this
>> improvement to the next  CRS
>> >release.
>> >
>> >Thanks,
>> >Oleg.
>>
>>-------------------------------------------------------------------------
>>-----
>> WhatsUp  Gold - Download Free Network Management
>> Software
>> The most intuitive,  comprehensive, and cost-effective
>> network
>> management toolset available  today.  Delivers
>> lowest initial
>> acquisition cost and overall TCO of any
>> competing  solution.
>> http://p.sf.net/sfu/whatsupgold-sd
>> _______________________________________________
>> mod-security-developers  mailing list
>>
>>mod-security-developers at lists.sourceforge.net<mailto:mod-security-develop
>>ers at lists.sourceforge.net>
>> https://lists.sourceforge.net/lists/listinfo/mod-security-developers
>> ModSecurity  Services from Trustwave's SpiderLabs:
>> https://www.trustwave.com/spiderLabs.php
>>
>>
>>-------------------------------------------------------------------------
>>-----
>> WhatsUp Gold - Download Free Network Management Software
>> The most intuitive, comprehensive, and cost-effective
>> network
>> management toolset available today.  Delivers lowest
>> initial
>> acquisition cost and overall TCO of any competing
>> solution.
>> http://p.sf.net/sfu/whatsupgold-sd
>> _______________________________________________
>> mod-security-developers mailing list
>>
>>mod-security-developers at lists.sourceforge.net<mailto:mod-security-develop
>>ers at lists.sourceforge.net>
>> https://lists.sourceforge.net/lists/listinfo/mod-security-developers
>> ModSecurity Services from Trustwave's SpiderLabs:
>> https://www.trustwave.com/spiderLabs.php
>>
>>
>>
>> ________________________________
>> This transmission may contain information that is
>> privileged, confidential, and/or exempt from disclosure
>> under applicable law. If you are not the intended recipient,
>> you are hereby notified that any disclosure, copying,
>> distribution, or use of the information contained herein
>> (including any reliance thereon) is STRICTLY PROHIBITED. If
>> you received this transmission in error, please immediately
>> contact the sender and destroy the material in its entirety,
>> whether in electronic or hard copy format.
>>
>>
>


This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is STRICTLY PROHIBITED. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.


From brectanu at gmail.com  Fri May  6 16:40:58 2011
From: brectanu at gmail.com (Brian Rectanus)
Date: Fri, 6 May 2011 13:40:58 -0700
Subject: [Owasp-modsecurity-core-rule-set] Rule Updates Are Coming!
In-Reply-To: <C9E983F3.25A86%rbarnett@trustwave.com>
References: <C9E983F3.25A86%rbarnett@trustwave.com>
Message-ID: <BANLkTimRDpP7KeBQktD4Lq3qA+FS1Ya+Aw@mail.gmail.com>

On Fri, May 6, 2011 at 7:54 AM, Ryan Barnett <RBarnett at trustwave.com> wrote:
> Greetings everyone,

Hi Ryan.

> I am sending this note to let you know that SpiderLabs is working on a number of rule updates for the upcoming release of CRS v2.2.0. ?Some of the big items are:
>
> Rule Documentation
> We have a template rule description page here - https://www.owasp.org/index.php/ModSecurity_CRS_Rule_Description_Template. ?We will continue work on new description pages for each rule, however, we need community help with this effort. ?Specifically, we have sections for documenting False Positives/False Negatives for each rule. ?If you are having any issues with CRS rules, please sign-up for the FP Reporting mail-list - https://lists.sourceforge.net/lists/listinfo/mod-security-report-false-positives and send a note with the FP details.
>
> If you want to create a rule documentation page on the OWASP wiki site, simply copy the wiki html from the Description Template link above and then type in your browser the path to the new page like this - http://www.owasp.org/index.php?title=ModSecurity_CRS_RuleID-XXXXX where XXXXX is the Rule ID you are creating the page for. ?If that page doesn't exist yet, the OWASP wiki page will allow you to EDIT and create it. ?Then simply paste in the html from the Documentation Template page you fill in the data. ?Here is an example page - https://www.owasp.org/index.php/ModSecurity_CRS_RuleID-960911
>
> Rule Tag Updates
> I have started to add in new rule tag actions which will help users to identify the current accuracy level of each rule. ?The purpose of this tag is to help the user to decide if this rules has a high FP rate or if it is a strong signature that they can be confident in applying blocking actions. ?The new tag has the following format -
>
> tag:'RULE_ACCURACY_LEVEL/N'
>
> Where N is a number between 1-5 with:
> 1 = Beta/Experimental rule or the rule has a high number of reported false positives (via the mail-list).
> 5 = Heavily tested rule with no false positives reported (via the mail-list).

I think "accuracy" is different than what you have here.  Also, I'd
consider a 0-9 scale - you do not need to use all numbers but it is
more consistent.

This is similar to what we are considering for a "maturity" meta tag
on rules.  Just because a rule is new does not mean it may be FP
heavy.  Perhaps two tags would fair better?

maturity: how refined a rule is - low number meaning it is a new,
fairly untested rule
accuracy: how well a rule is at detecting what it is designed for -
low number meaning higher FPs

>
> Again, we need your help!!! ?SpiderLabs will provide the initial rule accuracy level tagging for the rules, however we need the community to report FP issues so that these rule tags may be adjusted. ?The advantage of this approach, is that with new ModSecurity v2.6.0, you will be able to systematically remove rules by using data within the TAG action. ?So, you could easily choose to only run Level 5 accuracy rules on your site.
>
> Regression Testing Suite
> As stated in a separate email thread ? I am currently working on updating our rules regression testing suite and we will be releasing it to the community soon. ?The idea is that the testing suite will have example request payloads that can be actively sent to your ModSecurity install so that can verify that the detection engine is working properly. ?I will complete the first few testing files and then release it to the public so that we can hopefully get some more help with developing tests. ?This will also allow end-users to develop their own tests for their own custom rules. ?This will help to verify that your ModSecurity/CRS installs are working correctly which is vitally important especially after any type of upgrade.

This is great news!  Are you going to utilize the existing regression
testing framework, or are you (have you) built another system for
this?

>
> Please keep an eye out for email related to these topics. ?I will be sending emails ? related to each rule where we can provide a status on the items discussed.

Looking forward to it.

-B

From RBarnett at trustwave.com  Fri May  6 20:26:45 2011
From: RBarnett at trustwave.com (Ryan Barnett)
Date: Fri, 6 May 2011 19:26:45 -0500
Subject: [Owasp-modsecurity-core-rule-set] [Mod-security-developers] CRS
 DoS protection & x-forwarded-for header
In-Reply-To: <478539.21031.qm@web37602.mail.mud.yahoo.com>
Message-ID: <C9EA0633.25C17%rbarnett@trustwave.com>

This one seems to work in ModSecurity (verified with the debug log).  I
matches a single IP, or the 1st one when there a multiple and it handles
IPv6 addresses as well -

SecRule  REQUEST_HEADERS:User-Agent  "^(.*)$" \
        "phase:1,t:none,pass,nolog,t:sha1,t:hexEncode,setvar:tx.ua_hash=%{matched_
var}"
SecRule  REQUEST_HEADERS:x-forwarded-for "^([0-9a-fA-F\.\:]*),?.*$" \
        "phase:1,t:none,pass,nolog,capture,setvar:tx.real_ip=%{tx.1}
SecRule  &TX:REAL_IP "@eq  0" \
        "phase:1,t:none,pass,nolog,initcol:global=global,initcol:ip=%{remote_addr}
_%{tx.ua_hash},,setvar:tx.real_ip=%{remote_addr}"
SecRule  &TX:REAL_IP "!@eq  0" \
        "phase:1,t:none,pass,nolog,initcol:global=global,initcol:ip=%{tx.real_ip}_
%{tx.ua_hash}"



By the way - with regards to the pcre matching, switch your single/double
quotes around to test -

perl -e '"1.2.3.4" =~ m/^([0-9a-fA-F\.\:]*),?.*$/; print "$1\n";'

--
Ryan Barnett
Senior Security Researcher
Trustwave - SpiderLabs
Email: rbarnett at trustwave.com
Phone: (703) 794-2248
Cell: (571) 382-0476
www.trustwave.com

This transmission may contain information that is privileged,
confidential, and/or exempt from disclosure under applicable law. If you
are not the intended recipient, you are hereby notified that any
disclosure, copying, distribution, or use of the information contained
herein (including any reliance thereon) is STRICTLY PROHIBITED. If you
received this transmission in error, please immediately contact the sender
and destroy the material in its entirety, whether in electronic or hard
copy format. Thank you.



On 5/6/11 5:41 PM, "Oleg Gryb" <oleg_gryb at yahoo.com> wrote:

>Ryan,
>That might not work for a single IP in x-forwarded-for header, becuase
>non-greedy match for (.*?) will return empty string.
>
>Try:
>
>perl -e "'1.2.3.4' =~ /^(.*?),?.*$/; print $1;"
>
>and you'll see what I mean. I'm assuming here that modsecurity uses PCRE.
>
>Thanks,
>Oleg.
>
>
>
>
>
>
>----- Original Message ----
>> From: Ryan Barnett <RBarnett at trustwave.com>
>> To: "oleg at gryb.info" <oleg at gryb.info>;
>>"mod-security-developers at lists.sourceforge.net"
>><mod-security-developers at lists.sourceforge.net>
>> Cc: "owasp-modsecurity-core-rule-set at lists.owasp.org"
>><owasp-modsecurity-core-rule-set at lists.owasp.org>
>> Sent: Fri, May 6, 2011 10:29:57 AM
>> Subject: Re: [Mod-security-developers] CRS DoS protection &
>>x-forwarded-for
>>header
>>
>> Good point about IPv6.  Looks like we could still do this using the
>>same  #
>> of SecRules and just not using an IP regex like this -
>>
>> SecRule  REQUEST_HEADERS:User-Agent  "^(.*)$"
>>
>>"phase:1,t:none,pass,nolog,t:sha1,t:hexEncode,setvar:tx.ua_hash=%{matched
>>_v
>> ar}"
>> SecRule  REQUEST_HEADERS:x-forwarded-for  "^(.*?),?.*$"
>> "phase:1,t:none,pass,nolog,setvar:tx.real_ip=%{matched_var}"
>>
>> SecRule  &TX:REAL_IP "@eq  0"
>>
>>"phase:1,t:none,pass,nolog,initcol:global=global,initcol:ip=%{remote_addr
>>}_
>> %{tx.ua_hash},,setvar:tx.real_ip=%{remote_addr}"
>> SecRule  &TX:REAL_IP "!@eq  0"
>>
>>"phase:1,t:none,pass,nolog,initcol:global=global,initcol:ip=%{tx.real_ip}
>>_%
>> {tx.ua_hash}"
>>
>>
>>
>> --
>> Ryan
>>
>>
>>
>> On  5/6/11 1:16 PM, "Oleg Gryb" <oleg_gryb at yahoo.com>  wrote:
>>
>> >Ryan,
>> >
>> >Thanks for the update. It might have  problems with IPv6 though. Here
>>are
>> >my rules: they search for ',' and  disregard the IP structure:
>> >
>> >
>> >SecRule  REQUEST_HEADERS:User-Agent  "^(.*)$"
>>
>>>"phase:1,t:none,pass,nolog,t:sha1,t:hexEncode,setvar:tx.ua_hash=%{matche
>>>d_
>> >var}"
>> >SecRule  REQUEST_HEADERS:x-forwarded-for  "^(.*)$"
>> >"phase:1,t:none,pass,nolog,setvar:tx.real_ip=%{matched_var}"
>> >SecRule  TX:REAL_IP  "^(.*?),.*$"
>> >"phase:1,t:none,pass,nolog,capture,setvar:tx.real_ip=%{TX.1}"
>> >
>> >SecRule  &TX:REAL_IP "@eq  0"
>>
>>>"phase:1,t:none,pass,nolog,initcol:global=global,initcol:ip=%{remote_add
>>>r}
>> >_%{tx.ua_hash},,setvar:tx.real_ip=%{remote_addr}"
>> >SecRule  &TX:REAL_IP "!@eq  0"
>>
>>>"phase:1,t:none,pass,nolog,initcol:global=global,initcol:ip=%{tx.real_ip
>>>}_
>> >%{tx.ua_hash}"
>> >
>> >Thanks,
>> >Oleg.
>> >
>> >---  On Thu, 5/5/11, Ryan Barnett <RBarnett at trustwave.com>  wrote:
>> >
>> >> From: Ryan Barnett <RBarnett at trustwave.com>
>> >>  Subject: Re: [Mod-security-developers] CRS DoS protection  &
>> >>x-forwarded-for header
>> >> To: "Oleg Gryb" <oleg at gryb.info>,
>> >>"mod-security-developers at lists.sourceforge.net"
>> >><mod-security-developers at lists.sourceforge.net>
>> >>  Cc: "owasp-modsecurity-core-rule-set at lists.owasp.org"
>> >><owasp-modsecurity-core-rule-set at lists.owasp.org>
>> >>  Date: Thursday, May 5, 2011, 10:46 AM
>> >> FYI - updated the CRS 10  config file
>> >> to add in this logic and uploaded it to SVN  -
>> >>
>>
>>>>http://mod-security.svn.sourceforge.net/viewvc/mod-security/crs/trunk/m
>>>>od
>> >>security_crs_10_config.conf.example?revision=1772
>> >>
>> >>  #
>> >> # -=[ Global and IP Collections ]=-
>> >> #
>> >> #  Create both Global and IP collections for rules to use
>> >> # There are  some CRS rules that assume that these two
>> >> collections
>> >> #  have already been initiated.
>> >> #
>> >> SecRule  REQUEST_HEADERS:User-Agent  "^(.*)$"
>> >>
>>
>>>>"phase:1,id:'981217',t:none,pass,nolog,t:sha1,t:hexEncode,setvar:tx.ua_
>>>>ha
>> >>sh=%{matched_var}"
>> >>  SecRule REQUEST_HEADERS:x-forwarded-for
>> >>  "^\b(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\b"
>> >>
>>
>>>>"phase:1,id:'981225',t:none,pass,nolog,capture,setvar:tx.real_ip=%{tx.1
>>>>}"
>> >>  SecRule &TX:REAL_IP "!@eq  0"
>> >>
>>
>>>>"phase:1,id:'981226',t:none,pass,nolog,initcol:global=global,initcol:ip
>>>>=%
>> >>{tx.real_ip}_%{tx.ua_hash}"
>> >>  SecRule &TX:REAL_IP "@eq  0"
>> >>
>>
>>>>"phase:1,id:'981218',t:none,pass,nolog,initcol:global=global,initcol:ip
>>>>=%
>> >>{remote_addr}_%{tx.ua_hash}"
>> >>
>> >>  The new rules will grab the first IP address listed in an
>> >>  X-Forwared-For header and use that for the IP collection
>> >> key.   If X-Forwarded-For is not present, then it will
>> >> use  REMOTE_ADDR.
>> >>
>> >> Thanks for the  suggestion!
>> >>
>> >> -Ryan
>> >>
>> >>
>> >> On  4/28/11 8:19 PM, "Oleg Gryb"
>> >><oleg_gryb at yahoo.com<mailto:oleg_gryb at yahoo.com>>
>> >>  wrote:
>> >>
>> >> I've just realized that there might be a problem  with
>> >> relying on that header: if
>> >> an attacker  intentionally sends different random IPs in
>> >> there, DoS  protection
>> >> can be efficiently by-passed. In my case it should  not
>> >> happen, because an LB is
>> >> the one who adds the  header, but in general we should warn
>> >> engineers about  the
>> >> possible exploit.
>> >>
>> >>
>> >> Actually,  even in LB case: if a request has already had the
>> >> header, LB  will
>> >> create a new one with the existing value appended to  the
>> >> client IP:
>> >>
>> >> x-forwarded-for:  real-client-ip,
>> >> whatever-client-sent-to-LB
>> >>
>> >>  It means that we would need to rely on the the first IP in
>> >> the list,  everything
>> >> else should be considered as  untrusted.
>> >>
>> >> Thanks,
>> >>  Oleg.
>> >>
>> >>
>> >> ----- Original Message  ----
>> >> From: Ryan Barnett
>> >><RBarnett at trustwave.com<mailto:RBarnett at trustwave.com>>
>> >>  To: Oleg Gryb <oleg at gryb.info<mailto:oleg at gryb.info>>;
>> >>
>>
>>>>"mod-security-developers at lists.sourceforge.net<mailto:mod-security-deve
>>>>lo
>> >>pers at lists.sourceforge.net>"
>> >>
>>
>>>><mod-security-developers at lists.sourceforge.net<mailto:mod-security-deve
>>>>lo
>> >>pers at lists.sourceforge.net>>
>> >>  Cc:
>>
>>>>"owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecuri
>>>>ty
>> >>-core-rule-set at lists.owasp.org>"
>> >>
>>
>>>><owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecuri
>>>>ty
>> >>-core-rule-set at lists.owasp.org>>
>> >>  Sent: Thu, April 28, 2011 4:41:14 PM
>> >> Subject: Re:  [Mod-security-developers] CRS DoS protection
>> >> &  x-forwarded-for
>> >> header
>> >> Thanks for the updates  Oleg!  This will certainly be a
>> >> useful update   to
>> >> not only the DoS rules buy any rules that will be based  on
>> >> the client  IP.
>> >> I will actually go back to check  other uses of REMOTE_ADDR
>> >> and see if  we
>> >> can swap  it for tx.real_ip instead.
>> >> I will add this to the CRS  v2.2.0  that I am working
>> >> on.
>> >> For future reference - here is the  OWASP CRS
>> >> mail-list -
>> >>
>>https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
>> >>  --
>> >> Ryan  Barnett
>> >> Senior Security  Researcher
>> >> Trustwave -  SpiderLabs
>> >> On 4/28/11 7:32  PM, "Oleg Gryb"
>> >><oleg_gryb at yahoo.com<mailto:oleg_gryb at yahoo.com>>
>> >>  wrote:
>> >> >I'm not sure if I can discuss CRS rules here. If  not,
>> >> please  let me know
>> >> >what
>> >>  >the right place is. I want to suggest an
>> >> improvement to DoS  protection in
>> >> >CRS
>> >> >2.1.2. The problem is  that  enterprise
>> >> applications usually run behind
>> >>  >load
>> >> >balancers, so  relying on remote_addr doesn't  make
>> >> too much sense, because
>> >> >you'll
>> >>  >always have an LB's IP in there.
>> >> >
>> >>  >
>> >> >My improved  rules (attached)  check  for
>> >> x-forwarded-for header and if
>> >> >it's
>> >>  >present, this IP will be used to initialize IP
>> >> collection. If  it's  not
>> >> >then the
>> >> >old logic will be  used.
>> >> >
>> >> >It would be  great if we can include  this
>> >> improvement to the next  CRS
>> >>  >release.
>> >> >
>> >> >Thanks,
>> >>  >Oleg.
>> >>
>>
>>>>-----------------------------------------------------------------------
>>>>--
>> >>-----
>> >>  WhatsUp  Gold - Download Free Network Management
>> >>  Software
>> >> The most intuitive,  comprehensive, and  cost-effective
>> >> network
>> >> management toolset  available  today.  Delivers
>> >> lowest initial
>> >>  acquisition cost and overall TCO of any
>> >> competing   solution.
>> >> http://p.sf.net/sfu/whatsupgold-sd
>> >>  _______________________________________________
>> >>  mod-security-developers  mailing list
>> >>
>>
>>>>mod-security-developers at lists.sourceforge.net<mailto:mod-security-devel
>>>>op
>> >>ers at lists.sourceforge.net>
>> >> https://lists.sourceforge.net/lists/listinfo/mod-security-developers
>> >>  ModSecurity  Services from Trustwave's SpiderLabs:
>> >> https://www.trustwave.com/spiderLabs.php
>> >>
>> >>
>>
>>>>-----------------------------------------------------------------------
>>>>--
>> >>-----
>> >>  WhatsUp Gold - Download Free Network Management Software
>> >> The most  intuitive, comprehensive, and cost-effective
>> >> network
>> >>  management toolset available today.  Delivers lowest
>> >>  initial
>> >> acquisition cost and overall TCO of any  competing
>> >> solution.
>> >> http://p.sf.net/sfu/whatsupgold-sd
>> >>  _______________________________________________
>> >>  mod-security-developers mailing list
>> >>
>>
>>>>mod-security-developers at lists.sourceforge.net<mailto:mod-security-devel
>>>>op
>> >>ers at lists.sourceforge.net>
>> >> https://lists.sourceforge.net/lists/listinfo/mod-security-developers
>> >>  ModSecurity Services from Trustwave's SpiderLabs:
>> >> https://www.trustwave.com/spiderLabs.php
>> >>
>> >>
>> >>
>> >>  ________________________________
>> >> This transmission may contain  information that is
>> >> privileged, confidential, and/or exempt from  disclosure
>> >> under applicable law. If you are not the intended  recipient,
>> >> you are hereby notified that any disclosure,  copying,
>> >> distribution, or use of the information contained  herein
>> >> (including any reliance thereon) is STRICTLY PROHIBITED.  If
>> >> you received this transmission in error, please  immediately
>> >> contact the sender and destroy the material in its  entirety,
>> >> whether in electronic or hard copy  format.
>> >>
>> >>
>> >
>>
>>
>> This transmission may contain  information that is privileged,
>>confidential,
>>and/or exempt from disclosure  under applicable law. If you are not the
>>intended
>>recipient, you are hereby  notified that any disclosure, copying,
>>distribution,
>>or use of the information  contained herein (including any reliance
>>thereon) is
>>STRICTLY PROHIBITED. If you  received this transmission in error, please
>>immediately contact the sender and  destroy the material in its entirety,
>>whether in electronic or hard copy  format.
>>
>>
>


This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is STRICTLY PROHIBITED. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.


From RBarnett at trustwave.com  Fri May  6 20:30:50 2011
From: RBarnett at trustwave.com (Ryan Barnett)
Date: Fri, 6 May 2011 19:30:50 -0500
Subject: [Owasp-modsecurity-core-rule-set] Rule Updates Are Coming!
In-Reply-To: <BANLkTimRDpP7KeBQktD4Lq3qA+FS1Ya+Aw@mail.gmail.com>
Message-ID: <C9EA0A2B.25C5C%rbarnett@trustwave.com>


On 5/6/11 4:40 PM, "Brian Rectanus" <brectanu at gmail.com> wrote:

>On Fri, May 6, 2011 at 7:54 AM, Ryan Barnett <RBarnett at trustwave.com>
>wrote:
>> Greetings everyone,
>
>Hi Ryan.
>
>> I am sending this note to let you know that SpiderLabs is working on a
>>number of rule updates for the upcoming release of CRS v2.2.0.  Some of
>>the big items are:
>>
>> Rule Documentation
>> We have a template rule description page here -
>>https://www.owasp.org/index.php/ModSecurity_CRS_Rule_Description_Template
>>.  We will continue work on new description pages for each rule,
>>however, we need community help with this effort.  Specifically, we have
>>sections for documenting False Positives/False Negatives for each rule.
>>If you are having any issues with CRS rules, please sign-up for the FP
>>Reporting mail-list -
>>https://lists.sourceforge.net/lists/listinfo/mod-security-report-false-po
>>sitives and send a note with the FP details.
>>
>> If you want to create a rule documentation page on the OWASP wiki site,
>>simply copy the wiki html from the Description Template link above and
>>then type in your browser the path to the new page like this -
>>http://www.owasp.org/index.php?title=ModSecurity_CRS_RuleID-XXXXX where
>>XXXXX is the Rule ID you are creating the page for.  If that page
>>doesn't exist yet, the OWASP wiki page will allow you to EDIT and create
>>it.  Then simply paste in the html from the Documentation Template page
>>you fill in the data.  Here is an example page -
>>https://www.owasp.org/index.php/ModSecurity_CRS_RuleID-960911
>>
>> Rule Tag Updates
>> I have started to add in new rule tag actions which will help users to
>>identify the current accuracy level of each rule.  The purpose of this
>>tag is to help the user to decide if this rules has a high FP rate or if
>>it is a strong signature that they can be confident in applying blocking
>>actions.  The new tag has the following format -
>>
>> tag:'RULE_ACCURACY_LEVEL/N'
>>
>> Where N is a number between 1-5 with:
>> 1 = Beta/Experimental rule or the rule has a high number of reported
>>false positives (via the mail-list).
>> 5 = Heavily tested rule with no false positives reported (via the
>>mail-list).
>
>I think "accuracy" is different than what you have here.  Also, I'd
>consider a 0-9 scale - you do not need to use all numbers but it is
>more consistent.

Fair enough.  The 0-5 scale was arbitrary anyways but a 10 point scale is
fine with me.

>
>This is similar to what we are considering for a "maturity" meta tag
>on rules.  Just because a rule is new does not mean it may be FP
>heavy.  Perhaps two tags would fair better?
>
>maturity: how refined a rule is - low number meaning it is a new,
>fairly untested rule
>accuracy: how well a rule is at detecting what it is designed for -
>low number meaning higher Fps

Yeah good point.  These items are open for discussion so if anyone has
anything better, please speak up.

I do like MATURITY and ACCURACY - so maybe -

tag:'RULE_MATURITY/10'
And
tag:'RULE_ACCURACY/10'


>
>>
>> Again, we need your help!!!  SpiderLabs will provide the initial rule
>>accuracy level tagging for the rules, however we need the community to
>>report FP issues so that these rule tags may be adjusted.  The advantage
>>of this approach, is that with new ModSecurity v2.6.0, you will be able
>>to systematically remove rules by using data within the TAG action.  So,
>>you could easily choose to only run Level 5 accuracy rules on your site.
>>
>> Regression Testing Suite
>> As stated in a separate email thread ? I am currently working on
>>updating our rules regression testing suite and we will be releasing it
>>to the community soon.  The idea is that the testing suite will have
>>example request payloads that can be actively sent to your ModSecurity
>>install so that can verify that the detection engine is working
>>properly.  I will complete the first few testing files and then release
>>it to the public so that we can hopefully get some more help with
>>developing tests.  This will also allow end-users to develop their own
>>tests for their own custom rules.  This will help to verify that your
>>ModSecurity/CRS installs are working correctly which is vitally
>>important especially after any type of upgrade.
>
>This is great news!  Are you going to utilize the existing regression
>testing framework, or are you (have you) built another system for
>this?

It is the original one we had a Breach but we are updating it a bit.


Thanks for the feedback Brian.

Ryan

>
>>
>> Please keep an eye out for email related to these topics.  I will be
>>sending emails ? related to each rule where we can provide a status on
>>the items discussed.
>
>Looking forward to it.
>
>-B
>


This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is STRICTLY PROHIBITED. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.


From RBarnett at trustwave.com  Tue May 10 11:03:03 2011
From: RBarnett at trustwave.com (Ryan Barnett)
Date: Tue, 10 May 2011 10:03:03 -0500
Subject: [Owasp-modsecurity-core-rule-set] Unicode Visual Spoofing for Good:
	Confusable CAPTCHAs
Message-ID: <C9EECBE7.262EA%rbarnett@trustwave.com>

An interesting concept regarding CAPTCHAs -
http://blog.spiderlabs.com/2011/05/unicode-visual-spoofing-for-good-confusable-captchas.html

If anyone field tests this concept, I would love to hear feedback.

-Ryan

________________________________
This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is STRICTLY PROHIBITED. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.


From nicholas.ogura at usbank.com  Mon May 23 11:38:33 2011
From: nicholas.ogura at usbank.com (nicholas.ogura at usbank.com)
Date: Mon, 23 May 2011 10:38:33 -0500
Subject: [Owasp-modsecurity-core-rule-set] Multiple URL Encoding Rule ID
	950109
Message-ID: <OF1397600C.118C7715-ON86257899.00542D43-86257899.0055ED7E@usbank.com>

Hello there.  I'm having some trouble with this rule in the 2.0.9 ruleset. 
 There does not seem to be any appreciable difference in the latest 
version, so I'm going to have to toss this out to the community.

I realize that this is part of a series of chained rules, but this is the 
one that's tripping me up:

SecRule ARGS "\%((?!$|\W)|[0-9a-fA-F]{2}|u[0-9a-fA-F]{4})" \
 "phase:2,rev:'2.0.9',t:none,pass,nolog,auditlog,status:400,msg:'Multiple 
URL Encoding 
Detected',id:'950109',tag:'PROTOCOL_VIOLATION/EVASION',severity:'5',setvar:'tx.msg=%{rule.msg}',setvar:tx.anomaly_score=+%{tx.notice_anomaly_score},setvar:tx.protocol_violation_score=+%{tx.notice_anomaly_score},setvar:tx.%{rule.id}-PROTOCOL_VIOLATION/EVASION-%{matched_var_name}=%{matched_var}"

I've seen some threads where it's said that there is an implicit decode of 
the ARGS collection upon loading, but I can't find any evidence of it 
happening.

In this specific case, a username field gets appended with '@something' 
upon submit, and even though the login form contains virtually no other 
data, we get a positive.

It seems to me like this rule is finding urlencoded data in a POST body 
that was specifically set up to be urlencoded.  There's no t:urlDecode in 
the rule, so it's tripping on normal traffic.  I can't even say it's a 
'false positive' .

What am I missing?

Thanks in advance.


Nik Ogura
Application Systems Administrator
MSA Apache Group
US Bank, NA
U.S. BANCORP made the following annotations
---------------------------------------------------------------------
Electronic Privacy Notice. This e-mail, and any attachments, contains information that is, or may be, covered by electronic communications privacy laws, and is also confidential and proprietary in nature. If you are not the intended recipient, please be advised that you are legally prohibited from retaining, using, copying, distributing, or otherwise disclosing this information in any manner. Instead, please reply to the sender that you have received this communication in error, and then immediately delete it. Thank you in advance for your cooperation.



---------------------------------------------------------------------

-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20110523/23b610e3/attachment.html 

From RBarnett at trustwave.com  Thu May 26 19:11:32 2011
From: RBarnett at trustwave.com (Ryan Barnett)
Date: Thu, 26 May 2011 18:11:32 -0500
Subject: [Owasp-modsecurity-core-rule-set] Announcing Release of OWASP
	ModSecurity CRS v2.2.0
Message-ID: <CA045664.277EC%rbarnett@trustwave.com>

Hello everyone,
I am pleased to announce the release of the OWASP ModSecurity Core Rule Set (CRS) v2.2.0.  This is a significant update as we have added a number of very important capabilities.

CHANGE LOG -

--------------------------
Version 2.2.0 - 05/26/2011
--------------------------

Improvements:
- Changed Licensing from GPLv2 to Apache Software License v2 (ASLv2)
  http://www.apache.org/licenses/LICENSE-2.0.txt
- Created new INSTALL file outlining quick config setup
- Added a new rule regression testing framework to the /util directory
- Added new activated_rules directory which will allow users to place symlinks pointing
  to files they want to run.  This allows for easier Apache Include wild-carding
- Adding in new RULE_MATURITY and RULE_ACCURACY tags
- Adding in a check for X-Forwarded-For source IP when creating IP collection
- Added new Application Defect checks (55 app defect file) from Watcher tool (Check Charset)
  http://websecuritytool.codeplex.com/wikipage?title=Checks#charset
- Added new AppSensor rules to experimental_dir
  https://www.owasp.org/index.php/AppSensor_DetectionPoints
- Added new Generic Malicious JS checks in outbound content
- Added experimental IP Forensic rules to gather Client hostname/whois info  http://blog.spiderlabs.com/2010/11/detecting-malice-with-modsecurity-ip-forensics.html
- Added support for Mozilla's Content Security Policy (CSP) to the experimental_rules
  http://blog.spiderlabs.com/2011/04/modsecurity-advanced-topic-of-the-week-integrating-content-security-policy-csp.html
- Global collection in the 10 file now uses the Host Request Header as the collection key.
  This allows for per-site global collections.
- Added new SpiderLabs Research (SLR) rules directory (slr_rules) for known vulnerabilties.
  This includes both converted web rules from Emerging Threats (ET) and from SLR Team.
- Added new SLR rule packs for known application vulns for WordPress, Joomla and phpBB
- Added experimental rules for detecting Open Proxy Abuse
  http://blog.spiderlabs.com/2011/03/detecting-malice-with-modsecurity-open-proxy-abuse.html
- Added experimental Passive Vulnerability Scanning ruleset using OSVDB and Lua API
  http://blog.spiderlabs.com/2011/02/modsecurity-advanced-topic-of-the-week-passive-vulnerability-scanning-part-1-osvdb-checks.html
- Added additional URI Request Validation rule to the 20 protocol violations file (Rule ID - 981227)
- Added new SQLi detection rules (959070, 959071 and 959072)
- Added "Toata dragostea mea pentru diavola" to the malicious User-Agent data
  https://www.modsecurity.org/tracker/browse/CORERULES-64

Bug Fixes:
- Assigned IDs to all active SecRules/SecActions
- Removed rule inversion (!) from rule ID 960902
- Fixed false negative issue in Response Splitting Rule
- Fixed false negative issue with @validateByteRange check
- Updated the TARGETS lising for rule ID 950908
- Updated TX data for REQBODY processing
- Changed the pass action to block in the RFI rules in the 40 generic file
- Updated RFI regex to catch IP address usage in hostname
  https://www.modsecurity.org/tracker/browse/CORERULES-68
- Changed REQUEST_URI_RAW variable to REQUEST_LINE in SLR rules to allow matches on request methods.
- Updated the RFI rules in the 40 generic attacks conf file to remove explicit logging actions.
  They will now inherit the settings from the SecDefaultAction

--------------------------
DOWNLOADING
--------------------------
Manual Downloading:
You can always download the latest CRS version here -
https://sourceforge.net/projects/mod-security/files/modsecurity-crs/0-CURRENT/

Automated Downloading:
Use the rules-updater.pl script in the CRS /util directory

# Get a list of what the repository contains:
$ ./rules-updater.pl -rhttp://www.modsecurity.org/autoupdate/repository/ -l

Repository: http://www.modsecurity.org/autoupdate/repository

modsecurity-crs {
          2.0.0: modsecurity-crs_2.0.0.zip
          2.0.1: modsecurity-crs_2.0.1.zip
          2.0.2: modsecurity-crs_2.0.2.zip
          2.0.3: modsecurity-crs_2.0.3.zip
          2.0.4: modsecurity-crs_2.0.4.zip
          2.0.5: modsecurity-crs_2.0.5.zip
          2.0.6: modsecurity-crs_2.0.6.zip
          2.0.7: modsecurity-crs_2.0.7.zip
          2.0.8: modsecurity-crs_2.0.8.zip
          2.0.9: modsecurity-crs_2.0.9.zip
          2.0.9: modsecurity-crs_2.0.10.zip
          2.1.0: modsecurity-crs_2.1.0.zip
          2.1.1: modsecurity-crs_2.1.1.zip
          2.1.2: modsecurity-crs_2.1.2.zip
  2.2.0: modsecurity-crs_2.2.0.zip
}

# Get the latest stable version of "modsecurity-crs":
$ ./rules-updater.pl -rhttp://www.modsecurity.org/autoupdate/repository/ -prules -Smodsecurity-crs
Fetching: modsecurity-crs/modsecurity-crs_2.2.0.zip ...
$ ls -R rules
modsecurity-crs

rules/modsecurity-crs:
modsecurity-crs_2.2.0.zip    modsecurity-crs_2.2.0.zip.sig

--
Ryan Barnett
OWASP ModSecurity CRS Project Leader

________________________________
This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is STRICTLY PROHIBITED. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.


From misc.lists at blueyonder.co.uk  Fri May 27 15:16:15 2011
From: misc.lists at blueyonder.co.uk (Arthur Dent)
Date: Fri, 27 May 2011 20:16:15 +0100
Subject: [Owasp-modsecurity-core-rule-set] Announcing Release of OWASP
 ModSecurity CRS v2.2.0
In-Reply-To: <CA045664.277EC%rbarnett@trustwave.com>
References: <CA045664.277EC%rbarnett@trustwave.com>
Message-ID: <1306523775.3377.6.camel@localhost.localdomain>

On Thu, 2011-05-26 at 18:11 -0500, Ryan Barnett wrote:
> Hello everyone,
> I am pleased to announce the release of the OWASP ModSecurity Core Rule Set (CRS) v2.2.0.  This is a significant update as we have added a number of very important capabilities.
> 
> CHANGE LOG -
> 

Hi Ryan,

I have just installed this CRS update and on restarting Apache I get the
following error:

# service httpd restart
Stopping httpd:                                            [  OK  ]
Starting httpd: Syntax error on line 91 of /etc/httpd/modsecurity.d/base_rules/modsecurity_crs_20_protocol_violations.conf:
Error creating rule: Unknown variable: REQBODY_ERROR
                                                           [FAILED]

I am just dashing out and don't have time to troubleshoot. For now I
have just commented out lines 90 & 91

##SecRule REQBODY_ERROR "!@eq 0" \
##	"phase:2,t:none,block,msg:'Failed to parse request body.',id:'960912',logdata:'%{reqbody_error_msg}',severity:2,setvar:'tx.msg=%{rule.msg}',setvar:'tx.id=%{rule.id}',tag:'RULE_MATURITY/7',tag:'RULE_ACCURACY/8',tag:'https://www.owasp.org/index.php/ModSecurity_CRS_RuleID-%{tx.id}',setvar:tx.anomaly_score=+%{tx.critical_anomaly_score},setvar:tx.protocol_violation_score=+%{tx.critical_anomaly_score},setvar:tx.%{rule.id}-PROTOCOL_VIOLATION/INVALID_REQ-%{matched_var_name}=%{matched_var}"

What is the proper fix?

Thanks in advance...

Mark

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 198 bytes
Desc: This is a digitally signed message part
Url : https://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20110527/51ec5ca2/attachment.bin 

From RBarnett at trustwave.com  Fri May 27 17:19:04 2011
From: RBarnett at trustwave.com (Ryan Barnett)
Date: Fri, 27 May 2011 16:19:04 -0500
Subject: [Owasp-modsecurity-core-rule-set] Announcing Release of OWASP
 ModSecurity CRS v2.2.0
In-Reply-To: <1306523775.3377.6.camel@localhost.localdomain>
References: <CA045664.277EC%rbarnett@trustwave.com>
	<1306523775.3377.6.camel@localhost.localdomain>
Message-ID: <F35BA864-76E0-4F1A-805A-04C2F700258A@trustwave.com>

Ah, I guess you aren't using ModSecurity v2.6.0. You should use the older variable name then - REQBODY_PROCESSOR_ERROR

Ryan

On May 27, 2011, at 3:16 PM, "Arthur Dent" <misc.lists at blueyonder.co.uk<mailto:misc.lists at blueyonder.co.uk>> wrote:

On Thu, 2011-05-26 at 18:11 -0500, Ryan Barnett wrote:
Hello everyone,
I am pleased to announce the release of the OWASP ModSecurity Core Rule Set (CRS) v2.2.0.  This is a significant update as we have added a number of very important capabilities.

CHANGE LOG -


Hi Ryan,

I have just installed this CRS update and on restarting Apache I get the
following error:

# service httpd restart
Stopping httpd:                                            [  OK  ]
Starting httpd: Syntax error on line 91 of /etc/httpd/modsecurity.d/base_rules/modsecurity_crs_20_protocol_violations.conf:
Error creating rule: Unknown variable: REQBODY_ERROR
                                                          [FAILED]

I am just dashing out and don't have time to troubleshoot. For now I
have just commented out lines 90 & 91

##SecRule REQBODY_ERROR "!@eq 0" \
##    "phase:2,t:none,block,msg:'Failed to parse request body.',id:'960912',logdata:'%{reqbody_error_msg}',severity:2,setvar:'tx.msg=%{rule.msg}',setvar:'tx.id=%{rule.id}',tag:'RULE_MATURITY/7',tag:'RULE_ACCURACY/8',tag:'https://www.owasp.org/index.php/ModSecurity_CRS_RuleID-%{tx.id}',setvar:tx.anomaly_score=+%{tx.critical_anomaly_score},setvar:tx.protocol_violation_score=+%{tx.critical_anomaly_score},setvar:tx.%{rule.id}-PROTOCOL_VIOLATION/INVALID_REQ-%{matched_var_name}=%{matched_var}"

What is the proper fix?

Thanks in advance...

Mark

<signature.asc>
_______________________________________________
Owasp-modsecurity-core-rule-set mailing list
Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org>
https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set

________________________________
This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is STRICTLY PROHIBITED. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

From misc.lists at blueyonder.co.uk  Fri May 27 17:33:57 2011
From: misc.lists at blueyonder.co.uk (Arthur Dent)
Date: Fri, 27 May 2011 22:33:57 +0100
Subject: [Owasp-modsecurity-core-rule-set] Announcing Release of OWASP
 ModSecurity CRS v2.2.0
In-Reply-To: <F35BA864-76E0-4F1A-805A-04C2F700258A@trustwave.com>
References: <CA045664.277EC%rbarnett@trustwave.com>
	<1306523775.3377.6.camel@localhost.localdomain>
	<F35BA864-76E0-4F1A-805A-04C2F700258A@trustwave.com>
Message-ID: <1306532037.3377.11.camel@localhost.localdomain>

On Fri, 2011-05-27 at 16:19 -0500, Ryan Barnett wrote:
> Ah, I guess you aren't using ModSecurity v2.6.0. You should use the older variable name then - REQBODY_PROCESSOR_ERROR
> 

Ahhh!

I'm running on Fedora 13 and am planning to upgrade to Fedora 15 this
weekend (time permitting) so I haven't done any updates for some time...

REQBODY_PROCESSOR_ERROR works thanks!

As always - your help is much appreciated.

Mark


> Ryan
> 
> On May 27, 2011, at 3:16 PM, "Arthur Dent" <misc.lists at blueyonder.co.uk<mailto:misc.lists at blueyonder.co.uk>> wrote:
> 
> On Thu, 2011-05-26 at 18:11 -0500, Ryan Barnett wrote:
> Hello everyone,
> I am pleased to announce the release of the OWASP ModSecurity Core Rule Set (CRS) v2.2.0.  This is a significant update as we have added a number of very important capabilities.
> 
> CHANGE LOG -
> 
> 
> Hi Ryan,
> 
> I have just installed this CRS update and on restarting Apache I get the
> following error:
> 
> # service httpd restart
> Stopping httpd:                                            [  OK  ]
> Starting httpd: Syntax error on line 91 of /etc/httpd/modsecurity.d/base_rules/modsecurity_crs_20_protocol_violations.conf:
> Error creating rule: Unknown variable: REQBODY_ERROR
>                                                           [FAILED]
> 
> I am just dashing out and don't have time to troubleshoot. For now I
> have just commented out lines 90 & 91
> 
> ##SecRule REQBODY_ERROR "!@eq 0" \
> ##    "phase:2,t:none,block,msg:'Failed to parse request body.',id:'960912',logdata:'%{reqbody_error_msg}',severity:2,setvar:'tx.msg=%{rule.msg}',setvar:'tx.id=%{rule.id}',tag:'RULE_MATURITY/7',tag:'RULE_ACCURACY/8',tag:'https://www.owasp.org/index.php/ModSecurity_CRS_RuleID-%{tx.id}',setvar:tx.anomaly_score=+%{tx.critical_anomaly_score},setvar:tx.protocol_violation_score=+%{tx.critical_anomaly_score},setvar:tx.%{rule.id}-PROTOCOL_VIOLATION/INVALID_REQ-%{matched_var_name}=%{matched_var}"
> 
> What is the proper fix?
> 
> Thanks in advance...
> 
> Mark
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 198 bytes
Desc: This is a digitally signed message part
Url : https://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20110527/a73672e7/attachment.bin 

From michael.haas10 at gmail.com  Tue May 31 11:57:12 2011
From: michael.haas10 at gmail.com (Michael Haas)
Date: Tue, 31 May 2011 17:57:12 +0200
Subject: [Owasp-modsecurity-core-rule-set] modsecurity_50_outbound.data
Message-ID: <BANLkTimbmY_gOQLWx5pmhg5K+x+wBnjEBw@mail.gmail.com>

Hello,

one of our application server products is sending a different default index
page back as it is used in modsecurity_50_outbound.data.
The html looks like this

<HTML><HEAD><TITLE>
Index of /TestContext/
</TITLE></HEAD><BODY>
<H1 align="left">Index of /TestContext/</H1>
...
...
</TBODY></TABLE></BODY></HTML>
so there is a newline after <TITLE>. In modsecurity_50_outbound.data there
is only a entry without the newline.
The debug log shows Target value: "<HTML><HEAD><TITLE>\nIndex of
/TestContext/  ......." so i tried to add "<TITLE>\nIndex of" or
"<TITLE>\\nIndex of" but the rule is not matching.
Does someone know whats the right syntax to match a newline within
@pmFromFile.

Thanks in Advance
Michael
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20110531/b4115238/attachment.html 

