From RBarnett at trustwave.com  Fri Jan  4 19:44:26 2013
From: RBarnett at trustwave.com (Ryan Barnett)
Date: Fri, 4 Jan 2013 19:44:26 +0000
Subject: [Owasp-modsecurity-core-rule-set] [Mod-security-rules]
 modsecurity_50_outbound_malware.data not being referenced
In-Reply-To: <SNT128-DS69BB364810CD74475A794A4200@phx.gbl>
Message-ID: <01987910BF74B341B5890120BCCE77DF0B59BF@SKYMB1.trustwave.com>

Since this pertains to the OWASP ModSecurity CRS, I am cc'ing that list as well.  In the future, please sign-up for and send OWASP CRS question to that list.

That malware.data file is old and should be removed.  At one point, we were testing some outbound rules to detect known malicious URLs that were captured by Snort/VRT team and were listed on their labs site here - http://labs.snort.org/iplists/

We discontinued it as the lists would need to be updated daily so they wouldn't be stale and SourceFire has stopped posting these files.

FYI ? we have different commercial rules that look at outbound HTTP data looking for know malware links, etc? in our commercial rules feed - https://www.trustwave.com/modsecurity-rules-support.php

--
Ryan Barnett
Trustwave SpiderLabs
ModSecurity Project Leader
OWASP ModSecurity CRS Project Leader

From: Rolling Stone <jzy2000 at hotmail.com<mailto:jzy2000 at hotmail.com>>
Date: Friday, January 4, 2013 2:34 PM
To: "mod-security-rules at lists.sourceforge.net<mailto:mod-security-rules at lists.sourceforge.net>" <mod-security-rules at lists.sourceforge.net<mailto:mod-security-rules at lists.sourceforge.net>>
Subject: [Mod-security-rules] modsecurity_50_outbound_malware.data not being referenced

In OWASP_CRS/2.7.7, cannot find any .conf file referencing modsecurity_50_outbound_malware.data
I would like to know the rationale behind the scene, and how this file should be used to be useful.

Thanks,


________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is STRICTLY PROHIBITED. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20130104/986909ee/attachment.html>

From mmitchell at backstopsolutions.com  Fri Jan  4 20:22:21 2013
From: mmitchell at backstopsolutions.com (Matt Mitchell)
Date: Fri, 4 Jan 2013 20:22:21 +0000
Subject: [Owasp-modsecurity-core-rule-set] 'Multiple URL Encoding Detected',
	id:'950109' -- am I confused?
Message-ID: <CD0C961B.856A%mmitchell@backstopsolutions.com>

Hi all,

Thanks in advance for any help you can provide. I'm attempting to configure mod_security and the core rule set to handle traffic for our web application and am getting stuck trying to figure out the intended behavior of rule 950107. The problem I'm running into seems to stem from the fact that a literal % is being URI-encoded inside a query string (done "automagically" by jQuery in my case). As I'm reading rule 950109, it looks like any encoded character will cause it to trigger, which seems like not the intent of the rule (based on the name). I'd expect the rule to fire only in the case where the encoded % (%25) were then followed by two more (or u+4 more) digits, which would result from URI-encoding a string twice. While the encoding of the % as %25 isn't strictly necessary, I don't think it is, in and of itself, necessarily a problem. Here is an example request:

GET /searchController.jsp?searchText=%25name&maxResults=50

So I suppose I have a three-part question:

  1.  What, if anything, am I missing about the intent and implementation of 950109?
  2.  If its behavior is deemed to be "correct", how would you suggest working around this? I have been trying to be surgical about modifying the core rules, only either whitelisting entire endpoints or by removing selected rules by ID after all had been loaded. I am sure I could re-add a modified version of 950109 that will not trigger on the particular endpoint in question, but is there a better way?
  3.  If its behavior is deemed to be incorrect, how should we (I) change it?

-m
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20130104/00cbd3a9/attachment.html>

From RBarnett at trustwave.com  Fri Jan  4 21:35:23 2013
From: RBarnett at trustwave.com (Ryan Barnett)
Date: Fri, 4 Jan 2013 21:35:23 +0000
Subject: [Owasp-modsecurity-core-rule-set] 'Multiple URL Encoding
 Detected', id:'950109' -- am I confused?
In-Reply-To: <CD0C961B.856A%mmitchell@backstopsolutions.com>
Message-ID: <01987910BF74B341B5890120BCCE77DF0B5B02@SKYMB1.trustwave.com>

Matt,
Comments inline below.

--
Ryan Barnett
Trustwave SpiderLabs
ModSecurity Project Leader
OWASP ModSecurity CRS Project Leader

From: Matt Mitchell <mmitchell at backstopsolutions.com<mailto:mmitchell at backstopsolutions.com>>
Date: Friday, January 4, 2013 3:22 PM
To: "owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>" <owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>
Subject: [Owasp-modsecurity-core-rule-set] 'Multiple URL Encoding Detected', id:'950109' -- am I confused?

Hi all,

Thanks in advance for any help you can provide. I'm attempting to configure mod_security and the core rule set to handle traffic for our web application and am getting stuck trying to figure out the intended behavior of rule 950107. The problem I'm running into seems to stem from the fact that a literal % is being URI-encoded inside a query string (done "automagically" by jQuery in my case). As I'm reading rule 950109, it looks like any encoded character will cause it to trigger, which seems like not the intent of the rule (based on the name). I'd expect the rule to fire only in the case where the encoded % (%25) were then followed by two more (or u+4 more) digits, which would result from URI-encoding a string twice. While the encoding of the % as %25 isn't strictly necessary, I don't think it is, in and of itself, necessarily a problem. Here is an example request:

GET /searchController.jsp?searchText=%25name&maxResults=50

So I suppose I have a three-part question:

  1.  What, if anything, am I missing about the intent and implementation of 950109?

The purpose of this rule is to identify multiple encodings.  The key to understanding the rule processing is the fact that the ARGS collection automatically applies 1 URL decode to the content before passing to the operator.  This is key as it means that if there is any % char following by at least 2 alpha-numeric chars, then it is probably encoded content remaining.


  1.  If its behavior is deemed to be "correct", how would you suggest working around this? I have been trying to be surgical about modifying the core rules, only either whitelisting entire endpoints or by removing selected rules by ID after all had been loaded. I am sure I could re-add a modified version of 950109 that will not trigger on the particular endpoint in question, but is there a better way?

I think that we might be able to improve the Regex to look for multiple, continued encoding and not just 1 encoded char such as %25.

I will see about updating the Regex and let the list know.

-Ryan


  1.  If its behavior is deemed to be incorrect, how should we (I) change it?

-m

________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is STRICTLY PROHIBITED. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20130104/6b288a93/attachment.html>

From edarko at promnetwork.com  Mon Jan  7 17:26:48 2013
From: edarko at promnetwork.com (Emmanuel Darko)
Date: Mon, 7 Jan 2013 17:26:48 +0000
Subject: [Owasp-modsecurity-core-rule-set] Inbound Anomaly Score Filter
Message-ID: <09B328B0A41D8849BB9C5F9B5BF92A2C01D0290E@HQEX01.promontory-hq.promcapital.com>

We do scan our network every other week and this generates the error log below, we will like to filter it out so we do not get paged for it as It generates about 3,00 error logs

"Sat Dec 29 14:07:32 2012 [error] [client 10.32.60.6] ModSecurity:Warnig Operator LT match 20 at TX:inbound_anomaly_score.
"/etc/httpd/modsecurity.d/base_rules/modsecurity_crs_60_correlation.conf:] [line "31"]
[msg "Inbound Anomaly Score (Total Inbound score: 15, SQLi=, XSS=) : Host header is a numeric IP address'] [hostname "67.126.8.65"] [url"/default.jsp"]"

I have read a few blogs on this but want to be sure of the action to be taken, so if someone can give me an idea which will simplify what I have read via google.

Thanks
Emma
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20130107/67e6201a/attachment.html>

From jamuse at gmail.com  Mon Jan  7 19:29:22 2013
From: jamuse at gmail.com (Josh Amishav-Zlatin)
Date: Mon, 7 Jan 2013 21:29:22 +0200
Subject: [Owasp-modsecurity-core-rule-set] Inbound Anomaly Score Filter
In-Reply-To: <09B328B0A41D8849BB9C5F9B5BF92A2C01D0290E@HQEX01.promontory-hq.promcapital.com>
References: <09B328B0A41D8849BB9C5F9B5BF92A2C01D0290E@HQEX01.promontory-hq.promcapital.com>
Message-ID: <CANnPkinhUac6RUfLGRfgdEf25m0ij98O2=eL=uxq5BVUEqLO4g@mail.gmail.com>

On Mon, Jan 7, 2013 at 7:26 PM, Emmanuel Darko <edarko at promnetwork.com>wrote:

>  We do scan our network every other week and this generates the error log
> below, we will like to filter it out so we do not get paged for it as It
> generates about 3,00 error logs
>

Hi Emmanuel,

There are a number of ways you can handle authorized scanning. You may want
to read:

http://blog.spiderlabs.com/2010/12/advanced-topic-of-the-week-handling-authorized-scanning-traffic.html

--
 - Josh

> ****
>
> ** **
>
> ?Sat Dec 29 14:07:32 2012 [error] [client 10.32.60.6] ModSecurity:Warnig
> Operator LT match 20 at TX:inbound_anomaly_score.****
>
> "/etc/httpd/modsecurity.d/base_rules/modsecurity_crs_60_correlation.conf:]
> [line "31"]****
>
> [msg "Inbound Anomaly Score (Total Inbound score: 15, SQLi=, XSS=) : Host
> header is a numeric IP address'] [hostname "67.126.8.65"]
> [url"/default.jsp"]?****
>
> ** **
>
> I have read a few blogs on this but want to be sure of the action to be
> taken, so if someone can give me an idea which will simplify what I have
> read via google.****
>
> ** **
>
> Thanks****
>
> Emma****
>
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20130107/2ec22c8b/attachment.html>

From mmitchell at backstopsolutions.com  Mon Jan  7 19:57:17 2013
From: mmitchell at backstopsolutions.com (Matt Mitchell)
Date: Mon, 7 Jan 2013 19:57:17 +0000
Subject: [Owasp-modsecurity-core-rule-set] 'Multiple URL Encoding
 Detected', id:'950109' -- am I confused?
In-Reply-To: <01987910BF74B341B5890120BCCE77DF0B5B02@SKYMB1.trustwave.com>
Message-ID: <CD108226.85B4%mmitchell@backstopsolutions.com>

Thanks Ryan.

I was taking a crack at this and it looks like the decoding of the '%25' to '%' is happening before this rule is getting applied (despite the t:none). Is that the case? I started using curl to poke it to see when things were triggering, and only the %25 appearance is causing issues (when followed by 2 [0-9a-fA-F] characters in this case). Which looks like it makes it impossible to submit a literal '%' as a parameter in the general case (if it's followed by something that matches the regex).

I might just have to disable this rule unless you have any ideas of how to improve it. It seems really hard to solve in the general case, as there are lots of things that can follow a literal '%25' and without attempting to actually do the decoding until decode(input) == input you won't know if there's an attack being attempted or if it's legitimately encoded data.

-m


From: Ryan Barnett <RBarnett at trustwave.com<mailto:RBarnett at trustwave.com>>
Date: Friday, January 4, 2013 3:35 PM
To: Matt Mitchell <mmitchell at backstopsolutions.com<mailto:mmitchell at backstopsolutions.com>>, "owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>" <owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>
Subject: Re: [Owasp-modsecurity-core-rule-set] 'Multiple URL Encoding Detected', id:'950109' -- am I confused?

Matt,
Comments inline below.

--
Ryan Barnett
Trustwave SpiderLabs
ModSecurity Project Leader
OWASP ModSecurity CRS Project Leader

From: Matt Mitchell <mmitchell at backstopsolutions.com<mailto:mmitchell at backstopsolutions.com>>
Date: Friday, January 4, 2013 3:22 PM
To: "owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>" <owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>
Subject: [Owasp-modsecurity-core-rule-set] 'Multiple URL Encoding Detected', id:'950109' -- am I confused?

Hi all,

Thanks in advance for any help you can provide. I'm attempting to configure mod_security and the core rule set to handle traffic for our web application and am getting stuck trying to figure out the intended behavior of rule 950107. The problem I'm running into seems to stem from the fact that a literal % is being URI-encoded inside a query string (done "automagically" by jQuery in my case). As I'm reading rule 950109, it looks like any encoded character will cause it to trigger, which seems like not the intent of the rule (based on the name). I'd expect the rule to fire only in the case where the encoded % (%25) were then followed by two more (or u+4 more) digits, which would result from URI-encoding a string twice. While the encoding of the % as %25 isn't strictly necessary, I don't think it is, in and of itself, necessarily a problem. Here is an example request:

GET /searchController.jsp?searchText=%25name&maxResults=50

So I suppose I have a three-part question:

  1.  What, if anything, am I missing about the intent and implementation of 950109?

The purpose of this rule is to identify multiple encodings.  The key to understanding the rule processing is the fact that the ARGS collection automatically applies 1 URL decode to the content before passing to the operator.  This is key as it means that if there is any % char following by at least 2 alpha-numeric chars, then it is probably encoded content remaining.


  1.  If its behavior is deemed to be "correct", how would you suggest working around this? I have been trying to be surgical about modifying the core rules, only either whitelisting entire endpoints or by removing selected rules by ID after all had been loaded. I am sure I could re-add a modified version of 950109 that will not trigger on the particular endpoint in question, but is there a better way?

I think that we might be able to improve the Regex to look for multiple, continued encoding and not just 1 encoded char such as %25.

I will see about updating the Regex and let the list know.

-Ryan


  1.  If its behavior is deemed to be incorrect, how should we (I) change it?

-m

________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is STRICTLY PROHIBITED. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20130107/b56090c7/attachment.html>

From RBarnett at trustwave.com  Thu Jan 10 18:42:10 2013
From: RBarnett at trustwave.com (Ryan Barnett)
Date: Thu, 10 Jan 2013 18:42:10 +0000
Subject: [Owasp-modsecurity-core-rule-set] ModSecurity Mitigations for Ruby
	on Rails XML Exploits
Message-ID: <01987910BF74B341B5890120BCCE77DF0BBE2E@SKYMB1.trustwave.com>

FYI - http://blog.spiderlabs.com/2013/01/modsecurity-mitigations-for-ruby-on-rails-xml-exploits.html

If anyone deploys these rules, please let me know if you get any hits.  It is being speculated that widespread scanning/exploitation is eminent.

--
Ryan Barnett
Trustwave SpiderLabs
ModSecurity Project Leader
OWASP ModSecurity CRS Project Leader

________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is STRICTLY PROHIBITED. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20130110/2ff3907a/attachment.html>

From P.Beckett at uea.ac.uk  Mon Jan 14 13:22:21 2013
From: P.Beckett at uea.ac.uk (Paul Beckett (ITCS))
Date: Mon, 14 Jan 2013 13:22:21 +0000
Subject: [Owasp-modsecurity-core-rule-set] experimental brute_force
	protection rule
Message-ID: <4D4373D703ED1C41BE658211EED9530B16B35E62@ueastfexch02.UEA.AC.UK>

I'm pretty new to this list, so apologies if this is the wrong place for this.

I've just been looking at the experimental brute force protection rules in OWASP CRS v2.2.7. Currently I still have the default brute_force_protected_urls value of "/login.jsp /partner_login.php", and was initially surprised to see that the home-page of my site triggered these rules. I think this is because the homepage "/" is always going to be within "/login.jsp" and will therefore never bypass rule 981039.

For me, matching the home-page of my site, wasn't my expected behaviour for this rule. To avoid matching the site home-page I guess I could either remove the leading slash in the brute_force_protected_urls , or for sites that only require protecting a single URL I could change the @within operator to be @streq. Any other thoughts / ideas would be welcome.

Cheers,
Paul

modsecurity_crs_10_setup.conf:

SecAction \

  "id:'900014', \

  phase:1, \

  t:none, \

  setvar:'tx.brute_force_protected_urls=/login.jsp /partner_login.php', \

  setvar:'tx.brute_force_burst_time_slice=60', \

  setvar:'tx.brute_force_counter_threshold=10', \

  setvar:'tx.brute_force_block_timeout=300', \

  nolog, \

  pass"





modsecurity_crs_11_brute_force.conf

SecRule IP:BRUTE_FORCE_BLOCK "@eq 1" "chain,phase:1,id:'981036',block,msg:'Brute Force Attack Identified from %{remote_addr} (%{tx.brute_force_block_counter} hits since last alert)',setvar:ip.brute_force_block_counter=+1"

        SecRule &IP:BRUTE_FORCE_BLOCK_FLAG "@eq 0" "setvar:ip.brute_force_block_flag=1,expirevar:ip.brute_force_block_flag=60,setvar:tx.brute_force_block_counter=%{ip.brute_force_block_counter},setvar:ip.brute_force_block_counter=0"



#

# Block and track # of requests but don't log

SecRule IP:BRUTE_FORCE_BLOCK "@eq 1" "phase:1,id:'981037',block,nolog,setvar:ip.brute_force_block_counter=+1"



#

# skipAfter Checks

# There are different scenarios where we don't want to do checks -

# 1. If the user has not defined any URLs for Brute Force Protection in the 10 config file

# 2. If the current URL is not listed as a protected URL

# 3. If the current IP address has already been blocked due to high requests

# In these cases, we skip doing the request counts.

#

SecRule &TX:BRUTE_FORCE_PROTECTED_URLS "@eq 0" "phase:5,id:'981038',t:none,nolog,pass,skipAfter:END_BRUTE_FORCE_PROTECTION_CHECKS"

SecRule REQUEST_FILENAME "!@within %{tx.brute_force_protected_urls}" "phase:5,id:'981039',t:none,nolog,pass,skipAfter:END_BRUTE_FORCE_PROTECTION_CHECKS"

SecRule IP:BRUTE_FORCE_BLOCK "@eq 1" "phase:5,id:'981040',t:none,nolog,pass,skipAfter:END_BRUTE_FORCE_PROTECTION_CHECKS"



#

# Brute Force Counter

# Count the number of requests to these resoures

#

SecAction "phase:5,id:'981041',t:none,nolog,pass,setvar:ip.brute_force_counter=+1"



#

# Check Brute Force Counter

# If the request count is greater than or equal to 50 within 5 mins,

# we then set the burst counter

#

SecRule IP:BRUTE_FORCE_COUNTER "@gt %{tx.brute_force_counter_threshold}" "phase:5,id:'981042',t:none,nolog,pass,t:none,setvar:ip.brute_force_burst_counter=+1,expirevar:ip.brute_force_burst_counter=%{tx.brute_force_burst_time_slice},setvar:!ip.brute_force_counter"



#

# Check Brute Force Burst Counter and set Block

# Check the burst counter - if greater than or equal to 2, then we set the IP

# block variable for 5 mins and issue an alert.

#

SecRule IP:BRUTE_FORCE_BURST_COUNTER "@ge 2" "phase:5,id:'981043',t:none,log,pass,msg:'Potential Brute Force Attack from %{remote_addr} - # of Request Bursts: %{ip.brute_force_burst_counter}',setvar:ip.brute_force_block=1,expirevar:ip.brute_force_block=%{tx.brute_force_block_timeout}"



SecMarker END_BRUTE_FORCE_PROTECTION_CHECKS

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20130114/c86c27a6/attachment.html>

From RBarnett at trustwave.com  Mon Jan 14 13:33:47 2013
From: RBarnett at trustwave.com (Ryan Barnett)
Date: Mon, 14 Jan 2013 13:33:47 +0000
Subject: [Owasp-modsecurity-core-rule-set] experimental brute_force
 protection rule
In-Reply-To: <4D4373D703ED1C41BE658211EED9530B16B35E62@ueastfexch02.UEA.AC.UK>
Message-ID: <01987910BF74B341B5890120BCCE77DF0BF94F@SKYMB1.trustwave.com>



From: "Paul Beckett (ITCS)" <P.Beckett at uea.ac.uk<mailto:P.Beckett at uea.ac.uk>>
Date: Monday, January 14, 2013 8:22 AM
To: "owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>" <owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>
Subject: [Owasp-modsecurity-core-rule-set] experimental brute_force protection rule

I?m pretty new to this list, so apologies if this is the wrong place for this.

I?ve just been looking at the experimental brute force protection rules in OWASP CRS v2.2.7. Currently I still have the default brute_force_protected_urls value of ?/login.jsp /partner_login.php?, and was initially surprised to see that the home-page of my site triggered these rules. I think this is because the homepage ?/? is always going to be within ?/login.jsp? and will therefore never bypass rule 981039.


Hmm, yes, good catch.

For me, matching the home-page of my site, wasn?t my expected behaviour for this rule. To avoid matching the site home-page I guess I could either remove the leading slash in the brute_force_protected_urls , or for sites that only require protecting a single URL I could change the @within operator to be @streq. Any other thoughts / ideas would be welcome.


I think that you should change 981039 below to look like this instead -

SecRule REQUEST_FILENAME "@pm %{tx.brute_force_protected_urls}" "phase:5,id:'981039',t:none,nolog,pass,skipAfter:END_BRUTE_FORCE_PROTECTION_CHECKS"


Hopefully this works for you,
Ryan


Cheers,
Paul

modsecurity_crs_10_setup.conf:

SecAction \

  "id:'900014', \

  phase:1, \

  t:none, \

  setvar:'tx.brute_force_protected_urls=/login.jsp /partner_login.php', \

  setvar:'tx.brute_force_burst_time_slice=60', \

  setvar:'tx.brute_force_counter_threshold=10', \

  setvar:'tx.brute_force_block_timeout=300', \

  nolog, \

  pass"





modsecurity_crs_11_brute_force.conf

SecRule IP:BRUTE_FORCE_BLOCK "@eq 1" "chain,phase:1,id:'981036',block,msg:'Brute Force Attack Identified from %{remote_addr} (%{tx.brute_force_block_counter} hits since last alert)',setvar:ip.brute_force_block_counter=+1"

        SecRule &IP:BRUTE_FORCE_BLOCK_FLAG "@eq 0" "setvar:ip.brute_force_block_flag=1,expirevar:ip.brute_force_block_flag=60,setvar:tx.brute_force_block_counter=%{ip.brute_force_block_counter},setvar:ip.brute_force_block_counter=0"



#

# Block and track # of requests but don't log

SecRule IP:BRUTE_FORCE_BLOCK "@eq 1" "phase:1,id:'981037',block,nolog,setvar:ip.brute_force_block_counter=+1"



#

# skipAfter Checks

# There are different scenarios where we don't want to do checks -

# 1. If the user has not defined any URLs for Brute Force Protection in the 10 config file

# 2. If the current URL is not listed as a protected URL

# 3. If the current IP address has already been blocked due to high requests

# In these cases, we skip doing the request counts.

#

SecRule &TX:BRUTE_FORCE_PROTECTED_URLS "@eq 0" "phase:5,id:'981038',t:none,nolog,pass,skipAfter:END_BRUTE_FORCE_PROTECTION_CHECKS"

SecRule REQUEST_FILENAME "!@within %{tx.brute_force_protected_urls}" "phase:5,id:'981039',t:none,nolog,pass,skipAfter:END_BRUTE_FORCE_PROTECTION_CHECKS"

SecRule IP:BRUTE_FORCE_BLOCK "@eq 1" "phase:5,id:'981040',t:none,nolog,pass,skipAfter:END_BRUTE_FORCE_PROTECTION_CHECKS"



#

# Brute Force Counter

# Count the number of requests to these resoures

#

SecAction "phase:5,id:'981041',t:none,nolog,pass,setvar:ip.brute_force_counter=+1"



#

# Check Brute Force Counter

# If the request count is greater than or equal to 50 within 5 mins,

# we then set the burst counter

#

SecRule IP:BRUTE_FORCE_COUNTER "@gt %{tx.brute_force_counter_threshold}" "phase:5,id:'981042',t:none,nolog,pass,t:none,setvar:ip.brute_force_burst_counter=+1,expirevar:ip.brute_force_burst_counter=%{tx.brute_force_burst_time_slice},setvar:!ip.brute_force_counter"



#

# Check Brute Force Burst Counter and set Block

# Check the burst counter - if greater than or equal to 2, then we set the IP

# block variable for 5 mins and issue an alert.

#

SecRule IP:BRUTE_FORCE_BURST_COUNTER "@ge 2" "phase:5,id:'981043',t:none,log,pass,msg:'Potential Brute Force Attack from %{remote_addr} - # of Request Bursts: %{ip.brute_force_burst_counter}',setvar:ip.brute_force_block=1,expirevar:ip.brute_force_block=%{tx.brute_force_block_timeout}"



SecMarker END_BRUTE_FORCE_PROTECTION_CHECKS


________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is STRICTLY PROHIBITED. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20130114/f848d29a/attachment-0001.html>

From P.Beckett at uea.ac.uk  Mon Jan 14 13:54:50 2013
From: P.Beckett at uea.ac.uk (Paul Beckett (ITCS))
Date: Mon, 14 Jan 2013 13:54:50 +0000
Subject: [Owasp-modsecurity-core-rule-set] experimental brute_force
 protection rule
In-Reply-To: <01987910BF74B341B5890120BCCE77DF0BF94F@SKYMB1.trustwave.com>
References: <4D4373D703ED1C41BE658211EED9530B16B35E62@ueastfexch02.UEA.AC.UK>
	<01987910BF74B341B5890120BCCE77DF0BF94F@SKYMB1.trustwave.com>
Message-ID: <4D4373D703ED1C41BE658211EED9530B16B36ED7@ueastfexch02.UEA.AC.UK>

Ryan,
Thanks for the very quick response.

The proposed modification, doesn't work for me. The original rule negated the @within match. I'm still figuring out the modsecurity rule language so I'm not at all sure about this...... but I guess it's not as simple as negating @pm if you have multiple values in brute_force_protected_urls.

Cheers,
Paul



From: Ryan Barnett [mailto:RBarnett at trustwave.com]
Sent: Monday, January 14, 2013 1:34 PM
To: Paul Beckett (ITCS); owasp-modsecurity-core-rule-set at lists.owasp.org
Subject: Re: [Owasp-modsecurity-core-rule-set] experimental brute_force protection rule



From: "Paul Beckett (ITCS)" <P.Beckett at uea.ac.uk<mailto:P.Beckett at uea.ac.uk>>
Date: Monday, January 14, 2013 8:22 AM
To: "owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>" <owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>
Subject: [Owasp-modsecurity-core-rule-set] experimental brute_force protection rule

I'm pretty new to this list, so apologies if this is the wrong place for this.

I've just been looking at the experimental brute force protection rules in OWASP CRS v2.2.7. Currently I still have the default brute_force_protected_urls value of "/login.jsp /partner_login.php", and was initially surprised to see that the home-page of my site triggered these rules. I think this is because the homepage "/" is always going to be within "/login.jsp" and will therefore never bypass rule 981039.


Hmm, yes, good catch.

For me, matching the home-page of my site, wasn't my expected behaviour for this rule. To avoid matching the site home-page I guess I could either remove the leading slash in the brute_force_protected_urls , or for sites that only require protecting a single URL I could change the @within operator to be @streq. Any other thoughts / ideas would be welcome.


I think that you should change 981039 below to look like this instead -

SecRule REQUEST_FILENAME "@pm %{tx.brute_force_protected_urls}" "phase:5,id:'981039',t:none,nolog,pass,skipAfter:END_BRUTE_FORCE_PROTECTION_CHECKS"


Hopefully this works for you,
Ryan


Cheers,
Paul

modsecurity_crs_10_setup.conf:

SecAction \

  "id:'900014', \

  phase:1, \

  t:none, \

  setvar:'tx.brute_force_protected_urls=/login.jsp /partner_login.php', \

  setvar:'tx.brute_force_burst_time_slice=60', \

  setvar:'tx.brute_force_counter_threshold=10', \

  setvar:'tx.brute_force_block_timeout=300', \

  nolog, \

  pass"





modsecurity_crs_11_brute_force.conf

SecRule IP:BRUTE_FORCE_BLOCK "@eq 1" "chain,phase:1,id:'981036',block,msg:'Brute Force Attack Identified from %{remote_addr} (%{tx.brute_force_block_counter} hits since last alert)',setvar:ip.brute_force_block_counter=+1"

        SecRule &IP:BRUTE_FORCE_BLOCK_FLAG "@eq 0" "setvar:ip.brute_force_block_flag=1,expirevar:ip.brute_force_block_flag=60,setvar:tx.brute_force_block_counter=%{ip.brute_force_block_counter},setvar:ip.brute_force_block_counter=0"



#

# Block and track # of requests but don't log

SecRule IP:BRUTE_FORCE_BLOCK "@eq 1" "phase:1,id:'981037',block,nolog,setvar:ip.brute_force_block_counter=+1"



#

# skipAfter Checks

# There are different scenarios where we don't want to do checks -

# 1. If the user has not defined any URLs for Brute Force Protection in the 10 config file

# 2. If the current URL is not listed as a protected URL

# 3. If the current IP address has already been blocked due to high requests

# In these cases, we skip doing the request counts.

#

SecRule &TX:BRUTE_FORCE_PROTECTED_URLS "@eq 0" "phase:5,id:'981038',t:none,nolog,pass,skipAfter:END_BRUTE_FORCE_PROTECTION_CHECKS"

SecRule REQUEST_FILENAME "!@within %{tx.brute_force_protected_urls}<mailto:!@within%20%25%7btx.brute_force_protected_urls%7d>" "phase:5,id:'981039',t:none,nolog,pass,skipAfter:END_BRUTE_FORCE_PROTECTION_CHECKS"

SecRule IP:BRUTE_FORCE_BLOCK "@eq 1" "phase:5,id:'981040',t:none,nolog,pass,skipAfter:END_BRUTE_FORCE_PROTECTION_CHECKS"



#

# Brute Force Counter

# Count the number of requests to these resoures

#

SecAction "phase:5,id:'981041',t:none,nolog,pass,setvar:ip.brute_force_counter=+1"



#

# Check Brute Force Counter

# If the request count is greater than or equal to 50 within 5 mins,

# we then set the burst counter

#

SecRule IP:BRUTE_FORCE_COUNTER "@gt %{tx.brute_force_counter_threshold}" "phase:5,id:'981042',t:none,nolog,pass,t:none,setvar:ip.brute_force_burst_counter=+1,expirevar:ip.brute_force_burst_counter=%{tx.brute_force_burst_time_slice},setvar:!ip.brute_force_counter"



#

# Check Brute Force Burst Counter and set Block

# Check the burst counter - if greater than or equal to 2, then we set the IP

# block variable for 5 mins and issue an alert.

#

SecRule IP:BRUTE_FORCE_BURST_COUNTER "@ge 2" "phase:5,id:'981043',t:none,log,pass,msg:'Potential Brute Force Attack from %{remote_addr} - # of Request Bursts: %{ip.brute_force_burst_counter}',setvar:ip.brute_force_block=1,expirevar:ip.brute_force_block=%{tx.brute_force_block_timeout}"



SecMarker END_BRUTE_FORCE_PROTECTION_CHECKS


________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is STRICTLY PROHIBITED. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20130114/7fe9b955/attachment-0001.html>

From RBarnett at trustwave.com  Mon Jan 14 14:27:11 2013
From: RBarnett at trustwave.com (Ryan Barnett)
Date: Mon, 14 Jan 2013 14:27:11 +0000
Subject: [Owasp-modsecurity-core-rule-set] experimental brute_force
 protection rule
In-Reply-To: <4D4373D703ED1C41BE658211EED9530B16B36ED7@ueastfexch02.UEA.AC.UK>
Message-ID: <01987910BF74B341B5890120BCCE77DF0BF9E5@SKYMB1.trustwave.com>

Right?. The issue here seems to be that, only for "/", we have a sub-string match.  Here is a quick fix.  Essentially you need to make that rule into a chained rule.  The first like is used to simply create a new custom variable that uses # chars to surround the request filename data.  The 2nd rule in the chain then runs the same -

SecRule REQUEST_FILENAME ".*" "chain,phase:5,id:'981039',t:none,nolog,pass,setvar:'tx.filename=#%{request_filename}#',skipAfter:END_BRUTE_FORCE_PROTECTION_CHECKS"
 SecRule TX:FILENAME "!@within %{tx.brute_force_protected_urls}"

For this to work, you would then need to modify your URL list in the 10 file like this -


SecAction \

  "id:'900014', \

  phase:1, \

  t:none, \

  setvar:'tx.brute_force_protected_urls=#/login.jsp# #/partner_login.php#', \

  setvar:'tx.brute_force_burst_time_slice=60', \

  setvar:'tx.brute_force_counter_threshold=10', \

  setvar:'tx.brute_force_block_timeout=300', \

  nolog, \

  pass"


This should work.

-Ryan

From: "Paul Beckett (ITCS)" <P.Beckett at uea.ac.uk<mailto:P.Beckett at uea.ac.uk>>
Date: Monday, January 14, 2013 8:54 AM
To: "owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>" <owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>
Subject: Re: [Owasp-modsecurity-core-rule-set] experimental brute_force protection rule

Ryan,
Thanks for the very quick response.

The proposed modification, doesn?t work for me. The original rule negated the @within match. I?m still figuring out the modsecurity rule language so I?m not at all sure about this?? but I guess it?s not as simple as negating @pm if you have multiple values in brute_force_protected_urls.

Cheers,
Paul



From: Ryan Barnett [mailto:RBarnett at trustwave.com]
Sent: Monday, January 14, 2013 1:34 PM
To: Paul Beckett (ITCS); owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>
Subject: Re: [Owasp-modsecurity-core-rule-set] experimental brute_force protection rule



From: "Paul Beckett (ITCS)" <P.Beckett at uea.ac.uk<mailto:P.Beckett at uea.ac.uk>>
Date: Monday, January 14, 2013 8:22 AM
To: "owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>" <owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>
Subject: [Owasp-modsecurity-core-rule-set] experimental brute_force protection rule

I?m pretty new to this list, so apologies if this is the wrong place for this.

I?ve just been looking at the experimental brute force protection rules in OWASP CRS v2.2.7. Currently I still have the default brute_force_protected_urls value of ?/login.jsp /partner_login.php?, and was initially surprised to see that the home-page of my site triggered these rules. I think this is because the homepage ?/? is always going to be within ?/login.jsp? and will therefore never bypass rule 981039.


Hmm, yes, good catch.

For me, matching the home-page of my site, wasn?t my expected behaviour for this rule. To avoid matching the site home-page I guess I could either remove the leading slash in the brute_force_protected_urls , or for sites that only require protecting a single URL I could change the @within operator to be @streq. Any other thoughts / ideas would be welcome.


I think that you should change 981039 below to look like this instead -

SecRule REQUEST_FILENAME "@pm %{tx.brute_force_protected_urls}" "phase:5,id:'981039',t:none,nolog,pass,skipAfter:END_BRUTE_FORCE_PROTECTION_CHECKS"


Hopefully this works for you,
Ryan


Cheers,
Paul

modsecurity_crs_10_setup.conf:

SecAction \

  "id:'900014', \

  phase:1, \

  t:none, \

  setvar:'tx.brute_force_protected_urls=/login.jsp /partner_login.php', \

  setvar:'tx.brute_force_burst_time_slice=60', \

  setvar:'tx.brute_force_counter_threshold=10', \

  setvar:'tx.brute_force_block_timeout=300', \

  nolog, \

  pass"





modsecurity_crs_11_brute_force.conf

SecRule IP:BRUTE_FORCE_BLOCK "@eq 1" "chain,phase:1,id:'981036',block,msg:'Brute Force Attack Identified from %{remote_addr} (%{tx.brute_force_block_counter} hits since last alert)',setvar:ip.brute_force_block_counter=+1"

        SecRule &IP:BRUTE_FORCE_BLOCK_FLAG "@eq 0" "setvar:ip.brute_force_block_flag=1,expirevar:ip.brute_force_block_flag=60,setvar:tx.brute_force_block_counter=%{ip.brute_force_block_counter},setvar:ip.brute_force_block_counter=0"



#

# Block and track # of requests but don't log

SecRule IP:BRUTE_FORCE_BLOCK "@eq 1" "phase:1,id:'981037',block,nolog,setvar:ip.brute_force_block_counter=+1"



#

# skipAfter Checks

# There are different scenarios where we don't want to do checks -

# 1. If the user has not defined any URLs for Brute Force Protection in the 10 config file

# 2. If the current URL is not listed as a protected URL

# 3. If the current IP address has already been blocked due to high requests

# In these cases, we skip doing the request counts.

#

SecRule &TX:BRUTE_FORCE_PROTECTED_URLS "@eq 0" "phase:5,id:'981038',t:none,nolog,pass,skipAfter:END_BRUTE_FORCE_PROTECTION_CHECKS"

SecRule REQUEST_FILENAME "!@within %{tx.brute_force_protected_urls}<mailto:!@within%20%25%7btx.brute_force_protected_urls%7d>" "phase:5,id:'981039',t:none,nolog,pass,skipAfter:END_BRUTE_FORCE_PROTECTION_CHECKS"

SecRule IP:BRUTE_FORCE_BLOCK "@eq 1" "phase:5,id:'981040',t:none,nolog,pass,skipAfter:END_BRUTE_FORCE_PROTECTION_CHECKS"



#

# Brute Force Counter

# Count the number of requests to these resoures

#

SecAction "phase:5,id:'981041',t:none,nolog,pass,setvar:ip.brute_force_counter=+1"



#

# Check Brute Force Counter

# If the request count is greater than or equal to 50 within 5 mins,

# we then set the burst counter

#

SecRule IP:BRUTE_FORCE_COUNTER "@gt %{tx.brute_force_counter_threshold}" "phase:5,id:'981042',t:none,nolog,pass,t:none,setvar:ip.brute_force_burst_counter=+1,expirevar:ip.brute_force_burst_counter=%{tx.brute_force_burst_time_slice},setvar:!ip.brute_force_counter"



#

# Check Brute Force Burst Counter and set Block

# Check the burst counter - if greater than or equal to 2, then we set the IP

# block variable for 5 mins and issue an alert.

#

SecRule IP:BRUTE_FORCE_BURST_COUNTER "@ge 2" "phase:5,id:'981043',t:none,log,pass,msg:'Potential Brute Force Attack from %{remote_addr} - # of Request Bursts: %{ip.brute_force_burst_counter}',setvar:ip.brute_force_block=1,expirevar:ip.brute_force_block=%{tx.brute_force_block_timeout}"



SecMarker END_BRUTE_FORCE_PROTECTION_CHECKS


________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is STRICTLY PROHIBITED. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
_______________________________________________ Owasp-modsecurity-core-rule-set mailing list Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set

________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is STRICTLY PROHIBITED. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20130114/9bdd68f3/attachment-0001.html>

From RBarnett at trustwave.com  Fri Jan 18 16:47:37 2013
From: RBarnett at trustwave.com (Ryan Barnett)
Date: Fri, 18 Jan 2013 16:47:37 +0000
Subject: [Owasp-modsecurity-core-rule-set] [BUGFIX]
 "modsecurity_crs_41_xss_attacks.conf" performance optimization test not
 working
In-Reply-To: <20130118163931.GA26706@brouette>
Message-ID: <01987910BF74B341B5890120BCCE77DF0C52AD@SKYMB1.trustwave.com>

It is now fixed in GitHub repo.

I opted to do this instead which simply looks for the existence of that TX
variable using the & char.  If it not present (meaning that the @pm rule
did not find any matches), then it will initiate the skipAfter action -

SecRule &TX:PM_XSS_SCORE "@eq 0"
"phase:2,id:'981018',t:none,pass,skipAfter:END_XSS_CHECK,nolog"


--
Ryan Barnett



On 1/18/13 11:39 AM, "Damien Wyart" <damien.wyart at gmail.com> wrote:

>Hi,
>
>I am also annoyed by this bug in the CRS and suprised nobody responded
>to the two messages explaining the bug.
>
>Is it plan to integrate this in 2.2.7? Or is there a need for a GitHub
>pull request (even for such a trivial fix)?
>
>If this is not fixed upstream, some users (including me) might need to
>backport this manually, this is really annoying.
>
>Many thanks in advance,
>
>
>Damien
>
>> Hi Ryan, are you planning to add this little fix to the 2.2.7? That
>>would really be great!
>
>> Thank you!
>
>> On Friday, November 9, 2012, rm4dillo D wrote:
>> Hi,
>
>> The "base_rules/modsecurity_crs_41_xss_attacks.conf" rules file starts
>>with a smart rule that checks the presence of some keywords (Ex. script
>>javascript...) and depending on the result, it decides to run deeper
>>rules or just skip them. The problem is that the conditional "skip"
>>never works because it tests the "pm_xss_score" variable which is not
>>initialized.
>
>>     SecRule TX:PM_XSS_SCORE "@eq 0"
>>"phase:2,id:'981018',t:none,pass,skipAfter:END_XSS_CHECK,nolog"
>
>> To fix this, I just directive this at the beginning of the file:
>
>>     SecAction
>>"phase:2,rev:'2.2.5',t:none,pass,nolog,setvar:tx.pm_xss_score=0"
>
>> It would be nice to fix this in the next core rule set release.
>> Thank you in advance.
>> Rm4dillo
>


________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is STRICTLY PROHIBITED. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.


From RBarnett at trustwave.com  Fri Jan 18 19:05:49 2013
From: RBarnett at trustwave.com (Ryan Barnett)
Date: Fri, 18 Jan 2013 19:05:49 +0000
Subject: [Owasp-modsecurity-core-rule-set] Testing new XSS Rules
Message-ID: <01987910BF74B341B5890120BCCE77DF0C54F0@SKYMB1.trustwave.com>

Has anyone tested the new XSS rules we recently added?

https://github.com/SpiderLabs/owasp-modsecurity-crs/blob/master/base_rules/modsecurity_crs_41_xss_attacks.conf


#
# -=[ XSS Filters - Category 1 ]=-
# script tag based XSS vectors, e.g., <script> alert(1)</script>
#
SecRule ARGS "(?i)(<script[^>]*>[\s\S]*?<\/script[^>]*>|<script[^>]*>[\s\S]*?<\/script[[\s\S]]*[\s\S]|<script[^>]*>[\s\S]*?<\/script[\s]*[\s]|<script[^>]*>[\s\S]*?<\/script|<script[^>]*>[\s\S]*?)" "id:'973336',phase:2,rev:'1',ver:'OWASP_CRS/2.2.7',maturity:'1',accuracy:'8',t:none,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,log,capture,msg:'XSS Filter - Category 1: Script Tag Vector',tag:'OWASP_CRS/WEB_ATTACK/XSS',tag:'WASCTC/WASC-8',tag:'WASCTC/WASC-22',tag:'OWASP_TOP_10/A2',tag:'OWASP_AppSensor/IE1',tag:'PCI/6.5.1',logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',severity:'2',setvar:'tx.msg=%{rule.msg}',setvar:tx.xss_score=+%{tx.critical_anomaly_score},setvar:tx.anomaly_score=+%{tx.critical_anomaly_score},setvar:tx.%{rule.id}-OWASP_CRS/WEB_ATTACK/XSS-%{matched_var_name}=%{tx.0}"


#
# -=[ XSS Filters - Category 2 ]=-
# XSS vectors making use of event handlers like onerror, onload etc, e.g., <body onload="alert(1)">
#
SecRule ARGS "(?i)([\s\"'`;\/0-9\=]+on\w+\s*=)" "id:'973337',phase:2,t:none,rev:'1',ver:'OWASP_CRS/2.2.7',maturity:'1',accuracy:'8',t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,log,capture,msg:'XSS Filter - Category 2: Event Handler Vector',tag:'OWASP_CRS/WEB_ATTACK/XSS',tag:'WASCTC/WASC-8',tag:'WASCTC/WASC-22',tag:'OWASP_TOP_10/A2',tag:'OWASP_AppSensor/IE1',tag:'PCI/6.5.1',logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',severity:'2',setvar:'tx.msg=%{rule.msg}',setvar:tx.xss_score=+%{tx.critical_anomaly_score},setvar:tx.anomaly_score=+%{tx.critical_anomaly_score},setvar:tx.%{rule.id}-OWASP_CRS/WEB_ATTACK/XSS-%{matched_var_name}=%{tx.0}"


#
# -=[ XSS Filters - Category 3 ]=-
# XSS vectors making use of Javascripts URIs, e.g., <p style="background:url(javascript:alert(1))">
#
SecRule ARGS "(?i)((?:=|U\s*R\s*L\s*\()\s*[^>]*\s*S\s*C\s*R\s*I\s*P\s*T\s*:|&colon;|[\s\S]allowscriptaccess[\s\S]|[\s\S]src[\s\S]|[\s\S]data:text\/html[\s\S]|[\s\S]xlink:href[\s\S]|[\s\S]base64[\s\S]|[\s\S]xmlns[\s\S]|[\s\S]xhtml[\s\S]|[\s\S]style[\s\S]|<style[^>]*>[\s\S]*?|[\s\S]@import[\s\S]|<applet[^>]*>[\s\S]*?|<meta[^>]*>[\s\S]*?|<object[^>]*>[\s\S]*?)" "id:'973338',phase:2,t:none,rev:'1',ver:'OWASP_CRS/2.2.7',maturity:'1',accuracy:'8',t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,log,capture,tag:'OWASP_CRS/WEB_ATTACK/XSS',tag:'WASCTC/WASC-8',tag:'WASCTC/WASC-22',tag:'OWASP_TOP_10/A2',tag:'OWASP_AppSensor/IE1',tag:'PCI/6.5.1',msg:'XSS Filter - Category 3: Javascript URI Vector',logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',severity:'2',setvar:'tx.msg=%{rule.msg}',setvar:tx.xss_score=+%{tx.critical_anomaly_score},setvar:tx.anomaly_score=+%{tx.critical_anomaly_score},setvar:tx.%{rule.id}-OWASP_CRS/WEB_ATTACK/XSS-%{matched_var_name}=%{tx.0}"


Trying to confirm accuracy and if we have any false positives or not.  Please let me know if you have tried these out and how they are working.

--
Ryan Barnett
Trustwave SpiderLabs
ModSecurity Project Leader
OWASP ModSecurity CRS Project Leader

________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is STRICTLY PROHIBITED. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20130118/80fff4cc/attachment.html>

From KHalyk at BCLC.com  Mon Jan 21 15:28:46 2013
From: KHalyk at BCLC.com (Kirk Halyk)
Date: Mon, 21 Jan 2013 15:28:46 +0000
Subject: [Owasp-modsecurity-core-rule-set] CRS for mod_security v1.9.5?
Message-ID: <0C6D130EFBA12F40BD4427F8A98423F748487FDC@kam1opeml03>

Was a CRS ever developed/maintained for the 1.9.x version of ModSecurity? (Apache 1.3.x)

Thanks!
________________________________
This email is intended only for the addressee. It may contain confidential or proprietary information that cannot be disclosed without BCLC's permission. If you have received this email in error, please notify the sender immediately and delete the email.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20130121/432332b2/attachment.html>

From ryan.barnett at owasp.org  Mon Jan 21 15:36:48 2013
From: ryan.barnett at owasp.org (Ryan Barnett)
Date: Mon, 21 Jan 2013 10:36:48 -0500
Subject: [Owasp-modsecurity-core-rule-set] CRS for mod_security v1.9.5?
In-Reply-To: <0C6D130EFBA12F40BD4427F8A98423F748487FDC@kam1opeml03>
Message-ID: <CD22C9D3.735E4%ryan.barnett@owasp.org>

No, we started back in 2006 with the first gen of CRS and it was written for
ModSecurity v2.

I am assuming there is some roadblock for you not migrating to Apache 2.x?
The 1.3 branch has been long dead?

You are looking at the documentation for the 1.3 version of the Apache HTTP
Server, which is no longer maintained, and has been declared "end of life".
If you are in fact still using the 1.3 version, please consider upgrading.
The current version of the server is 2.4 <http://httpd.apache.org/docs/2.4/>
.

-Ryan

From:  Kirk Halyk <KHalyk at BCLC.com>
Date:  Monday, January 21, 2013 10:28 AM
To:  "owasp-modsecurity-core-rule-set at lists.owasp.org"
<owasp-modsecurity-core-rule-set at lists.owasp.org>
Subject:  [Owasp-modsecurity-core-rule-set] CRS for mod_security v1.9.5?

> Was a CRS ever developed/maintained for the 1.9.x version of ModSecurity?
> (Apache 1.3.x)
>  
> Thanks!
> 
> This email is intended only for the addressee. It may contain confidential or
> proprietary information that cannot be disclosed without BCLC's permission. If
> you have received this email in error, please notify the sender immediately
> and delete the email.
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20130121/7d9a55d4/attachment.html>

From KHalyk at BCLC.com  Mon Jan 21 15:44:54 2013
From: KHalyk at BCLC.com (Kirk Halyk)
Date: Mon, 21 Jan 2013 15:44:54 +0000
Subject: [Owasp-modsecurity-core-rule-set] CRS for mod_security v1.9.5?
In-Reply-To: <CD22C9D3.735E4%ryan.barnett@owasp.org>
References: <0C6D130EFBA12F40BD4427F8A98423F748487FDC@kam1opeml03>
	<CD22C9D3.735E4%ryan.barnett@owasp.org>
Message-ID: <0C6D130EFBA12F40BD4427F8A98423F748488277@kam1opeml03>

Thanks Ryan - that's what I figured.

I'd love to move this particular server off 1.3.x - but it won't happen in the near future unfortunately...

Any thoughts on rules for this version? Or am I best to profile my app and write my own rules with the old engine as best I can?


From: Ryan Barnett [mailto:ryan.barnett at owasp.org]
Sent: Monday, January 21, 2013 7:37 AM
To: Kirk Halyk; owasp-modsecurity-core-rule-set at lists.owasp.org
Subject: Re: [Owasp-modsecurity-core-rule-set] CRS for mod_security v1.9.5?

No, we started back in 2006 with the first gen of CRS and it was written for ModSecurity v2.

I am assuming there is some roadblock for you not migrating to Apache 2.x?  The 1.3 branch has been long dead...

You are looking at the documentation for the 1.3 version of the Apache HTTP Server, which is no longer maintained, and has been declared "end of life". If you are in fact still using the 1.3 version, please consider upgrading. The current version of the server is 2.4<http://httpd.apache.org/docs/2.4/>.

-Ryan

From: Kirk Halyk <KHalyk at BCLC.com<mailto:KHalyk at BCLC.com>>
Date: Monday, January 21, 2013 10:28 AM
To: "owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>" <owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>
Subject: [Owasp-modsecurity-core-rule-set] CRS for mod_security v1.9.5?

Was a CRS ever developed/maintained for the 1.9.x version of ModSecurity? (Apache 1.3.x)

Thanks!
________________________________
This email is intended only for the addressee. It may contain confidential or proprietary information that cannot be disclosed without BCLC's permission. If you have received this email in error, please notify the sender immediately and delete the email.
_______________________________________________ Owasp-modsecurity-core-rule-set mailing list Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
________________________________
This email is intended only for the addressee. It may contain confidential or proprietary information that cannot be disclosed without BCLC's permission. If you have received this email in error, please notify the sender immediately and delete the email.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20130121/bc2a3f44/attachment.html>

From damien.wyart at gmail.com  Fri Jan 18 16:39:31 2013
From: damien.wyart at gmail.com (Damien Wyart)
Date: Fri, 18 Jan 2013 17:39:31 +0100
Subject: [Owasp-modsecurity-core-rule-set] [BUGFIX]
 "modsecurity_crs_41_xss_attacks.conf" performance optimization test not
 working
Message-ID: <20130118163931.GA26706@brouette>

Hi,

I am also annoyed by this bug in the CRS and suprised nobody responded
to the two messages explaining the bug.

Is it plan to integrate this in 2.2.7? Or is there a need for a GitHub
pull request (even for such a trivial fix)?

If this is not fixed upstream, some users (including me) might need to
backport this manually, this is really annoying.

Many thanks in advance,


Damien

> Hi Ryan, are you planning to add this little fix to the 2.2.7? That would really be great!

> Thank you!

> On Friday, November 9, 2012, rm4dillo D wrote:
> Hi,

> The "base_rules/modsecurity_crs_41_xss_attacks.conf" rules file starts with a smart rule that checks the presence of some keywords (Ex. script javascript...) and depending on the result, it decides to run deeper rules or just skip them. The problem is that the conditional "skip" never works because it tests the "pm_xss_score" variable which is not initialized.

>     SecRule TX:PM_XSS_SCORE "@eq 0" "phase:2,id:'981018',t:none,pass,skipAfter:END_XSS_CHECK,nolog"

> To fix this, I just directive this at the beginning of the file:

>     SecAction "phase:2,rev:'2.2.5',t:none,pass,nolog,setvar:tx.pm_xss_score=0"

> It would be nice to fix this in the next core rule set release.
> Thank you in advance.
> Rm4dillo

From sthayyilekan at BarclaycardUS.com  Mon Jan 28 21:21:35 2013
From: sthayyilekan at BarclaycardUS.com (Thayyilekandy, Subin : Barclaycard US)
Date: Mon, 28 Jan 2013 21:21:35 +0000
Subject: [Owasp-modsecurity-core-rule-set]  Reg sanitiseArg
Message-ID: <C310131DD0004743B2508B65C77B663121E795AF@PMEXGMB04.juniper.com>

We have the below rule in for sanitizing user passwords , looks like it is not working all the time .

      SecAction "phase:5,nolog,pass,sanitiseArg:password,sanitiseArg:newPassword"

What I noticed is if we request with a single XSS, SQLi request it will be sanitized , suppose if we remove the referrer/accept header then the rules of modsecurity_crs_21_protocol_anomalies will be hit and it will not be sanitized, irrespective of whether there were other pattern matches as well.

This only happens for protocol anomaly issues, if there was a pattern match for file 21 , the password in the post body is not being sanitized ,has anybody come across such issues ? any clue on what could be wrong ? We use Apache/2.6.8 with ruleset/2.2.5


--c0462570-A--
[28/Jan/2013:15:48:41 +0000] UQad0gr-ihYAAGfqXUgAAADT 63.78.242.16 56811 10.255.138.22 4499
--c0462570-B--
POST /mobileservice/authenticate HTTP/1.1
User-Agent: Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US; rv:1.9.2.8) Gecko/20100722 Firefox/3.6.8
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip,deflate
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
Keep-Alive: 115
Connection: keep-alive
X-Scan-Memo: Category="Audit"; Function="createStateRequestFromAttackDefinition"; SID="ACB328923297B9BDE3F8200E483A3D05"; PSID="23B3A87EEBF8C7453E112BF4E4A43265"; SessionType="AuditAttack"; CrawlType="None"; AttackType="Search"; OriginatingEngineID="63a283c6-6b75-41e3-b0c2-d7b0821c2902"; AttackSequence="0"; AttackParamDesc=""; AttackParamIndex="0"; AttackParamSubIndex="0"; CheckId="4897"; Engine="Fixed"; Retry="False"; SmartMode="NonServerSpecificOnly"; ThreadId="270"; ThreadType="AuditDBReaderSessionDrivenAudit";
X-StateRequest-Memo: StateID="9734";
X-WIPP: AscVersion="9.20.247.0"
X-Request-Memo: ID="1ee130af-7317-47a3-bb1d-3c85537ce63c"; Sequence="0"; ThreadId="59";
Content-Length: 44

--c0462570-C--
userID=user123&password=Happy123&version=2.0

--c0462570-H--
Message: Warning. Match of "rx ^0$" against "REQUEST_HEADERS:Content-Length" required. [file "/cust/docs/config/qa01/mobile/crs/base_rules/modsecurity_crs_21_protocol_anomalies.conf"] [line "84"] [id "960904"] [rev "2.2.5"] [msg "Request Containing Content, but Missing Content-Type header"] [severity "NOTICE"]
Message: Warning. Pattern match "^(?i:0|allow)$" at RESPONSE_HEADERS. [file "/cust/docs/config/qa01/mobile/crs/base_rules/modsecurity_crs_55_application_defects.conf"] [line "151"] [id "981405"] [msg "AppDefect: X-FRAME-OPTIONS Response Header is Missing or not set to Deny."] [data "X-FRAME-OPTIONS: "] [tag "WASCTC/WASC-15"] [tag "MISCONFIGURATION"] [tag "http://websecuritytool.codeplex.com/wikipage?title=Checks#http-header-x-frame-options"]
Message: Warning. Operator LT matched 5 at TX:inbound_anomaly_score. [file "/cust/docs/config/qa01/mobile/crs/base_rules/modsecurity_crs_60_correlation.conf"] [line "33"] [id "981203"] [msg "Inbound Anomaly Score (Total Inbound Score: 2, SQLi=, XSS=): Request Containing Content, but Missing Content-Type header"]
Apache-Handler: proxy-server
Stopwatch: 1359388114515371 6931912 (- - -)
Stopwatch2: 1359388114515371 6931912; combined=2977, p1=303, p2=2010, p3=34, p4=82, p5=461, sr=98, sw=87, l=0, gc=0
Producer: ModSecurity for Apache/2.6.8 (http://www.modsecurity.org/); core ruleset/2.2.5.
Server: Apache

--c0462570-Z--


Thanks
Subin



Barclaycard
www.barclaycardus.com 

This email and any files transmitted with it may contain confidential and/or proprietary information. It is intended solely for the use of the individual or entity who is the intended recipient. Unauthorized use of this information is prohibited. If you have received this in error, please contact the sender by replying to this message and delete this material from any system it may be on.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20130128/a466bc0b/attachment.html>

From yersinia.spiros at gmail.com  Wed Jan 30 10:57:35 2013
From: yersinia.spiros at gmail.com (Elia Pinto)
Date: Wed, 30 Jan 2013 05:57:35 -0500
Subject: [Owasp-modsecurity-core-rule-set] [PATCH]
	modsecurity_crs_47_common_exceptions.conf: drop apache
	User-Agent signature for dummy connection
Message-ID: <1359543455-17923-1-git-send-email-yersinia.spiros@gmail.com>

When the apache HTTP Server manages its child processes, it sends a simple HTTP request back to itself.
This request will appear in the access_log file with the remote address set to the loop-back interface
and if you log the User-Agent string you will see the server signature followed by "(internal dummy connection)"
on non-SSL servers. modsecurity_crs_47_common_exceptions already contain a chained rule for skipping
the apache internal dummy connection if the connection is from the lookback address.

But if the administrator has set the directive SecServerSignature
to one of the ./modsecurity_35_bad_robots.data, for example chinaclaw, the skip rule for the internal dummy connection is not used,
because in that case the User-Agent is defined by the valued of the SecServerSignature, and
not contain the value Apache: in this case the rule 990012 will fire wrongly.
Therefore, because the skip rule it is applied already to connection from 127.0.0.1,
so it is sufficently safe, don't cause any problem to eliminate the "Apache" control also on the User-Agent variables.
It is very similar to a standard iptables setup in which it is common to put a catchall ACCEPT rule
on the loopback interface.
---
 .../modsecurity_crs_47_common_exceptions.conf      |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/base_rules/modsecurity_crs_47_common_exceptions.conf b/base_rules/modsecurity_crs_47_common_exceptions.conf
index c63cabd..eda515b 100644
--- a/base_rules/modsecurity_crs_47_common_exceptions.conf
+++ b/base_rules/modsecurity_crs_47_common_exceptions.conf
@@ -23,7 +23,7 @@ SecRule REQUEST_LINE "^GET /$" "chain,phase:2,id:'981020',t:none,pass,nolog"
 #
 SecRule REQUEST_LINE "^(GET /|OPTIONS \*) HTTP/1.0$" "chain,phase:2,id:'981021',t:none,pass,nolog"
 	SecRule REMOTE_ADDR "^(127\.0\.0\.|\:\:)1$" "chain,t:none"
-		SecRule REQUEST_HEADERS:User-Agent "^Apache.*\(internal dummy connection\)$" "t:none,t:none,chain"
+		SecRule REQUEST_HEADERS:User-Agent "^.*\(internal dummy connection\)$" "t:none,t:none,chain"
                 	SecRule TX:'/PROTOCOL_VIOLATION\\\/MISSING_HEADER/' ".*" "chain,setvar:tx.missing_header=+1,setvar:tx.missing_header_%{tx.missing_header}=%{matched_var_name}"
                         	SecRule TX:'/MISSING_HEADER_/' "TX\:(.*)" "capture,t:none,setvar:!tx.%{tx.1}"
 
-- 
1.7.1


From RBarnett at trustwave.com  Wed Jan 30 16:06:29 2013
From: RBarnett at trustwave.com (Ryan Barnett)
Date: Wed, 30 Jan 2013 16:06:29 +0000
Subject: [Owasp-modsecurity-core-rule-set] Auto-Updating for the OWASP
	ModSecurity CRS
Message-ID: <01987910BF74B341B5890120BCCE77DF0D1E05@SKYMB1.trustwave.com>

Just a quick update.  If you want write scripts that will auto-update/download the latest OWASP ModSecurity CRS archive, referring to the info here -
https://www.owasp.org/index.php/Category:OWASP_ModSecurity_Core_Rule_Set_Project#Download

We are no longer hosting the CRS rules repository on the www.modsecurity.org site as that forwarded to the old files on the SourceForge site.  All current rules data in on GitHub.

--
Ryan Barnett
Trustwave SpiderLabs
ModSecurity Project Leader
OWASP ModSecurity CRS Project Leader

________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is STRICTLY PROHIBITED. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20130130/f100c7bc/attachment.html>

From jzy2000 at hotmail.com  Wed Jan 30 16:20:14 2013
From: jzy2000 at hotmail.com (Rolling Stone)
Date: Wed, 30 Jan 2013 11:20:14 -0500
Subject: [Owasp-modsecurity-core-rule-set] LibInjection
Message-ID: <SNT128-DS12ED14F3024794374E6816A41E0@phx.gbl>

CRS Roadmap has plan to include C Libinjection, any idea when will this
integration be completed?

 

Thanks,

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20130130/266b6703/attachment.html>

From ryan.barnett at owasp.org  Wed Jan 30 16:23:12 2013
From: ryan.barnett at owasp.org (Ryan Barnett)
Date: Wed, 30 Jan 2013 11:23:12 -0500
Subject: [Owasp-modsecurity-core-rule-set] LibInjection
In-Reply-To: <SNT128-DS12ED14F3024794374E6816A41E0@phx.gbl>
Message-ID: <CD2EB2FB.74B0C%ryan.barnett@owasp.org>

No, not yet.  Breno will get to it eventually, however this could be
expedited if someone from the community wants to help.

-Ryan

From:  Rolling Stone <jzy2000 at hotmail.com>
Date:  Wednesday, January 30, 2013 11:20 AM
To:  <owasp-modsecurity-core-rule-set at lists.owasp.org>
Subject:  [Owasp-modsecurity-core-rule-set] LibInjection

> CRS Roadmap has plan to include C Libinjection, any idea when will this
> integration be completed?
>  
> Thanks,
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20130130/b8fe4628/attachment.html>

From jzy2000 at hotmail.com  Thu Jan 31 16:11:20 2013
From: jzy2000 at hotmail.com (Rolling Stone)
Date: Thu, 31 Jan 2013 11:11:20 -0500
Subject: [Owasp-modsecurity-core-rule-set] LibInjection
In-Reply-To: <CD2EB2FB.74B0C%ryan.barnett@owasp.org>
References: <SNT128-DS12ED14F3024794374E6816A41E0@phx.gbl>
	<CD2EB2FB.74B0C%ryan.barnett@owasp.org>
Message-ID: <SNT128-DS1391C71D20CD580C6762E4A41D0@phx.gbl>

If my understanding correctly, there are possible 3 ways for libinjection to
be useful:

-Normalizing user input, to make CRS signature-based SQLi detection works
better.

-Streamlining signature-based SQLi detection and libinjection to improve
SQLi detection rate.

-Or, libinjection and fingerprint detection as replacement to
signature-based SQLi.

 

Which direction makes more sense if community support available?

Thanks,

-RS

 

From: Ryan Barnett [mailto:ryan.barnett at owasp.org] 
Sent: January-30-13 11:23 AM
To: Rolling Stone; owasp-modsecurity-core-rule-set at lists.owasp.org
Subject: Re: [Owasp-modsecurity-core-rule-set] LibInjection

 

No, not yet.  Breno will get to it eventually, however this could be
expedited if someone from the community wants to help.

 

-Ryan

 

From: Rolling Stone <jzy2000 at hotmail.com>
Date: Wednesday, January 30, 2013 11:20 AM
To: <owasp-modsecurity-core-rule-set at lists.owasp.org>
Subject: [Owasp-modsecurity-core-rule-set] LibInjection

 

CRS Roadmap has plan to include C Libinjection, any idea when will this
integration be completed?

 

Thanks,

_______________________________________________
Owasp-modsecurity-core-rule-set mailing list
Owasp-modsecurity-core-rule-set at lists.owasp.org
https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20130131/2e5096e1/attachment.html>

From yersinia.spiros at gmail.com  Thu Jan 31 17:33:16 2013
From: yersinia.spiros at gmail.com (yersinia)
Date: Thu, 31 Jan 2013 18:33:16 +0100
Subject: [Owasp-modsecurity-core-rule-set] [PATCH]
 modsecurity_crs_47_common_exceptions.conf: drop apache User-Agent signature
 for dummy connection
In-Reply-To: <1359543455-17923-1-git-send-email-yersinia.spiros@gmail.com>
References: <1359543455-17923-1-git-send-email-yersinia.spiros@gmail.com>
Message-ID: <CAH5b-BX_j7y8V=oArjW7hQaGXBwELmiPHRxcJuLX0mX8US9DwQ@mail.gmail.com>

Patch not useful or wrong way to post it ? Just for info.

Best

On Wed, Jan 30, 2013 at 11:57 AM, Elia Pinto <yersinia.spiros at gmail.com>wrote:

> When the apache HTTP Server manages its child processes, it sends a simple
> HTTP request back to itself.
> This request will appear in the access_log file with the remote address
> set to the loop-back interface
> and if you log the User-Agent string you will see the server signature
> followed by "(internal dummy connection)"
> on non-SSL servers. modsecurity_crs_47_common_exceptions already contain a
> chained rule for skipping
> the apache internal dummy connection if the connection is from the
> lookback address.
>
> But if the administrator has set the directive SecServerSignature
> to one of the ./modsecurity_35_bad_robots.data, for example chinaclaw, the
> skip rule for the internal dummy connection is not used,
> because in that case the User-Agent is defined by the valued of the
> SecServerSignature, and
> not contain the value Apache: in this case the rule 990012 will fire
> wrongly.
> Therefore, because the skip rule it is applied already to connection from
> 127.0.0.1,
> so it is sufficently safe, don't cause any problem to eliminate the
> "Apache" control also on the User-Agent variables.
> It is very similar to a standard iptables setup in which it is common to
> put a catchall ACCEPT rule
> on the loopback interface.
> ---
>  .../modsecurity_crs_47_common_exceptions.conf      |    2 +-
>  1 files changed, 1 insertions(+), 1 deletions(-)
>
> diff --git a/base_rules/modsecurity_crs_47_common_exceptions.conf
> b/base_rules/modsecurity_crs_47_common_exceptions.conf
> index c63cabd..eda515b 100644
> --- a/base_rules/modsecurity_crs_47_common_exceptions.conf
> +++ b/base_rules/modsecurity_crs_47_common_exceptions.conf
> @@ -23,7 +23,7 @@ SecRule REQUEST_LINE "^GET /$"
> "chain,phase:2,id:'981020',t:none,pass,nolog"
>  #
>  SecRule REQUEST_LINE "^(GET /|OPTIONS \*) HTTP/1.0$"
> "chain,phase:2,id:'981021',t:none,pass,nolog"
>         SecRule REMOTE_ADDR "^(127\.0\.0\.|\:\:)1$" "chain,t:none"
> -               SecRule REQUEST_HEADERS:User-Agent "^Apache.*\(internal
> dummy connection\)$" "t:none,t:none,chain"
> +               SecRule REQUEST_HEADERS:User-Agent "^.*\(internal dummy
> connection\)$" "t:none,t:none,chain"
>                         SecRule
> TX:'/PROTOCOL_VIOLATION\\\/MISSING_HEADER/' ".*"
> "chain,setvar:tx.missing_header=+1,setvar:tx.missing_header_%{tx.missing_header}=%{matched_var_name}"
>                                 SecRule TX:'/MISSING_HEADER_/' "TX\:(.*)"
> "capture,t:none,setvar:!tx.%{tx.1}"
>
> --
> 1.7.1
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20130131/18fae653/attachment.html>

From RBarnett at trustwave.com  Thu Jan 31 22:15:04 2013
From: RBarnett at trustwave.com (Ryan Barnett)
Date: Thu, 31 Jan 2013 22:15:04 +0000
Subject: [Owasp-modsecurity-core-rule-set] [PATCH]
 modsecurity_crs_47_common_exceptions.conf: drop apache User-Agent signature
 for dummy connection
In-Reply-To: <CAH5b-BX_j7y8V=oArjW7hQaGXBwELmiPHRxcJuLX0mX8US9DwQ@mail.gmail.com>
Message-ID: <01987910BF74B341B5890120BCCE77DF0D4EFC@SKYMB1.trustwave.com>

Please use GitHub and issue a Pull request.

Thanks.

--
Ryan Barnett
Trustwave SpiderLabs
ModSecurity Project Leader
OWASP ModSecurity CRS Project Leader

From: yersinia <yersinia.spiros at gmail.com<mailto:yersinia.spiros at gmail.com>>
Date: Thursday, January 31, 2013 12:33 PM
To: "owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>" <owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>
Subject: Re: [Owasp-modsecurity-core-rule-set] [PATCH] modsecurity_crs_47_common_exceptions.conf: drop apache User-Agent signature for dummy connection

Patch not useful or wrong way to post it ? Just for info.

Best

On Wed, Jan 30, 2013 at 11:57 AM, Elia Pinto <yersinia.spiros at gmail.com<mailto:yersinia.spiros at gmail.com>> wrote:
When the apache HTTP Server manages its child processes, it sends a simple HTTP request back to itself.
This request will appear in the access_log file with the remote address set to the loop-back interface
and if you log the User-Agent string you will see the server signature followed by "(internal dummy connection)"
on non-SSL servers. modsecurity_crs_47_common_exceptions already contain a chained rule for skipping
the apache internal dummy connection if the connection is from the lookback address.

But if the administrator has set the directive SecServerSignature
to one of the ./modsecurity_35_bad_robots.data, for example chinaclaw, the skip rule for the internal dummy connection is not used,
because in that case the User-Agent is defined by the valued of the SecServerSignature, and
not contain the value Apache: in this case the rule 990012 will fire wrongly.
Therefore, because the skip rule it is applied already to connection from 127.0.0.1,
so it is sufficently safe, don't cause any problem to eliminate the "Apache" control also on the User-Agent variables.
It is very similar to a standard iptables setup in which it is common to put a catchall ACCEPT rule
on the loopback interface.
---
 .../modsecurity_crs_47_common_exceptions.conf      |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/base_rules/modsecurity_crs_47_common_exceptions.conf b/base_rules/modsecurity_crs_47_common_exceptions.conf
index c63cabd..eda515b 100644
--- a/base_rules/modsecurity_crs_47_common_exceptions.conf
+++ b/base_rules/modsecurity_crs_47_common_exceptions.conf
@@ -23,7 +23,7 @@ SecRule REQUEST_LINE "^GET /$" "chain,phase:2,id:'981020',t:none,pass,nolog"
 #
 SecRule REQUEST_LINE "^(GET /|OPTIONS \*) HTTP/1.0$" "chain,phase:2,id:'981021',t:none,pass,nolog"
        SecRule REMOTE_ADDR "^(127\.0\.0\.|\:\:)1$" "chain,t:none"
-               SecRule REQUEST_HEADERS:User-Agent "^Apache.*\(internal dummy connection\)$" "t:none,t:none,chain"
+               SecRule REQUEST_HEADERS:User-Agent "^.*\(internal dummy connection\)$" "t:none,t:none,chain"
                        SecRule TX:'/PROTOCOL_VIOLATION\\\/MISSING_HEADER/' ".*" "chain,setvar:tx.missing_header=+1,setvar:tx.missing_header_%{tx.missing_header}=%{matched_var_name}"
                                SecRule TX:'/MISSING_HEADER_/' "TX\:(.*)" "capture,t:none,setvar:!tx.%{tx.1}"

--
1.7.1



________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is STRICTLY PROHIBITED. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20130131/eaeb598e/attachment-0001.html>

From RBarnett at trustwave.com  Thu Jan 31 22:21:59 2013
From: RBarnett at trustwave.com (Ryan Barnett)
Date: Thu, 31 Jan 2013 22:21:59 +0000
Subject: [Owasp-modsecurity-core-rule-set] LibInjection
In-Reply-To: <SNT128-DS1391C71D20CD580C6762E4A41D0@phx.gbl>
Message-ID: <01987910BF74B341B5890120BCCE77DF0D4F20@SKYMB1.trustwave.com>

I agree with you that libinjection could be used potentially in all three of the scenarios you outlined.  Our discussions so far have centered around adding it as a new operator such as - @detectSQLi and you would pass it a parameter which is the fingerprints.txt file -

SecRule ARGS "@detectSQLi fingerprints.txt"

The libinjection code would need to be updated to allow for passing the fingerprints.txt file data rather than to have it compiled in as it is today.  This would allow for updating fingerprints without the need to recompile ModSecurity code.

As to your first point ? I see value there as well.  The idea would be to add a new transformation function such as ? t:normalizeSQLi and then add it to all SQLi signatures that you write.  This transformation function would do the normalization/tokenization of the data.  This would then allow you to write your signatures and rules in an easier manner as you wouldn't have to account for the myriad of permutations and combinations of evasion.

Bottom line is that I see a lot of uses for this feature :)  I would LOVE for someone to help.

-RB


From: Rolling Stone <jzy2000 at hotmail.com<mailto:jzy2000 at hotmail.com>>
Date: Thursday, January 31, 2013 11:11 AM
To: Ryan Barnett <ryan.barnett at owasp.org<mailto:ryan.barnett at owasp.org>>, "owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>" <owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>
Subject: Re: [Owasp-modsecurity-core-rule-set] LibInjection

If my understanding correctly, there are possible 3 ways for libinjection to be useful:
-Normalizing user input, to make CRS signature-based SQLi detection works better.
-Streamlining signature-based SQLi detection and libinjection to improve SQLi detection rate.
-Or, libinjection and fingerprint detection as replacement to signature-based SQLi.

Which direction makes more sense if community support available?
Thanks,
-RS

From: Ryan Barnett [mailto:ryan.barnett at owasp.org]
Sent: January-30-13 11:23 AM
To: Rolling Stone; owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>
Subject: Re: [Owasp-modsecurity-core-rule-set] LibInjection

No, not yet.  Breno will get to it eventually, however this could be expedited if someone from the community wants to help.

-Ryan

From: Rolling Stone <jzy2000 at hotmail.com<mailto:jzy2000 at hotmail.com>>
Date: Wednesday, January 30, 2013 11:20 AM
To: <owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>
Subject: [Owasp-modsecurity-core-rule-set] LibInjection

CRS Roadmap has plan to include C Libinjection, any idea when will this integration be completed?

Thanks,
_______________________________________________ Owasp-modsecurity-core-rule-set mailing list Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set

________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is STRICTLY PROHIBITED. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20130131/b2002097/attachment.html>

