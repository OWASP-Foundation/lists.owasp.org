From corovin at starnet.md  Tue Oct  1 07:45:00 2013
From: corovin at starnet.md (corovin at starnet.md)
Date: Tue, 01 Oct 2013 10:45:00 +0300
Subject: [Owasp-modsecurity-core-rule-set] Possible False alarm with
	Trustwave Rule 2055750
Message-ID: <33e7335fefb792c716e7b3927fb77f5d@starnet.md>

Hi,

I receive next error:

--------------
Guid_0.00
--------------

When try install WordPress on step 2

i.e. -> http://<domainname.com>/wp-admin/setup-config.php?step=2

I see that, responds next rule:
(2055750) ModSecurity Rules from Trustwave SpiderLabs: Related Sites 
Plugin for Wordpress BTE_RW_webajax.php guid Parameter SQL Injection

How Can I fix this?



From RBarnett at trustwave.com  Tue Oct  1 13:05:37 2013
From: RBarnett at trustwave.com (Ryan Barnett)
Date: Tue, 1 Oct 2013 13:05:37 +0000
Subject: [Owasp-modsecurity-core-rule-set] Possible False alarm with
 Trustwave Rule 2055750
In-Reply-To: <33e7335fefb792c716e7b3927fb77f5d@starnet.md>
Message-ID: <CE70407B.BA3EB%rbarnett@trustwave.com>

Issues with the Trustwave SpiderLabs commercial rules should be sent to
security at modsecurity.org.

Send an audit log example of the transaction and we will investigate.


Ryan Barnett
Lead Security Researcher, SpiderLabs

Trustwave | SMART SECURITY ON DEMAND
www.trustwave.com <http://www.trustwave.com/>




On 10/1/13 3:45 AM, "corovin at starnet.md" <corovin at starnet.md> wrote:

>Hi,
>
>I receive next error:
>
>--------------
>Guid_0.00
>--------------
>
>When try install WordPress on step 2
>
>i.e. -> http://<domainname.com>/wp-admin/setup-config.php?step=2
>
>I see that, responds next rule:
>(2055750) ModSecurity Rules from Trustwave SpiderLabs: Related Sites
>Plugin for Wordpress BTE_RW_webajax.php guid Parameter SQL Injection
>
>How Can I fix this?
>
>
>_______________________________________________
>Owasp-modsecurity-core-rule-set mailing list
>Owasp-modsecurity-core-rule-set at lists.owasp.org
>https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
>


________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.


From john at lynch2.com  Tue Oct  1 19:56:01 2013
From: john at lynch2.com (John McGowan)
Date: Tue, 1 Oct 2013 14:56:01 -0500
Subject: [Owasp-modsecurity-core-rule-set] Can Rules drop offending
	cookie/arg without dropping the entire request?
Message-ID: <CAAr79n6Kmqcsg_1kGAUCN1=er1T0yNQmaUayw7zKoFXb-QTcWw@mail.gmail.com>

Is it possible for a mod_security rule to drop a cookie or an argument
from a request without dropping the entire request?  We're constantly
having to monitor our error_log and add exceptions whenever us or a
3rd party is setting a cookie or an argument that looks suspicious to
the core rules set.

Ideally I'd like to be able to tell mod_security to drop any offending
get or post args or cookies if they look suspicious so that the
request is still handled, but the scary data doesn't end up getting
processed.  Of course I'd want to log this when it happens so that if
the cookie/arg is something that my app cares about I can decide what
needs to happen next.

I'm tired of having to add exceptions every time some new 3rd party
cookie gets set on the domain that has complex characters, or
resembles a injection attack.

-- 
John McGowan

From jamuse at owasp.org  Wed Oct  2 10:08:25 2013
From: jamuse at owasp.org (Josh Amishav-Zlatin)
Date: Wed, 2 Oct 2013 12:08:25 +0200
Subject: [Owasp-modsecurity-core-rule-set] Can Rules drop offending
 cookie/arg without dropping the entire request?
In-Reply-To: <CAAr79n6Kmqcsg_1kGAUCN1=er1T0yNQmaUayw7zKoFXb-QTcWw@mail.gmail.com>
References: <CAAr79n6Kmqcsg_1kGAUCN1=er1T0yNQmaUayw7zKoFXb-QTcWw@mail.gmail.com>
Message-ID: <CAC+O4mHE0QAvZmwQBovyJA=ti-HL-U1z2UANpF_NwRG2g-mGHw@mail.gmail.com>

On Tue, Oct 1, 2013 at 10:56 PM, John McGowan <john at lynch2.com> wrote:

> Is it possible for a mod_security rule to drop a cookie or an argument
> from a request without dropping the entire request?


Hi John,

While I would not recommend this approach, you could use mod_headers to
remove the cookie and the rsub action to remove POST body data from
requests if you know the cookie/parameter name ahead of time. There is a
good chance that this will negatively affect the functionality of the web
application though. If your getting too many false positives for a given
cookie/parameter value and you know that they are not vulnerable to a given
attack type, have you tried disabling rules by tag name? This may be a
cleaner approach to solving your problem.

--
 - Josh


>  We're constantly
> having to monitor our error_log and add exceptions whenever us or a
> 3rd party is setting a cookie or an argument that looks suspicious to
> the core rules set.
>
> Ideally I'd like to be able to tell mod_security to drop any offending
> get or post args or cookies if they look suspicious so that the
> request is still handled, but the scary data doesn't end up getting
> processed.  Of course I'd want to log this when it happens so that if
> the cookie/arg is something that my app cares about I can decide what
> needs to happen next.
>
> I'm tired of having to add exceptions every time some new 3rd party
> cookie gets set on the domain that has complex characters, or
> resembles a injection attack.
>
> --
> John McGowan
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20131002/31c7d4e1/attachment.html>

From john at lynch2.com  Wed Oct  2 12:33:21 2013
From: john at lynch2.com (John McGowan)
Date: Wed, 2 Oct 2013 07:33:21 -0500
Subject: [Owasp-modsecurity-core-rule-set] Can Rules drop offending
 cookie/arg without dropping the entire request?
In-Reply-To: <CAC+O4mHE0QAvZmwQBovyJA=ti-HL-U1z2UANpF_NwRG2g-mGHw@mail.gmail.com>
References: <CAAr79n6Kmqcsg_1kGAUCN1=er1T0yNQmaUayw7zKoFXb-QTcWw@mail.gmail.com>
	<CAC+O4mHE0QAvZmwQBovyJA=ti-HL-U1z2UANpF_NwRG2g-mGHw@mail.gmail.com>
Message-ID: <CAAr79n4KSkuP3dozzYGNZiedCsfihcSEi7vdKs=Zc8mO7LB_Mw@mail.gmail.com>

On Wed, Oct 2, 2013 at 5:08 AM, Josh Amishav-Zlatin <jamuse at owasp.org> wrote:
> On Tue, Oct 1, 2013 at 10:56 PM, John McGowan <john at lynch2.com> wrote:
>>
>> Is it possible for a mod_security rule to drop a cookie or an argument
>> from a request without dropping the entire request?
>
>
> Hi John,
>
> While I would not recommend this approach, you could use mod_headers to
> remove the cookie and the rsub action to remove POST body data from requests
> if you know the cookie/parameter name ahead of time.

But I don't, the problem I'm dealing with is that 3rd parties set
cookies on domains.  Cookies that my application doesn't read, or even
know that they exist.  And when one of those cookies looks bad to the
CRS, the entire request is dropped.  Meaning that the application is
now broken for that user until we add an exxception.

> There is a good chance
> that this will negatively affect the functionality of the web application
> though.

I'd rather have the application continue to move forward, ignoring the
offending parameters, and log that action.   We would still have to
look at the logged "dropped parameters" and decide if it was a false
positive, true positive or a "who cares" positive.  A "who cares"
positive would be one where I know my application doesn't use the
offending parameter, so it's safe to just let mod_sec remove it from
the request.

> If your getting too many false positives for a given
> cookie/parameter value and you know that they are not vulnerable to a given
> attack type, have you tried disabling rules by tag name? This may be a
> cleaner approach to solving your problem.

I'm writing exceptions for ruleid/parameter combination when they come up.

The problem is, when a NEW third party cookie appears the application
is broken, and I'd rather that things move along and have that new
cookie ignored.

/John

From RBarnett at trustwave.com  Wed Oct  2 13:51:13 2013
From: RBarnett at trustwave.com (Ryan Barnett)
Date: Wed, 2 Oct 2013 13:51:13 +0000
Subject: [Owasp-modsecurity-core-rule-set] Can Rules drop offending
 cookie/arg without dropping the entire request?
In-Reply-To: <CAAr79n4KSkuP3dozzYGNZiedCsfihcSEi7vdKs=Zc8mO7LB_Mw@mail.gmail.com>
Message-ID: <CE7195A6.BA568%rbarnett@trustwave.com>


On 10/2/13 8:33 AM, "John McGowan" <john at lynch2.com> wrote:

>On Wed, Oct 2, 2013 at 5:08 AM, Josh Amishav-Zlatin <jamuse at owasp.org>
>wrote:
>> On Tue, Oct 1, 2013 at 10:56 PM, John McGowan <john at lynch2.com> wrote:
>>>
>>> Is it possible for a mod_security rule to drop a cookie or an argument
>>> from a request without dropping the entire request?
>>
>>
>> Hi John,
>>
>> While I would not recommend this approach, you could use mod_headers to
>> remove the cookie and the rsub action to remove POST body data from
>>requests
>> if you know the cookie/parameter name ahead of time.
>
>But I don't, the problem I'm dealing with is that 3rd parties set
>cookies on domains.  Cookies that my application doesn't read, or even
>know that they exist.  And when one of those cookies looks bad to the
>CRS, the entire request is dropped.  Meaning that the application is
>now broken for that user until we add an exxception.
>
>> There is a good chance
>> that this will negatively affect the functionality of the web
>>application
>> though.
>
>I'd rather have the application continue to move forward, ignoring the
>offending parameters, and log that action.   We would still have to
>look at the logged "dropped parameters" and decide if it was a false
>positive, true positive or a "who cares" positive.  A "who cares"
>positive would be one where I know my application doesn't use the
>offending parameter, so it's safe to just let mod_sec remove it from
>the request.
>
>> If your getting too many false positives for a given
>> cookie/parameter value and you know that they are not vulnerable to a
>>given
>> attack type, have you tried disabling rules by tag name? This may be a
>> cleaner approach to solving your problem.
>
>I'm writing exceptions for ruleid/parameter combination when they come up.
>
>The problem is, when a NEW third party cookie appears the application
>is broken, and I'd rather that things move along and have that new
>cookie ignored.
>
>/John


John,
What I would recommend is that you utilize the SecRuleUpdateTargetById,
SecRuleUpdateTargetByTag, etc? directives to customize which local
variables are inspected. For your scenario, lets say that you only want to
inspect some Cookie values that your site specifically sets (SESISONID,
FOO_COOKIE and BAR_COOKIE).  You could add the following to a local custom
rules file that is processed at the end of Apache/ModSecurity
initialization (for example in a file called -
modsecurity_crs_99_custom.conf).  You could place the following in the
file to replace REQUEST_COOKIES with only your defined cookie values for
all SQL Injection rules -


SecRuleUpdateTargetByTag "SQL_INJECTION" REQUEST_COOKIES
REQUEST_COOKIES:SESSIONID,REQUEST_COOKIES:FOO_COOKIE,REQUEST_COOKIES:BAR_CO
OKIE



Let me know if this works for you.

-Ryan




________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.


From john at lynch2.com  Wed Oct  2 15:09:48 2013
From: john at lynch2.com (John McGowan)
Date: Wed, 2 Oct 2013 10:09:48 -0500
Subject: [Owasp-modsecurity-core-rule-set] Can Rules drop offending
 cookie/arg without dropping the entire request?
In-Reply-To: <CE7195A6.BA568%rbarnett@trustwave.com>
References: <CAAr79n4KSkuP3dozzYGNZiedCsfihcSEi7vdKs=Zc8mO7LB_Mw@mail.gmail.com>
	<CE7195A6.BA568%rbarnett@trustwave.com>
Message-ID: <CAAr79n5p=kvR15LdLLFEhujv5R-xtuBgdb-EUkDX2pevTWXdPQ@mail.gmail.com>

On Wed, Oct 2, 2013 at 8:56 AM, Ryan Barnett <RBarnett at trustwave.com> wrote:
>
> John,
> What I would recommend is that you utilize the SecRuleUpdateTargetById,
> SecRuleUpdateTargetByTag, etc? directives to customize which local
> variables are inspected. For your scenario, lets say that you only want to
> inspect some Cookie values that your site specifically sets (SESISONID,
> FOO_COOKIE and BAR_COOKIE).  You could add the following to a local custom
> rules file that is processed at the end of Apache/ModSecurity
> initialization (for example in a file called -
> modsecurity_crs_99_custom.conf).  You could place the following in the
> file to replace REQUEST_COOKIES with only your defined cookie values for
> all SQL Injection rules -
>
>
> SecRuleUpdateTargetByTag "SQL_INJECTION" REQUEST_COOKIES
> REQUEST_COOKIES:SESSIONID,REQUEST_COOKIES:FOO_COOKIE,REQUEST_COOKIES:BAR_CO
> OKIE

Ryan,

I understand what you're suggesting, and I appreciate the feedback,
but unfortunately that technique doesn't really help me.    We are
typically using the SecRuleUpdateTargetById to ignore certain rules
for the cookies/params that we're using.  Usually because our app is
using the cookies in a way that causes a false positive in the CRS
(json data typically).

If I'm understanding your suggestion, you're basically saying that we
should update the rules so that they ignore unexpected (unused)
cookies and args, and only inspect the ones that we know our
application is using.  But that is a catch 22, because it's usually
those rules that we're having to write exceptions to ignore on.

I feel like i'm falling into this trap where I feel like the only way
I can run mos_sec with the CRS is to turn off some major rules
entirely because of this 3rd party cookie issue.    Or else risk that
some users will have a broken experience until we have a chance to
address the false positives that we get notified about.

Luckilly we are using SumoLogic to parse the apache error logs and
deliver us a report every 15 minutes with a list of the blocked
requests.

Thanks again for each of your responses.  Is my original question
something that could possibly be implemented as a feature to
mos_security?  The ability to make it so rules modify a request
instead of dropping it entirely?  Kind of a middle ground between
"notify only" and "drop entirely".... just "drop the bad part"?

/John

From jzy2000 at hotmail.com  Fri Oct  4 01:54:08 2013
From: jzy2000 at hotmail.com (Rolling Stone)
Date: Thu, 3 Oct 2013 21:54:08 -0400
Subject: [Owasp-modsecurity-core-rule-set] Regression test for XSS
Message-ID: <BAY169-DS375256B8021367B565DCE4A4100@phx.gbl>

Hi, I am looking at sub-folder util/regression-tests/tests/ for XSS test
cases, unlike other .tests files including 1 test case for each CRS rule;
modsecurity_crs_41_xss_attacks.tests has only one test template with empty
payload "%var xss=". Did I miss anything?

 

Thanks,

R.S. 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20131003/856a9f02/attachment.html>

From RBarnett at trustwave.com  Fri Oct  4 02:06:06 2013
From: RBarnett at trustwave.com (Ryan Barnett)
Date: Fri, 4 Oct 2013 02:06:06 +0000
Subject: [Owasp-modsecurity-core-rule-set] Regression test for XSS
In-Reply-To: <BAY169-DS375256B8021367B565DCE4A4100@phx.gbl>
References: <BAY169-DS375256B8021367B565DCE4A4100@phx.gbl>
Message-ID: <76B00AE7-021E-418F-9CF1-7775875B1C60@trustwave.com>

I haven't added XSS tests yet. Will do that in next release.

Ryan Barnett
Lead Security Researcher, SpiderLabs

Trustwave | SMART SECURITY ON DEMAND
www.trustwave.com<http://www.trustwave.com/>

On Oct 3, 2013, at 10:03 PM, "Rolling Stone" <jzy2000 at hotmail.com<mailto:jzy2000 at hotmail.com>> wrote:

Hi, I am looking at sub-folder util/regression-tests/tests/ for XSS test cases, unlike other .tests files including 1 test case for each CRS rule; modsecurity_crs_41_xss_attacks.tests has only one test template with empty payload ?%var xss=?. Did I miss anything?

Thanks,
R.S.
_______________________________________________
Owasp-modsecurity-core-rule-set mailing list
Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org>
https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set

________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20131004/4f29bb22/attachment.html>

From jamuse at owasp.org  Thu Oct 10 19:53:16 2013
From: jamuse at owasp.org (Josh Amishav-Zlatin)
Date: Thu, 10 Oct 2013 21:53:16 +0200
Subject: [Owasp-modsecurity-core-rule-set] [mod-security-users]
	Announcement: Open Fraud Detection Project
In-Reply-To: <CAPfKoZ=MDp__otvqH8v76vUtn6xCr4fv2KPq8YRkCnRvz4AQvw@mail.gmail.com>
References: <CAC+O4mHLtXeDXMe6Pext-=FQHN3Nwybdo-v1nX2WVR4ymxzy7g@mail.gmail.com>
	<CAPfKoZ=MDp__otvqH8v76vUtn6xCr4fv2KPq8YRkCnRvz4AQvw@mail.gmail.com>
Message-ID: <CAC+O4mE2ZmGALgPzAeGpwUaWNjgq4-yg=kj4fjQHZxpC+d1H1w@mail.gmail.com>

On Thu, Oct 10, 2013 at 10:01 PM, Aaron Bedra <aaron.bedra at gmail.com> wrote:

> Thanks Josh!
>
> I implemented it into the backend of my Repsheet project
>
> https://github.com/repsheet/backend/blob/master/src/ofdp.c
>
>
That's great! Since my initial announcement I've added C&C malware IPs
(specifically Zeus and Spyeye) as well as significantly increased the
number of open proxies tracked. Let me know if I can be of any help.

Thanks,

--
 - Josh


>
> On Mon, Sep 30, 2013 at 7:49 AM, Josh Amishav-Zlatin <jamuse at owasp.org>wrote:
>
>> After years of running WAFs using the Core Rule Set I wanted a way to
>> detect
>> known malicious users before they get a chance to send their attack
>> payloads.
>> Normally, when an attacker sends their payload, the contents of the
>> request are checked via ModSecurity using the Core Rule Set (CRS). The CRS
>> is essentially a large black list which means that the payload either
>> matches or passes. There
>> is no middle ground. Attackers normally perform reconnaissance before they
>> attack which may or may not contain malicious payloads. Ideally we want
>> to stop
>> known malicious attackers as early as possible, i.e. via an IP reputation
>> background check, and not wait for them to send their attack.
>>
>> As a result, I started on the Open Fraud Detection Project (OFDEP) which
>> aims at
>> providing a free community supported API that ModSecurity can query to
>> receive
>> a score indicating the odds that a given user / transaction is bad. The
>> WAF can
>> then make a decision on how to proceed based on the score. At the moment
>> the
>> API is Beta quality and supports IP, email address and username lookups.
>> Query
>> results are currently returned in XML but JSON will be supported shortly.
>> The
>> most common use cases that I tried to cover are:
>>
>> o IP reputation
>> o comment spam
>> o account creation fraud
>>
>> For specific API details see: http://wafsec.com/api.html
>>
>> --
>>  - Josh
>>
>>
>> ------------------------------------------------------------------------------
>> October Webinars: Code for Performance
>> Free Intel webinars can help you accelerate application performance.
>> Explore tips for MPI, OpenMP, advanced profiling, and more. Get the most
>> from
>> the latest Intel processors and coprocessors. See abstracts and register >
>>
>> http://pubads.g.doubleclick.net/gampad/clk?id=60133471&iu=/4140/ostg.clktrk
>> _______________________________________________
>> mod-security-users mailing list
>> mod-security-users at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/mod-security-users
>> Commercial ModSecurity Rules and Support from Trustwave's SpiderLabs:
>> http://www.modsecurity.org/projects/commercial/rules/
>> http://www.modsecurity.org/projects/commercial/support/
>>
>>
>
>
> ------------------------------------------------------------------------------
> October Webinars: Code for Performance
> Free Intel webinars can help you accelerate application performance.
> Explore tips for MPI, OpenMP, advanced profiling, and more. Get the most
> from
> the latest Intel processors and coprocessors. See abstracts and register >
> http://pubads.g.doubleclick.net/gampad/clk?id=60134071&iu=/4140/ostg.clktrk
> _______________________________________________
> mod-security-users mailing list
> mod-security-users at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/mod-security-users
> Commercial ModSecurity Rules and Support from Trustwave's SpiderLabs:
> http://www.modsecurity.org/projects/commercial/rules/
> http://www.modsecurity.org/projects/commercial/support/
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20131010/487c8679/attachment.html>

From tomb at owasp.org  Thu Oct 10 22:19:40 2013
From: tomb at owasp.org (Tom Brennan)
Date: Thu, 10 Oct 2013 18:19:40 -0400
Subject: [Owasp-modsecurity-core-rule-set] [mod-security-users]
 Announcement: Open Fraud Detection Project
In-Reply-To: <CAC+O4mE2ZmGALgPzAeGpwUaWNjgq4-yg=kj4fjQHZxpC+d1H1w@mail.gmail.com>
References: <CAC+O4mHLtXeDXMe6Pext-=FQHN3Nwybdo-v1nX2WVR4ymxzy7g@mail.gmail.com>
	<CAPfKoZ=MDp__otvqH8v76vUtn6xCr4fv2KPq8YRkCnRvz4AQvw@mail.gmail.com>
	<CAC+O4mE2ZmGALgPzAeGpwUaWNjgq4-yg=kj4fjQHZxpC+d1H1w@mail.gmail.com>
Message-ID: <CAGjJcEYRHnH7-sK1z2VxAMV3HaQxhLb0GJu5WtS9Bbz462FxDw@mail.gmail.com>

Fantastic!

Josh are you making it to the AppSecUSA for the SUMMIT or the
Conference activities Nov 18-21st?

http://www.appsecusa.org



On Thu, Oct 10, 2013 at 3:53 PM, Josh Amishav-Zlatin <jamuse at owasp.org> wrote:
> On Thu, Oct 10, 2013 at 10:01 PM, Aaron Bedra <aaron.bedra at gmail.com> wrote:
>>
>> Thanks Josh!
>>
>> I implemented it into the backend of my Repsheet project
>>
>> https://github.com/repsheet/backend/blob/master/src/ofdp.c
>>
>
> That's great! Since my initial announcement I've added C&C malware IPs
> (specifically Zeus and Spyeye) as well as significantly increased the number
> of open proxies tracked. Let me know if I can be of any help.
>
> Thanks,
>
> --
>  - Josh
>
>>
>>
>> On Mon, Sep 30, 2013 at 7:49 AM, Josh Amishav-Zlatin <jamuse at owasp.org>
>> wrote:
>>>
>>> After years of running WAFs using the Core Rule Set I wanted a way to
>>> detect
>>> known malicious users before they get a chance to send their attack
>>> payloads.
>>> Normally, when an attacker sends their payload, the contents of the
>>> request are checked via ModSecurity using the Core Rule Set (CRS). The CRS
>>> is essentially a large black list which means that the payload either
>>> matches or passes. There
>>> is no middle ground. Attackers normally perform reconnaissance before
>>> they
>>> attack which may or may not contain malicious payloads. Ideally we want
>>> to stop
>>> known malicious attackers as early as possible, i.e. via an IP reputation
>>> background check, and not wait for them to send their attack.
>>>
>>> As a result, I started on the Open Fraud Detection Project (OFDEP) which
>>> aims at
>>> providing a free community supported API that ModSecurity can query to
>>> receive
>>> a score indicating the odds that a given user / transaction is bad. The
>>> WAF can
>>> then make a decision on how to proceed based on the score. At the moment
>>> the
>>> API is Beta quality and supports IP, email address and username lookups.
>>> Query
>>> results are currently returned in XML but JSON will be supported shortly.
>>> The
>>> most common use cases that I tried to cover are:
>>>
>>> o IP reputation
>>> o comment spam
>>> o account creation fraud
>>>
>>> For specific API details see: http://wafsec.com/api.html
>>>
>>> --
>>>  - Josh
>>>
>>>
>>> ------------------------------------------------------------------------------
>>> October Webinars: Code for Performance
>>> Free Intel webinars can help you accelerate application performance.
>>> Explore tips for MPI, OpenMP, advanced profiling, and more. Get the most
>>> from
>>> the latest Intel processors and coprocessors. See abstracts and register
>>> >
>>>
>>> http://pubads.g.doubleclick.net/gampad/clk?id=60133471&iu=/4140/ostg.clktrk
>>> _______________________________________________
>>> mod-security-users mailing list
>>> mod-security-users at lists.sourceforge.net
>>> https://lists.sourceforge.net/lists/listinfo/mod-security-users
>>> Commercial ModSecurity Rules and Support from Trustwave's SpiderLabs:
>>> http://www.modsecurity.org/projects/commercial/rules/
>>> http://www.modsecurity.org/projects/commercial/support/
>>>
>>
>>
>>
>> ------------------------------------------------------------------------------
>> October Webinars: Code for Performance
>> Free Intel webinars can help you accelerate application performance.
>> Explore tips for MPI, OpenMP, advanced profiling, and more. Get the most
>> from
>> the latest Intel processors and coprocessors. See abstracts and register >
>>
>> http://pubads.g.doubleclick.net/gampad/clk?id=60134071&iu=/4140/ostg.clktrk
>> _______________________________________________
>> mod-security-users mailing list
>> mod-security-users at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/mod-security-users
>> Commercial ModSecurity Rules and Support from Trustwave's SpiderLabs:
>> http://www.modsecurity.org/projects/commercial/rules/
>> http://www.modsecurity.org/projects/commercial/support/
>>
>
>
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
>

From filipesam at gmail.com  Tue Oct 15 16:35:01 2013
From: filipesam at gmail.com (Filipe Bernardo)
Date: Tue, 15 Oct 2013 17:35:01 +0100
Subject: [Owasp-modsecurity-core-rule-set] modsecurity 2.7.5 (STABLE) +
	nginx 1.4.1 - "Header changing rules not working"
Message-ID: <CAKE35kZ3CZOM+xPjv3oVx0t9rC6bDk_C2VVoncYsV63cWmb1AQ@mail.gmail.com>

Hi all,
First let me say that i think you are doing a great job with the
modsecurity, and the owasp-crs rules.

I have a setup with nginx and modsecurity, i'm using the owasp-crs rules
from the repository (git clone
https://github.com/SpiderLabs/owasp-modsecurity-crs)

and most rules work "out-of-the-box" with the apps i'm testing


i've encontered a problem using the rules that try to alter the "headers" i
think the problem is related with the "directives" "Header edit..." and
"RequestHeader append..."

The "rule files" i've found that are causing me problems are the following:
- modsecurity_crs_49_header_tagging.conf
- modsecurity_crs_55_application_defects.conf

Modsecurity was compiled from source with --enable-standalone-module
And nginx was compiled from source with --add-module=/path/to/modsecurity

Can anyone help with this?
Is there any module that i should compile on nginx to be able to "edit" the
headers?

Thanks
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20131015/6610bc1e/attachment.html>

From RBarnett at trustwave.com  Tue Oct 15 17:15:06 2013
From: RBarnett at trustwave.com (Ryan Barnett)
Date: Tue, 15 Oct 2013 17:15:06 +0000
Subject: [Owasp-modsecurity-core-rule-set] Welcome Felipe Costa as the new
	lead Dev for ModSecurity
Message-ID: <CE82F05A.BE5D4%rbarnett@trustwave.com>

I wanted to send a note to the mail-lists to let everyone know that we have a new lead DEV for ModSecurity here in Trustwave SpiderLabs Research ? Felipe Costa.  Felipe is taking over for Breno Silva Pinto who has left Trustwave to pursue other opportunities.  Breno did an outstanding job leading ModSecurity Dev for 3 years and we wish him luck in his new career.  Hopefully Breno will still have some time to contribute to the project in the future.

We are excited to have Felipe on the team as he has extensive background in open source project development.

Welcome aboard Felipe!

--
Ryan Barnett
Trustwave SpiderLabs
ModSecurity Project Leader
OWASP ModSecurity CRS Project Leader


________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20131015/8a12e0c4/attachment.html>

From RBarnett at trustwave.com  Tue Oct 15 17:19:27 2013
From: RBarnett at trustwave.com (Ryan Barnett)
Date: Tue, 15 Oct 2013 17:19:27 +0000
Subject: [Owasp-modsecurity-core-rule-set] modsecurity 2.7.5 (STABLE) +
 nginx 1.4.1 - "Header changing rules not working"
In-Reply-To: <CAKE35kZ3CZOM+xPjv3oVx0t9rC6bDk_C2VVoncYsV63cWmb1AQ@mail.gmail.com>
Message-ID: <CE82F075.BE5D8%rbarnett@trustwave.com>

From: Filipe Bernardo <filipesam at gmail.com<mailto:filipesam at gmail.com>>
Date: Tuesday, October 15, 2013 12:35 PM
To: "owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>" <owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>
Subject: [Owasp-modsecurity-core-rule-set] modsecurity 2.7.5 (STABLE) + nginx 1.4.1 - "Header changing rules not working"

Hi all,
First let me say that i think you are doing a great job with the modsecurity, and the owasp-crs rules.

I have a setup with nginx and modsecurity, i'm using the owasp-crs rules from the repository (git clone https://github.com/SpiderLabs/owasp-modsecurity-crs)

and most rules work "out-of-the-box" with the apps i'm testing


i've encontered a problem using the rules that try to alter the "headers" i think the problem is related with the "directives" "Header edit..." and "RequestHeader append..."

The "rule files" i've found that are causing me problems are the following:
- modsecurity_crs_49_header_tagging.conf
- modsecurity_crs_55_application_defects.conf

Modsecurity was compiled from source with --enable-standalone-module
And nginx was compiled from source with --add-module=/path/to/modsecurity

Can anyone help with this?
Is there any module that i should compile on nginx to be able to "edit" the headers?

Thanks

Yeah, those rule files use the Apache mod_headers directives that won't work on other platforms (IIS, Nginx and Java).

For Nginx, looks like you could use - http://wiki.nginx.org/HttpHeadersMoreModule

-Ryan

________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20131015/caa526f9/attachment.html>

From jamuse at owasp.org  Thu Oct 17 12:35:09 2013
From: jamuse at owasp.org (Josh Amishav-Zlatin)
Date: Thu, 17 Oct 2013 14:35:09 +0200
Subject: [Owasp-modsecurity-core-rule-set] OFDEP Project Update
Message-ID: <CAC+O4mHZsTyvj4cRdhV9H64Zbjxh9UL5ALV7mzkTqs29mVDjWQ@mail.gmail.com>

For those of you who integrated OFDEP (fraud detection API) into your
modsecurity instances, I wanted to let you know about two new features:

1. The default output now uses JSON to improve performance. You can still
get XML output by appending the xml parameter to your request

2. I added a 'lean' feature that improves performance by skipping the
metadata checks. If you are only interested in the final score, append the
lean parameter to your request.

For request details see:
http://wafsec.com/api.html

As always, please let me know about any bugs/feature requests you have.

Thanks,

--
 - Josh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20131017/adc56904/attachment.html>

From filipesam at gmail.com  Thu Oct 17 13:26:48 2013
From: filipesam at gmail.com (Filipe Bernardo)
Date: Thu, 17 Oct 2013 14:26:48 +0100
Subject: [Owasp-modsecurity-core-rule-set] modsecurity 2.7.5 (STABLE) +
 nginx 1.4.1 - "Header changing rules not working"
In-Reply-To: <CAKE35kZ34b+YiPNVu9vGbsecznG0pkkg9TXXM2iEtT4483Cf1g@mail.gmail.com>
References: <CAKE35kZ3CZOM+xPjv3oVx0t9rC6bDk_C2VVoncYsV63cWmb1AQ@mail.gmail.com>
	<CE82F075.BE5D8%rbarnett@trustwave.com>
	<CAKE35kZ34b+YiPNVu9vGbsecznG0pkkg9TXXM2iEtT4483Cf1g@mail.gmail.com>
Message-ID: <CAKE35kY7B_kBYX0z6K=MPmdRsDqxwv+_5M4YpE0yZ8EC5rz=jg@mail.gmail.com>

Hi all,
I've ended up using apache insted of nginx.

The nginx module that was mencioned (more_set_headers), from what i've
tested doesn't have the same potencial has the mod_headers from Apache.

The nginx module can change http headers but i think it doesn't support
regex.

Thanks,
Filipe


On Tue, Oct 15, 2013 at 7:17 PM, Filipe Bernardo <filipesam at gmail.com>wrote:

> Hi, Ryan
> Thanks for your quick answer, i'm going to try to use that extra module,
> and "replace" the directives on the rules with the nginx/module
> "more_set_headers"
>
> (now, abusing your good will :)
> From what i could find regarding that module, i didn't understand if it
> supports regex.. Do you know? would it be only necessary replace the
> "Header edit..."  to "more_set_headers"?
>
> Do you know if is there anyone else using this module with this rules?
>
> Thanks
> Filipe
>
>
>
> On Tue, Oct 15, 2013 at 6:19 PM, Ryan Barnett <RBarnett at trustwave.com>wrote:
>
>>   From: Filipe Bernardo <filipesam at gmail.com>
>>   Date: Tuesday, October 15, 2013 12:35 PM
>> To: "owasp-modsecurity-core-rule-set at lists.owasp.org" <
>> owasp-modsecurity-core-rule-set at lists.owasp.org>
>> Subject: [Owasp-modsecurity-core-rule-set] modsecurity 2.7.5 (STABLE) +
>> nginx 1.4.1 - "Header changing rules not working"
>>
>>         Hi all,
>>  First let me say that i think you are doing a great job with the
>> modsecurity, and the owasp-crs rules.
>>
>>  I have a setup with nginx and modsecurity, i'm using the owasp-crs rules
>> from the repository (git clone
>> https://github.com/SpiderLabs/owasp-modsecurity-crs)
>>
>>  and most rules work "out-of-the-box" with the apps i'm testing
>>
>>
>>  i've encontered a problem using the rules that try to alter the
>> "headers" i think the problem is related with the "directives" "Header
>> edit..." and "RequestHeader append..."
>>
>>  The "rule files" i've found that are causing me problems are the
>> following:
>>  - modsecurity_crs_49_header_tagging.conf
>>  - modsecurity_crs_55_application_defects.conf
>>
>>  Modsecurity was compiled from source with --enable-standalone-module
>>  And nginx was compiled from source with --add-module=/path/to/modsecurity
>>
>>  Can anyone help with this?
>>  Is there any module that i should compile on nginx to be able to "edit"
>> the headers?
>>
>>  Thanks
>>
>>
>>   Yeah, those rule files use the Apache mod_headers directives that
>> won't work on other platforms (IIS, Nginx and Java).
>>
>>  For Nginx, looks like you could use -
>> http://wiki.nginx.org/HttpHeadersMoreModule
>>
>>  -Ryan
>>
>> ------------------------------
>>
>> This transmission may contain information that is privileged,
>> confidential, and/or exempt from disclosure under applicable law. If you
>> are not the intended recipient, you are hereby notified that any
>> disclosure, copying, distribution, or use of the information contained
>> herein (including any reliance thereon) is strictly prohibited. If you
>> received this transmission in error, please immediately contact the sender
>> and destroy the material in its entirety, whether in electronic or hard
>> copy format.
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20131017/9c1b2d24/attachment.html>

From RBarnett at trustwave.com  Thu Oct 17 21:16:49 2013
From: RBarnett at trustwave.com (Ryan Barnett)
Date: Thu, 17 Oct 2013 21:16:49 +0000
Subject: [Owasp-modsecurity-core-rule-set] Migrating from JIRA to GitHub
	Issues
Message-ID: <CE85CC01.C00FC%rbarnett@trustwave.com>

Greetings everyone,
In an effort to consoldate our Issue tracking, we have chosen to migrate all tickets from our public JIRA system over to our GitHub Issue trackers.  This is for both ModSecurity itself and for the OWASP ModSecurity CRS.  This move solves many issues as all our code was already migrated to GitHub so utlilzing the built in Issue tracker makes resolving issues easier.  While this does solve many issues moving forward, there were a few minor issues with the automated migration we used -

  1.  Issue creation timestamps are gone
  2.  The Reporter data was not able to be automatically mapped to current GitHub users.  So, if you opened a ticket in JIRA, you won't be getting the automated emails when we comment on them.  I suggest you use GitHub accounts moving forward and it should work fine.

We have shut down public access to JIRA as of this afternoon.  If you try to access the old URLs, you should be redirected to GitHub Issues.

Please let us know if you have any problems or questions.

--
Ryan Barnett
Trustwave SpiderLabs
ModSecurity Project Leader
OWASP ModSecurity CRS Project Leader


________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20131017/49e940b7/attachment.html>

From jg at softjury.de  Tue Oct 29 09:48:55 2013
From: jg at softjury.de (Jan Phillip Greimann)
Date: Tue, 29 Oct 2013 10:48:55 +0100
Subject: [Owasp-modsecurity-core-rule-set] Issues with
	"SecRuleUpdateTargetByTag" and Apache-Location
Message-ID: <526F8487.6010905@softjury.de>

Hi everyone,

The argument 'login[password]' causes many false-positives because of 
special-characters. I didn't want to remove the argument globally, so I 
tried to limit it only to our login-sites. This could be multiple sites 
because of internationalization, example:

https://www.mydomain.invalid/fr/login
https://www.mydomain.invalid/en/login
https://www.mydomain.invalid/nl/login

So i created the configuration like below but it doesn't trigger at all. 
Did I make a mistake? It works without the Location-tags like a charm, 
but it isn't good to ignore arguments globally.


Software-Versions:
libapache2-modsecurity 2.7.5
modsecurity-crs        2.2.8
apache2*               2.2.16-6+squeeze11


===============================
~> cat modsecurity_crs_70_post_custom.conf

<Location ~ "^/../login$">
     SecRuleUpdateTargetByTag "OWASP_CRS/WEB_ATTACK/SQL_INJECTION" 
"!ARGS:login[password]"
     SecRuleUpdateTargetByTag "OWASP_CRS/PROTOCOL_VIOLATION/EVASION" 
"!ARGS:login[password]"
     SecRuleUpdateTargetByTag "OWASP_CRS/WEB_ATTACK/XSS" 
"!ARGS:login[password]"
     SecRuleUpdateTargetByTag "OWASP_CRS/WEB_ATTACK/LDAP_INJECTION" 
"!ARGS:login[password]"
</Location>
===============================


Best regards,

Jan


From jg at softjury.de  Tue Oct 29 10:30:42 2013
From: jg at softjury.de (Jan Phillip Greimann)
Date: Tue, 29 Oct 2013 11:30:42 +0100
Subject: [Owasp-modsecurity-core-rule-set] Issues with
 "SecRuleUpdateTargetByTag" and Apache-Location
In-Reply-To: <526F8487.6010905@softjury.de>
References: <526F8487.6010905@softjury.de>
Message-ID: <526F8E52.9050600@softjury.de>

In addition I want to try something without apache2-<location> for 
cross-webserver-compatibility.

Due to
   http://comments.gmane.org/gmane.comp.apache.mod-security.user/9988
and
   https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual#ctl
this should also be possible:

SecRule REQUEST_URI "^/../login" 
"phase:1,id:2001,t:none,nolog,pass,ctl:ruleRemoveTargetByTag=OWASP_CRS/(WEB_ATTACK/(SQL_INJECTION|XSS|LDAP_INJECTION)|PROTOCOL_VIOLATION/EVASION);ARGS:login[password]"

Now the problem is that I don't know if it should added before CRS in
   modsecurity_crs_15_pre_custom.conf
or after the CRS in
   modsecurity_crs_70_post_custom.conf.






Am 29.10.2013 10:48, schrieb Jan Phillip Greimann:
> Hi everyone,
>
> The argument 'login[password]' causes many false-positives because of
> special-characters. I didn't want to remove the argument globally, so I
> tried to limit it only to our login-sites. This could be multiple sites
> because of internationalization, example:
>
> https://www.mydomain.invalid/fr/login
> https://www.mydomain.invalid/en/login
> https://www.mydomain.invalid/nl/login
>
> So i created the configuration like below but it doesn't trigger at all.
> Did I make a mistake? It works without the Location-tags like a charm,
> but it isn't good to ignore arguments globally.
>
>
> Software-Versions:
> libapache2-modsecurity 2.7.5
> modsecurity-crs        2.2.8
> apache2*               2.2.16-6+squeeze11
>
>
> ===============================
> ~> cat modsecurity_crs_70_post_custom.conf
>
> <Location ~ "^/../login$">
>      SecRuleUpdateTargetByTag "OWASP_CRS/WEB_ATTACK/SQL_INJECTION"
> "!ARGS:login[password]"
>      SecRuleUpdateTargetByTag "OWASP_CRS/PROTOCOL_VIOLATION/EVASION"
> "!ARGS:login[password]"
>      SecRuleUpdateTargetByTag "OWASP_CRS/WEB_ATTACK/XSS"
> "!ARGS:login[password]"
>      SecRuleUpdateTargetByTag "OWASP_CRS/WEB_ATTACK/LDAP_INJECTION"
> "!ARGS:login[password]"
> </Location>
> ===============================
>
>
> Best regards,
>
> Jan


