From modsec at spam.lifeforms.nl  Wed Jan  6 14:10:29 2016
From: modsec at spam.lifeforms.nl (Walter Hop)
Date: Wed, 6 Jan 2016 15:10:29 +0100
Subject: [Owasp-modsecurity-core-rule-set] Working on Paranoia-Mode for
	Core Rules 3.0.0
In-Reply-To: <20151227084554.GA10055@elias>
References: <20151227084554.GA10055@elias>
Message-ID: <F7C0AE23-45C0-42F1-A408-A9970AF7F871@spam.lifeforms.nl>

Hi Christian,

I?m absolutely interested in this. I?ve wanted to look at CRS v3, but I?ve been hesitant to try it, mostly because I actually like the paranoia of v2. I think it would be very good to facilitate both modes of operation:

1) General virtual hosting scenario where the admin doesn?t control the enduser webapps and doesn?t necessarily have high-level ModSecurity knowledge. You want to be conservative on false positives and you want very few knobs to tweak. If there is enough confidence that this would protect against almost all attacks, it should probably be the default in order to make the CRS more useful to more people.

2) Users who control the complete web app, have a good feedback loop/in-depth monitoring, and have the knowledge and processes to do good whitelisting of false positives. This is mostly my scenario and so I want the WAF to really be as strict as it possibly could be, and I?ll deal with the fallout.

So I think this idea is awesome, maybe I can help some bit, let me know.

Some notes:

- An advantage of adding optional stricter rules, by keeping the CRS v2 SQL/XSS rules, is that they could possibly run earlier than the libinjection rules (including a blocking decision), and this might actually prevent bypasses or exploits against libinjection if you?re concerned about it, for example by blocking input that?s totally unreasonable.

- I wouldn?t even call ?2? paranoia mode. I think of it more as ?relaxed mode? and ?strict mode?. I think this naming would motivate people more to experiment with the strict mode. I think it?s absolutely reasonable to run in this mode and people who know their apps and have the resources to babysit the WAF a bit should not be demotivated to try it.

Cheers!
WH


> On 27 Dec 2015, at 09:45, Christian Folini <christian.folini at netnea.com> wrote:
> 
> Dear all,
> 
> Following discussions here on the list and my recent blogpost,
> Chaim and I talked things through and I will develop a pull request
> to introduce a paranoia mode into the core rule set.
> 
> The paranoia mode will be enabled by setting a special variable,
> which will then execute a bunch of additional rules for added security
> but with the disadvantage of a higher rate of false positives when
> left untuned.
> 
> Some rules, which did not make the cut into the 3.0.0-dev tree, will
> reappear in this setting as will some new rules.
> 
> The details are not clear so far and a fair bunch of work still has
> to be done. Therefore, I am looking to recruit 2-3 people who are 
> interested in this feature set. This is a nice task to dive deeper
> into the inner workings of the core rules and it is an option to
> help directing the development of the next major release.
> 
> I am ok with working with core rule newbies, as long as you have a 
> basic unferstanding of ModSecurity.
> 
> Please respond here or via private mail. 
> 
> Best,
> 
> Christian Folini
> 
> -- 
> If you have men who will only come if they know there is a good road, 
> I don't want them. I want men who will come if there is no road at all.
> -- David Livingstone
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set

-- 
Walter Hop | PGP key: https://lifeforms.nl/pgp

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160106/8a7915bd/attachment.html>

From christian.folini at netnea.com  Thu Jan  7 05:29:10 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Thu, 7 Jan 2016 06:29:10 +0100
Subject: [Owasp-modsecurity-core-rule-set] Working on Paranoia-Mode for
 Core Rules 3.0.0
In-Reply-To: <F7C0AE23-45C0-42F1-A408-A9970AF7F871@spam.lifeforms.nl>
References: <20151227084554.GA10055@elias>
	<F7C0AE23-45C0-42F1-A408-A9970AF7F871@spam.lifeforms.nl>
Message-ID: <20160107052910.GC13245@elias>

Walter,

On Wed, Jan 06, 2016 at 03:10:29PM +0100, Walter Hop wrote:
> I?m absolutely interested in this. I?ve wanted to look at CRS v3, but I?ve been hesitant to try it, mostly because I actually like the paranoia of v2. I think it would be very good to facilitate both modes of operation:
> 
> 1) General virtual hosting scenario where the admin doesn?t control the enduser webapps and doesn?t necessarily have high-level ModSecurity knowledge. You want to be conservative on false positives and you want very few knobs to tweak. If there is enough confidence that this would protect against almost all attacks, it should probably be the default in order to make the CRS more useful to more people.
> 
> 2) Users who control the complete web app, have a good feedback loop/in-depth monitoring, and have the knowledge and processes to do good whitelisting of false positives. This is mostly my scenario and so I want the WAF to really be as strict as it possibly could be, and I?ll deal with the fallout.

That's exactly my thinking as well. The CRS 2.2.x leaned towards 
the 2nd use case, with the new CRS in the development moving
towards the first one. This is a good thing, but we want to
retain (2) as an option for the advanced users.

> So I think this idea is awesome, maybe I can help some bit, let me know.

I got a few private responses to my message. So we have a little project
team and more news will be posted to this mailinglist shortly.

> - An advantage of adding optional stricter rules, by keeping the CRS v2 SQL/XSS rules, is that they could possibly run earlier than the libinjection rules (including a blocking decision), and this might actually prevent bypasses or exploits against libinjection if you?re concerned about it, for example by blocking input that?s totally unreasonable.

That's an interesting thought. Also in the light of the idea to have
more granular phases in ModSec. What I have a hard time imagining is
a clear decision on "totally unreasonable" input. If I want to attack
libinjection, then I would try and avoid the "totally unreasonable"
rule. But let's keep the idea in mind. Maybe as a blocking
decision after phase 1.

> - I wouldn?t even call ?2? paranoia mode. I think of it more as ?relaxed mode? and ?strict mode?. I think this naming would motivate people more to experiment with the strict mode. I think it?s absolutely reasonable to run in this mode and people who know their apps and have the resources to babysit the WAF a bit should not be demotivated to try it.

While I think it should be called paranoia mode, you are not the 
only one with this opinion. It is an important question. But it
is also a fairly dangerous question, as it could lead to lengthy
non-technical discussions (that's where everybody has an opinion
and the cost to make oneself heard are minimal). So I would 
want to push this decision back a few weeks. Let's get the work
done first and talk about naming afterwards.

Ahoj,

Christian


-- 
The reasonable man adapts himself to the world; the unreasonable man 
persists in trying to adapt the world to himself. Therefore, all 
progress depends on the unreasonable man.
-- George Bernard Shaw

From christian.folini at netnea.com  Thu Jan  7 07:54:22 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Thu, 7 Jan 2016 08:54:22 +0100
Subject: [Owasp-modsecurity-core-rule-set] Working on Paranoia-Mode for
 Core Rules 3.0.0
In-Reply-To: <20151227084554.GA10055@elias>
References: <20151227084554.GA10055@elias>
Message-ID: <20160107075422.GA16970@elias>

Dear all,

As mentioned in my previous response to Walter, I got enough
feedback to form a little team to work on this.

We created a wiki page on the OWASP wiki under the CRS
page:

https://www.owasp.org/index.php/OWASP_ModSec_CRS_Paranoia_Mode

I linked to this page from the main CRS page, where I introduced
a section about the upcoming 3.0.0 release.

We will try and document our work on this new CRS mode on the
said wiki page. Technical discussions are supposed to be held
in public, likely on this mailinglist for future archiving.

More helping hands are still welcome. You can can join
formally by sending me a message, or you can take part in the
discussions here or on the wiki.

Cheers,

Christian Folini



-- 
Those who would give up Essential Liberty to purchase a little
Temporary Safety, deserve neither Liberty nor Safety.  
-- Benjamin Franklin

From mail at noelzindel.org  Thu Jan  7 19:34:31 2016
From: mail at noelzindel.org (=?utf-8?Q?No=C3=ABl_Zindel?=)
Date: Thu, 7 Jan 2016 20:34:31 +0100
Subject: [Owasp-modsecurity-core-rule-set] Working on Paranoia-Mode for
	Core Rules 3.0.0
In-Reply-To: <20160107075422.GA16970@elias>
References: <20151227084554.GA10055@elias> <20160107075422.GA16970@elias>
Message-ID: <D5108255-5EE2-4687-AB66-FC98FC508CDB@noelzindel.org>

Hi Everyone,

First, thanks Christian for bringing this project to life and setting up everything. I?m excited to work with you guys.

Please note, as Christian already stated in his initial mail, I?m fairly new to ModSecurity and the Core Rules, even Apache is a topic I?m still scratching the surface.
Nevertheless, I seem to understand the basics and I?m highly motivated to dig deeper.

Reading through the tasks it appears to me that a good part requires at least an intermediate understanding of ModSec and the CRS -
even though comparing the two rulesets and documenting the project should be possible even for me; I?ll sign up for that as soon as I have access to the wiki.

I see myself more as additional ?computing power?. So, if you need help with anything or got a task for me, let me know.
Just answer right here or ping me at mail(at)noelzindel(dot)org.

Regards,
No?l


> On 07 Jan 2016, at 08:54, Christian Folini <christian.folini at netnea.com> wrote:
> 
> Dear all,
> 
> As mentioned in my previous response to Walter, I got enough
> feedback to form a little team to work on this.
> 
> We created a wiki page on the OWASP wiki under the CRS
> page:
> 
> https://www.owasp.org/index.php/OWASP_ModSec_CRS_Paranoia_Mode
> 
> I linked to this page from the main CRS page, where I introduced
> a section about the upcoming 3.0.0 release.
> 
> We will try and document our work on this new CRS mode on the
> said wiki page. Technical discussions are supposed to be held
> in public, likely on this mailinglist for future archiving.
> 
> More helping hands are still welcome. You can can join
> formally by sending me a message, or you can take part in the
> discussions here or on the wiki.
> 
> Cheers,
> 
> Christian Folini
> 
> 
> 
> --
> Those who would give up Essential Liberty to purchase a little
> Temporary Safety, deserve neither Liberty nor Safety.
> -- Benjamin Franklin
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 801 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160107/c0e6688b/attachment.pgp>

From CSanders at trustwave.com  Thu Jan  7 20:20:25 2016
From: CSanders at trustwave.com (Chaim Sanders)
Date: Thu, 7 Jan 2016 20:20:25 +0000
Subject: [Owasp-modsecurity-core-rule-set] Working on Paranoia-Mode
	for	Core Rules 3.0.0
In-Reply-To: <D5108255-5EE2-4687-AB66-FC98FC508CDB@noelzindel.org>
References: <20151227084554.GA10055@elias> <20160107075422.GA16970@elias>
	<D5108255-5EE2-4687-AB66-FC98FC508CDB@noelzindel.org>
Message-ID: <DM2PR07MB41687F590DBF65F7DB4B225DBF50@DM2PR07MB416.namprd07.prod.outlook.com>

Sounds good No?l,
There is plenty to do and it doesn't require as much knowledge as you might think. The beauty of CRS is that really the only complicated bits are the actual regex's themselves and we're not really changing many of those. Although I do hope to update two before we go to RC1 :). Christian, as always I am available to help with all the tasks or shepherd anyone on tasks which might be equally helpful.
Of importance one of the tasks I've started is the OWASP CRS Documentation project. I made a separate repo for it and it's built in sphinx to make our lives easier. You can see it here: https://github.com/SpiderLabs/owasp-modsecurity-crs/tree/v3.0.0-rc1/documentation.
I also added a script to compile it from the repo daily at: https://www.modsecurity.org/CRS/Documentation/
The actual project itself is a submodule (git term for subproject) which is hosted here: https://github.com/SpiderLabs/OWASP-CRS-Documentation
If any of you want to translate it (in the future) etc that is fine but for 3.0 RC I want to at least have it done in English :). So I know that was one of Christian's tasks :-D.



-----Original Message-----
From: owasp-modsecurity-core-rule-set-bounces at lists.owasp.org [mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org] On Behalf Of No?l Zindel
Sent: Thursday, January 07, 2016 2:35 PM
To: owasp-modsecurity-core-rule-set at lists.owasp.org
Subject: Re: [Owasp-modsecurity-core-rule-set] Working on Paranoia-Mode for Core Rules 3.0.0

Hi Everyone,

First, thanks Christian for bringing this project to life and setting up everything. I?m excited to work with you guys.

Please note, as Christian already stated in his initial mail, I?m fairly new to ModSecurity and the Core Rules, even Apache is a topic I?m still scratching the surface.
Nevertheless, I seem to understand the basics and I?m highly motivated to dig deeper.

Reading through the tasks it appears to me that a good part requires at least an intermediate understanding of ModSec and the CRS - even though comparing the two rulesets and documenting the project should be possible even for me; I?ll sign up for that as soon as I have access to the wiki.

I see myself more as additional ?computing power?. So, if you need help with anything or got a task for me, let me know.
Just answer right here or ping me at mail(at)noelzindel(dot)org.

Regards,
No?l


> On 07 Jan 2016, at 08:54, Christian Folini <christian.folini at netnea.com> wrote:
>
> Dear all,
>
> As mentioned in my previous response to Walter, I got enough feedback
> to form a little team to work on this.
>
> We created a wiki page on the OWASP wiki under the CRS
> page:
>
> http://scanmail.trustwave.com/?c=4062&d=q8SO1hFqRJ-4DhnKjQ3xs__KQZH8Cx
> r5CNJyUYRzpg&s=5&u=https%3a%2f%2fwww%2eowasp%2eorg%2findex%2ephp%2fOWA
> SP%5fModSec%5fCRS%5fParanoia%5fMode
>
> I linked to this page from the main CRS page, where I introduced a
> section about the upcoming 3.0.0 release.
>
> We will try and document our work on this new CRS mode on the said
> wiki page. Technical discussions are supposed to be held in public,
> likely on this mailinglist for future archiving.
>
> More helping hands are still welcome. You can can join formally by
> sending me a message, or you can take part in the discussions here or
> on the wiki.
>
> Cheers,
>
> Christian Folini
>
>
>
> --
> Those who would give up Essential Liberty to purchase a little
> Temporary Safety, deserve neither Liberty nor Safety.
> -- Benjamin Franklin
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> http://scanmail.trustwave.com/?c=4062&d=q8SO1hFqRJ-4DhnKjQ3xs__KQZH8Cxr5CNB1W4R3rA&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2fowasp-modsecurity-core-rule-set


________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

From christian.folini at netnea.com  Thu Jan  7 20:23:27 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Thu, 7 Jan 2016 21:23:27 +0100
Subject: [Owasp-modsecurity-core-rule-set] Working on Paranoia-Mode for
 Core Rules 3.0.0
In-Reply-To: <D5108255-5EE2-4687-AB66-FC98FC508CDB@noelzindel.org>
References: <20151227084554.GA10055@elias> <20160107075422.GA16970@elias>
	<D5108255-5EE2-4687-AB66-FC98FC508CDB@noelzindel.org>
Message-ID: <20160107202327.GA31282@elias>

No?l,

On Thu, Jan 07, 2016 at 08:34:31PM +0100, No?l Zindel wrote:
> Nevertheless, I seem to understand the basics and I?m highly motivated to dig deeper.

That's the spirit. Any project has tasks for newbies and this
is no different. Glad to have you in my team.

> Reading through the tasks it appears to me that a good part requires at least an intermediate understanding of ModSec and the CRS -
> even though comparing the two rulesets and documenting the project should be possible even for me; I?ll sign up for that as soon as I have access to the wiki.

Pick something of your choice. If you are any good at drawing, 
"Draw flowchart" would be a good choice.
"Write new stricter siblings for existing rules" should meet your
level of expertise just as well. You could start and play around
with 981173 immediately: copy the rule under a new ID and make
it stricter / paranoid. Once this is done, try and make sure a
uuid is no longer triggering the rule (-> whitelist uuid format
to circumvent the rule; this uuid false positive is a speciality 
of 981173).

More candidates will pop up as we progress.

Best,

Christian

> 
> I see myself more as additional ?computing power?. So, if you need help with anything or got a task for me, let me know.
> Just answer right here or ping me at mail(at)noelzindel(dot)org.
> 
> Regards,
> No?l
> 
> 
> > On 07 Jan 2016, at 08:54, Christian Folini <christian.folini at netnea.com> wrote:
> > 
> > Dear all,
> > 
> > As mentioned in my previous response to Walter, I got enough
> > feedback to form a little team to work on this.
> > 
> > We created a wiki page on the OWASP wiki under the CRS
> > page:
> > 
> > https://www.owasp.org/index.php/OWASP_ModSec_CRS_Paranoia_Mode
> > 
> > I linked to this page from the main CRS page, where I introduced
> > a section about the upcoming 3.0.0 release.
> > 
> > We will try and document our work on this new CRS mode on the
> > said wiki page. Technical discussions are supposed to be held
> > in public, likely on this mailinglist for future archiving.
> > 
> > More helping hands are still welcome. You can can join
> > formally by sending me a message, or you can take part in the
> > discussions here or on the wiki.
> > 
> > Cheers,
> > 
> > Christian Folini
> > 
> > 
> > 
> > --
> > Those who would give up Essential Liberty to purchase a little
> > Temporary Safety, deserve neither Liberty nor Safety.
> > -- Benjamin Franklin
> > _______________________________________________
> > Owasp-modsecurity-core-rule-set mailing list
> > Owasp-modsecurity-core-rule-set at lists.owasp.org
> > https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
> 





From christian.folini at netnea.com  Thu Jan  7 20:48:47 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Thu, 7 Jan 2016 21:48:47 +0100
Subject: [Owasp-modsecurity-core-rule-set] CRS Documentation (was: Re:
 Working on Paranoia-Mode for Core Rules 3.0.0)
In-Reply-To: <DM2PR07MB41687F590DBF65F7DB4B225DBF50@DM2PR07MB416.namprd07.prod.outlook.com>
References: <20151227084554.GA10055@elias> <20160107075422.GA16970@elias>
	<D5108255-5EE2-4687-AB66-FC98FC508CDB@noelzindel.org>
	<DM2PR07MB41687F590DBF65F7DB4B225DBF50@DM2PR07MB416.namprd07.prod.outlook.com>
Message-ID: <20160107204847.GA346@elias>

On Thu, Jan 07, 2016 at 08:20:25PM +0000, Chaim Sanders wrote:
> Of importance one of the tasks I've started is the OWASP CRS Documentation project. I made a separate repo for it and it's built in sphinx to make our lives easier. You can see it here: https://github.com/SpiderLabs/owasp-modsecurity-crs/tree/v3.0.0-rc1/documentation.
> I also added a script to compile it from the repo daily at: https://www.modsecurity.org/CRS/Documentation/

Very cool. Thanks Chaim.

Cheers,

Christian

-- 
Besides, Emacs would be a far better OS if it shipped with a 
halfway-decent text editor - like vi for example.

From mail at noelzindel.org  Thu Jan  7 20:52:20 2016
From: mail at noelzindel.org (=?utf-8?Q?No=C3=ABl_Zindel?=)
Date: Thu, 7 Jan 2016 21:52:20 +0100
Subject: [Owasp-modsecurity-core-rule-set] Working on Paranoia-Mode for
	Core Rules 3.0.0
In-Reply-To: <20160107202327.GA31282@elias>
References: <20151227084554.GA10055@elias> <20160107075422.GA16970@elias>
	<D5108255-5EE2-4687-AB66-FC98FC508CDB@noelzindel.org>
	<20160107202327.GA31282@elias>
Message-ID: <18A39194-27B1-426A-A0EB-59FC3DF6930A@noelzindel.org>

Thanks Chaim, thanks Christian.

Gotcha. Will get back to you.

> On 07 Jan 2016, at 21:23, Christian Folini <christian.folini at netnea.com> wrote:
> 
> 
>> Reading through the tasks it appears to me that a good part requires at least an intermediate understanding of ModSec and the CRS -
>> even though comparing the two rulesets and documenting the project should be possible even for me; I?ll sign up for that as soon as I have access to the wiki.
> 
> Pick something of your choice. If you are any good at drawing,
> "Draw flowchart" would be a good choice.
> "Write new stricter siblings for existing rules" should meet your
> level of expertise just as well. You could start and play around
> with 981173 immediately: copy the rule under a new ID and make
> it stricter / paranoid. Once this is done, try and make sure a
> uuid is no longer triggering the rule (-> whitelist uuid format
> to circumvent the rule; this uuid false positive is a speciality
> of 981173).
> 
> More candidates will pop up as we progress.
> 
> Best,
> 
> Christian
> 
>> 
>> I see myself more as additional ?computing power?. So, if you need help with anything or got a task for me, let me know.
>> Just answer right here or ping me at mail(at)noelzindel(dot)org.
>> 
>> Regards,
>> No?l
>> 
>> 
>>> On 07 Jan 2016, at 08:54, Christian Folini <christian.folini at netnea.com> wrote:
>>> 
>>> Dear all,
>>> 
>>> As mentioned in my previous response to Walter, I got enough
>>> feedback to form a little team to work on this.
>>> 
>>> We created a wiki page on the OWASP wiki under the CRS
>>> page:
>>> 
>>> https://www.owasp.org/index.php/OWASP_ModSec_CRS_Paranoia_Mode
>>> 
>>> I linked to this page from the main CRS page, where I introduced
>>> a section about the upcoming 3.0.0 release.
>>> 
>>> We will try and document our work on this new CRS mode on the
>>> said wiki page. Technical discussions are supposed to be held
>>> in public, likely on this mailinglist for future archiving.
>>> 
>>> More helping hands are still welcome. You can can join
>>> formally by sending me a message, or you can take part in the
>>> discussions here or on the wiki.
>>> 
>>> Cheers,
>>> 
>>> Christian Folini
>>> 
>>> 
>>> 
>>> --
>>> Those who would give up Essential Liberty to purchase a little
>>> Temporary Safety, deserve neither Liberty nor Safety.
>>> -- Benjamin Franklin
>>> _______________________________________________
>>> Owasp-modsecurity-core-rule-set mailing list
>>> Owasp-modsecurity-core-rule-set at lists.owasp.org
>>> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
>> 
> 
> 
> 
> 
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 801 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160107/b3730b5d/attachment-0001.pgp>

From owasp-crs at junix.systems  Tue Jan 12 16:38:33 2016
From: owasp-crs at junix.systems (Richard Jones)
Date: Tue, 12 Jan 2016 16:38:33 +0000
Subject: [Owasp-modsecurity-core-rule-set] Session hijacking and Could not
	set variable
Message-ID: <20160112163833.GA5208@sirius.junix.systems>

Hi,

I?ve rejigged where my modsecurity files go and run into an error. I?m
sure it?s something simple, but I can?t work it out.

I?m seeing huge number of these errors about session.ip_hash and
session.ua_hash not having a collection:

[Tue Jan 12 16:33:42.379454 2016] [:error] [pid 1925:tid 139976666769152] [client 10.30.82.121] ModSecurity: Could not set variable ?session.ip_hash? as the collection does not exist. [hostname ?www.reading.ac.uk?] [uri ?/mytimetable/m?] [unique_id ?VpUq5IbhAVgAAAeFS at UAAAEI?]
[Tue Jan 12 16:33:42.379484 2016] [:error] [pid 1925:tid 139976666769152] [client 10.30.82.121] ModSecurity: Could not set variable ?session.ua_hash? as the collection does not exist.

Disabling modsecurity_crs_16_session_hijacking.conf fixes the errors.

I?m running stock Ubuntu 14.04 (modsecurity 2.7.7-2) with the latest
OWASP crs rules from git. modsecurity_crs_10_setup.conf is also as stock
except for allowing the anomaly scoring.

Can anyone help? I did have session-hjacking enabled in the previous
config and did not get these errors.

Thanks,

Richard

-- 
http://www.jonze.com/privacy.html

From christian.folini at netnea.com  Tue Jan 12 20:45:32 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Tue, 12 Jan 2016 21:45:32 +0100
Subject: [Owasp-modsecurity-core-rule-set] Session hijacking and Could
 not set variable
In-Reply-To: <20160112163833.GA5208@sirius.junix.systems>
References: <20160112163833.GA5208@sirius.junix.systems>
Message-ID: <20160112204532.GB11513@elias>

Hello Richard,

This error message is a rare.

On Tue, Jan 12, 2016 at 04:38:33PM +0000, Richard Jones wrote:
> I?m seeing huge number of these errors about session.ip_hash and
> session.ua_hash not having a collection:
> 
> [Tue Jan 12 16:33:42.379454 2016] [:error] [pid 1925:tid 139976666769152] [client 10.30.82.121] ModSecurity: Could not set variable ?session.ip_hash? as the collection does not exist. [hostname ?www.reading.ac.uk?] [uri ?/mytimetable/m?] [unique_id ?VpUq5IbhAVgAAAeFS at UAAAEI?]
> [Tue Jan 12 16:33:42.379484 2016] [:error] [pid 1925:tid 139976666769152] [client 10.30.82.121] ModSecurity: Could not set variable ?session.ua_hash? as the collection does not exist.
> 
> Disabling modsecurity_crs_16_session_hijacking.conf fixes the errors.

Can you confirm, that the setsid action is really executed
for the session collection and that it happens before 
modsecurity_crs_16_session_hijacking.conf?

Given your description of the setup, it should be alright, but
somehow there is an issue. If the creation of the collection fails,
then there should be an additional error, so I think setsid
is not happening.

Ahoj,

Christian


-- 
The meaning of the living words that come out of the experiences of
great hearts can never be exhausted by any one system of logical
interpretation.  They have to be endlessly explained by the
commentaries of individual lives, and they gain an added mystery in
each new revelation.
-- Rabindranath Tagore

From Manuel.LeosRivas at gemalto.com  Wed Jan 13 09:42:02 2016
From: Manuel.LeosRivas at gemalto.com (Leos Rivas Manuel)
Date: Wed, 13 Jan 2016 09:42:02 +0000
Subject: [Owasp-modsecurity-core-rule-set] CRS Paranoia Mode: Let's get
	going
In-Reply-To: <20160108171205.GA24151@elias>
References: <20160107051226.GB13245@elias>
	<E2C9913D99137A42A2A9646B1E82B8DB010D3FECAD@A1GTOEMBXV001.gto.a3c.atos.net>
	<20160108171205.GA24151@elias>
Message-ID: <E2C9913D99137A42A2A9646B1E82B8DB010D405BCF@A1GTOEMBXV001.gto.a3c.atos.net>

Hello list,

For upgrading from CRS 2.2.9 to 3.0 RC1 there is an update.py script to renumber the rules, does it includes all rule id changes already?

If so just for comparison purposes running the script against the 2.2.9 CRS will update the id numbers to match those in 3.0RC1, am I right?

I'm working on doing a comparison of both rulesets to see what the differences are.

Regards,
Manuel

-----Original Message-----
From: Christian Folini [mailto:christian.folini at netnea.com]
Sent: vendredi 8 janvier 2016 18:12
To: Leos Rivas Manuel
Subject: Re: CRS Paranoia Mode: Let's get going

Hello Leos,

I knew Chaim planned to do an re-numbering, but he was faster than I anticipated.

If you do not mind, then let's discuss this on the mailinglist.
Ask the question there and we'll if Chaim or the others have anything to add. I had two people thinking about hooking up last night...

Ahoj,

Christian

--
In war you will generally find that the enemy has at any time three courses of action open to him. Of those three, he will invariably choose the fourth.
-- Helmuth Von Moltke
________________________________
 This message and any attachments are intended solely for the addressees and may contain confidential information. Any unauthorized use or disclosure, either whole or partial, is prohibited.
E-mails are susceptible to alteration. Our company shall not be liable for the message if altered, changed or falsified. If you are not the intended recipient of this message, please delete it and notify the sender.
Although all reasonable efforts have been made to keep this transmission free from viruses, the sender will not be liable for damages caused by a transmitted virus.

From d.n.kolegov at gmail.com  Wed Jan 13 11:21:07 2016
From: d.n.kolegov at gmail.com (Denis Kolegov)
Date: Wed, 13 Jan 2016 17:21:07 +0600
Subject: [Owasp-modsecurity-core-rule-set] LDAP injection rule
Message-ID: <CACoviyOGDuiYJoUpiG64kffbg2C+GM7Fs7avX2hcqWkvYC8KOw@mail.gmail.com>

Hello All.

I am working on RE for LDAP injection.
Could anybody explain the structure of the LDAP injection detection rule?

https://github.com/SpiderLabs/owasp-modsecurity-crs/blob/master/base_rules/modsecurity_crs_40_generic_attacks.conf

Its regular expression is the following:

(?:\((?:\W*?(?:objectc(?:ategory|lass)|homedirectory|[gu]idnumber|cn)\b\W*?=|[^\w\x80-\xFF]*?[\!\&\|][^\w\x80-\xFF]*?\()|\)[^\w\x80-\xFF]*?\([^\w\x80-\xFF]*?[\!\&\|])

See regular expression visualizer (https://jex.im/regulex) screenshot  in
the attachment.

My questions:

1.  What is the purpose of RE after '(' character? Which context is
supposed there?

I found the following vectors:

Alonso-Parada vectors:

foo)(sn=100
foo)(&)
documents)(security_level=*))(&(directory=documents
printer)(uid=*)
printer)(department=fa*)

printer)(department=*fa*)
*)(objectClass=*))(&(objectClass=void
*)(objectClass=users))(&(objectClass=foo
void)(objectClass=users))(&(objectClass=void)


Exploit DB:

ka0x)(|(homedirectory=*)
5faa0382d747b754)(sn=*
5faa0382d747b754)!(sn=*

Burp:

eb9adbd87d)(sn=*
eb9adbd87d)!(sn=*
*)(sn=*
*)!(sn=*



2.  Some trivial LDAPi vectors are not detected. For example,

printer)(uid=*)

from Alonso-Parada slides
https://www.blackhat.com/presentations/bh-europe-08/Alonso-Parada/Whitepaper/bh-eu-08-alonso-parada-WP.pdf

Thanks.

-- 
Sincerely,
Denis Kolegov
@dnkolegov
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160113/9b995d05/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: modsec_ldap.png
Type: image/png
Size: 58415 bytes
Desc: not available
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160113/9b995d05/attachment-0001.png>

From owasp-crs at junix.systems  Wed Jan 13 13:10:40 2016
From: owasp-crs at junix.systems (Richard Jones)
Date: Wed, 13 Jan 2016 13:10:40 +0000
Subject: [Owasp-modsecurity-core-rule-set] Location of
	modsecurity_crs_10_setup.conf
Message-ID: <20160113131040.GB9702@sirius.junix.systems>

I?ve been reading through the documentation that comes with the latest
CRS and I?m a little confused.

The bundled INSTALL file seems to suggest that
modsecurity_crs_10_setup.conf should be installed in activated_rules and
also in the directory beneath. Using both results in errors about
duplicate id numbers. Which is correct?

$ sudo ln -s /usr/local/apache/conf/crs/modsecurity_crs_10_setup.conf
activated_rules/modsecurity_crs_10_setup.conf

[?]

<IfModule security2_module>
   Include conf/crs/modsecurity_crs_10_setup.conf
   Include conf/crs/activated_rules/*.conf
</IfModule>

To my mind, the setup.conf files should come before all others, but if
so then why number it *and* have it load after the optional
ignore_static rules?

Thanks,

Richard

-- 
http://www.jonze.com/privacy.html

From CSanders at trustwave.com  Wed Jan 13 17:25:09 2016
From: CSanders at trustwave.com (Chaim Sanders)
Date: Wed, 13 Jan 2016 17:25:09 +0000
Subject: [Owasp-modsecurity-core-rule-set] Location of
 modsecurity_crs_10_setup.conf
In-Reply-To: <20160113131040.GB9702@sirius.junix.systems>
References: <20160113131040.GB9702@sirius.junix.systems>
Message-ID: <D2BBF24C.16E6D%csanders@trustwave.com>

Hey Richard,
You are in fact correct. The typical setup explicitly calls out the
setup.conf and then includes as a wildcard some directory.
We are working on more clear documentation for the 3.0.0 release but an
early look is at: https://www.modsecurity.org/CRS/Documentation/

On 1/13/16, 8:10 AM,
"owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf of
Richard Jones" <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on
behalf of owasp-crs at junix.systems> wrote:

>I?ve been reading through the documentation that comes with the latest
>CRS and I?m a little confused.
>
>The bundled INSTALL file seems to suggest that
>modsecurity_crs_10_setup.conf should be installed in activated_rules and
>also in the directory beneath. Using both results in errors about
>duplicate id numbers. Which is correct?
>
>$ sudo ln -s /usr/local/apache/conf/crs/modsecurity_crs_10_setup.conf
>activated_rules/modsecurity_crs_10_setup.conf
>
>[?]
>
><IfModule security2_module>
>   Include conf/crs/modsecurity_crs_10_setup.conf
>   Include conf/crs/activated_rules/*.conf
></IfModule>
>
>To my mind, the setup.conf files should come before all others, but if
>so then why number it *and* have it load after the optional
>ignore_static rules?
>
>Thanks,
>
>Richard
>
>--
>http://scanmail.trustwave.com/?c=4062&d=rtKW1nM8yjyWhky8ayE4Q8vEFXoXbpBpH_
>NASbiRSg&s=5&u=http%3a%2f%2fwww%2ejonze%2ecom%2fprivacy%2ehtml
>_______________________________________________
>Owasp-modsecurity-core-rule-set mailing list
>Owasp-modsecurity-core-rule-set at lists.owasp.org
>http://scanmail.trustwave.com/?c=4062&d=rtKW1nM8yjyWhky8ayE4Q8vEFXoXbpBpH6
>IWQLnHSw&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2fow
>asp-modsecurity-core-rule-set


________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

From CSanders at trustwave.com  Wed Jan 13 17:27:32 2016
From: CSanders at trustwave.com (Chaim Sanders)
Date: Wed, 13 Jan 2016 17:27:32 +0000
Subject: [Owasp-modsecurity-core-rule-set] CRS Paranoia Mode: Let's get
 going
In-Reply-To: <E2C9913D99137A42A2A9646B1E82B8DB010D405BCF@A1GTOEMBXV001.gto.a3c.atos.net>
References: <20160107051226.GB13245@elias>
	<E2C9913D99137A42A2A9646B1E82B8DB010D3FECAD@A1GTOEMBXV001.gto.a3c.atos.net>
	<20160108171205.GA24151@elias>
	<E2C9913D99137A42A2A9646B1E82B8DB010D405BCF@A1GTOEMBXV001.gto.a3c.atos.net>
Message-ID: <D2BBF2D0.16E71%csanders@trustwave.com>

Hey guys,
The rule renumbering script (available in the repo at
https://github.com/SpiderLabs/owasp-modsecurity-crs/tree/v3.0.0-rc1/id_renu
mbering) takes in a csv that breaks down the changes in rule numbers. One
can use that to easily change numbering. The goal was though that if you
setup CRS correctly that you would only have to fix your exceptions file
after updating :)

On 1/13/16, 4:42 AM,
"owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf of Leos
Rivas Manuel" <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on
behalf of Manuel.LeosRivas at gemalto.com> wrote:

>Hello list,
>
>For upgrading from CRS 2.2.9 to 3.0 RC1 there is an
>http://scanmail.trustwave.com/?c=4062&d=maKW1rV5uDoeLgplZxqhjraEVTyuxN3CT5
>YWh144-g&s=5&u=http%3a%2f%2fupdate%2epy script to renumber the rules,
>does it includes all rule id changes already?
>
>If so just for comparison purposes running the script against the 2.2.9
>CRS will update the id numbers to match those in 3.0RC1, am I right?
>
>I'm working on doing a comparison of both rulesets to see what the
>differences are.
>
>Regards,
>Manuel
>
>-----Original Message-----
>From: Christian Folini [mailto:christian.folini at netnea.com]
>Sent: vendredi 8 janvier 2016 18:12
>To: Leos Rivas Manuel
>Subject: Re: CRS Paranoia Mode: Let's get going
>
>Hello Leos,
>
>I knew Chaim planned to do an re-numbering, but he was faster than I
>anticipated.
>
>If you do not mind, then let's discuss this on the mailinglist.
>Ask the question there and we'll if Chaim or the others have anything to
>add. I had two people thinking about hooking up last night...
>
>Ahoj,
>
>Christian
>
>--
>In war you will generally find that the enemy has at any time three
>courses of action open to him. Of those three, he will invariably choose
>the fourth.
>-- Helmuth Von Moltke
>________________________________
> This message and any attachments are intended solely for the addressees
>and may contain confidential information. Any unauthorized use or
>disclosure, either whole or partial, is prohibited.
>E-mails are susceptible to alteration. Our company shall not be liable
>for the message if altered, changed or falsified. If you are not the
>intended recipient of this message, please delete it and notify the
>sender.
>Although all reasonable efforts have been made to keep this transmission
>free from viruses, the sender will not be liable for damages caused by a
>transmitted virus.
>_______________________________________________
>Owasp-modsecurity-core-rule-set mailing list
>Owasp-modsecurity-core-rule-set at lists.owasp.org
>http://scanmail.trustwave.com/?c=4062&d=maKW1rV5uDoeLgplZxqhjraEVTyuxN3CT8
>JD2lw_oQ&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2fow
>asp-modsecurity-core-rule-set


________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

From achim at owasp.org  Wed Jan 13 21:03:18 2016
From: achim at owasp.org (Achim)
Date: Wed, 13 Jan 2016 22:03:18 +0100
Subject: [Owasp-modsecurity-core-rule-set] LDAP injection rule
In-Reply-To: <CACoviyOGDuiYJoUpiG64kffbg2C+GM7Fs7avX2hcqWkvYC8KOw@mail.gmail.com>
References: <CACoviyOGDuiYJoUpiG64kffbg2C+GM7Fs7avX2hcqWkvYC8KOw@mail.gmail.com>
Message-ID: <5696BB96.7020701@owasp.org>

Hi Denis,

the round brackets in RE are used to group, in particular to group variants.
If they should be a literal character, they need to be escaped with a 
\ (backslash).

Said this, you see both usages -- ( as grouping meta character, and \( as
literal character -- in your visualized picture. You see the literal \( 
one only, but not the grouping ( in the picture.

In LDAP round brackets are a core syntax element.

Does this help?
Achim



On 13.01.2016 12:21, Denis Kolegov wrote:
> Hello All.
> 
> I am working on RE for LDAP injection.
> Could anybody explain the structure of the LDAP injection detection rule?
> 
> https://github.com/SpiderLabs/owasp-modsecurity-crs/blob/master/base_rules/modsecurity_crs_40_generic_attacks.conf
> 
> Its regular expression is the following:
> 
> (?:\((?:\W*?(?:objectc(?:ategory|lass)|homedirectory|[gu]idnumber|cn)\b\W*?=|[^\w\x80-\xFF]*?[\!\&\|][^\w\x80-\xFF]*?\()|\)[^\w\x80-\xFF]*?\([^\w\x80-\xFF]*?[\!\&\|])
> 
> See regular expression visualizer (https://jex.im/regulex) screenshot  in
> the attachment.
> 
> My questions:
> 
> 1.  What is the purpose of RE after '(' character? Which context is
> supposed there?
> 
> I found the following vectors:
> 
> Alonso-Parada vectors:
> 
> foo)(sn=100
> foo)(&)
> documents)(security_level=*))(&(directory=documents
> printer)(uid=*)
> printer)(department=fa*)
> 
> printer)(department=*fa*)
> *)(objectClass=*))(&(objectClass=void
> *)(objectClass=users))(&(objectClass=foo
> void)(objectClass=users))(&(objectClass=void)
> 
> 
> Exploit DB:
> 
> ka0x)(|(homedirectory=*)
> 5faa0382d747b754)(sn=*
> 5faa0382d747b754)!(sn=*
> 
> Burp:
> 
> eb9adbd87d)(sn=*
> eb9adbd87d)!(sn=*
> *)(sn=*
> *)!(sn=*
> 
> 
> 
> 2.  Some trivial LDAPi vectors are not detected. For example,
> 
> printer)(uid=*)
> 
> from Alonso-Parada slides
> https://www.blackhat.com/presentations/bh-europe-08/Alonso-Parada/Whitepaper/bh-eu-08-alonso-parada-WP.pdf
> 
> Thanks.
> 
> 
> 
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
> 

From d.n.kolegov at gmail.com  Wed Jan 13 22:58:59 2016
From: d.n.kolegov at gmail.com (Denis Kolegov)
Date: Thu, 14 Jan 2016 04:58:59 +0600
Subject: [Owasp-modsecurity-core-rule-set] LDAP injection rule
In-Reply-To: <5696BB96.7020701@owasp.org>
References: <CACoviyOGDuiYJoUpiG64kffbg2C+GM7Fs7avX2hcqWkvYC8KOw@mail.gmail.com>
	<5696BB96.7020701@owasp.org>
Message-ID: <CACoviyMMc-q8sYJhmBeLkj7uF-hinVvem+LnvQhyDLmmytFLAw@mail.gmail.com>

Hi.

It seems my question was not clear.
I asked about logic of regular expression.

What is a purpose of first part of RE where it checks string beginning with
'('?

(?:\((?:\W*?(?:objectc(?:ategory|lass)|homedirectory|[gu]idnumber|cn)\b\W*?=|[^\w\x80-\xFF]*?[\!\&\|][^\w\x80-\xFF]*?\())

Thanks.
---
Denis Kolegov
14 ??? 2016 ?. 3:18 ???????????? "Achim" <achim at owasp.org> ???????:

> Hi Denis,
>
> the round brackets in RE are used to group, in particular to group
> variants.
> If they should be a literal character, they need to be escaped with a
> \ (backslash).
>
> Said this, you see both usages -- ( as grouping meta character, and \( as
> literal character -- in your visualized picture. You see the literal \(
> one only, but not the grouping ( in the picture.
>
> In LDAP round brackets are a core syntax element.
>
> Does this help?
> Achim
>
>
>
> On 13.01.2016 12:21, Denis Kolegov wrote:
> > Hello All.
> >
> > I am working on RE for LDAP injection.
> > Could anybody explain the structure of the LDAP injection detection rule?
> >
> >
> https://github.com/SpiderLabs/owasp-modsecurity-crs/blob/master/base_rules/modsecurity_crs_40_generic_attacks.conf
> >
> > Its regular expression is the following:
> >
> >
> (?:\((?:\W*?(?:objectc(?:ategory|lass)|homedirectory|[gu]idnumber|cn)\b\W*?=|[^\w\x80-\xFF]*?[\!\&\|][^\w\x80-\xFF]*?\()|\)[^\w\x80-\xFF]*?\([^\w\x80-\xFF]*?[\!\&\|])
> >
> > See regular expression visualizer (https://jex.im/regulex) screenshot
> in
> > the attachment.
> >
> > My questions:
> >
> > 1.  What is the purpose of RE after '(' character? Which context is
> > supposed there?
> >
> > I found the following vectors:
> >
> > Alonso-Parada vectors:
> >
> > foo)(sn=100
> > foo)(&)
> > documents)(security_level=*))(&(directory=documents
> > printer)(uid=*)
> > printer)(department=fa*)
> >
> > printer)(department=*fa*)
> > *)(objectClass=*))(&(objectClass=void
> > *)(objectClass=users))(&(objectClass=foo
> > void)(objectClass=users))(&(objectClass=void)
> >
> >
> > Exploit DB:
> >
> > ka0x)(|(homedirectory=*)
> > 5faa0382d747b754)(sn=*
> > 5faa0382d747b754)!(sn=*
> >
> > Burp:
> >
> > eb9adbd87d)(sn=*
> > eb9adbd87d)!(sn=*
> > *)(sn=*
> > *)!(sn=*
> >
> >
> >
> > 2.  Some trivial LDAPi vectors are not detected. For example,
> >
> > printer)(uid=*)
> >
> > from Alonso-Parada slides
> >
> https://www.blackhat.com/presentations/bh-europe-08/Alonso-Parada/Whitepaper/bh-eu-08-alonso-parada-WP.pdf
> >
> > Thanks.
> >
> >
> >
> > _______________________________________________
> > Owasp-modsecurity-core-rule-set mailing list
> > Owasp-modsecurity-core-rule-set at lists.owasp.org
> > https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
> >
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160114/f1ece350/attachment-0001.html>

From achim at owasp.org  Thu Jan 14 00:07:25 2016
From: achim at owasp.org (Achim)
Date: Thu, 14 Jan 2016 01:07:25 +0100
Subject: [Owasp-modsecurity-core-rule-set] LDAP injection rule
In-Reply-To: <CACoviyMMc-q8sYJhmBeLkj7uF-hinVvem+LnvQhyDLmmytFLAw@mail.gmail.com>
References: <CACoviyOGDuiYJoUpiG64kffbg2C+GM7Fs7avX2hcqWkvYC8KOw@mail.gmail.com>
	<5696BB96.7020701@owasp.org>
	<CACoviyMMc-q8sYJhmBeLkj7uF-hinVvem+LnvQhyDLmmytFLAw@mail.gmail.com>
Message-ID: <5696E6BD.5060505@owasp.org>

Hi Denis,

when writing  '('?   do you mean 
	(?
right at the beginning of the RE and again 3 times more?

(? in RE means that the RE engine does not store the grouped match.
If a group is not stored, there is no backreference (i.e. $1).
This reults in less memory usage and speeds up processing.

Ciao
Achim

On 13.01.2016 23:58, Denis Kolegov wrote: 
> Hi.
> 
> It seems my question was not clear.
> I asked about logic of regular expression.
> 
> What is a purpose of first part of RE where it checks string beginning with
> '('?
> 
> (?:\((?:\W*?(?:objectc(?:ategory|lass)|homedirectory|[gu]idnumber|cn)\b\W*?=|[^\w\x80-\xFF]*?[\!\&\|][^\w\x80-\xFF]*?\())
> 
> Thanks.
> ---
> Denis Kolegov
> 14 ??? 2016 ?. 3:18 ???????????? "Achim" <achim at owasp.org> ???????:
> 
>> Hi Denis,
>>
>> the round brackets in RE are used to group, in particular to group
>> variants.
>> If they should be a literal character, they need to be escaped with a
>> \ (backslash).
>>
>> Said this, you see both usages -- ( as grouping meta character, and \( as
>> literal character -- in your visualized picture. You see the literal \(
>> one only, but not the grouping ( in the picture.
>>
>> In LDAP round brackets are a core syntax element.
>>
>> Does this help?
>> Achim
>>
>>
>>
>> On 13.01.2016 12:21, Denis Kolegov wrote:
>>> Hello All.
>>>
>>> I am working on RE for LDAP injection.
>>> Could anybody explain the structure of the LDAP injection detection rule?
>>>
>>>
>> https://github.com/SpiderLabs/owasp-modsecurity-crs/blob/master/base_rules/modsecurity_crs_40_generic_attacks.conf
>>>
>>> Its regular expression is the following:
>>>
>>>
>> (?:\((?:\W*?(?:objectc(?:ategory|lass)|homedirectory|[gu]idnumber|cn)\b\W*?=|[^\w\x80-\xFF]*?[\!\&\|][^\w\x80-\xFF]*?\()|\)[^\w\x80-\xFF]*?\([^\w\x80-\xFF]*?[\!\&\|])
>>>
>>> See regular expression visualizer (https://jex.im/regulex) screenshot
>> in
>>> the attachment.
>>>
>>> My questions:
>>>
>>> 1.  What is the purpose of RE after '(' character? Which context is
>>> supposed there?
>>>
>>> I found the following vectors:
>>>
>>> Alonso-Parada vectors:
>>>
>>> foo)(sn=100
>>> foo)(&)
>>> documents)(security_level=*))(&(directory=documents
>>> printer)(uid=*)
>>> printer)(department=fa*)
>>>
>>> printer)(department=*fa*)
>>> *)(objectClass=*))(&(objectClass=void
>>> *)(objectClass=users))(&(objectClass=foo
>>> void)(objectClass=users))(&(objectClass=void)
>>>
>>>
>>> Exploit DB:
>>>
>>> ka0x)(|(homedirectory=*)
>>> 5faa0382d747b754)(sn=*
>>> 5faa0382d747b754)!(sn=*
>>>
>>> Burp:
>>>
>>> eb9adbd87d)(sn=*
>>> eb9adbd87d)!(sn=*
>>> *)(sn=*
>>> *)!(sn=*
>>>
>>>
>>>
>>> 2.  Some trivial LDAPi vectors are not detected. For example,
>>>
>>> printer)(uid=*)
>>>
>>> from Alonso-Parada slides
>>>
>> https://www.blackhat.com/presentations/bh-europe-08/Alonso-Parada/Whitepaper/bh-eu-08-alonso-parada-WP.pdf
>>>
>>> Thanks.




From christian.folini at netnea.com  Thu Jan 14 05:32:13 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Thu, 14 Jan 2016 06:32:13 +0100
Subject: [Owasp-modsecurity-core-rule-set] Renumbering RuleIDs (was: Re:
 CRS Paranoia Mode: Let's get going)
Message-ID: <20160114053213.GA16644@elias>

Chaim,

Does the renumbering script point out the rules which have been
removed from the CRS, or will exception rules continue to linger?

https://github.com/SpiderLabs/owasp-modsecurity-crs/blob/v3.0.0-rc1/id_renumbering/IDNUMBERING
states
"This README and associated idNumbering.csv will be removed when this branch is promoted to master."

Why is that? Would not people use the csv and the renumbering script
once 3.0.0 comes out and they want to migrate to 3.0.0?

Ahoj,

Christian

-- 
It is not power that corrupts but fear.  Fear of losing power corrupts
those who wield it and fear of the scourge of power corrupts those who
are subject to it.
-- Aung San Suu Kyi

From Manuel.LeosRivas at gemalto.com  Thu Jan 14 05:33:29 2016
From: Manuel.LeosRivas at gemalto.com (Leos Rivas Manuel)
Date: Thu, 14 Jan 2016 05:33:29 +0000
Subject: [Owasp-modsecurity-core-rule-set] LDAP injection rule
In-Reply-To: <CACoviyMMc-q8sYJhmBeLkj7uF-hinVvem+LnvQhyDLmmytFLAw@mail.gmail.com>
References: <CACoviyOGDuiYJoUpiG64kffbg2C+GM7Fs7avX2hcqWkvYC8KOw@mail.gmail.com>
	<5696BB96.7020701@owasp.org>,
	<CACoviyMMc-q8sYJhmBeLkj7uF-hinVvem+LnvQhyDLmmytFLAw@mail.gmail.com>
Message-ID: <mvartyk0wyvtajr2ao4f0bx2.1452749604743@email.android.com>

Hi eenis,

(?:something)  means do not capture the values that matched something, kind of save it for later so you may use it, the less you capture things you don't need the better it is for performance.

Regards,
Manuel

Envoy? de mon Galaxy S5 4G+ Orange


-------- Original message --------
From: Denis Kolegov <d.n.kolegov at gmail.com>
Date: 14/01/2016 00:10 (GMT+01:00)
To: achim at owasp.org
Cc: owasp-modsecurity-core-rule-set at lists.owasp.org
Subject: Re: [Owasp-modsecurity-core-rule-set] LDAP injection rule


Hi.

It seems my question was not clear.
I asked about logic of regular expression.

What is a purpose of first part of RE where it checks string beginning with '('?

(?:\((?:\W*?(?:objectc(?:ategory|lass)|homedirectory|[gu]idnumber|cn)\b\W*?=|[^\w\x80-\xFF]*?[\!\&\|][^\w\x80-\xFF]*?\())
Thanks.
---
Denis Kolegov

14 ??? 2016 ?. 3:18 ???????????? "Achim" <achim at owasp.org<mailto:achim at owasp.org>> ???????:
Hi Denis,

the round brackets in RE are used to group, in particular to group variants.
If they should be a literal character, they need to be escaped with a
\ (backslash).

Said this, you see both usages -- ( as grouping meta character, and \( as
literal character -- in your visualized picture. You see the literal \(
one only, but not the grouping ( in the picture.

In LDAP round brackets are a core syntax element.

Does this help?
Achim



On 13.01.2016 12:21, Denis Kolegov wrote:
> Hello All.
>
> I am working on RE for LDAP injection.
> Could anybody explain the structure of the LDAP injection detection rule?
>
> https://github.com/SpiderLabs/owasp-modsecurity-crs/blob/master/base_rules/modsecurity_crs_40_generic_attacks.conf
>
> Its regular expression is the following:
>
> (?:\((?:\W*?(?:objectc(?:ategory|lass)|homedirectory|[gu]idnumber|cn)\b\W*?=|[^\w\x80-\xFF]*?[\!\&\|][^\w\x80-\xFF]*?\()|\)[^\w\x80-\xFF]*?\([^\w\x80-\xFF]*?[\!\&\|])
>
> See regular expression visualizer (https://jex.im/regulex) screenshot  in
> the attachment.
>
> My questions:
>
> 1.  What is the purpose of RE after '(' character? Which context is
> supposed there?
>
> I found the following vectors:
>
> Alonso-Parada vectors:
>
> foo)(sn=100
> foo)(&)
> documents)(security_level=*))(&(directory=documents
> printer)(uid=*)
> printer)(department=fa*)
>
> printer)(department=*fa*)
> *)(objectClass=*))(&(objectClass=void
> *)(objectClass=users))(&(objectClass=foo
> void)(objectClass=users))(&(objectClass=void)
>
>
> Exploit DB:
>
> ka0x)(|(homedirectory=*)
> 5faa0382d747b754)(sn=*
> 5faa0382d747b754)!(sn=*
>
> Burp:
>
> eb9adbd87d)(sn=*
> eb9adbd87d)!(sn=*
> *)(sn=*
> *)!(sn=*
>
>
>
> 2.  Some trivial LDAPi vectors are not detected. For example,
>
> printer)(uid=*)
>
> from Alonso-Parada slides
> https://www.blackhat.com/presentations/bh-europe-08/Alonso-Parada/Whitepaper/bh-eu-08-alonso-parada-WP.pdf
>
> Thanks.
>
>
>
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org>
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
>
_______________________________________________
Owasp-modsecurity-core-rule-set mailing list
Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org>
https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
________________________________
This message and any attachments are intended solely for the addressees and may contain confidential information. Any unauthorized use or disclosure, either whole or partial, is prohibited.
E-mails are susceptible to alteration. Our company shall not be liable for the message if altered, changed or falsified. If you are not the intended recipient of this message, please delete it and notify the sender.
Although all reasonable efforts have been made to keep this transmission free from viruses, the sender will not be liable for damages caused by a transmitted virus.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160114/7d0f696e/attachment.html>

From Manuel.LeosRivas at gemalto.com  Thu Jan 14 05:50:46 2016
From: Manuel.LeosRivas at gemalto.com (Leos Rivas Manuel)
Date: Thu, 14 Jan 2016 05:50:46 +0000
Subject: [Owasp-modsecurity-core-rule-set] Renumbering RuleIDs (was: Re:
 CRS Paranoia Mode: Let's get going)
In-Reply-To: <20160114053213.GA16644@elias>
References: <20160114053213.GA16644@elias>
Message-ID: <hwq140xrtwji5qyx77kv4if0.1452750641937@email.android.com>

I agree, plus if you have a bunch of custom rules you will suffer to do the renumbering yourself.

I made a quick check and apparently there are no collisions in the id's but that doesn't include any possible custom rule out there so a warning must be included.

Regards,
Manuel


-------- Original message --------
From: Christian Folini <christian.folini at netnea.com>
Date: 14/01/2016 06:43 (GMT+01:00)
To: owasp-modsecurity-core-rule-set at lists.owasp.org
Subject: Re: [Owasp-modsecurity-core-rule-set] Renumbering RuleIDs (was: Re: CRS Paranoia Mode: Let's get going)

Chaim,

Does the renumbering script point out the rules which have been
removed from the CRS, or will exception rules continue to linger?

https://github.com/SpiderLabs/owasp-modsecurity-crs/blob/v3.0.0-rc1/id_renumbering/IDNUMBERING
states
"This README and associated idNumbering.csv will be removed when this branch is promoted to master."

Why is that? Would not people use the csv and the renumbering script
once 3.0.0 comes out and they want to migrate to 3.0.0?

Ahoj,

Christian

--
It is not power that corrupts but fear.  Fear of losing power corrupts
those who wield it and fear of the scourge of power corrupts those who
are subject to it.
-- Aung San Suu Kyi
_______________________________________________
Owasp-modsecurity-core-rule-set mailing list
Owasp-modsecurity-core-rule-set at lists.owasp.org
https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
________________________________
This message and any attachments are intended solely for the addressees and may contain confidential information. Any unauthorized use or disclosure, either whole or partial, is prohibited.
E-mails are susceptible to alteration. Our company shall not be liable for the message if altered, changed or falsified. If you are not the intended recipient of this message, please delete it and notify the sender.
Although all reasonable efforts have been made to keep this transmission free from viruses, the sender will not be liable for damages caused by a transmitted virus.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160114/1cc56eda/attachment-0001.html>

From christian.folini at netnea.com  Thu Jan 14 07:27:06 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Thu, 14 Jan 2016 08:27:06 +0100
Subject: [Owasp-modsecurity-core-rule-set] Renumbering RuleIDs
In-Reply-To: <hwq140xrtwji5qyx77kv4if0.1452750641937@email.android.com>
References: <20160114053213.GA16644@elias>
	<hwq140xrtwji5qyx77kv4if0.1452750641937@email.android.com>
Message-ID: <20160114072706.GA18982@elias>

Hi there,

On Thu, Jan 14, 2016 at 05:50:46AM +0000, Leos Rivas Manuel wrote:
> I agree, plus if you have a bunch of custom rules you will suffer to do the renumbering yourself.
> 
> I made a quick check and apparently there are no collisions in the id's but that doesn't include any possible custom rule out there so a warning must be included.

But people using the 9xxxxx namespace for their own rules are crazy.
The policy to reserve this range for the CRS is well-documented. I
do not think custom rules in this range should matter.

After all, the re-numbering is meant to bring some clarity into the
namespace. The old rule numbering policy is very hard to grasp. At
least for me.

The general idea of the rule ids is now to establish a link between 
the rule and the file it resides in:

9<rulefile-prefix><individual number>
Individual numbers start at 100 and grow in steps of ten.
(There are exceptions like 941000. Why?)

So 3.0.0-rc1 rule 931110 is the 2nd rule in 
REQUEST-31-APPLICATION-ATTACK-RFI.conf.

The last time a significant rule renumbering / consolidation
took place was between 2.2.3 and 2.2.4 (or 4->5?), when a lot
of the sqli rules were moved. This was done more or less briefly
before the switch from svn to git, the svn history was lost 
(to the general public) and no csv file documenting the 
process.

This more fundamental renumbering is also painful for 
active installations, but at least we have the means to 
update existing exception/tuning rules.

Best,

Christian


-- 
History teaches us that men and nations behave wisely once they have
exhausted all other alternatives.
-- Abba Eban

From CSanders at trustwave.com  Thu Jan 14 12:29:57 2016
From: CSanders at trustwave.com (Chaim Sanders)
Date: Thu, 14 Jan 2016 12:29:57 +0000
Subject: [Owasp-modsecurity-core-rule-set] Renumbering RuleIDs (was: Re:
 CRS Paranoia Mode: Let's get going)
In-Reply-To: <hwq140xrtwji5qyx77kv4if0.1452750641937@email.android.com>
References: <20160114053213.GA16644@elias>
	<hwq140xrtwji5qyx77kv4if0.1452750641937@email.android.com>
Message-ID: <D2BCFEA2.16EA6%csanders@trustwave.com>

Hey guys,
I was going to replace it with a link to the documentation which has the script and csv in it so that we keep things straight. Additionally, if you added custom rules you hopefully didn't add them in within the OWASP CRS rules range so you'll have nothing to worry about :-D

From: <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org>> on behalf of Leos Rivas Manuel <Manuel.LeosRivas at gemalto.com<mailto:Manuel.LeosRivas at gemalto.com>>
Date: Thursday, January 14, 2016 at 12:50 AM
To: Christian Folini <christian.folini at netnea.com<mailto:christian.folini at netnea.com>>, "owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>" <owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>
Subject: Re: [Owasp-modsecurity-core-rule-set] Renumbering RuleIDs (was: Re: CRS Paranoia Mode: Let's get going)

I agree, plus if you have a bunch of custom rules you will suffer to do the renumbering yourself.

I made a quick check and apparently there are no collisions in the id's but that doesn't include any possible custom rule out there so a warning must be included.

Regards,
Manuel


-------- Original message --------
From: Christian Folini <christian.folini at netnea.com<mailto:christian.folini at netnea.com>>
Date: 14/01/2016 06:43 (GMT+01:00)
To: owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>
Subject: Re: [Owasp-modsecurity-core-rule-set] Renumbering RuleIDs (was: Re: CRS Paranoia Mode: Let's get going)

Chaim,

Does the renumbering script point out the rules which have been
removed from the CRS, or will exception rules continue to linger?

https://github.com/SpiderLabs/owasp-modsecurity-crs/blob/v3.0.0-rc1/id_renumbering/IDNUMBERING<http://scanmail.trustwave.com/?c=4062&d=5ryX1oXjl8_sZMA7_QE2YX_sWuue3GkoEUjsqH4BPQ&s=5&u=https%3a%2f%2fgithub%2ecom%2fSpiderLabs%2fowasp-modsecurity-crs%2fblob%2fv3%2e0%2e0-rc1%2fid%5frenumbering%2fIDNUMBERING>
states
"This README and associated idNumbering.csv will be removed when this branch is promoted to master."

Why is that? Would not people use the csv and the renumbering script
once 3.0.0 comes out and they want to migrate to 3.0.0?

Ahoj,

Christian

--
It is not power that corrupts but fear.  Fear of losing power corrupts
those who wield it and fear of the scourge of power corrupts those who
are subject to it.
-- Aung San Suu Kyi
_______________________________________________
Owasp-modsecurity-core-rule-set mailing list
Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org>
https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set<http://scanmail.trustwave.com/?c=4062&d=5ryX1oXjl8_sZMA7_QE2YX_sWuue3GkoEUTu83hSYA&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2fowasp-modsecurity-core-rule-set>
________________________________
This message and any attachments are intended solely for the addressees and may contain confidential information. Any unauthorized use or disclosure, either whole or partial, is prohibited.
E-mails are susceptible to alteration. Our company shall not be liable for the message if altered, changed or falsified. If you are not the intended recipient of this message, please delete it and notify the sender.
Although all reasonable efforts have been made to keep this transmission free from viruses, the sender will not be liable for damages caused by a transmitted virus.

________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160114/4b16dd6d/attachment.html>

From owasp-crs at junix.systems  Thu Jan 14 14:45:35 2016
From: owasp-crs at junix.systems (Richard Jones)
Date: Thu, 14 Jan 2016 14:45:35 +0000
Subject: [Owasp-modsecurity-core-rule-set] Remove Cookie inspection for SQL
	injection rules
Message-ID: <20160114144535.GA17733@sirius.junix.systems>

Hi All,

This list seems to be quite low volume, so if questions like the one
below are inappropriate then please let me know.

I?ve identified a few false positives for a web form on one of our
sites. The method is a POST and a sample of the cookie as follows

Cookie: VarQuestion_0001=Lots%of%percent%signs%and%similar%here%and%SQL%like%statements%select%join%delete

I?ve been trying to put together an exception for cookies with these
names but can?t get the syntax right. Can anyone help?

The following seems to parse but I?ve no idea if it?s working or not.
Specifically I doubt that chain will extend to all the following
SecRuleUpdate?s.

SecRule REQUEST_URI ?(?i)/+nmsruntime? \
   ?chain,id:?000002?,phase:1,t:none,pass,log?
SecRuleUpdateTargetById 981317 ?!REQUEST_COOKIES:/^VarQuestion_[0-9]+/?
SecRuleUpdateTargetById 981257 ?!REQUEST_COOKIES:/^VarQuestion_[0-9]+/?
SecRuleUpdateTargetById 981245 ?!REQUEST_COOKIES:/^VarQuestion_[0

And using the Anomaly scoring method I couldn?t work out how to update
the REQUEST_COOKIE target to exclude these cookies, and it doesn?t look
like I can use a regex to capture VarQuestion_[0-9]+.

Thanks,

Richard

-- 
http://www.jonze.com/privacy.html

From christian.folini at netnea.com  Fri Jan 15 08:16:52 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Fri, 15 Jan 2016 09:16:52 +0100
Subject: [Owasp-modsecurity-core-rule-set] Remove Cookie inspection for
 SQL injection rules
In-Reply-To: <20160114144535.GA17733@sirius.junix.systems>
References: <20160114144535.GA17733@sirius.junix.systems>
Message-ID: <20160115081652.GA13913@elias>

Richard,

On Thu, Jan 14, 2016 at 02:45:35PM +0000, Richard Jones wrote:
> The following seems to parse but I?ve no idea if it?s working or not.
> Specifically I doubt that chain will extend to all the following
> SecRuleUpdate?s.
> 
> SecRule REQUEST_URI ?(?i)/+nmsruntime? \
>    ?chain,id:?000002?,phase:1,t:none,pass,log?
> SecRuleUpdateTargetById 981317 ?!REQUEST_COOKIES:/^VarQuestion_[0-9]+/?
> SecRuleUpdateTargetById 981257 ?!REQUEST_COOKIES:/^VarQuestion_[0-9]+/?
> SecRuleUpdateTargetById 981245 ?!REQUEST_COOKIES:/^VarQuestion_[0

No, this does not work. chain is limited to SecRule.

I believe, what you want is:

SecRule REQUEST_URI "..." "phase:1,...,ctl:ruleRemoveTargetById=981317;REQUEST_COOKIES:/^VarQuestion/,ctl:ruleRemoveTargetById=981257;..."

I have not tried this out myself. But this is the basic pattern, I would
use. 

What I am not sure is if you really want to limit the ignoring of the
said cookies to a certain path. This implies you want to check
these cookies for other paths as well. Would not it be simplet to
use SecRuleUpdateTargetById without path restriction and ignore 
the cookies site-wide?

Likewise, my regex pattern assumes, VarQuestion_... brings only
numbers as suffix. And as this should cover all of them, I think
the simpler and faster regex pattern is good enough.

> And using the Anomaly scoring method I couldn?t work out how to update
> the REQUEST_COOKIE target to exclude these cookies, and it doesn?t look
> like I can use a regex to capture VarQuestion_[0-9]+.

I have something in mind, that there is an issue with the +. Maybe you
want to try *. What certainly does not work is (a|b) patterns. Do not
know why.

Ahoj,

Christian


> 
> Thanks,
> 
> Richard
> 
> -- 
> http://www.jonze.com/privacy.html
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set

-- 
Christian Folini
Ringstrasse 2
CH-3639 Kiesen
+41 (0)31 301 60 71 (H)
+41 (0)79 220 23 76 (M)
mailto:christian.folini at netnea.com (Business)
mailto:christian.folini at time-machine.ch (Private)
http://www.christian-folini.ch


From christian.folini at netnea.com  Mon Jan 18 04:30:18 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Mon, 18 Jan 2016 05:30:18 +0100
Subject: [Owasp-modsecurity-core-rule-set] Rules triggering False Positives
	frequently
Message-ID: <20160118043018.GA20460@elias>

Hi there,

ModSecurity ? or any WAF for that matter ? produces false positives. If
it does not produce false positives, then it?s probably dead. A strict
ruleset like the OWASP ModSecurity Core Rules brings a lot of false
positives and it takes some tuning to get to a reasonable level of
alerts. If you have tuned a few services, then some of the rules will
become familiar to you. But which ones are these rules?

I have assembled them in a blogpost at:
https://www.netnea.com/cms/2016/01/17/most-frequent-false-positives-triggered-by-owasp-modsecurity-core-rules-2-2-x/

Naturally, these rules are candidates to be moved to the said
paranoia mode.

Here are the most frequent "offenders" based on my experience (=
customer sites).

950901 	SQL Injection Attack: SQL Tautology Detected.
959073 	SQL Injection Attack
960015 	Request Missing an Accept Header
960017 	Host header is a numeric IP address
960024 	Meta-Character Anomaly Detection Alert ? Repetative Non-Word ...
981172 	Restricted SQL Character Anomaly Detection Alert ? Total # ...
981173 	Restricted SQL Character Anomaly Detection Alert ? Total # ...
981231 	SQL Comment Sequence Detected
981243 	Detects classic SQL injection probings 2/2
981248 	Detects chained SQL injection attempts 1/2
981260 	SQL Hex Encoding Identified

Comments welcome.

Have a good week, everybody!

Christian


-- 
You don't have to be great to start, but you have to 
start to be great. 
-- Zig Ziglar

From info at waf.blue  Mon Jan 18 09:29:42 2016
From: info at waf.blue (theMiddle)
Date: Mon, 18 Jan 2016 10:29:42 +0100
Subject: [Owasp-modsecurity-core-rule-set] Rules triggering False
 Positives frequently
In-Reply-To: <20160118043018.GA20460@elias>
References: <20160118043018.GA20460@elias>
Message-ID: <569CB086.5070107@waf.blue>

Hi Christian,

nice post! I completely agree about these following rules:

981172 Restricted SQL Character Anomaly Detection Alert ? Total # ...
981173 Restricted SQL Character Anomaly Detection Alert ? Total # ...

My users often disable these two rules. I think that a false positive 
occurs each time these rules match a sequence of the same char in the 
URL. For example /mypost/title-of-my-new-blogpost or 
/verifyurl/sessionid----abcde1234.

Probably this shouldn't happen with a rule that match a sequence of 
differents chars in the URL (/foo/bar-john at doe(bla)).

i've just twitted your post :)
thanks!

-theMiddle


Il 18/01/16 05:30, Christian Folini ha scritto:
> Hi there,
>
> ModSecurity ? or any WAF for that matter ? produces false positives. If
> it does not produce false positives, then it?s probably dead. A strict
> ruleset like the OWASP ModSecurity Core Rules brings a lot of false
> positives and it takes some tuning to get to a reasonable level of
> alerts. If you have tuned a few services, then some of the rules will
> become familiar to you. But which ones are these rules?
>
> I have assembled them in a blogpost at:
> https://www.netnea.com/cms/2016/01/17/most-frequent-false-positives-triggered-by-owasp-modsecurity-core-rules-2-2-x/
>
> Naturally, these rules are candidates to be moved to the said
> paranoia mode.
>
> Here are the most frequent "offenders" based on my experience (=
> customer sites).
>
> 950901 	SQL Injection Attack: SQL Tautology Detected.
> 959073 	SQL Injection Attack
> 960015 	Request Missing an Accept Header
> 960017 	Host header is a numeric IP address
> 960024 	Meta-Character Anomaly Detection Alert ? Repetative Non-Word ...
> 981172 	Restricted SQL Character Anomaly Detection Alert ? Total # ...
> 981173 	Restricted SQL Character Anomaly Detection Alert ? Total # ...
> 981231 	SQL Comment Sequence Detected
> 981243 	Detects classic SQL injection probings 2/2
> 981248 	Detects chained SQL injection attempts 1/2
> 981260 	SQL Hex Encoding Identified
>
> Comments welcome.
>
> Have a good week, everybody!
>
> Christian
>
>

From christian.folini at netnea.com  Mon Jan 18 12:06:27 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Mon, 18 Jan 2016 13:06:27 +0100
Subject: [Owasp-modsecurity-core-rule-set] Rules triggering False
 Positives frequently
In-Reply-To: <569CB086.5070107@waf.blue>
References: <20160118043018.GA20460@elias>
 <569CB086.5070107@waf.blue>
Message-ID: <20160118120627.GA28537@elias>

Hi theMiddle,

On Mon, Jan 18, 2016 at 10:29:42AM +0100, theMiddle wrote:
> nice post! I completely agree about these following rules:

Thank you for the thumbs up. It's always nice to hear when
people agree with a point in a post.

> My users often disable these two rules. I think that a false
> positive occurs each time these rules match a sequence of the same
> char in the URL. For example /mypost/title-of-my-new-blogpost or
> /verifyurl/sessionid----abcde1234.

In fact it is the total number of occurrences of any combination
of special characters. Which is in fact a great indicator of
any type of evil intent. But it comes with a lot of false
positives.

> Probably this shouldn't happen with a rule that match a sequence of
> differents chars in the URL (/foo/bar-john at doe(bla)).

Actually, uuids in cookies
i.e.  b079d69c-bddb-11e5-822b-9f71f5c3a1fe will really get your
WAF glowing.

Cheers,

Christian


-- 
In war you will generally find that the enemy has at any time 
three courses of action open to him. Of those three, he will 
invariably choose the fourth.
-- Helmuth Von Moltke

From christian.folini at time-machine.ch  Tue Jan 26 19:52:18 2016
From: christian.folini at time-machine.ch (Christian Folini)
Date: Tue, 26 Jan 2016 20:52:18 +0100
Subject: [Owasp-modsecurity-core-rule-set] CRS 3.0.0rc1 renumbering issues
Message-ID: <20160126195218.GA19217@elias>

Hi there,

@Chaim: I am posting to the mailinglist, so this post is archived.

I took a closer look at the id renumbering between 2.2.9 and 3.0.0rc1.
(or between 3.0.0-dev and 3.0.0-rc1 to be more precise) as
documented in 
https://github.com/SpiderLabs/owasp-modsecurity-crs/blob/v3.0.0-rc1/id_renumbering/IdNumbering.csv

The file brings 177 rule IDs. The origin of most of the rules
is clear. But there are a few special cases. Here is the list:

900050 : unknown (possibly introduced with 3.0.0-dev)
900051 : unknown (possibly introduced with 3.0.0-dev)
900051 : unknown (possibly introduced with 3.0.0-dev)
950000 : crs-2.2.9-base-rules-ids
950001 : crs-2.2.9-base-rules-ids
950003 : crs-2.2.9-base-rules-ids
950005 : crs-2.2.9-base-rules-ids
950009 : crs-2.2.9-base-rules-ids
950012 : crs-2.2.9-base-rules-ids
950103 : crs-2.2.9-base-rules-ids crs-2.2.9-base-rules-ids
950104 : unknown (possibly introduced with 3.0.0-dev)
950107 : crs-2.2.9-base-rules-ids
950108 : crs-2.2.9-base-rules-ids
950109 : crs-2.2.9-base-rules-ids
950116 : crs-2.2.9-base-rules-ids
950117 : crs-2.2.9-base-rules-ids
950118 : crs-2.2.9-base-rules-ids
950119 : crs-2.2.9-base-rules-ids
950120 : crs-2.2.9-base-rules-ids
950801 : crs-2.2.9-base-rules-ids
950901 : crs-2.2.9-base-rules-ids
950907 : crs-2.2.9-base-rules-ids
950910 : crs-2.2.9-base-rules-ids
950911 : crs-2.2.9-base-rules-ids
950912 : unknown (possibly introduced with 3.0.0-dev)
950913 : unknown (possibly introduced with 3.0.0-dev)
950914 : unknown (possibly introduced with 3.0.0-dev)
950915 : unknown (possibly introduced with 3.0.0-dev)
950916 : unknown (possibly introduced with 3.0.0-dev)
958230 : crs-2.2.9-base-rules-ids
958231 : crs-2.2.9-base-rules-ids
958295 : crs-2.2.9-base-rules-ids
958977 : crs-2.2.9-base-rules-ids
958978 : unknown (possibly introduced with 3.0.0-dev)
958979 : unknown (possibly introduced with 3.0.0-dev)
958980 : unknown (possibly introduced with 3.0.0-dev)
959151 : crs-2.2.9-base-rules-ids
960000 : crs-2.2.9-base-rules-ids
960006 : crs-2.2.9-base-rules-ids
960007 : crs-2.2.9-base-rules-ids
960008 : crs-2.2.9-base-rules-ids
960009 : crs-2.2.9-base-rules-ids
960010 : crs-2.2.9-base-rules-ids
960011 : crs-2.2.9-base-rules-ids
960012 : crs-2.2.9-base-rules-ids
960015 : crs-2.2.9-base-rules-ids
960016 : crs-2.2.9-base-rules-ids
960017 : crs-2.2.9-base-rules-ids
960021 : crs-2.2.9-base-rules-ids
960032 : crs-2.2.9-base-rules-ids
960034 : crs-2.2.9-base-rules-ids
960035 : crs-2.2.9-base-rules-ids
960038 : crs-2.2.9-base-rules-ids
960208 : crs-2.2.9-base-rules-ids
960209 : crs-2.2.9-base-rules-ids
960335 : crs-2.2.9-base-rules-ids
960341 : crs-2.2.9-base-rules-ids
960342 : crs-2.2.9-base-rules-ids
960343 : crs-2.2.9-base-rules-ids
960901 : crs-2.2.9-base-rules-ids
960904 : crs-2.2.9-base-rules-ids
960911 : crs-2.2.9-base-rules-ids
960912 : crs-2.2.9-base-rules-ids
960914 : crs-2.2.9-base-rules-ids
960915 : crs-2.2.9-base-rules-ids
970003 : crs-2.2.9-base-rules-ids
970004 : crs-2.2.9-base-rules-ids
970009 : crs-2.2.9-base-rules-ids
970013 : crs-2.2.9-base-rules-ids
970014 : crs-2.2.9-base-rules-ids
970015 : crs-2.2.9-base-rules-ids
970017 : unknown (possibly introduced with 3.0.0-dev)
970017 : unknown (possibly introduced with 3.0.0-dev)
970118 : crs-2.2.9-base-rules-ids
970901 : crs-2.2.9-base-rules-ids
970902 : crs-2.2.9-base-rules-ids
970904 : crs-2.2.9-base-rules-ids
973315 : crs-2.2.9-base-rules-ids
973317 : crs-2.2.9-base-rules-ids
973318 : crs-2.2.9-base-rules-ids
973319 : crs-2.2.9-base-rules-ids
973320 : crs-2.2.9-base-rules-ids
973321 : crs-2.2.9-base-rules-ids
973322 : crs-2.2.9-base-rules-ids
973323 : crs-2.2.9-base-rules-ids
973324 : crs-2.2.9-base-rules-ids
973326 : crs-2.2.9-base-rules-ids
973336 : crs-2.2.9-base-rules-ids
973337 : crs-2.2.9-base-rules-ids
973338 : crs-2.2.9-base-rules-ids
973339 : unknown (possibly introduced with 3.0.0-dev)
973340 : unknown (possibly introduced with 3.0.0-dev)
973341 : unknown (possibly introduced with 3.0.0-dev)
973342 : unknown (possibly introduced with 3.0.0-dev)
973343 : unknown (possibly introduced with 3.0.0-dev)
973344 : crs-2.2.9-base-rules-ids
973345 : crs-2.2.9-base-rules-ids
973346 : crs-2.2.9-base-rules-ids
973348 : crs-2.2.9-base-rules-ids
973350 : unknown (possibly introduced with 3.0.0-dev)
981020 : crs-2.2.9-base-rules-ids
981021 : crs-2.2.9-base-rules-ids
981044 : crs-2.2.9-experimental-rules-ids
981045 : crs-2.2.9-experimental-rules-ids
981046 : crs-2.2.9-experimental-rules-ids
981047 : crs-2.2.9-experimental-rules-ids
981048 : crs-2.2.9-experimental-rules-ids
981049 : crs-2.2.9-experimental-rules-ids
981138 : crs-2.2.9-optional-rules-ids
981139 : crs-2.2.9-optional-rules-ids
981140 : crs-2.2.9-optional-rules-ids
981141 : unknown (possibly introduced with 3.0.0-dev)
981142 : crs-2.2.9-experimental-rules-ids
981143 : crs-2.2.9-optional-rules-ids
981144 : crs-2.2.9-optional-rules-ids
981175 : crs-2.2.9-base-rules-ids
981176 : crs-2.2.9-base-rules-ids
981179 : unknown (possibly introduced with 3.0.0-dev)
981180 : crs-2.2.9-optional-rules-ids
981181 : crs-2.2.9-optional-rules-ids
981182 : crs-2.2.9-optional-rules-ids
981183 : unknown (possibly introduced with 3.0.0-dev)
981184 : crs-2.2.9-optional-rules-ids
981186 : unknown (possibly introduced with 3.0.0-dev)
981187 : crs-2.2.9-experimental-rules-ids
981200 : crs-2.2.9-base-rules-ids
981201 : crs-2.2.9-base-rules-ids
981202 : crs-2.2.9-base-rules-ids
981203 : crs-2.2.9-base-rules-ids
981204 : crs-2.2.9-base-rules-ids
981205 : crs-2.2.9-base-rules-ids
981227 : crs-2.2.9-base-rules-ids
981240 : crs-2.2.9-base-rules-ids
981241 : crs-2.2.9-base-rules-ids
981242 : crs-2.2.9-base-rules-ids
981243 : crs-2.2.9-base-rules-ids
981244 : crs-2.2.9-base-rules-ids
981245 : crs-2.2.9-base-rules-ids
981246 : crs-2.2.9-base-rules-ids
981247 : crs-2.2.9-base-rules-ids
981248 : crs-2.2.9-base-rules-ids
981249 : crs-2.2.9-base-rules-ids
981250 : crs-2.2.9-base-rules-ids
981251 : crs-2.2.9-base-rules-ids
981252 : crs-2.2.9-base-rules-ids
981253 : crs-2.2.9-base-rules-ids
981254 : crs-2.2.9-base-rules-ids
981255 : crs-2.2.9-base-rules-ids
981256 : crs-2.2.9-base-rules-ids
981257 : crs-2.2.9-base-rules-ids
981261 : unknown (possibly introduced with 3.0.0-dev)
981270 : crs-2.2.9-base-rules-ids
981272 : crs-2.2.9-base-rules-ids
981276 : crs-2.2.9-base-rules-ids
981277 : crs-2.2.9-base-rules-ids
981318 : crs-2.2.9-base-rules-ids
981319 : crs-2.2.9-base-rules-ids
981320 : crs-2.2.9-base-rules-ids
990002 : crs-2.2.9-base-rules-ids
990901 : crs-2.2.9-base-rules-ids
990902 : crs-2.2.9-base-rules-ids
9700010 : unknown (possibly introduced with 3.0.0-dev)
9700011 : unknown (possibly introduced with 3.0.0-dev)
9700012 : unknown (possibly introduced with 3.0.0-dev)
9700013 : unknown (possibly introduced with 3.0.0-dev)
9700014 : unknown (possibly introduced with 3.0.0-dev)
9700015 : unknown (possibly introduced with 3.0.0-dev)
9700016 : unknown (possibly introduced with 3.0.0-dev)
9700017 : unknown (possibly introduced with 3.0.0-dev)
9700018 : unknown (possibly introduced with 3.0.0-dev)
9700019 : unknown (possibly introduced with 3.0.0-dev)
9700020 : unknown (possibly introduced with 3.0.0-dev)
9700021 : unknown (possibly introduced with 3.0.0-dev)
9700022 : unknown (possibly introduced with 3.0.0-dev)
9700023 : unknown (possibly introduced with 3.0.0-dev)
9700024 : unknown (possibly introduced with 3.0.0-dev)
9700025 : unknown (possibly introduced with 3.0.0-dev)


So we have quite a bunch of renumbered rules, which never
appeared in a formal release. I assume they were introduced
with in the 3.0.0-dev branch.

The problem for me are the rules from the optional branches
of the 2.2.X ruleset:
- optional rules
- experimental rules
- slr rules

The slr rules seem to have been dropped. All 2088 of them.
(Anybody ever worked with these in production?)

Most of the optional rules and experimental rules are gone as
well. However, some of them seem to have been carried over:

981044 : crs-2.2.9-experimental-rules-ids
981045 : crs-2.2.9-experimental-rules-ids
981046 : crs-2.2.9-experimental-rules-ids
981047 : crs-2.2.9-experimental-rules-ids
981048 : crs-2.2.9-experimental-rules-ids
981049 : crs-2.2.9-experimental-rules-ids
981142 : crs-2.2.9-experimental-rules-ids
981187 : crs-2.2.9-experimental-rules-ids

981138 : crs-2.2.9-optional-rules-ids
981139 : crs-2.2.9-optional-rules-ids
981140 : crs-2.2.9-optional-rules-ids
981143 : crs-2.2.9-optional-rules-ids
981144 : crs-2.2.9-optional-rules-ids
981180 : crs-2.2.9-optional-rules-ids
981181 : crs-2.2.9-optional-rules-ids
981182 : crs-2.2.9-optional-rules-ids
981184 : crs-2.2.9-optional-rules-ids

But in fact, I think these are false friends:

IdNumbering.csv:	981142,910150
981142:	(from the experimental rules)
# If this is a CSP Violation Report Request, we need to enable request
# body population of the REQUEST_BODY variable. This is not done by
# default since the request body content-type is JSON.
#
SecRule REQUEST_FILENAME "@streq %{tx.csp_report_uri}" "phase:1,
    id:'981142',t:none,nolog,pass,ctl:forceRequestBodyVariable=On"

910150: rules
SecRule TX:block_spammer_ip "@eq 1" \
   "msg:'HTTP Blacklist match for spammer IP',\

IdNumbering.csv:	981182,949140
981182: (from the optional rules)
#
# Identifies Stored XSS
# If malicious input (with Meta-Characters) is echoed back on any page
  non-encoded.
SecRule GLOBAL:'/XSS_LIST_.*/' "@within %{response_body}" ...

949140:
#
# -=[ Local File Inclusion (LFI) Score ]=-
# 
SecRule TX:LFI_SCORE "@ge %{tx.lfi_score_threshold}" \
	"msg:'Local File Inclusion (LFI) Anomaly Threshold 
	Exceeded (LFI Score: %{TX.LFI_SCORE})',\

So these two examples are clearly non-aligned. And I suspect
so are the other rules with ids which used to appear in the
optional and experimental rules.

So is this simply an error with the renumbering, or 
are all optional and experimental rules dropped for 3.0.0?
And then there were new rules introduced which by accident
re-used rule IDs of the 2.2.X optional and experimental
ruleset?

I am a bit at loss here and given we are combing all the rules
for a possible inclusion in the paranoid mode, this has to
be solved.

Any response is much appreciated!

Christian


-- 
The Devil is not the Prince of Matter; the Devil is the arrogance
of the spirit, faith without smile, truth that is never seized by doubt.
The Devil is grim because he knows where he is going, and, in moving, he
always returns whence he came.        ?
-- Umberto Eco

From christian.folini at netnea.com  Sat Jan 30 07:30:11 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Sat, 30 Jan 2016 08:30:11 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode Status - Now is the
 time to add your comments to individual rules
Message-ID: <20160130073011.GA18406@elias>

Hi there,

The little project to develop a core rules paranoia mode is
taking longer than anticipated, but we are making good progress.

We have list of candidates now and I invite you come over to the
OWASP wiki and add your comments and remarks to these rules.

https://www.owasp.org/index.php/OWASP_ModSec_CRS_Paranoia_Mode

It is also possible to respond here or via private mail.

A full status of the project is here:
https://www.owasp.org/index.php/OWASP_ModSec_CRS_Paranoia_Mode#Project_Status_January_30.2C_2016

Best,

Christian


-- 
Those who think that they know, but are mistaken, and act upon their 
mistakes, are the most dangerous people to have in charge.
-- Margret Thatcher

From modsec at spam.lifeforms.nl  Sat Jan 30 16:13:06 2016
From: modsec at spam.lifeforms.nl (Walter Hop)
Date: Sat, 30 Jan 2016 17:13:06 +0100
Subject: [Owasp-modsecurity-core-rule-set] Rules triggering False
	Positives frequently
In-Reply-To: <20160118043018.GA20460@elias>
References: <20160118043018.GA20460@elias>
Message-ID: <EC1872C3-68A9-4919-BA3E-50A81E59DF48@spam.lifeforms.nl>

Hi Christian,

Last week I have taken a look at CRS v3 for the first time. I like the improved organization. I have also been looking at my audit logs and trying to sort out various categories of false positives and relate it to their 'fate' in CRS v3. To make the problem somewhat tractable I've focused on the rules that give me really a lot of FP. As I understand it, we have a few major categories of rules to consider, so I've sorted my FP into the following.

1) Rules which are currently gone in v3.0.0-rc1 and are not so interesting to bring back in paranoid mode due to high FP and low perceived utility. I have added my remarks about FP occurence in this table: https://www.owasp.org/index.php/OWASP_ModSec_CRS_Paranoia_Mode#Base_rules

2) Rules which are currently included in v3.0.0-rc1 branch (normal mode), but might be candidates to move from normal to paranoid mode if their FP rate does not justify their benefits. This possibly decreases security for normal users, so the bar should be rather high. I?ve added only three candidates that you and Franziska didn?t have already. I have added my remarks about these rules in this table: https://www.owasp.org/index.php/OWASP_ModSec_CRS_Paranoia_Mode#Paranoia_Mode_Candidates

3) Rules from subdirectories in v2 which are no longer in v3.0.0-rc1, but we want to bring them back in paranoid mode because we think they do have worth. Bringing these rules back does not affect security for normal mode users. (experimental_rules, optional_rules, slr_rules)

I have looked at these, but I would recommend that more people look at them too. Most of them are uninteresting to me, so it's fine that they are removed. The slr_rules look quite outdated in particular. It's worth looking through experimental_rules and optional_rules though. I have added some possible candidates for us here, although I have no experience with them in production, so maybe Chaim can chime in if there are strong reasons for keeping them removed: https://www.owasp.org/index.php/OWASP_ModSec_CRS_Paranoia_Mode#Optional.2C_experimental.2C_slr_rules

Finally, I noticed that some candidates might be considered paranoid but are currently already in the normal mode at notice_anomaly_score level (for example, User-Agent, Accept, Host header existence checks). These rules do not block in isolation, so we should keep in mind that the possible negative impact of FP on them is limited. Maybe it would be a useful task to add the scoring level as a column in the wiki.

In fact, we might even consider that any paranoid rules are possibly worth keeping in the 'normal mode' as lower-scoring rules - and just have paranoid mode bump up their score level, e.g. from 2 to 5. After all, if a normal user would consider the occurrence of 3 harmless protocol violations as a valid blocking heuristic, why not the occurrence of 3 paranoid rules? This last situation might be probably more predictive of an attack.

Cheers!
WH

-- 
Walter Hop | PGP key: https://lifeforms.nl/pgp

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160130/1fe90dab/attachment.html>

