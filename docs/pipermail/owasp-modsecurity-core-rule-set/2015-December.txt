From christian.folini at netnea.com  Mon Dec 21 05:33:54 2015
From: christian.folini at netnea.com (Christian Folini)
Date: Mon, 21 Dec 2015 06:33:54 +0100
Subject: [Owasp-modsecurity-core-rule-set] Comparing 2.2.9 and 3.0.0-dev
Message-ID: <20151221053354.GA3019@elias>

Dear all,

The CRS 3.0.0-dev is in the making bringing a lot of new features
and new rules. I tried to understand the differences and wrote
a blog post about it.

https://www.netnea.com/cms/2015/12/20/modsec-crs-2-2-x-vs-3-0-0-dev/

If you are using the core rules, this will interest you. There are
nice new rules, but based on my tests, it looks like we are also
losing a lot of alerts. 

I would love to have your feedback on this. Ideally here on the
mailinglist, but feel free to ping me via mail or twitter.

Christian Folini, @ChrFolini


-- 
Seek simplicity, and distrust it.
-- Alfred North Whitehead

From CSanders at trustwave.com  Mon Dec 21 13:40:13 2015
From: CSanders at trustwave.com (Chaim Sanders)
Date: Mon, 21 Dec 2015 13:40:13 +0000
Subject: [Owasp-modsecurity-core-rule-set] Comparing 2.2.9 and 3.0.0-dev
In-Reply-To: <20151221053354.GA3019@elias>
References: <20151221053354.GA3019@elias>
Message-ID: <DM2PR07MB416F40D27E9A329A478C3EFDBE40@DM2PR07MB416.namprd07.prod.outlook.com>

Hey Christian,
Thanks for the awesome breakdown!
We've really seen some of the older issues rear some nasty levels of false positives which as you noted was the reason behind many of these. However, based on your findings I'm open to including a more false-positive prone file that is maybe only anomaly based featuring some of the rules that have been taken out. (we've been talking about this already). There are other options also (see below)
Additionally I have it on my list to defang 950907 just a bit as its EXTEREMLY overzealous.
I'm surprised about the XSS rules as most of them were combined into single regex's (for speed reasons) I'll have to take a look
We feel your concern about LibInjection but the concept seems to work and is used currently by a number of major WAF's. We can work with the author on a code review if this is something we want to prioritize.
In terms of the 990012, I think this is something we should probably be able to add back, I'll submit a pull request sometime this week.

Thoughts from you, others?
Do you think the false-positives file is the best way to handle it or do you think these belong in their respective files with a HUGE warning. The last thing we want is people complaining about false positives and eliminating those three rules has gone a LONG way. I think putting them in anomaly only isn't a horrible idea, I'm glad you did a look at anomaly scoring, this is always a little bit of a dark art. On the new one in some places we've set it up we bumped it up to 7 but it is usually below 10. Also there are now multiple different anon scoring areas.

We should resolve this quickly as I'd like to try and have an RC1 of 3.x by mid-February. Thoughts on that as well.



Chaim Sanders
Security Researcher, SpiderLabs

Trustwave |?SMART SECURITY ON DEMAND
www.trustwave.com

-----Original Message-----
From: owasp-modsecurity-core-rule-set-bounces at lists.owasp.org [mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org] On Behalf Of Christian Folini
Sent: Monday, December 21, 2015 12:34 AM
To: owasp-modsecurity-core-rule-set at lists.owasp.org
Subject: [Owasp-modsecurity-core-rule-set] Comparing 2.2.9 and 3.0.0-dev

Dear all,

The CRS 3.0.0-dev is in the making bringing a lot of new features and new rules. I tried to understand the differences and wrote a blog post about it.

http://scanmail.trustwave.com/?c=4062&d=2JX31uvfAV09c2P0_qCM5MP7s2dUhDPQ0reFkp-Msg&s=5&u=https%3a%2f%2fwww%2enetnea%2ecom%2fcms%2f2015%2f12%2f20%2fmodsec-crs-2-2-x-vs-3-0-0-dev%2f

If you are using the core rules, this will interest you. There are nice new rules, but based on my tests, it looks like we are also losing a lot of alerts.

I would love to have your feedback on this. Ideally here on the mailinglist, but feel free to ping me via mail or twitter.

Christian Folini, @ChrFolini


--
Seek simplicity, and distrust it.
-- Alfred North Whitehead
_______________________________________________
Owasp-modsecurity-core-rule-set mailing list Owasp-modsecurity-core-rule-set at lists.owasp.org
http://scanmail.trustwave.com/?c=4062&d=2JX31uvfAV09c2P0_qCM5MP7s2dUhDPQ0uDTycuMvw&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2fowasp-modsecurity-core-rule-set

________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

From christian.folini at netnea.com  Tue Dec 22 06:16:28 2015
From: christian.folini at netnea.com (Christian Folini)
Date: Tue, 22 Dec 2015 07:16:28 +0100
Subject: [Owasp-modsecurity-core-rule-set] Comparing 2.2.9 and 3.0.0-dev
In-Reply-To: <DM2PR07MB416F40D27E9A329A478C3EFDBE40@DM2PR07MB416.namprd07.prod.outlook.com>
References: <20151221053354.GA3019@elias>
	<DM2PR07MB416F40D27E9A329A478C3EFDBE40@DM2PR07MB416.namprd07.prod.outlook.com>
Message-ID: <20151222061628.GA31374@elias>

Chaim,

On Mon, Dec 21, 2015 at 01:40:13PM +0000, Chaim Sanders wrote:
> Thanks for the awesome breakdown!

You are welcome. It was a bit of work, but I really wanted to get a
feeling for the new rules. I think I have that now.

> We've really seen some of the older issues rear some nasty levels 
> of false positives which as you noted was the reason behind many of 
> these. 

Glad my assumption was correct.

> However, based on your findings I'm open to including a more 
> false-positive prone file that is maybe only anomaly based 
> featuring some of the rules that have been taken out.

I'm afraid I do not understand the "maybe only anomaly based".
What do you mean by that?

Last week, I built an experimental group of rules based
on 981173 and a new variable tx.paranoia. The higher you set
the variable, the more aggressive the rules become. 
With tx.paranoia=0 (default), they are skipped,
with tx.paranoia=1, the first few rules are applied, 
with tx.paranoia=2, the second batch of rules are applied on top.
with tx.paranoia=3, the third batch of rules are applied on top.
So the stuff is cumulative.

I think it is quite easy to understand the ruleset that way.
And I get the feeling this concept is an answer to a wide
variety of false-positive issues. False-positives typically
happen on certain parameter (types) and you can tune away them
quickly, when you have identified them. Either you exclude the
rules, or in this particular case, the paranoia variable
allows you to lower the paranoia setting for certain requests
(but I agree, it is technically very close to adjusting the
anomaly score limit for certain requests, which I suspect is
leading to chaos).

> Additionally I have it on my list to defang 950907 just a bit as its EXTEREMLY overzealous.

Yes, the base file os.commands has quite a variety of strings
in it.

Do you know which strings warrant for the false positives?
I was about to suggest to try it out at my standard customer
for a few days / weeks, but then the language of most 
users is German and the false positives thus probably not 
representative.

> I'm surprised about the XSS rules as most of them were combined into single regex's (for speed reasons) I'll have to take a look

Thanks.

> We feel your concern about LibInjection but the concept seems to work and is used currently by a number of major WAF's. We can work with the author on a code review if this is something we want to prioritize.

There is nothing wrong with the concept. The little bit I understood
sounds very cool. But if the other WAFs not only use the concept,
but also the code, then this is a sure recipe for disaster.

For me, libinject lacks three things:
 - A technical description
 - A code review
 - A community / group of developers working on the library

That thing is parsing input submitted by clients. That's why
we have the WAF after all. But if the parser is less tested
and less reviewed than the input parser of the backend application,
then I do not see the point of the WAF.

The more I think about it, the more I see this as a weak spot to
attack ModSecurity and then try the exploit on the other major WAFs
as well.

If you have the resources for a code review, then that would
be great.


> In terms of the 990012, I think this is something we should 
> probably be able to add back, I'll submit a pull request 
> sometime this week.

I tried to get around 990002, 990012 and 990902. They are close
but not quite, based on similar files, that overlap and then
leave gaps with 3.0.0-dev as well. So maybe this is just an
omission when trying to replace 990012 with a better 990902.
But I really can't tell.

> Thoughts from you, others?
> Do you think the false-positives file is the best way to handle it or do you think these belong in their respective files with a HUGE warning.

I thought about this too. Not sure about the best way to organise it.

One thing that bugs me is the seemingly wild use of the rule ID
namespace. SQLi rules stretch from 950001 up to 981319 for example...

That makes it hard to group rules.

> I think putting them in anomaly only isn't a horrible idea, I'm glad you did a look at anomaly scoring, this is always a little bit of a dark art.

I tend to think people do not know how their requests are scoring.
And if you do know how the requests are scoring you have no idea
where to start your tuning. It is essential to add the anomaly
scores to the access.log in my eyes.

> On the new one in some places we've set it up we bumped it up to 7 but it is usually below 10. Also there are now multiple different anon scoring areas.

I have not used these different areas so far. I get the point, but I
think it complicates things a lot.

One think I have a hard time understanding is the new 900003 with
the ..._threshold variables. They seem to cloak the incoming and
outgoing anomaly score via the way 981175-981187 set the 
tx.inbound_anomaly_score=%{tx.anomaly_score} (only when the
threshold is met). I would rather have
setvar:tx.inbound_anomaly_score=%{tx.anomaly_score}
applied _before_ 981175-981187.

> We should resolve this quickly as I'd like to try and have an RC1 of 3.x by mid-February. Thoughts on that as well.

That sounds fair with me. Still thinking about a way to use the
RC in detection mode _next_ to 2.2.x in blocking mode.

Ahoj,

Christian

-- 
Given the choice between two theories, take the one which is funnier.
--- Blore's Razor, Author unknown
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 181 bytes
Desc: Digital signature
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20151222/7f6cc475/attachment.pgp>

From ilyassikai at gmail.com  Wed Dec 23 16:10:05 2015
From: ilyassikai at gmail.com (Ilyass Kaouam)
Date: Wed, 23 Dec 2015 16:10:05 +0000
Subject: [Owasp-modsecurity-core-rule-set] Exclude a request
Message-ID: <CAMmziWcVfFOoaAu7GpWXEPK-DOz7mg0hSZOYd6zHsp3dB5tWKQ@mail.gmail.com>

Hi,

Hello,

I have a question please

I have a text field in which the user enters a message, the WAF blocks this
request
here is the url:

POST / servlet / EspaceClientServlet?Action=Ajax$SubmitCercle

I want to exclude this request that is to say to waf do not filter queries
with "POST / servlet/EspaceClientServlet?Action=Ajax$SubmitCercle"

Can you please tell me how?

Thank you

-- 
*Ilyass kaouam*
*Systems administrator*
* at Inforisk Group Finaccess *
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20151223/63742765/attachment.html>

From CSanders at trustwave.com  Wed Dec 23 18:25:42 2015
From: CSanders at trustwave.com (Chaim Sanders)
Date: Wed, 23 Dec 2015 18:25:42 +0000
Subject: [Owasp-modsecurity-core-rule-set] Exclude a request
Message-ID: <DM2PR07MB416378D8157437B6863AAE0DBE60@DM2PR07MB416.namprd07.prod.outlook.com>

The ideal way to do this with OWASP crs is to exclude that variable from being inspected by the given rule. This can be done by using the secupdatetargetbyid directive. To this directive you may pass ! Action and also the id of the rule causing the issue. For an example please see the modsecurity reference manual.
When not using OWASP you would probably add chained portions to the rule to exclude it from firing whenever the request URL and parameters were present. Doing this with OWASP will cause issues with updates potentially.

On Dec 23, 2015 11:41 AM, Ilyass Kaouam <ilyassikai at gmail.com> wrote:
Hi,

Hello,

I have a question please

I have a text field in which the user enters a message, the WAF blocks this request
here is the url:

POST / servlet / EspaceClientServlet?Action=Ajax$SubmitCercle

I want to exclude this request that is to say to waf do not filter queries with "POST / servlet/EspaceClientServlet?Action=Ajax$SubmitCercle"

Can you please tell me how?

Thank you

--
Ilyass kaouam
Systems administrator at Inforisk Group Finaccess


________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20151223/d56d3a3d/attachment.html>

From christian.folini at netnea.com  Sun Dec 27 08:45:55 2015
From: christian.folini at netnea.com (Christian Folini)
Date: Sun, 27 Dec 2015 09:45:55 +0100
Subject: [Owasp-modsecurity-core-rule-set] Working on Paranoia-Mode for Core
	Rules 3.0.0
Message-ID: <20151227084554.GA10055@elias>

Dear all,

Following discussions here on the list and my recent blogpost,
Chaim and I talked things through and I will develop a pull request
to introduce a paranoia mode into the core rule set.

The paranoia mode will be enabled by setting a special variable,
which will then execute a bunch of additional rules for added security
but with the disadvantage of a higher rate of false positives when
left untuned.

Some rules, which did not make the cut into the 3.0.0-dev tree, will
reappear in this setting as will some new rules.

The details are not clear so far and a fair bunch of work still has
to be done. Therefore, I am looking to recruit 2-3 people who are 
interested in this feature set. This is a nice task to dive deeper
into the inner workings of the core rules and it is an option to
help directing the development of the next major release.

I am ok with working with core rule newbies, as long as you have a 
basic unferstanding of ModSecurity.

Please respond here or via private mail. 

Best,

Christian Folini

-- 
If you have men who will only come if they know there is a good road, 
I don't want them. I want men who will come if there is no road at all.
-- David Livingstone

From ilyassikai at gmail.com  Mon Dec 28 10:05:39 2015
From: ilyassikai at gmail.com (Ilyass Kaouam)
Date: Mon, 28 Dec 2015 10:05:39 +0000
Subject: [Owasp-modsecurity-core-rule-set] Exclude a request
In-Reply-To: <DM2PR07MB416378D8157437B6863AAE0DBE60@DM2PR07MB416.namprd07.prod.outlook.com>
References: <DM2PR07MB416378D8157437B6863AAE0DBE60@DM2PR07MB416.namprd07.prod.outlook.com>
Message-ID: <CAMmziWcdpO_kYnE2iig3KNAuF1NcrnUi5bLUP=uYrXyH0gi=ZA@mail.gmail.com>

Hi Chaim,

Thank you for you reply,

SecRule REQUEST_URI "^/SubmitCercle"
id:1,t:none,t:lowercase,nolog,phase:1,allow,ctl:ruleEngine=Off,ctl:auditEngine=Off

You would like say like this ?

Thank you



2015-12-23 18:25 GMT+00:00 Chaim Sanders <CSanders at trustwave.com>:

> The ideal way to do this with OWASP crs is to exclude that variable from
> being inspected by the given rule. This can be done by using the
> secupdatetargetbyid directive. To this directive you may pass ! Action and
> also the id of the rule causing the issue. For an example please see the
> modsecurity reference manual.
> When not using OWASP you would probably add chained portions to the rule
> to exclude it from firing whenever the request URL and parameters were
> present. Doing this with OWASP will cause issues with updates potentially.
> On Dec 23, 2015 11:41 AM, Ilyass Kaouam <ilyassikai at gmail.com> wrote:
>
> Hi,
>
> Hello,
>
> I have a question please
>
> I have a text field in which the user enters a message, the WAF blocks
> this request
> here is the url:
>
> POST / servlet / EspaceClientServlet?Action=Ajax$SubmitCercle
>
> I want to exclude this request that is to say to waf do not filter queries
> with "POST / servlet/EspaceClientServlet?Action=Ajax$SubmitCercle"
>
> Can you please tell me how?
>
> Thank you
>
> --
> *Ilyass kaouam*
> *Systems administrator*
> * at Inforisk Group Finaccess  *
>
>
> ------------------------------
>
> This transmission may contain information that is privileged,
> confidential, and/or exempt from disclosure under applicable law. If you
> are not the intended recipient, you are hereby notified that any
> disclosure, copying, distribution, or use of the information contained
> herein (including any reliance thereon) is strictly prohibited. If you
> received this transmission in error, please immediately contact the sender
> and destroy the material in its entirety, whether in electronic or hard
> copy format.
>



-- 
*Ilyass kaouam*
*Systems administrator*
* at Inforisk Group Finaccess *
*European Masters in Information Technology*
*Portable : (212) *
*6 34 57 14 36**http://www.inforisk.ma <http://www.inforisk.ma>*
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20151228/108654ba/attachment.html>

From CSanders at trustwave.com  Mon Dec 28 21:24:43 2015
From: CSanders at trustwave.com (Chaim Sanders)
Date: Mon, 28 Dec 2015 21:24:43 +0000
Subject: [Owasp-modsecurity-core-rule-set] Exclude a request
In-Reply-To: <CAMmziWcdpO_kYnE2iig3KNAuF1NcrnUi5bLUP=uYrXyH0gi=ZA@mail.gmail.com>
References: <DM2PR07MB416378D8157437B6863AAE0DBE60@DM2PR07MB416.namprd07.prod.outlook.com>
	<CAMmziWcdpO_kYnE2iig3KNAuF1NcrnUi5bLUP=uYrXyH0gi=ZA@mail.gmail.com>
Message-ID: <D2A71252.16C60%csanders@trustwave.com>

This is probably the opposite of what you want to do.
Not only does it not work with your link because of the extra slash (it is a dollar sign in your link) but this will turn off ALL the rules for any request that contains that keyword anywhere in it.

Take a look at this post: https://www.trustwave.com/Resources/SpiderLabs-Blog/ModSecurity-Advanced-Topic-of-the-Week--(Updated)-Exception-Handling/
To get a better idea of what you should be doing :). If you are confused by the post reach back out and I'll work with you some more.

From: Ilyass Kaouam <ilyassikai at gmail.com<mailto:ilyassikai at gmail.com>>
Reply-To: "ilyassikai at gmail.com<mailto:ilyassikai at gmail.com>" <ilyassikai at gmail.com<mailto:ilyassikai at gmail.com>>
Date: Monday, December 28, 2015 at 5:05 AM
To: Chaim Sanders <csanders at trustwave.com<mailto:csanders at trustwave.com>>
Cc: "owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>" <owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>
Subject: Re: [Owasp-modsecurity-core-rule-set] Exclude a request

Hi Chaim,

Thank you for you reply,

SecRule REQUEST_URI "^/SubmitCercle" id:1,t:none,t:lowercase,nolog,phase:1,allow,ctl:ruleEngine=Off,ctl:auditEngine=Off

You would like say like this ?

Thank you



2015-12-23 18:25 GMT+00:00 Chaim Sanders <CSanders at trustwave.com<mailto:CSanders at trustwave.com>>:

The ideal way to do this with OWASP crs is to exclude that variable from being inspected by the given rule. This can be done by using the secupdatetargetbyid directive. To this directive you may pass ! Action and also the id of the rule causing the issue. For an example please see the modsecurity reference manual.
When not using OWASP you would probably add chained portions to the rule to exclude it from firing whenever the request URL and parameters were present. Doing this with OWASP will cause issues with updates potentially.

On Dec 23, 2015 11:41 AM, Ilyass Kaouam <ilyassikai at gmail.com<mailto:ilyassikai at gmail.com>> wrote:
Hi,

Hello,

I have a question please

I have a text field in which the user enters a message, the WAF blocks this request
here is the url:

POST / servlet / EspaceClientServlet?Action=Ajax$SubmitCercle

I want to exclude this request that is to say to waf do not filter queries with "POST / servlet/EspaceClientServlet?Action=Ajax$SubmitCercle"

Can you please tell me how?

Thank you

--
Ilyass kaouam
Systems administrator at Inforisk Group Finaccess


________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.



--
Ilyass kaouam
Systems administrator at Inforisk Group Finaccess
European Masters in Information Technology
Portable : (212) 6 34 57 14 36
http://www.inforisk.ma<http://scanmail.trustwave.com/?c=4062&d=nYmB1gX5hByXWOEUpiGAQhNbEt90NxjN403iI3W9Uw&s=5&u=http%3a%2f%2fwww%2einforisk%2ema>

________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20151228/501080dd/attachment.html>

From ilyassikai at gmail.com  Tue Dec 29 09:46:18 2015
From: ilyassikai at gmail.com (Ilyass Kaouam)
Date: Tue, 29 Dec 2015 09:46:18 +0000
Subject: [Owasp-modsecurity-core-rule-set] Exclude a request
In-Reply-To: <D2A71252.16C60%csanders@trustwave.com>
References: <DM2PR07MB416378D8157437B6863AAE0DBE60@DM2PR07MB416.namprd07.prod.outlook.com>
	<CAMmziWcdpO_kYnE2iig3KNAuF1NcrnUi5bLUP=uYrXyH0gi=ZA@mail.gmail.com>
	<D2A71252.16C60%csanders@trustwave.com>
Message-ID: <CAMmziWdGoG3jbzx75PHGixgg_D=6-khVAOyhkk9bWST4OUDjwA@mail.gmail.com>

Hi,

Thank you,

Finally I use this:

SecRuleUpdateTargetById 981245 !ARGS:/^SubmitCercle

And I add the parameter in:

SecRule REQUEST_COOKIES|!REQUEST_COOKIES
:/__utm/|!REQUEST_COOKIES:/_pk_ref/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML|!
ARGS:/message/|!ARGS:/left/|!ARGS:/right/:/*
"(?i:(?:.*?[)\da-f\"'`???][\"'`???](?\

:[\"'`???].*?[\"'`???]|\Z|[^\"'`???]+))|(?:\Wselect.+\W*?from)|((?:select|create|rename|truncate|load|alter|delete|update|insert|desc)\s*?\(\s*?space\s*?\())"
"phase:2,capture,t:none,t:urlDecodeUni,blo\

ck,msg:'Detects MySQL comment-/space-obfuscated injections and backtick
termination',id:'981257',tag:'OWASP_CRS/WEB_ATTACK/SQL_INJECTION',logdata:'Matched
Data: %{TX.0} found within %{MATCHED_VAR_NAME}\

: %{MATCHED_VAR}',severity:'2',setvar:'tx.msg=%{rule.id
}-%{rule.msg}',setvar:tx.sql_injection_score=+1,setvar:tx.anomaly_score=+%{tx.critical_anomaly_score},setvar:'tx.%{tx.msg}-OWASP_CRS/WEB_ATTACK/SQ
\


Thank you :)

2015-12-28 21:24 GMT+00:00 Chaim Sanders <CSanders at trustwave.com>:

> This is probably the opposite of what you want to do.
> Not only does it not work with your link because of the extra slash (it is
> a dollar sign in your link) but this will turn off ALL the rules for any
> request that contains that keyword anywhere in it.
>
> Take a look at this post:
> https://www.trustwave.com/Resources/SpiderLabs-Blog/ModSecurity-Advanced-Topic-of-the-Week--(Updated)-Exception-Handling/
> To get a better idea of what you should be doing :). If you are confused
> by the post reach back out and I?ll work with you some more.
>
> From: Ilyass Kaouam <ilyassikai at gmail.com>
> Reply-To: "ilyassikai at gmail.com" <ilyassikai at gmail.com>
> Date: Monday, December 28, 2015 at 5:05 AM
> To: Chaim Sanders <csanders at trustwave.com>
> Cc: "owasp-modsecurity-core-rule-set at lists.owasp.org" <
> owasp-modsecurity-core-rule-set at lists.owasp.org>
> Subject: Re: [Owasp-modsecurity-core-rule-set] Exclude a request
>
> Hi Chaim,
>
> Thank you for you reply,
>
> SecRule REQUEST_URI "^/SubmitCercle"
> id:1,t:none,t:lowercase,nolog,phase:1,allow,ctl:ruleEngine=Off,ctl:auditEngine=Off
>
> You would like say like this ?
>
> Thank you
>
>
>
> 2015-12-23 18:25 GMT+00:00 Chaim Sanders <CSanders at trustwave.com>:
>
>> The ideal way to do this with OWASP crs is to exclude that variable from
>> being inspected by the given rule. This can be done by using the
>> secupdatetargetbyid directive. To this directive you may pass ! Action and
>> also the id of the rule causing the issue. For an example please see the
>> modsecurity reference manual.
>> When not using OWASP you would probably add chained portions to the rule
>> to exclude it from firing whenever the request URL and parameters were
>> present. Doing this with OWASP will cause issues with updates potentially.
>> On Dec 23, 2015 11:41 AM, Ilyass Kaouam <ilyassikai at gmail.com> wrote:
>>
>> Hi,
>>
>> Hello,
>>
>> I have a question please
>>
>> I have a text field in which the user enters a message, the WAF blocks
>> this request
>> here is the url:
>>
>> POST / servlet / EspaceClientServlet?Action=Ajax$SubmitCercle
>>
>> I want to exclude this request that is to say to waf do not filter
>> queries with "POST / servlet/EspaceClientServlet?Action=Ajax$SubmitCercle"
>>
>> Can you please tell me how?
>>
>> Thank you
>>
>> --
>> *Ilyass kaouam*
>> *Systems administrator*
>> * at Inforisk Group Finaccess  *
>>
>>
>> ------------------------------
>>
>> This transmission may contain information that is privileged,
>> confidential, and/or exempt from disclosure under applicable law. If you
>> are not the intended recipient, you are hereby notified that any
>> disclosure, copying, distribution, or use of the information contained
>> herein (including any reliance thereon) is strictly prohibited. If you
>> received this transmission in error, please immediately contact the sender
>> and destroy the material in its entirety, whether in electronic or hard
>> copy format.
>>
>
>
>
> --
> *Ilyass kaouam*
> *Systems administrator*
> * at Inforisk Group Finaccess *
>
> ------------------------------
>
> This transmission may contain information that is privileged,
> confidential, and/or exempt from disclosure under applicable law. If you
> are not the intended recipient, you are hereby notified that any
> disclosure, copying, distribution, or use of the information contained
> herein (including any reliance thereon) is strictly prohibited. If you
> received this transmission in error, please immediately contact the sender
> and destroy the material in its entirety, whether in electronic or hard
> copy format.
>



-- 
*Ilyass kaouam*
*Systems administrator*
* at Inforisk Group Finaccess *
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20151229/7954ec35/attachment-0001.html>

