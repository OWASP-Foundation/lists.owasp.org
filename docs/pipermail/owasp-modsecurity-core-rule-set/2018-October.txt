From modsec at spam.lifeforms.nl  Wed Oct  3 12:26:56 2018
From: modsec at spam.lifeforms.nl (Walter Hop)
Date: Wed, 3 Oct 2018 14:26:56 +0200
Subject: [Owasp-modsecurity-core-rule-set] CRS development Slack channel
Message-ID: <87360278-8D00-401A-A8C0-CC1C84EEFFE6@spam.lifeforms.nl>

Hey everybody,

Are you interested in hanging out with the CRS developers? Giving your input on CRS development issues? Chatting about the wonderful world of WAFs? Then this is your chance!

At OWASP AppSecEU 2018, we have started the #coreruleset channel in the OWASP Slack.

This has turned out to be a good place for exchanging ideas and working together in real time. So, we?ve settled in and we invite anyone to join us there.

To join:

1. Go to https://owaspslack.com <https://owaspslack.com/> (not a typo).
2. Register with your e-mail address.
3. When in the Slack, find our channel in the channel list, or simply type: /join #coreruleset

From now on, we will hold our monthly development meetings in the Slack channel (first Monday of every month).

See you there!
Walter

PS: for CRS/ModSecurity help questions, we prefer that you use public forums such as this mailing list or StackOverflow. This will ensure that your question and the answers will be searchable, so that others can also learn from them. Thank you!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20181003/61591f96/attachment.html>

From ewald at mailbox.org  Tue Oct 16 06:18:42 2018
From: ewald at mailbox.org (Ewald Dieterich)
Date: Tue, 16 Oct 2018 08:18:42 +0200
Subject: [Owasp-modsecurity-core-rule-set] CRS 3.0 and trojan detection
Message-ID: <ac3b3fd7-27ba-37e9-6e37-7def633ebcda@mailbox.org>

CRS 2.2.9 and below have some basic trojan detection in file 
modsecurity_crs_45_trojans.conf. It looks like those rules were removed 
from CRS 3.0. At least there's no mapping in IdNumbering.csv and I also 
couldn't find anything by grepping for e.g. "backdoor" or "trojan".

I'm just interested on why this category was removed. Did it prove to be 
ineffective or are there other reasons?

From oelnaggar04 at gmail.com  Tue Oct 16 06:46:57 2018
From: oelnaggar04 at gmail.com (Osama Elnaggar)
Date: Tue, 16 Oct 2018 08:46:57 +0200
Subject: [Owasp-modsecurity-core-rule-set] CRS 3.0 and trojan detection
In-Reply-To: <ac3b3fd7-27ba-37e9-6e37-7def633ebcda@mailbox.org>
References: <ac3b3fd7-27ba-37e9-6e37-7def633ebcda@mailbox.org>
Message-ID: <CACva_gEDhS1LHuYTtt4jS7rhM3=6gH6nALSLoO1cj9oEZRed_w@mail.gmail.com>

They were extremely basic (3 rules) and not very useful.  Merely changing
the title or name would bypass the rules.  Detecting malicious web
shells/backdoors is better left to a script that you invoke using
@inspectFile while files are being uploaded or @fuzzyHash.

Here's an article on using @fuzzyHash -
https://www.trustwave.com/Resources/SpiderLabs-Blog/ModSecurity-Advanced-Topic-of-the-Week--Detecting-Malware-with-Fuzzy-Hashing/
You can download commonly used web shells and then use ssdeep and
@fuzzyHash to detect them.

-- 
Osama Elnaggar

On October 16, 2018 at 5:24:02 PM, Ewald Dieterich (ewald at mailbox.org)
wrote:

CRS 2.2.9 and below have some basic trojan detection in file
modsecurity_crs_45_trojans.conf. It looks like those rules were removed
from CRS 3.0. At least there's no mapping in IdNumbering.csv and I also
couldn't find anything by grepping for e.g. "backdoor" or "trojan".

I'm just interested on why this category was removed. Did it prove to be
ineffective or are there other reasons?
_______________________________________________
Owasp-modsecurity-core-rule-set mailing list
Owasp-modsecurity-core-rule-set at lists.owasp.org
https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20181016/cba1e972/attachment.html>

From jonah at datacompusa.com  Wed Oct 17 17:46:42 2018
From: jonah at datacompusa.com (Jonah Potter)
Date: Wed, 17 Oct 2018 13:46:42 -0400
Subject: [Owasp-modsecurity-core-rule-set] False positives triggered only by
	anomaly score
Message-ID: <CACzVMcNL06uNte1cX-=UJCZwXXUyLQh3NVyJ7dwy1_nFhtUX-Q@mail.gmail.com>

Hey guys, hoping you can help me out with a issue I'm having. I'm running
OWASP v3 with libmodsecurity 3.0 on top of nginx-1.15.3 via
Modsecurity-nginx. I'm experiencing false positives of this variety with
some regularity. A given request will be 403'd, but when I check
modsec_audit.log, the only rule violations logged are the two "inbound
anomaly score exceeded" codes. The rule that was presumably violated
leading to the anomaly score being incremented is not logged at all. Here's
an example:

---S4x9aI9l---A--
> [17/Oct/2018:11:41:19 -0400] 153979087991.549389 [ip] 61929 [ip] 443
> ---S4x9aI9l---B--
> POST /path/file.php?args=args HTTP/2.0
> accept-encoding: gzip, deflate, br
> cookie: PHPSESSID=xyz; notBot=notBot; _ga=xyz;
> 73d45a3f924337c011d46201c4a77d88c8b17afce961417c3e4fb7bbce09a31a=0thocmt2erfgbcpmrts35lqgh1;
> SideMenu=0; SearchLocation=49316; _gid=GA1.2.1268970541.1539790780; Me=xyz;
> _gat_UA-1302423-1=1
> accept:
> text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8
> cache-control: max-age=0
> user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6)
> AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
> content-type: multipart/form-data;
> boundary=----WebKitFormBoundaryCoCuOxmv7pZRNW9G
> upgrade-insecure-requests: 1
> referer: https://www.mydomain.com/path/file.php?args=args
> origin: https://www.mydomain.com
> content-length: 1033
> host: www.mydomain.com
> accept-language: en-US,en;q=0.9
> ---S4x9aI9l---D--
> ---S4x9aI9l---E--
> <html>\x0d\x0a<head><title>403 Forbidden</title></head>\x0d\x0a<body
> bgcolor="white">\x0d\x0a<center><h1>403
> Forbidden</h1></center>\x0d\x0a<hr><center>nginx/1.15.3</center>\x0d\x0a</body>\x0d\x0a</html>\x0d\x0a<!--
> a padding to disable MSIE and Chrome friendly error page -->\x0d\x0a<!-- a
> padding to disable MSIE and Chrome friendly error page -->\x0d\x0a<!-- a
> padding to disable MSIE and Chrome friendly error page -->\x0d\x0a<!-- a
> padding to disable MSIE and Chrome friendly error page -->\x0d\x0a<!-- a
> padding to disable MSIE and Chrome friendly error page -->\x0d\x0a<!-- a
> padding to disable MSIE and Chrome friendly error page -->\x0d\x0a
> ---S4x9aI9l---F--
> HTTP/2.0 403
> Server: nginx/1.15.3
> Date: Wed, 17 Oct 2018 15:41:19 GMT
> Content-Length: 571
> Content-Type: text/html
> Connection: close
> ---S4x9aI9l---H--
> ModSecurity: Access denied with code 403 (phase 2). Matched "Operator `Ge'
> with parameter `5' against variable `TX:ANOMALY_SCORE' (Value: `5' ) [file
> "/usr/local/owasp-modsecurity-crs-3.0.0/rules/REQUEST-949-BLOCKING-EVALUATION.conf"]
> [line "36"] [id "949110"] [rev ""] [msg "Inbound Anomaly Score Exceeded
> (Total Score: 5)"] [data ""] [severity "2"] [ver ""] [maturity "0"]
> [accuracy "0"] [tag "application-multi"] [tag "language-multi"] [tag
> "platform-multi"] [tag "attack-generic"] [hostname "173.167.228.139"] [uri
> "/path/file.php"] [unique_id "153979087991.549389"] [ref ""]
> ModSecurity: Warning. Matched "Operator `Ge' with parameter `5' against
> variable `TX:INBOUND_ANOMALY_SCORE' (Value: `5' ) [file
> "/usr/local/owasp-modsecurity-crs-3.0.0/rules/RESPONSE-980-CORRELATION.conf"]
> [line "61"] [id "980130"] [rev ""] [msg "Inbound Anomaly Score Exceeded
> (Total Inbound Score: 5 -
> SQLI=0,XSS=5,RFI=0,LFI=0,RCE=0,PHPI=0,HTTP=0,SESS=0): XSS Filter - Category
> 5: Disallowed HTML Attributes"] [data ""] [severity "0"] [ver ""] [maturity
> "0"] [accuracy "0"] [tag "event-correlation"] [hostname "173.167.228.139"]
> [uri "/path/file.php"] [unique_id "153979087991.549389"] [ref ""]
> ---S4x9aI9l---I--
> ---S4x9aI9l---J--
> ---S4x9aI9l---Z--


I know what the issue is - the user is submitting a text field containing
HTML tags - but I'm not sure precisely which rule is being triggered, so I
can't figure out how to write a custom rule that disables it for that
particular argument. Any help in either determining which rule was
triggered or ensuring the rule is logged would be much appreciated. If more
information would be helpful, just ask, I'm happy to provide whatever I can.

Thanks,
Jonah
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20181017/d7caafa2/attachment.html>

From gregory at clover.com  Wed Oct 17 18:22:48 2018
From: gregory at clover.com (Gregory LeFevre)
Date: Wed, 17 Oct 2018 11:22:48 -0700
Subject: [Owasp-modsecurity-core-rule-set] False positives triggered
 only by anomaly score
In-Reply-To: <CACzVMcNL06uNte1cX-=UJCZwXXUyLQh3NVyJ7dwy1_nFhtUX-Q@mail.gmail.com>
References: <CACzVMcNL06uNte1cX-=UJCZwXXUyLQh3NVyJ7dwy1_nFhtUX-Q@mail.gmail.com>
Message-ID: <CAJ0KKz96q=ZHvkFhFJD2OKxoLCJf3=-EKp8g0KWhvY7OsyE_Ug@mail.gmail.com>

Just a guess here ... maybe adjusting SecAuditLogParts in modsecurity.conf
to include the matched rules information, I think part K, could help?

Gregory


On Wed, Oct 17, 2018 at 10:50 AM Jonah Potter <jonah at datacompusa.com> wrote:

> Hey guys, hoping you can help me out with a issue I'm having. I'm running
> OWASP v3 with libmodsecurity 3.0 on top of nginx-1.15.3 via
> Modsecurity-nginx. I'm experiencing false positives of this variety with
> some regularity. A given request will be 403'd, but when I check
> modsec_audit.log, the only rule violations logged are the two "inbound
> anomaly score exceeded" codes. The rule that was presumably violated
> leading to the anomaly score being incremented is not logged at all. Here's
> an example:
>
> ---S4x9aI9l---A--
>> [17/Oct/2018:11:41:19 -0400] 153979087991.549389 [ip] 61929 [ip] 443
>> ---S4x9aI9l---B--
>> POST /path/file.php?args=args HTTP/2.0
>> accept-encoding: gzip, deflate, br
>> cookie: PHPSESSID=xyz; notBot=notBot; _ga=xyz;
>> 73d45a3f924337c011d46201c4a77d88c8b17afce961417c3e4fb7bbce09a31a=0thocmt2erfgbcpmrts35lqgh1;
>> SideMenu=0; SearchLocation=49316; _gid=GA1.2.1268970541.1539790780; Me=xyz;
>> _gat_UA-1302423-1=1
>> accept:
>> text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8
>> cache-control: max-age=0
>> user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6)
>> AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36
>> content-type: multipart/form-data;
>> boundary=----WebKitFormBoundaryCoCuOxmv7pZRNW9G
>> upgrade-insecure-requests: 1
>> referer: https://www.mydomain.com/path/file.php?args=args
>> origin: https://www.mydomain.com
>> content-length: 1033
>> host: www.mydomain.com
>> accept-language: en-US,en;q=0.9
>> ---S4x9aI9l---D--
>> ---S4x9aI9l---E--
>> <html>\x0d\x0a<head><title>403 Forbidden</title></head>\x0d\x0a<body
>> bgcolor="white">\x0d\x0a<center><h1>403
>> Forbidden</h1></center>\x0d\x0a<hr><center>nginx/1.15.3</center>\x0d\x0a</body>\x0d\x0a</html>\x0d\x0a<!--
>> a padding to disable MSIE and Chrome friendly error page -->\x0d\x0a<!-- a
>> padding to disable MSIE and Chrome friendly error page -->\x0d\x0a<!-- a
>> padding to disable MSIE and Chrome friendly error page -->\x0d\x0a<!-- a
>> padding to disable MSIE and Chrome friendly error page -->\x0d\x0a<!-- a
>> padding to disable MSIE and Chrome friendly error page -->\x0d\x0a<!-- a
>> padding to disable MSIE and Chrome friendly error page -->\x0d\x0a
>> ---S4x9aI9l---F--
>> HTTP/2.0 403
>> Server: nginx/1.15.3
>> Date: Wed, 17 Oct 2018 15:41:19 GMT
>> Content-Length: 571
>> Content-Type: text/html
>> Connection: close
>> ---S4x9aI9l---H--
>> ModSecurity: Access denied with code 403 (phase 2). Matched "Operator
>> `Ge' with parameter `5' against variable `TX:ANOMALY_SCORE' (Value: `5' )
>> [file
>> "/usr/local/owasp-modsecurity-crs-3.0.0/rules/REQUEST-949-BLOCKING-EVALUATION.conf"]
>> [line "36"] [id "949110"] [rev ""] [msg "Inbound Anomaly Score Exceeded
>> (Total Score: 5)"] [data ""] [severity "2"] [ver ""] [maturity "0"]
>> [accuracy "0"] [tag "application-multi"] [tag "language-multi"] [tag
>> "platform-multi"] [tag "attack-generic"] [hostname "173.167.228.139"] [uri
>> "/path/file.php"] [unique_id "153979087991.549389"] [ref ""]
>> ModSecurity: Warning. Matched "Operator `Ge' with parameter `5' against
>> variable `TX:INBOUND_ANOMALY_SCORE' (Value: `5' ) [file
>> "/usr/local/owasp-modsecurity-crs-3.0.0/rules/RESPONSE-980-CORRELATION.conf"]
>> [line "61"] [id "980130"] [rev ""] [msg "Inbound Anomaly Score Exceeded
>> (Total Inbound Score: 5 -
>> SQLI=0,XSS=5,RFI=0,LFI=0,RCE=0,PHPI=0,HTTP=0,SESS=0): XSS Filter - Category
>> 5: Disallowed HTML Attributes"] [data ""] [severity "0"] [ver ""] [maturity
>> "0"] [accuracy "0"] [tag "event-correlation"] [hostname "173.167.228.139"]
>> [uri "/path/file.php"] [unique_id "153979087991.549389"] [ref ""]
>> ---S4x9aI9l---I--
>> ---S4x9aI9l---J--
>> ---S4x9aI9l---Z--
>
>
> I know what the issue is - the user is submitting a text field containing
> HTML tags - but I'm not sure precisely which rule is being triggered, so I
> can't figure out how to write a custom rule that disables it for that
> particular argument. Any help in either determining which rule was
> triggered or ensuring the rule is logged would be much appreciated. If more
> information would be helpful, just ask, I'm happy to provide whatever I can.
>
> Thanks,
> Jonah
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20181017/b0844562/attachment.html>

From christian.folini at netnea.com  Thu Oct 18 17:55:16 2018
From: christian.folini at netnea.com (Christian Folini)
Date: Thu, 18 Oct 2018 19:55:16 +0200
Subject: [Owasp-modsecurity-core-rule-set] False positives triggered
 only by anomaly score
In-Reply-To: <CACzVMcPAVH_uVtfwK2b9rq382va1eJd3OWWtdnK3jO=CWA3ckg@mail.gmail.com>
References: <CACzVMcNL06uNte1cX-=UJCZwXXUyLQh3NVyJ7dwy1_nFhtUX-Q@mail.gmail.com>
	<20181017185744.GA14988@leander>
	<CACzVMcPAVH_uVtfwK2b9rq382va1eJd3OWWtdnK3jO=CWA3ckg@mail.gmail.com>
Message-ID: <20181018175516.GB10516@leander>

Hey Jonah,

Good luck and please report back with the results.

Christian

On Thu, Oct 18, 2018 at 10:48:40AM -0400, Jonah Potter wrote:
> Gregory - good idea. Unfortunately, after adding part K to SecAuditLogParts
> and reproducing the issue, I didn't get any output in part K. Oddly enough,
> no logged requests are outputting anything under the part K heading, even
> when they have warnings listed in part H.
> 
> Christian - My mistake - I meant CRS 3.0.0. I'll update to 3.0.2, and if
> that doesn't take care of it, I'll give 3.1-RC1 a shot, and let you know
> what happens.
> 
> Thanks again,
> Jonah
> 
> On Wed, Oct 17, 2018 at 2:57 PM Christian Folini <
> christian.folini at netnea.com> wrote:
> 
> > Hey Jonah,
> >
> > I suppose you mean CRS 3.0.2 when you say OWASP v3.
> >
> > I think there is a silent rule in 3.0.x that raises the anomaly score
> > without
> > issuing an alert message. But I can't remember if we fixed that for 3.0.2
> > or
> > only for the upcoming 3.1. Could you try with 3.1-RC1 and reproduce it?
> > Alternatively, you could raise the debug log level and follow the
> > execution of
> > the rules.
> >
> > Best,
> >
> > Christian
> >
> > On Wed, Oct 17, 2018 at 01:46:42PM -0400, Jonah Potter wrote:
> > > Hey guys, hoping you can help me out with a issue I'm having. I'm running
> > > OWASP v3 with libmodsecurity 3.0 on top of nginx-1.15.3 via
> > > Modsecurity-nginx. I'm experiencing false positives of this variety with
> > > some regularity. A given request will be 403'd, but when I check
> > > modsec_audit.log, the only rule violations logged are the two "inbound
> > > anomaly score exceeded" codes. The rule that was presumably violated
> > > leading to the anomaly score being incremented is not logged at all.
> > Here's
> > > an example:
> > >
> > > ---S4x9aI9l---A--
> > > > [17/Oct/2018:11:41:19 -0400] 153979087991.549389 [ip] 61929 [ip] 443
> > > > ---S4x9aI9l---B--
> > > > POST /path/file.php?args=args HTTP/2.0
> > > > accept-encoding: gzip, deflate, br
> > > > cookie: PHPSESSID=xyz; notBot=notBot; _ga=xyz;
> > > >
> > 73d45a3f924337c011d46201c4a77d88c8b17afce961417c3e4fb7bbce09a31a=0thocmt2erfgbcpmrts35lqgh1;
> > > > SideMenu=0; SearchLocation=49316; _gid=GA1.2.1268970541.1539790780;
> > Me=xyz;
> > > > _gat_UA-1302423-1=1
> > > > accept:
> > > >
> > text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8
> > > > cache-control: max-age=0
> > > > user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6)
> > > > AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100
> > Safari/537.36
> > > > content-type: multipart/form-data;
> > > > boundary=----WebKitFormBoundaryCoCuOxmv7pZRNW9G
> > > > upgrade-insecure-requests: 1
> > > > referer: https://www.mydomain.com/path/file.php?args=args
> > > > origin: https://www.mydomain.com
> > > > content-length: 1033
> > > > host: www.mydomain.com
> > > > accept-language: en-US,en;q=0.9
> > > > ---S4x9aI9l---D--
> > > > ---S4x9aI9l---E--
> > > > <html>\x0d\x0a<head><title>403 Forbidden</title></head>\x0d\x0a<body
> > > > bgcolor="white">\x0d\x0a<center><h1>403
> > > >
> > Forbidden</h1></center>\x0d\x0a<hr><center>nginx/1.15.3</center>\x0d\x0a</body>\x0d\x0a</html>\x0d\x0a<!--
> > > > a padding to disable MSIE and Chrome friendly error page
> > -->\x0d\x0a<!-- a
> > > > padding to disable MSIE and Chrome friendly error page -->\x0d\x0a<!--
> > a
> > > > padding to disable MSIE and Chrome friendly error page -->\x0d\x0a<!--
> > a
> > > > padding to disable MSIE and Chrome friendly error page -->\x0d\x0a<!--
> > a
> > > > padding to disable MSIE and Chrome friendly error page -->\x0d\x0a<!--
> > a
> > > > padding to disable MSIE and Chrome friendly error page -->\x0d\x0a
> > > > ---S4x9aI9l---F--
> > > > HTTP/2.0 403
> > > > Server: nginx/1.15.3
> > > > Date: Wed, 17 Oct 2018 15:41:19 GMT
> > > > Content-Length: 571
> > > > Content-Type: text/html
> > > > Connection: close
> > > > ---S4x9aI9l---H--
> > > > ModSecurity: Access denied with code 403 (phase 2). Matched "Operator
> > `Ge'
> > > > with parameter `5' against variable `TX:ANOMALY_SCORE' (Value: `5' )
> > [file
> > > >
> > "/usr/local/owasp-modsecurity-crs-3.0.0/rules/REQUEST-949-BLOCKING-EVALUATION.conf"]
> > > > [line "36"] [id "949110"] [rev ""] [msg "Inbound Anomaly Score Exceeded
> > > > (Total Score: 5)"] [data ""] [severity "2"] [ver ""] [maturity "0"]
> > > > [accuracy "0"] [tag "application-multi"] [tag "language-multi"] [tag
> > > > "platform-multi"] [tag "attack-generic"] [hostname "173.167.228.139"]
> > [uri
> > > > "/path/file.php"] [unique_id "153979087991.549389"] [ref ""]
> > > > ModSecurity: Warning. Matched "Operator `Ge' with parameter `5' against
> > > > variable `TX:INBOUND_ANOMALY_SCORE' (Value: `5' ) [file
> > > >
> > "/usr/local/owasp-modsecurity-crs-3.0.0/rules/RESPONSE-980-CORRELATION.conf"]
> > > > [line "61"] [id "980130"] [rev ""] [msg "Inbound Anomaly Score Exceeded
> > > > (Total Inbound Score: 5 -
> > > > SQLI=0,XSS=5,RFI=0,LFI=0,RCE=0,PHPI=0,HTTP=0,SESS=0): XSS Filter -
> > Category
> > > > 5: Disallowed HTML Attributes"] [data ""] [severity "0"] [ver ""]
> > [maturity
> > > > "0"] [accuracy "0"] [tag "event-correlation"] [hostname
> > "173.167.228.139"]
> > > > [uri "/path/file.php"] [unique_id "153979087991.549389"] [ref ""]
> > > > ---S4x9aI9l---I--
> > > > ---S4x9aI9l---J--
> > > > ---S4x9aI9l---Z--
> > >
> > >
> > > I know what the issue is - the user is submitting a text field containing
> > > HTML tags - but I'm not sure precisely which rule is being triggered, so
> > I
> > > can't figure out how to write a custom rule that disables it for that
> > > particular argument. Any help in either determining which rule was
> > > triggered or ensuring the rule is logged would be much appreciated. If
> > more
> > > information would be helpful, just ask, I'm happy to provide whatever I
> > can.
> > >
> > > Thanks,
> > > Jonah
> >
> > > _______________________________________________
> > > Owasp-modsecurity-core-rule-set mailing list
> > > Owasp-modsecurity-core-rule-set at lists.owasp.org
> > > https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
> >
> >

From jonah at datacompusa.com  Thu Oct 18 19:20:25 2018
From: jonah at datacompusa.com (Jonah Potter)
Date: Thu, 18 Oct 2018 15:20:25 -0400
Subject: [Owasp-modsecurity-core-rule-set] False positives triggered
 only by anomaly score
In-Reply-To: <20181018175516.GB10516@leander>
References: <CACzVMcNL06uNte1cX-=UJCZwXXUyLQh3NVyJ7dwy1_nFhtUX-Q@mail.gmail.com>
	<20181017185744.GA14988@leander>
	<CACzVMcPAVH_uVtfwK2b9rq382va1eJd3OWWtdnK3jO=CWA3ckg@mail.gmail.com>
	<20181018175516.GB10516@leander>
Message-ID: <CACzVMcMex06r_7pMdK55OxyB=+5tMBoPfr8eKKfD_=nCh2F1OQ@mail.gmail.com>

The upgrade from CRS 3.0.0 to 3.0.2 resolved the false positive - the
request no longer returns a 403. I have yet to see any more lonely anomaly
score errors in the logs, and hopefully that trend will continue. Thanks
again for the assistance.
- Jonah

On Thu, Oct 18, 2018 at 1:55 PM Christian Folini <
christian.folini at netnea.com> wrote:

> Hey Jonah,
>
> Good luck and please report back with the results.
>
> Christian
>
> On Thu, Oct 18, 2018 at 10:48:40AM -0400, Jonah Potter wrote:
> > Gregory - good idea. Unfortunately, after adding part K to
> SecAuditLogParts
> > and reproducing the issue, I didn't get any output in part K. Oddly
> enough,
> > no logged requests are outputting anything under the part K heading, even
> > when they have warnings listed in part H.
> >
> > Christian - My mistake - I meant CRS 3.0.0. I'll update to 3.0.2, and if
> > that doesn't take care of it, I'll give 3.1-RC1 a shot, and let you know
> > what happens.
> >
> > Thanks again,
> > Jonah
> >
> > On Wed, Oct 17, 2018 at 2:57 PM Christian Folini <
> > christian.folini at netnea.com> wrote:
> >
> > > Hey Jonah,
> > >
> > > I suppose you mean CRS 3.0.2 when you say OWASP v3.
> > >
> > > I think there is a silent rule in 3.0.x that raises the anomaly score
> > > without
> > > issuing an alert message. But I can't remember if we fixed that for
> 3.0.2
> > > or
> > > only for the upcoming 3.1. Could you try with 3.1-RC1 and reproduce it?
> > > Alternatively, you could raise the debug log level and follow the
> > > execution of
> > > the rules.
> > >
> > > Best,
> > >
> > > Christian
> > >
> > > On Wed, Oct 17, 2018 at 01:46:42PM -0400, Jonah Potter wrote:
> > > > Hey guys, hoping you can help me out with a issue I'm having. I'm
> running
> > > > OWASP v3 with libmodsecurity 3.0 on top of nginx-1.15.3 via
> > > > Modsecurity-nginx. I'm experiencing false positives of this variety
> with
> > > > some regularity. A given request will be 403'd, but when I check
> > > > modsec_audit.log, the only rule violations logged are the two
> "inbound
> > > > anomaly score exceeded" codes. The rule that was presumably violated
> > > > leading to the anomaly score being incremented is not logged at all.
> > > Here's
> > > > an example:
> > > >
> > > > ---S4x9aI9l---A--
> > > > > [17/Oct/2018:11:41:19 -0400] 153979087991.549389 [ip] 61929 [ip]
> 443
> > > > > ---S4x9aI9l---B--
> > > > > POST /path/file.php?args=args HTTP/2.0
> > > > > accept-encoding: gzip, deflate, br
> > > > > cookie: PHPSESSID=xyz; notBot=notBot; _ga=xyz;
> > > > >
> > >
> 73d45a3f924337c011d46201c4a77d88c8b17afce961417c3e4fb7bbce09a31a=0thocmt2erfgbcpmrts35lqgh1;
> > > > > SideMenu=0; SearchLocation=49316; _gid=GA1.2.1268970541.1539790780;
> > > Me=xyz;
> > > > > _gat_UA-1302423-1=1
> > > > > accept:
> > > > >
> > >
> text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8
> > > > > cache-control: max-age=0
> > > > > user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6)
> > > > > AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100
> > > Safari/537.36
> > > > > content-type: multipart/form-data;
> > > > > boundary=----WebKitFormBoundaryCoCuOxmv7pZRNW9G
> > > > > upgrade-insecure-requests: 1
> > > > > referer: https://www.mydomain.com/path/file.php?args=args
> > > > > origin: https://www.mydomain.com
> > > > > content-length: 1033
> > > > > host: www.mydomain.com
> > > > > accept-language: en-US,en;q=0.9
> > > > > ---S4x9aI9l---D--
> > > > > ---S4x9aI9l---E--
> > > > > <html>\x0d\x0a<head><title>403
> Forbidden</title></head>\x0d\x0a<body
> > > > > bgcolor="white">\x0d\x0a<center><h1>403
> > > > >
> > >
> Forbidden</h1></center>\x0d\x0a<hr><center>nginx/1.15.3</center>\x0d\x0a</body>\x0d\x0a</html>\x0d\x0a<!--
> > > > > a padding to disable MSIE and Chrome friendly error page
> > > -->\x0d\x0a<!-- a
> > > > > padding to disable MSIE and Chrome friendly error page
> -->\x0d\x0a<!--
> > > a
> > > > > padding to disable MSIE and Chrome friendly error page
> -->\x0d\x0a<!--
> > > a
> > > > > padding to disable MSIE and Chrome friendly error page
> -->\x0d\x0a<!--
> > > a
> > > > > padding to disable MSIE and Chrome friendly error page
> -->\x0d\x0a<!--
> > > a
> > > > > padding to disable MSIE and Chrome friendly error page -->\x0d\x0a
> > > > > ---S4x9aI9l---F--
> > > > > HTTP/2.0 403
> > > > > Server: nginx/1.15.3
> > > > > Date: Wed, 17 Oct 2018 15:41:19 GMT
> > > > > Content-Length: 571
> > > > > Content-Type: text/html
> > > > > Connection: close
> > > > > ---S4x9aI9l---H--
> > > > > ModSecurity: Access denied with code 403 (phase 2). Matched
> "Operator
> > > `Ge'
> > > > > with parameter `5' against variable `TX:ANOMALY_SCORE' (Value: `5'
> )
> > > [file
> > > > >
> > >
> "/usr/local/owasp-modsecurity-crs-3.0.0/rules/REQUEST-949-BLOCKING-EVALUATION.conf"]
> > > > > [line "36"] [id "949110"] [rev ""] [msg "Inbound Anomaly Score
> Exceeded
> > > > > (Total Score: 5)"] [data ""] [severity "2"] [ver ""] [maturity "0"]
> > > > > [accuracy "0"] [tag "application-multi"] [tag "language-multi"]
> [tag
> > > > > "platform-multi"] [tag "attack-generic"] [hostname
> "173.167.228.139"]
> > > [uri
> > > > > "/path/file.php"] [unique_id "153979087991.549389"] [ref ""]
> > > > > ModSecurity: Warning. Matched "Operator `Ge' with parameter `5'
> against
> > > > > variable `TX:INBOUND_ANOMALY_SCORE' (Value: `5' ) [file
> > > > >
> > >
> "/usr/local/owasp-modsecurity-crs-3.0.0/rules/RESPONSE-980-CORRELATION.conf"]
> > > > > [line "61"] [id "980130"] [rev ""] [msg "Inbound Anomaly Score
> Exceeded
> > > > > (Total Inbound Score: 5 -
> > > > > SQLI=0,XSS=5,RFI=0,LFI=0,RCE=0,PHPI=0,HTTP=0,SESS=0): XSS Filter -
> > > Category
> > > > > 5: Disallowed HTML Attributes"] [data ""] [severity "0"] [ver ""]
> > > [maturity
> > > > > "0"] [accuracy "0"] [tag "event-correlation"] [hostname
> > > "173.167.228.139"]
> > > > > [uri "/path/file.php"] [unique_id "153979087991.549389"] [ref ""]
> > > > > ---S4x9aI9l---I--
> > > > > ---S4x9aI9l---J--
> > > > > ---S4x9aI9l---Z--
> > > >
> > > >
> > > > I know what the issue is - the user is submitting a text field
> containing
> > > > HTML tags - but I'm not sure precisely which rule is being
> triggered, so
> > > I
> > > > can't figure out how to write a custom rule that disables it for that
> > > > particular argument. Any help in either determining which rule was
> > > > triggered or ensuring the rule is logged would be much appreciated.
> If
> > > more
> > > > information would be helpful, just ask, I'm happy to provide
> whatever I
> > > can.
> > > >
> > > > Thanks,
> > > > Jonah
> > >
> > > > _______________________________________________
> > > > Owasp-modsecurity-core-rule-set mailing list
> > > > Owasp-modsecurity-core-rule-set at lists.owasp.org
> > > >
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
> > >
> > >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20181018/d7869a57/attachment.html>

From christian.folini at netnea.com  Thu Oct 18 19:26:54 2018
From: christian.folini at netnea.com (Christian Folini)
Date: Thu, 18 Oct 2018 21:26:54 +0200
Subject: [Owasp-modsecurity-core-rule-set] False positives triggered
 only by anomaly score
In-Reply-To: <CACzVMcMex06r_7pMdK55OxyB=+5tMBoPfr8eKKfD_=nCh2F1OQ@mail.gmail.com>
References: <CACzVMcNL06uNte1cX-=UJCZwXXUyLQh3NVyJ7dwy1_nFhtUX-Q@mail.gmail.com>
	<20181017185744.GA14988@leander>
	<CACzVMcPAVH_uVtfwK2b9rq382va1eJd3OWWtdnK3jO=CWA3ckg@mail.gmail.com>
	<20181018175516.GB10516@leander>
	<CACzVMcMex06r_7pMdK55OxyB=+5tMBoPfr8eKKfD_=nCh2F1OQ@mail.gmail.com>
Message-ID: <20181018192654.GA32564@leander>

Cool. Glad that solved this issue.

If you have additional FPs at paranoia level 1, please do report them.
We want to weed out all FPs in the default installation.

Best,

Christian

On Thu, Oct 18, 2018 at 03:20:25PM -0400, Jonah Potter wrote:
> The upgrade from CRS 3.0.0 to 3.0.2 resolved the false positive - the
> request no longer returns a 403. I have yet to see any more lonely anomaly
> score errors in the logs, and hopefully that trend will continue. Thanks
> again for the assistance.
> - Jonah
> 
> On Thu, Oct 18, 2018 at 1:55 PM Christian Folini <
> christian.folini at netnea.com> wrote:
> 
> > Hey Jonah,
> >
> > Good luck and please report back with the results.
> >
> > Christian
> >
> > On Thu, Oct 18, 2018 at 10:48:40AM -0400, Jonah Potter wrote:
> > > Gregory - good idea. Unfortunately, after adding part K to
> > SecAuditLogParts
> > > and reproducing the issue, I didn't get any output in part K. Oddly
> > enough,
> > > no logged requests are outputting anything under the part K heading, even
> > > when they have warnings listed in part H.
> > >
> > > Christian - My mistake - I meant CRS 3.0.0. I'll update to 3.0.2, and if
> > > that doesn't take care of it, I'll give 3.1-RC1 a shot, and let you know
> > > what happens.
> > >
> > > Thanks again,
> > > Jonah
> > >
> > > On Wed, Oct 17, 2018 at 2:57 PM Christian Folini <
> > > christian.folini at netnea.com> wrote:
> > >
> > > > Hey Jonah,
> > > >
> > > > I suppose you mean CRS 3.0.2 when you say OWASP v3.
> > > >
> > > > I think there is a silent rule in 3.0.x that raises the anomaly score
> > > > without
> > > > issuing an alert message. But I can't remember if we fixed that for
> > 3.0.2
> > > > or
> > > > only for the upcoming 3.1. Could you try with 3.1-RC1 and reproduce it?
> > > > Alternatively, you could raise the debug log level and follow the
> > > > execution of
> > > > the rules.
> > > >
> > > > Best,
> > > >
> > > > Christian
> > > >
> > > > On Wed, Oct 17, 2018 at 01:46:42PM -0400, Jonah Potter wrote:
> > > > > Hey guys, hoping you can help me out with a issue I'm having. I'm
> > running
> > > > > OWASP v3 with libmodsecurity 3.0 on top of nginx-1.15.3 via
> > > > > Modsecurity-nginx. I'm experiencing false positives of this variety
> > with
> > > > > some regularity. A given request will be 403'd, but when I check
> > > > > modsec_audit.log, the only rule violations logged are the two
> > "inbound
> > > > > anomaly score exceeded" codes. The rule that was presumably violated
> > > > > leading to the anomaly score being incremented is not logged at all.
> > > > Here's
> > > > > an example:
> > > > >
> > > > > ---S4x9aI9l---A--
> > > > > > [17/Oct/2018:11:41:19 -0400] 153979087991.549389 [ip] 61929 [ip]
> > 443
> > > > > > ---S4x9aI9l---B--
> > > > > > POST /path/file.php?args=args HTTP/2.0
> > > > > > accept-encoding: gzip, deflate, br
> > > > > > cookie: PHPSESSID=xyz; notBot=notBot; _ga=xyz;
> > > > > >
> > > >
> > 73d45a3f924337c011d46201c4a77d88c8b17afce961417c3e4fb7bbce09a31a=0thocmt2erfgbcpmrts35lqgh1;
> > > > > > SideMenu=0; SearchLocation=49316; _gid=GA1.2.1268970541.1539790780;
> > > > Me=xyz;
> > > > > > _gat_UA-1302423-1=1
> > > > > > accept:
> > > > > >
> > > >
> > text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8
> > > > > > cache-control: max-age=0
> > > > > > user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6)
> > > > > > AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100
> > > > Safari/537.36
> > > > > > content-type: multipart/form-data;
> > > > > > boundary=----WebKitFormBoundaryCoCuOxmv7pZRNW9G
> > > > > > upgrade-insecure-requests: 1
> > > > > > referer: https://www.mydomain.com/path/file.php?args=args
> > > > > > origin: https://www.mydomain.com
> > > > > > content-length: 1033
> > > > > > host: www.mydomain.com
> > > > > > accept-language: en-US,en;q=0.9
> > > > > > ---S4x9aI9l---D--
> > > > > > ---S4x9aI9l---E--
> > > > > > <html>\x0d\x0a<head><title>403
> > Forbidden</title></head>\x0d\x0a<body
> > > > > > bgcolor="white">\x0d\x0a<center><h1>403
> > > > > >
> > > >
> > Forbidden</h1></center>\x0d\x0a<hr><center>nginx/1.15.3</center>\x0d\x0a</body>\x0d\x0a</html>\x0d\x0a<!--
> > > > > > a padding to disable MSIE and Chrome friendly error page
> > > > -->\x0d\x0a<!-- a
> > > > > > padding to disable MSIE and Chrome friendly error page
> > -->\x0d\x0a<!--
> > > > a
> > > > > > padding to disable MSIE and Chrome friendly error page
> > -->\x0d\x0a<!--
> > > > a
> > > > > > padding to disable MSIE and Chrome friendly error page
> > -->\x0d\x0a<!--
> > > > a
> > > > > > padding to disable MSIE and Chrome friendly error page
> > -->\x0d\x0a<!--
> > > > a
> > > > > > padding to disable MSIE and Chrome friendly error page -->\x0d\x0a
> > > > > > ---S4x9aI9l---F--
> > > > > > HTTP/2.0 403
> > > > > > Server: nginx/1.15.3
> > > > > > Date: Wed, 17 Oct 2018 15:41:19 GMT
> > > > > > Content-Length: 571
> > > > > > Content-Type: text/html
> > > > > > Connection: close
> > > > > > ---S4x9aI9l---H--
> > > > > > ModSecurity: Access denied with code 403 (phase 2). Matched
> > "Operator
> > > > `Ge'
> > > > > > with parameter `5' against variable `TX:ANOMALY_SCORE' (Value: `5'
> > )
> > > > [file
> > > > > >
> > > >
> > "/usr/local/owasp-modsecurity-crs-3.0.0/rules/REQUEST-949-BLOCKING-EVALUATION.conf"]
> > > > > > [line "36"] [id "949110"] [rev ""] [msg "Inbound Anomaly Score
> > Exceeded
> > > > > > (Total Score: 5)"] [data ""] [severity "2"] [ver ""] [maturity "0"]
> > > > > > [accuracy "0"] [tag "application-multi"] [tag "language-multi"]
> > [tag
> > > > > > "platform-multi"] [tag "attack-generic"] [hostname
> > "173.167.228.139"]
> > > > [uri
> > > > > > "/path/file.php"] [unique_id "153979087991.549389"] [ref ""]
> > > > > > ModSecurity: Warning. Matched "Operator `Ge' with parameter `5'
> > against
> > > > > > variable `TX:INBOUND_ANOMALY_SCORE' (Value: `5' ) [file
> > > > > >
> > > >
> > "/usr/local/owasp-modsecurity-crs-3.0.0/rules/RESPONSE-980-CORRELATION.conf"]
> > > > > > [line "61"] [id "980130"] [rev ""] [msg "Inbound Anomaly Score
> > Exceeded
> > > > > > (Total Inbound Score: 5 -
> > > > > > SQLI=0,XSS=5,RFI=0,LFI=0,RCE=0,PHPI=0,HTTP=0,SESS=0): XSS Filter -
> > > > Category
> > > > > > 5: Disallowed HTML Attributes"] [data ""] [severity "0"] [ver ""]
> > > > [maturity
> > > > > > "0"] [accuracy "0"] [tag "event-correlation"] [hostname
> > > > "173.167.228.139"]
> > > > > > [uri "/path/file.php"] [unique_id "153979087991.549389"] [ref ""]
> > > > > > ---S4x9aI9l---I--
> > > > > > ---S4x9aI9l---J--
> > > > > > ---S4x9aI9l---Z--
> > > > >
> > > > >
> > > > > I know what the issue is - the user is submitting a text field
> > containing
> > > > > HTML tags - but I'm not sure precisely which rule is being
> > triggered, so
> > > > I
> > > > > can't figure out how to write a custom rule that disables it for that
> > > > > particular argument. Any help in either determining which rule was
> > > > > triggered or ensuring the rule is logged would be much appreciated.
> > If
> > > > more
> > > > > information would be helpful, just ask, I'm happy to provide
> > whatever I
> > > > can.
> > > > >
> > > > > Thanks,
> > > > > Jonah
> > > >
> > > > > _______________________________________________
> > > > > Owasp-modsecurity-core-rule-set mailing list
> > > > > Owasp-modsecurity-core-rule-set at lists.owasp.org
> > > > >
> > https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
> > > >
> > > >
> >

From solasa.venkatesh at gmail.com  Wed Oct 24 10:55:48 2018
From: solasa.venkatesh at gmail.com (venkatesh solasa)
Date: Wed, 24 Oct 2018 16:25:48 +0530
Subject: [Owasp-modsecurity-core-rule-set] Secrule not capturing alert
Message-ID: <CAJzK1=WgVVteWMpD6PX2yTpYxBe4yg28bc2V3g5MDXiypfJ1fg@mail.gmail.com>

Hi,
We have a secrule like this :
'SecRule REQUEST_FILENAME|ARGS_NAMES|ARGS|XML:/*
"(fromcharcode|alert|eval)\s*\(" \
 "phase:2,rev:'2.0.10',id:'973307',capture,t:none,t:htmlEntityDecode,t:jsDecode,t:lowercase,pass,nolog,auditlog,msg:'XSS
Attack
Detected',logdata:'%{TX.0}',setvar:'tx.msg=%{rule.msg}',setvar:tx.xss_score=+%{tx.critical_anomaly_score},setvar:tx.anomaly_score=+%{tx.critical_anomaly_score},setvar:tx.%{
rule.id}-WEB_ATTACK/XSS-%{matched_var_name}=%{tx.0}"'

When user supplies url like this :

 <hostname>?param1=test%27,alert(document.cookie),%27test&param2

Its not being blocked. Please suggest

-- 
Thanks,
Venki
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20181024/8ab1c175/attachment.html>

From paolo.luiseit at gmail.com  Wed Oct 31 21:38:29 2018
From: paolo.luiseit at gmail.com (Paolo Luise)
Date: Wed, 31 Oct 2018 22:38:29 +0100
Subject: [Owasp-modsecurity-core-rule-set] Secrule not capturing alert
In-Reply-To: <mailman.11.1540382406.2002.owasp-modsecurity-core-rule-set@lists.owasp.org>
References: <mailman.11.1540382406.2002.owasp-modsecurity-core-rule-set@lists.owasp.org>
Message-ID: <CAPF6YCnmciugXCQZChY06En5JUcCYB18T61bYp2FN2R28jLDZw@mail.gmail.com>

Hi Venki,
first of all it should be helpful to know about the version of modsecurity,
OS and web server you are using for your tests. Then, I would suggest you
to use OWASP CRS v3, that should block you request out-of-the-shelf with at
least a couple of rules already in paranoia level 1.

Assuming that you are using modsec version 2 not 3, if you can't adopt CRS,
please try enabling the K section in your audit log:
"K: This part contains a full list of every rule that matched (one per
line) in the order they were matched. The rules are fully qualified and
will thus show inherited actions and default operators." Rif.
https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual-%28v2.x%29#SecAuditLogParts

Also, if this won't help you, the final and always helpful action to do is
tracing modsec activities using its debug feature with directives
SecDebugLog and SecDebugLogLevel (Rif.
https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual-%28v2.x%29#SecDebugLog).
You can enable it also on specific requests using "ctl" action in a
matching rule (Rif.
https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual-%28v2.x%29#ctl
).
Once you have debug enabled and configured, repeat your curl request and
locate your rule number in the debug log; there you will find all you need
for understanding what's going wrong with your rule.

Just for information, with your rule and passing the request you pointed,
in main environment it is blocked.

Regards
Paolo


Hi,
> We have a secrule like this :
> 'SecRule REQUEST_FILENAME|ARGS_NAMES|ARGS|XML:/*
> "(fromcharcode|alert|eval)\s*\(" \
>
>  "phase:2,rev:'2.0.10',id:'973307',capture,t:none,t:htmlEntityDecode,t:jsDecode,t:lowercase,pass,nolog,auditlog,msg:'XSS
> Attack
>
> Detected',logdata:'%{TX.0}',setvar:'tx.msg=%{rule.msg}',setvar:tx.xss_score=+%{tx.critical_anomaly_score},setvar:tx.anomaly_score=+%{tx.critical_anomaly_score},setvar:tx.%{
> rule.id}-WEB_ATTACK/XSS-%{matched_var_name}=%{tx.0}"'
>
> When user supplies url like this :
>
>  <hostname>?param1=test%27,alert(document.cookie),%27test&param2
>
> Its not being blocked. Please suggest
>
> --
> Thanks,
> Venki
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20181031/b43867b1/attachment.html>

