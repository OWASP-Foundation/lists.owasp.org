From cfarinella at appropriatesolutions.com  Tue Jun  2 14:37:37 2015
From: cfarinella at appropriatesolutions.com (Charles Farinella)
Date: Tue, 2 Jun 2015 10:37:37 -0400
Subject: [Owasp-modsecurity-core-rule-set] How to prevent request body
	logging?
Message-ID: <CAAyjSBRD2wXnFFtf9d4T=F7xJBdgcgPsu77GOXh2G81KWWkqxQ@mail.gmail.com>

We are seeing request bodies logged to our nginx logs.  mod_security
documentation says that "Messages at levels 1-3 are always copied to the
Apache error log."  Does anyone know how we can prevent this behavior?

-- 
Charles Farinella
Systems Administrator
Appropriate Solutions, Inc.
603-924-6079
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20150602/3c5e43e0/attachment.html>

From CSanders at trustwave.com  Tue Jun  2 15:25:00 2015
From: CSanders at trustwave.com (Chaim Sanders)
Date: Tue, 2 Jun 2015 15:25:00 +0000
Subject: [Owasp-modsecurity-core-rule-set] How to prevent request
	body	logging?
In-Reply-To: <CAAyjSBRD2wXnFFtf9d4T=F7xJBdgcgPsu77GOXh2G81KWWkqxQ@mail.gmail.com>
References: <CAAyjSBRD2wXnFFtf9d4T=F7xJBdgcgPsu77GOXh2G81KWWkqxQ@mail.gmail.com>
Message-ID: <F684BDD553BAF1479F5380EDAD3BE3711EB3DB1A@SKYMB1.trustwave.com>

Hey Charles,
You can use the nolog action to prevent ModSecurity from adding entries. For instance:
SecRule ARGS:test "Test" "block,status:403,nolog,id:1"


Chaim Sanders
Security Researcher, SpiderLabs

Trustwave | SMART SECURITY ON DEMAND
www.trustwave.com<http://www.trustwave.com/>

From: owasp-modsecurity-core-rule-set-bounces at lists.owasp.org [mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org] On Behalf Of Charles Farinella
Sent: Tuesday, June 2, 2015 10:38 AM
To: owasp-modsecurity-core-rule-set at lists.owasp.org
Subject: [Owasp-modsecurity-core-rule-set] How to prevent request body logging?

We are seeing request bodies logged to our nginx logs.  mod_security documentation says that "Messages at levels 1-3 are always copied to the Apache error log."  Does anyone know how we can prevent this behavior?

--
Charles Farinella
Systems Administrator
Appropriate Solutions, Inc.
603-924-6079

________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20150602/42a78ac6/attachment.html>

From jroback at gmail.com  Tue Jun  2 20:08:35 2015
From: jroback at gmail.com (Joshua Roback)
Date: Tue, 02 Jun 2015 20:08:35 +0000
Subject: [Owasp-modsecurity-core-rule-set] How to prevent request body
	logging?
In-Reply-To: <F684BDD553BAF1479F5380EDAD3BE3711EB3DB1A@SKYMB1.trustwave.com>
References: <CAAyjSBRD2wXnFFtf9d4T=F7xJBdgcgPsu77GOXh2G81KWWkqxQ@mail.gmail.com>
	<F684BDD553BAF1479F5380EDAD3BE3711EB3DB1A@SKYMB1.trustwave.com>
Message-ID: <CAExQ=_dX5arEL-b5wEc9d2dbU0DvrDc7ePfk4jUEdztDkJN58A@mail.gmail.com>

Inside your base modsecurity.conf file, I believe the following directive
will allow you to choose which pars are logged based on the assigned letter
values.
Example below will remove REQUEST and RESPONSE body:
SecAuditLogParts ABIFEHZ



On Tue, Jun 2, 2015 at 11:39 AM Chaim Sanders <CSanders at trustwave.com>
wrote:

>  Hey Charles,
>
> You can use the nolog action to prevent ModSecurity from adding entries.
> For instance:
>
> SecRule ARGS:test "Test" "block,status:403,nolog,id:1"
>
>
>
>
>
> *Chaim Sanders    *
>
> Security Researcher, SpiderLabs
>
>
>
> *Trustwave* | SMART SECURITY ON DEMAND
>
> www.trustwave.com
>
>
>
> *From:* owasp-modsecurity-core-rule-set-bounces at lists.owasp.org [mailto:
> owasp-modsecurity-core-rule-set-bounces at lists.owasp.org] *On Behalf Of *Charles
> Farinella
> *Sent:* Tuesday, June 2, 2015 10:38 AM
> *To:* owasp-modsecurity-core-rule-set at lists.owasp.org
> *Subject:* [Owasp-modsecurity-core-rule-set] How to prevent request body
> logging?
>
>
>
> We are seeing request bodies logged to our nginx logs.  mod_security
> documentation says that "Messages at levels 1-3 are always copied to the
> Apache error log."  Does anyone know how we can prevent this behavior?
>
> --
>
> Charles Farinella
>
> Systems Administrator
>
> Appropriate Solutions, Inc.
>
> 603-924-6079
>
> ------------------------------
>
> This transmission may contain information that is privileged,
> confidential, and/or exempt from disclosure under applicable law. If you
> are not the intended recipient, you are hereby notified that any
> disclosure, copying, distribution, or use of the information contained
> herein (including any reliance thereon) is strictly prohibited. If you
> received this transmission in error, please immediately contact the sender
> and destroy the material in its entirety, whether in electronic or hard
> copy format.
>  _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20150602/1e923059/attachment-0001.html>

From cfarinella at appropriatesolutions.com  Wed Jun  3 14:22:10 2015
From: cfarinella at appropriatesolutions.com (Charles Farinella)
Date: Wed, 3 Jun 2015 10:22:10 -0400
Subject: [Owasp-modsecurity-core-rule-set] How to prevent request body
	logging?
In-Reply-To: <CAExQ=_dX5arEL-b5wEc9d2dbU0DvrDc7ePfk4jUEdztDkJN58A@mail.gmail.com>
References: <CAAyjSBRD2wXnFFtf9d4T=F7xJBdgcgPsu77GOXh2G81KWWkqxQ@mail.gmail.com>
	<F684BDD553BAF1479F5380EDAD3BE3711EB3DB1A@SKYMB1.trustwave.com>
	<CAExQ=_dX5arEL-b5wEc9d2dbU0DvrDc7ePfk4jUEdztDkJN58A@mail.gmail.com>
Message-ID: <CAAyjSBQdchMa0OmHA_-Wtf2Braye=vLo=tBYps7Mx-sdnRJUCA@mail.gmail.com>

Thanks for the suggestions, but I don't think either of these will solve
our problem permanently.

The 'nolog' option is rule or status code dependent and we want to make
sure that *no* request bodies are ever printed to the Nginx log.
The 'SecAuditLogParts' option seems to only affect what gets sent to the
audit logs, we've tried this.  Mod_security docs say that "Messages at
levels 1-3 are *always* copied to the Apache error log."   We are assuming
that this applies equally to Nginx logs, and this is what we need to
address.

We have clients sending credit card numbers in request bodies and they are
triggering mod_security SQL injection rules which then write these bodies
to the Nginx logs exposing the CC number.

We know that we can disable these specific rules, but are afraid that at
some future time, or after an upgrade, these or some other rules will be
triggered again exposing sensitive information.

Does OWASP have a "best practices" procedure for protecting this kind of
data in a PCI environment?
How can we prevent *all* level 1-3 messages from being sent to the Nginx
log?

Thanks again for your help.

--charlie

On Tue, Jun 2, 2015 at 4:08 PM, Joshua Roback <jroback at gmail.com> wrote:

> Inside your base modsecurity.conf file, I believe the following directive
> will allow you to choose which pars are logged based on the assigned letter
> values.
> Example below will remove REQUEST and RESPONSE body:
> SecAuditLogParts ABIFEHZ
>
>
>
> On Tue, Jun 2, 2015 at 11:39 AM Chaim Sanders <CSanders at trustwave.com>
> wrote:
>
>>  Hey Charles,
>>
>> You can use the nolog action to prevent ModSecurity from adding entries.
>> For instance:
>>
>> SecRule ARGS:test "Test" "block,status:403,nolog,id:1"
>>
>>
>>
>>
>>
>> *Chaim Sanders    *
>>
>> Security Researcher, SpiderLabs
>>
>>
>>
>> *Trustwave* | SMART SECURITY ON DEMAND
>>
>> www.trustwave.com
>>
>>
>>
>> *From:* owasp-modsecurity-core-rule-set-bounces at lists.owasp.org [mailto:
>> owasp-modsecurity-core-rule-set-bounces at lists.owasp.org] *On Behalf Of *Charles
>> Farinella
>> *Sent:* Tuesday, June 2, 2015 10:38 AM
>> *To:* owasp-modsecurity-core-rule-set at lists.owasp.org
>> *Subject:* [Owasp-modsecurity-core-rule-set] How to prevent request body
>> logging?
>>
>>
>>
>> We are seeing request bodies logged to our nginx logs.  mod_security
>> documentation says that "Messages at levels 1-3 are always copied to the
>> Apache error log."  Does anyone know how we can prevent this behavior?
>>
>> --
>>
>> Charles Farinella
>>
>> Systems Administrator
>>
>> Appropriate Solutions, Inc.
>>
>> 603-924-6079
>>
>> ------------------------------
>>
>> This transmission may contain information that is privileged,
>> confidential, and/or exempt from disclosure under applicable law. If you
>> are not the intended recipient, you are hereby notified that any
>> disclosure, copying, distribution, or use of the information contained
>> herein (including any reliance thereon) is strictly prohibited. If you
>> received this transmission in error, please immediately contact the sender
>> and destroy the material in its entirety, whether in electronic or hard
>> copy format.
>>  _______________________________________________
>> Owasp-modsecurity-core-rule-set mailing list
>> Owasp-modsecurity-core-rule-set at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
>>
>


-- 
Charles Farinella
Systems Administrator
Appropriate Solutions, Inc.
603-924-6079
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20150603/715cefcc/attachment.html>

From sthayyilekan at BarclaycardUS.com  Wed Jun  3 14:34:40 2015
From: sthayyilekan at BarclaycardUS.com (Thayyilekandy, Subin : Barclaycard US)
Date: Wed, 3 Jun 2015 14:34:40 +0000
Subject: [Owasp-modsecurity-core-rule-set] How to prevent request body
 logging?
In-Reply-To: <CAAyjSBQdchMa0OmHA_-Wtf2Braye=vLo=tBYps7Mx-sdnRJUCA@mail.gmail.com>
References: <CAAyjSBRD2wXnFFtf9d4T=F7xJBdgcgPsu77GOXh2G81KWWkqxQ@mail.gmail.com>
	<F684BDD553BAF1479F5380EDAD3BE3711EB3DB1A@SKYMB1.trustwave.com>
	<CAExQ=_dX5arEL-b5wEc9d2dbU0DvrDc7ePfk4jUEdztDkJN58A@mail.gmail.com>
	<CAAyjSBQdchMa0OmHA_-Wtf2Braye=vLo=tBYps7Mx-sdnRJUCA@mail.gmail.com>
Message-ID: <C310131DD0004743B2508B65C77B663150A08AA0@PMEXGMB04.juniper.com>

Did you try sanitizeArgs in your custom rules After  file  ? you can also specify pattern here I believe otherwise you will have to keep adding new/updated fields here that can possibly have sensitive data.

SecAction "phase:5,id:200,nolog,pass,\
  sanitiseArg:password,\
  sanitiseArg:confirmPassword,\



Thanks

Subin

From: owasp-modsecurity-core-rule-set-bounces at lists.owasp.org [mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org] On Behalf Of Charles Farinella
Sent: Wednesday, June 03, 2015 10:22 AM
To: Joshua Roback
Cc: owasp-modsecurity-core-rule-set at lists.owasp.org
Subject: Re: [Owasp-modsecurity-core-rule-set] How to prevent request body logging?

Thanks for the suggestions, but I don't think either of these will solve our problem permanently.
The 'nolog' option is rule or status code dependent and we want to make sure that *no* request bodies are ever printed to the Nginx log.
The 'SecAuditLogParts' option seems to only affect what gets sent to the audit logs, we've tried this.  Mod_security docs say that "Messages at levels 1-3 are *always* copied to the Apache error log."   We are assuming that this applies equally to Nginx logs, and this is what we need to address.
We have clients sending credit card numbers in request bodies and they are triggering mod_security SQL injection rules which then write these bodies to the Nginx logs exposing the CC number.
We know that we can disable these specific rules, but are afraid that at some future time, or after an upgrade, these or some other rules will be triggered again exposing sensitive information.
Does OWASP have a "best practices" procedure for protecting this kind of data in a PCI environment?
How can we prevent *all* level 1-3 messages from being sent to the Nginx log?

Thanks again for your help.
--charlie

On Tue, Jun 2, 2015 at 4:08 PM, Joshua Roback <jroback at gmail.com<mailto:jroback at gmail.com>> wrote:
Inside your base modsecurity.conf file, I believe the following directive will allow you to choose which pars are logged based on the assigned letter values.
Example below will remove REQUEST and RESPONSE body:
SecAuditLogParts ABIFEHZ


On Tue, Jun 2, 2015 at 11:39 AM Chaim Sanders <CSanders at trustwave.com<mailto:CSanders at trustwave.com>> wrote:
Hey Charles,
You can use the nolog action to prevent ModSecurity from adding entries. For instance:
SecRule ARGS:test "Test" "block,status:403,nolog,id:1"


Chaim Sanders
Security Researcher, SpiderLabs

Trustwave | SMART SECURITY ON DEMAND
www.trustwave.com<http://www.trustwave.com/>

From: owasp-modsecurity-core-rule-set-bounces at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org> [mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org>] On Behalf Of Charles Farinella
Sent: Tuesday, June 2, 2015 10:38 AM
To: owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>
Subject: [Owasp-modsecurity-core-rule-set] How to prevent request body logging?

We are seeing request bodies logged to our nginx logs.  mod_security documentation says that "Messages at levels 1-3 are always copied to the Apache error log."  Does anyone know how we can prevent this behavior?

--
Charles Farinella
Systems Administrator
Appropriate Solutions, Inc.
603-924-6079<tel:603-924-6079>

________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
_______________________________________________
Owasp-modsecurity-core-rule-set mailing list
Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org>
https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set



--
Charles Farinella
Systems Administrator
Appropriate Solutions, Inc.
603-924-6079

Barclaycard

www.barclaycardus.com<http://www.barclaycardus.com>

This email and any files transmitted with it may contain confidential and/or proprietary information. It is intended solely for the use of the individual or entity who is the intended recipient. Unauthorized use of this information is prohibited. If you have received this in error, please contact the sender by replying to this message and delete this material from any system it may be on.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20150603/e65f867f/attachment-0001.html>

From think.sabin at gmail.com  Wed Jun  3 14:59:14 2015
From: think.sabin at gmail.com (Sabin Ranjit)
Date: Wed, 3 Jun 2015 20:44:14 +0545
Subject: [Owasp-modsecurity-core-rule-set] How to prevent request body
	logging?
In-Reply-To: <C310131DD0004743B2508B65C77B663150A08AA0@PMEXGMB04.juniper.com>
References: <CAAyjSBRD2wXnFFtf9d4T=F7xJBdgcgPsu77GOXh2G81KWWkqxQ@mail.gmail.com>
	<F684BDD553BAF1479F5380EDAD3BE3711EB3DB1A@SKYMB1.trustwave.com>
	<CAExQ=_dX5arEL-b5wEc9d2dbU0DvrDc7ePfk4jUEdztDkJN58A@mail.gmail.com>
	<CAAyjSBQdchMa0OmHA_-Wtf2Braye=vLo=tBYps7Mx-sdnRJUCA@mail.gmail.com>
	<C310131DD0004743B2508B65C77B663150A08AA0@PMEXGMB04.juniper.com>
Message-ID: <CAE9Kp-a6N6a8hBxnAbpjOMGOqyPKfFmFdrURB8Y1SEjpMdhVtw@mail.gmail.com>

"@verifyCC" is provided by modsecurity for detecting credit card pattern.

SecRule ARGS @verifyCC phase:5,nolog,pass,\
  sanitiseMatched

this might addressed your issue.

http://thinksabin.blogspot.com/2014/01/hiding-sensitive-data-in-apache.html

Regards,


On Wed, Jun 3, 2015 at 8:19 PM, Thayyilekandy, Subin : Barclaycard US <
sthayyilekan at barclaycardus.com> wrote:

>  Did you try sanitizeArgs in your custom rules After  file  ? you can aso
> specify pattern here I believe otherwise you will have to keep adding
> new/updated fields here that can possibly have sensitive data.
>
>
>
> SecAction "phase:5,id:200,nolog,pass,\
>
>   sanitiseArg:password,\
>
>   sanitiseArg:confirmPassword,\
>
>
>
>
>
>
>
> Thanks
>
>
>
> *Subin *
>
>
>
> *From:* owasp-modsecurity-core-rule-set-bounces at lists.owasp.org [mailto:
> owasp-modsecurity-core-rule-set-bounces at lists.owasp.org] *On Behalf Of *Charles
> Farinella
> *Sent:* Wednesday, June 03, 2015 10:22 AM
> *To:* Joshua Roback
> *Cc:* owasp-modsecurity-core-rule-set at lists.owasp.org
> *Subject:* Re: [Owasp-modsecurity-core-rule-set] How to prevent request
> body logging?
>
>
>
> Thanks for the suggestions, but I don't think either of these will solve
> our problem permanently.
>
> The 'nolog' option is rule or status code dependent and we want to make
> sure that *no* request bodies are ever printed to the Nginx log.
>
> The 'SecAuditLogParts' option seems to only affect what gets sent to the
> audit logs, we've tried this.  Mod_security docs say that "Messages at
> levels 1-3 are *always* copied to the Apache error log."   We are assuming
> that this applies equally to Nginx logs, and this is what we need to
> address.
>
> We have clients sending credit card numbers in request bodies and they are
> triggering mod_security SQL injection rules which then write these bodies
> to the Nginx logs exposing the CC number.
>
> We know that we can disable these specific rules, but are afraid that at
> some future time, or after an upgrade, these or some other rules will be
> triggered again exposing sensitive information.
>
> Does OWASP have a "best practices" procedure for protecting this kind of
> data in a PCI environment?
>
> How can we prevent *all* level 1-3 messages from being sent to the Nginx
> log?
>
>
>
> Thanks again for your help.
>
> --charlie
>
>
>
> On Tue, Jun 2, 2015 at 4:08 PM, Joshua Roback <jroback at gmail.com> wrote:
>
> Inside your base modsecurity.conf file, I believe the following directive
> will allow you to choose which pars are logged based on the assigned letter
> values.
> Example below will remove REQUEST and RESPONSE body:
> SecAuditLogParts ABIFEHZ
>
>
>
> On Tue, Jun 2, 2015 at 11:39 AM Chaim Sanders <CSanders at trustwave.com>
> wrote:
>
>   Hey Charles,
>
> You can use the nolog action to prevent ModSecurity from adding entries.
> For instance:
>
> SecRule ARGS:test "Test" "block,status:403,nolog,id:1"
>
>
>
>
>
> *Chaim Sanders    *
>
> Security Researcher, SpiderLabs
>
>
>
> *Trustwave* | SMART SECURITY ON DEMAND
>
> www.trustwave.com
>
>
>
> *From:* owasp-modsecurity-core-rule-set-bounces at lists.owasp.org [mailto:
> owasp-modsecurity-core-rule-set-bounces at lists.owasp.org] *On Behalf Of *Charles
> Farinella
> *Sent:* Tuesday, June 2, 2015 10:38 AM
> *To:* owasp-modsecurity-core-rule-set at lists.owasp.org
> *Subject:* [Owasp-modsecurity-core-rule-set] How to prevent request body
> logging?
>
>
>
> We are seeing request bodies logged to our nginx logs.  mod_security
> documentation says that "Messages at levels 1-3 are always copied to the
> Apache error log."  Does anyone know how we can prevent this behavior?
>
> --
>
> Charles Farinella
>
> Systems Administrator
>
> Appropriate Solutions, Inc.
>
> 603-924-6079
>
>
>  ------------------------------
>
>
> This transmission may contain information that is privileged,
> confidential, and/or exempt from disclosure under applicable law. If you
> are not the intended recipient, you are hereby notified that any
> disclosure, copying, distribution, or use of the information contained
> herein (including any reliance thereon) is strictly prohibited. If you
> received this transmission in error, please immediately contact the sender
> and destroy the material in its entirety, whether in electronic or hard
> copy format.
>
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
>
>
>
>
> --
>
> Charles Farinella
>
> Systems Administrator
>
> Appropriate Solutions, Inc.
>
> 603-924-6079
>
> Barclaycard
>
> www.barclaycardus.com
>
> This email and any files transmitted with it may contain confidential
> and/or proprietary information. It is intended solely for the use of the
> individual or entity who is the intended recipient. Unauthorized use of
> this information is prohibited. If you have received this in error, please
> contact the sender by replying to this message and delete this material
> from any system it may be on.
>
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20150603/7b631aab/attachment.html>

From owasp-crs at kyoshiro.org  Wed Jun  3 15:09:43 2015
From: owasp-crs at kyoshiro.org (=?windows-1252?Q?Lo=EFc_Gomez?=)
Date: Wed, 03 Jun 2015 17:09:43 +0200
Subject: [Owasp-modsecurity-core-rule-set] How to prevent request body
 logging?
In-Reply-To: <CAAyjSBQdchMa0OmHA_-Wtf2Braye=vLo=tBYps7Mx-sdnRJUCA@mail.gmail.com>
References: <CAAyjSBRD2wXnFFtf9d4T=F7xJBdgcgPsu77GOXh2G81KWWkqxQ@mail.gmail.com>	<F684BDD553BAF1479F5380EDAD3BE3711EB3DB1A@SKYMB1.trustwave.com>	<CAExQ=_dX5arEL-b5wEc9d2dbU0DvrDc7ePfk4jUEdztDkJN58A@mail.gmail.com>
	<CAAyjSBQdchMa0OmHA_-Wtf2Braye=vLo=tBYps7Mx-sdnRJUCA@mail.gmail.com>
Message-ID: <556F18B7.4030502@kyoshiro.org>

Le 03/06/2015 16:22, Charles Farinella a ?crit :
> Thanks for the suggestions, but I don't think either of these will
> solve our problem permanently.
>
> The 'nolog' option is rule or status code dependent and we want to
> make sure that *no* request bodies are ever printed to the Nginx log.
> The 'SecAuditLogParts' option seems to only affect what gets sent to
> the audit logs, we've tried this.  Mod_security docs say that
> "Messages at levels 1-3 are *always* copied to the Apache error
> log."   We are assuming that this applies equally to Nginx logs, and
> this is what we need to address.
>
> We have clients sending credit card numbers in request bodies and they
> are triggering mod_security SQL injection rules which then write these
> bodies to the Nginx logs exposing the CC number.
>
> We know that we can disable these specific rules, but are afraid that
> at some future time, or after an upgrade, these or some other rules
> will be triggered again exposing sensitive information.
>
> Does OWASP have a "best practices" procedure for protecting this kind
> of data in a PCI environment?
> How can we prevent *all* level 1-3 messages from being sent to the
> Nginx log?
>
> Thanks again for your help.
>
> --charlie
>

Hello Charlie,

We had the exact same issue at my workplace, and I found a semi solution
only : disable logging of rules, and add a new rule to log only final
result of anomaly score with last matched rule ID (see attached
15-custom-config.conf).

Now remains the audit rules adding specifically audit flags we don't
want, so I made a script and run it against my rules directory to
generate an additionnal rule file included AT THE END (99-xxx). It
generates something like that (script is attached):

    SecRuleUpdateActionById 950120 ctl:auditLogParts=-E,chain
    [...]
    SecRuleUpdateActionById 973337 nolog
    [...]
    SecRuleUpdateActionById 981205 "logdata:'Matched rules:
    %{tx.counter}; Rule list: %{matched_rule-1} %{matched_rule-2}
    %{matched_rule-3} %{matched_rule-4} %{matched_rule-5}
    %{matched_rule-6} %{matched_rule-7} %{matched_rule-8}
    %{matched_rule-9} %{matched_rule-10} %{matched_rule-11}
    %{matched_rule-12} %{matched_rule-13} %{matched_rule-14}
    %{matched_rule-15} %{matched_rule-16} %{matched_rule-17}
    %{matched_rule-18} %{matched_rule-19} %{matched_rule-20}',log,auditlog"

On some rules, the keyword "chain" is specified. In fact current
modsecurity needs us to specify again this keyword when we update a
chained action.
The last parts here are an attempt to fetch the rule IDs that matched
since they don't get logged. Although it doesn't work, but keep it so it
replaces the logdata of these rules, which can contain sensitive
information. It was coupled with a rule included before all
(20-track-ids.conf) containing only this (currently disabled) :
#SecRule TX:/^\d/ "."
"phase:2,id:'45',t:none,nolog,noauditlog,pass,setvar:tx.counter=+1,setvar:tx.matched_rule-%{tx.counter}=%{matched_var_name}"
I'm interested by feedback if you manage to log a list of matched rule ids !

Since we don't get that much information of matched rules, except when
the request get blocked, I added some rules which kinda copies the
blocking rule (without the block part of course) from
base_rules/modsecurity_crs_49_inbound_blocking.conf when the anomaly
score is not exceeded. See attached 99-log-low-anomalies.conf.
As you can see in the 99- file, I also had to alter the last matched
data variable when SecRule was matching a parameter containing sensitive
data. We use JSON parsing so we can use that, but XML parsing does not
provide parameter name, so I hope you're in REST API and not SOAP.

The result is : we always get a summary of what happened when score is
not 0, with the ID of last matched rule, but not all the IDs.

Maybe modsecurity / OWASP team could make a PCI compliant version of the
rules / software, because it is indeed hard to work with as it is when
you need to avoid sensitive data being logged.

I hope I didn't forget anything, and it helps you on your modsecurity
journey ^^

--
Lo?c Gomez

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20150603/273b6cb2/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 15-custom-config.conf.gz
Type: application/gzip
Size: 767 bytes
Desc: not available
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20150603/273b6cb2/attachment-0003.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 99-log-low-anomalies.conf.gz
Type: application/gzip
Size: 524 bytes
Desc: not available
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20150603/273b6cb2/attachment-0004.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: modsecurity-no-bodies.sh.gz
Type: application/gzip
Size: 653 bytes
Desc: not available
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20150603/273b6cb2/attachment-0005.bin>

From drew.kay at gmail.com  Wed Jun  3 15:12:15 2015
From: drew.kay at gmail.com (Drew)
Date: Wed, 3 Jun 2015 08:12:15 -0700
Subject: [Owasp-modsecurity-core-rule-set] Searchable ruleset list
Message-ID: <CACJz6QshGubPPOAAvxmc0tzZmeaZDQeJrpnTKpd2---tNkcZag@mail.gmail.com>

Morning,

Probably been answered before but my google-foo seems to be off today.

Is there somewhere that I can find a list, preferably searchable, of
modsecurity rule numbers and the specific issue they address? My
webhost uses modsecurity and they advised me that several errors I
experienced with a couple php scripts I run (among them mediawiki) are
tied to a couple of rules but couldn't give me info aside from the
modsec rule# I'd triggered
.

-- 
Drew

"Nothing in life is to be feared. It is only to be understood."
--Marie Curie

"This started out as a hobby and spun horribly out of control."
-Unknown

From iridium1191 at gmail.com  Thu Jun 11 13:07:51 2015
From: iridium1191 at gmail.com (iridium1191)
Date: Thu, 11 Jun 2015 23:07:51 +1000
Subject: [Owasp-modsecurity-core-rule-set] Mod-security blocking
	Microsoft-Server-ActiveSync
Message-ID: <55798827.8030303@gmail.com>

Hi forum,

Relatively new to mod-security but I've got it running on a Ubuntu 
14.04, Apache 2.4.7 reverse proxy, mainly serving Exchange 2003 Outlook 
Web Access (OWA).

Everything is working fine except for Active-Sync. The specific error I 
receive is:

[Thu Jun 11 22:22:40.491232 2015] [:error] [pid 28480:tid 
139919860156160] [client 22.79.19.67] ModSecurity: Access denied with 
code 403 (phase 1). Match of "rx ^%{tx.allowed_request_content_type}$" 
against "TX:0" required. [file 
"/usr/share/modsecurity-crs/activated_rules/modsecurity_crs_30_http_policy.conf"] 
[line "64"] [id "960010"] [rev "2"] [msg "Request content type is not 
allowed by policy"] [data "application/vnd.ms-sync.wbxml"] [severity 
"CRITICAL"] [ver "OWASP_CRS/2.2.9"] [maturity "9"] [accuracy "9"] [tag 
"OWASP_CRS/POLICY/ENCODING_NOT_ALLOWED"] [tag "WASCTC/WASC-20"] [tag 
"OWASP_TOP_10/A1"] [tag "OWASP_AppSensor/EE2"] [tag "PCI/12.1"] 
[hostname "myserver.com.au"] [uri "/Microsoft-Server-ActiveSync"] 
[unique_id "VXl9kH8AAQEAAG9A8nQAAABB"]

The virtual host file for ActiveSync contains:

<Location /Microsoft-Server-ActiveSync>
#        SecRuleRemoveById 960010
         SecRuleEngine Off
         ProxyPass https://eemail/Microsoft-Server-ActiveSync
         ProxyPassReverse https://eemail/Microsoft-Server-ActiveSync
</Location>

Both "SecRuleRemoveById 960010" and "SecRuleEngine Off" for 
/Microsoft-Server-ActiveSync fail to prevent the error and allow ActiveSync.

 From this post 
https://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/2010-November/000546.html 
I am able to permit ActiveSync by adding the 
"application/vnd.ms-sync.wbxml" content type to line 279 of the 
/usr/share/modsecurity-crs/activated_rules/modescurity_crs_10_setup.conf 
file like so:

SecAction \
    "id:'900012', \
     phase:1, \
     t:none, \
     setvar:'tx.allowed_methods=GET HEAD POST OPTIONS', \
setvar:'tx.allowed_request_content_type=application/x-www-form-urlencoded|multipart/form-data|text/xml|application/xml|application/x-amf|application/json|_*application/vnd.ms-sync.wbxml*_', 
\
     setvar:'tx.allowed_http_versions=HTTP/0.9 HTTP/1.0 HTTP/1.1', \
    setvar:'tx.restricted_extensions=.asa/ .asax/ .ascx/ .axd/ .backup/ 
.bak/ .bat/ .cdx/ .cer/ .cfg/ .cmd/ .com/ .config/ .conf/ .cs/ .csproj/ 
.csr/ .dat/ .db/ .dbf/ .dll/ .dos/ .htr/ .    htw/ .ida/ .idc/ .idq/ 
.inc/ .ini/ .key/ .licx/ .lnk/ .log/ .mdb/ .old/ .pass/ .pdb/ .pol/ 
.printer/ .pwd/ .resources/ .resx/ .sql/ .sys/ .vb/ .vbs/ .vbproj/ 
.vsdisco/ .webinfo/ .xsd/     .xsx/', \
    setvar:'tx.restricted_headers=/Proxy-Connection/ /Lock-Token/ 
/Content-Range/ /Translate/ /via/ /if/', \
    nolog, \
    pass"/
/
However, if I upgrade the core rules (which I'm intending to automate 
with a script) I'll have to remember to re-append the content type to 
the file. So my question is where and how can I include the new content 
type (eg to /etc/mod-security/mod-security.conf or the virtual host 
config) so that it won't be over-written if a new version of the core 
rules is installed in /usr/share/modsecurity-crs?

Any help or alternative suggestions for allowing ActiveSync will be much 
appreciated.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20150611/5ddf37ce/attachment.html>

From jroback at gmail.com  Fri Jun 12 13:16:25 2015
From: jroback at gmail.com (Joshua Roback)
Date: Fri, 12 Jun 2015 13:16:25 +0000
Subject: [Owasp-modsecurity-core-rule-set] Ignore URI From Scanning
Message-ID: <CAExQ=_cY-GKzV2rWCD2fRgGUUSXgQJ_L+=FeCykvwcnEvBpJdw@mail.gmail.com>

Hello Group,

I'm come across an issue in which I'll be using ModSecurity to protect a
site with an encrypted URI.  For the sake of reducing false positives, what
would be the most effective way to omit the URI from scanning but continue
to scan other HTTP header fields and all payloads?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20150612/634d07de/attachment.html>

From CSanders at trustwave.com  Fri Jun 12 13:44:40 2015
From: CSanders at trustwave.com (Chaim Sanders)
Date: Fri, 12 Jun 2015 13:44:40 +0000
Subject: [Owasp-modsecurity-core-rule-set] Ignore URI From Scanning
In-Reply-To: <CAExQ=_cY-GKzV2rWCD2fRgGUUSXgQJ_L+=FeCykvwcnEvBpJdw@mail.gmail.com>
References: <CAExQ=_cY-GKzV2rWCD2fRgGUUSXgQJ_L+=FeCykvwcnEvBpJdw@mail.gmail.com>
Message-ID: <F684BDD553BAF1479F5380EDAD3BE3711EB41D3C@SKYMB1.trustwave.com>

You could use the ?ctl? action to disable the engine after a certain rule triggers, thereby skipping the rest of the checks. You could also place this in a virtual host area if needed.

SecRule REQUEST_URI "@contains /encryptedbit/" "phase:1,t:none,pass, nolog,ctl:ruleEngine=Off?

Chaim Sanders
Security Researcher, SpiderLabs

Trustwave | SMART SECURITY ON DEMAND
www.trustwave.com<http://www.trustwave.com/>

From: owasp-modsecurity-core-rule-set-bounces at lists.owasp.org [mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org] On Behalf Of Joshua Roback
Sent: Friday, June 12, 2015 9:16 AM
To: owasp-modsecurity-core-rule-set at lists.owasp.org
Subject: [Owasp-modsecurity-core-rule-set] Ignore URI From Scanning

Hello Group,
I'm come across an issue in which I'll be using ModSecurity to protect a site with an encrypted URI.  For the sake of reducing false positives, what would be the most effective way to omit the URI from scanning but continue to scan other HTTP header fields and all payloads?

________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20150612/47e99ef7/attachment.html>

From jroback at gmail.com  Fri Jun 12 13:57:19 2015
From: jroback at gmail.com (Joshua Roback)
Date: Fri, 12 Jun 2015 13:57:19 +0000
Subject: [Owasp-modsecurity-core-rule-set] Ignore URI From Scanning
In-Reply-To: <F684BDD553BAF1479F5380EDAD3BE3711EB41D3C@SKYMB1.trustwave.com>
References: <CAExQ=_cY-GKzV2rWCD2fRgGUUSXgQJ_L+=FeCykvwcnEvBpJdw@mail.gmail.com>
	<F684BDD553BAF1479F5380EDAD3BE3711EB41D3C@SKYMB1.trustwave.com>
Message-ID: <CAExQ=_f5+yB21CCnhtzxu+_cDWNj+T2+VK1n-0brJMe1=CxRJg@mail.gmail.com>

Wouldn't that bypass all future rules from scanning that same HTTP
transactions?

On Fri, Jun 12, 2015 at 9:44 AM Chaim Sanders <CSanders at trustwave.com>
wrote:

>  You could use the ?ctl? action to disable the engine after a certain
> rule triggers, thereby skipping the rest of the checks. You could also
> place this in a virtual host area if needed.
>
>
>
> SecRule REQUEST_URI "@contains /encryptedbit/" "phase:1,t:none,pass,
> nolog,ctl:ruleEngine=Off?
>
>
>
> *Chaim Sanders    *
>
> Security Researcher, SpiderLabs
>
>
>
> *Trustwave* | SMART SECURITY ON DEMAND
>
> www.trustwave.com
>
>
>
> *From:* owasp-modsecurity-core-rule-set-bounces at lists.owasp.org [mailto:
> owasp-modsecurity-core-rule-set-bounces at lists.owasp.org] *On Behalf Of *Joshua
> Roback
> *Sent:* Friday, June 12, 2015 9:16 AM
> *To:* owasp-modsecurity-core-rule-set at lists.owasp.org
> *Subject:* [Owasp-modsecurity-core-rule-set] Ignore URI From Scanning
>
>
>
> Hello Group,
>
> I'm come across an issue in which I'll be using ModSecurity to protect a
> site with an encrypted URI.  For the sake of reducing false positives, what
> would be the most effective way to omit the URI from scanning but continue
> to scan other HTTP header fields and all payloads?
>
> ------------------------------
>
> This transmission may contain information that is privileged,
> confidential, and/or exempt from disclosure under applicable law. If you
> are not the intended recipient, you are hereby notified that any
> disclosure, copying, distribution, or use of the information contained
> herein (including any reliance thereon) is strictly prohibited. If you
> received this transmission in error, please immediately contact the sender
> and destroy the material in its entirety, whether in electronic or hard
> copy format.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20150612/12546d9e/attachment.html>

From CSanders at trustwave.com  Fri Jun 12 14:02:43 2015
From: CSanders at trustwave.com (Chaim Sanders)
Date: Fri, 12 Jun 2015 14:02:43 +0000
Subject: [Owasp-modsecurity-core-rule-set] Ignore URI From Scanning
In-Reply-To: <CAExQ=_f5+yB21CCnhtzxu+_cDWNj+T2+VK1n-0brJMe1=CxRJg@mail.gmail.com>
References: <CAExQ=_cY-GKzV2rWCD2fRgGUUSXgQJ_L+=FeCykvwcnEvBpJdw@mail.gmail.com>
	<F684BDD553BAF1479F5380EDAD3BE3711EB41D3C@SKYMB1.trustwave.com>
	<CAExQ=_f5+yB21CCnhtzxu+_cDWNj+T2+VK1n-0brJMe1=CxRJg@mail.gmail.com>
Message-ID: <F684BDD553BAF1479F5380EDAD3BE3711EB41D76@SKYMB1.trustwave.com>

That will cause all rules to be skipped every time that rule is triggered which will be whenever there is a request that matches that rule. If you want to skip it altogether you can only run ModSec rules on a particular <Location> (see the following example: https://www.digitalocean.com/community/tutorials/how-to-set-up-mod_security-with-apache-on-debian-ubuntu)

Chaim Sanders
Security Researcher, SpiderLabs

Trustwave | SMART SECURITY ON DEMAND
www.trustwave.com<http://www.trustwave.com/>

From: Joshua Roback [mailto:jroback at gmail.com]
Sent: Friday, June 12, 2015 9:57 AM
To: Chaim Sanders; owasp-modsecurity-core-rule-set at lists.owasp.org
Subject: Re: [Owasp-modsecurity-core-rule-set] Ignore URI From Scanning

Wouldn't that bypass all future rules from scanning that same HTTP transactions?

On Fri, Jun 12, 2015 at 9:44 AM Chaim Sanders <CSanders at trustwave.com<mailto:CSanders at trustwave.com>> wrote:
You could use the ?ctl? action to disable the engine after a certain rule triggers, thereby skipping the rest of the checks. You could also place this in a virtual host area if needed.

SecRule REQUEST_URI "@contains /encryptedbit/" "phase:1,t:none,pass, nolog,ctl:ruleEngine=Off?

Chaim Sanders
Security Researcher, SpiderLabs

Trustwave | SMART SECURITY ON DEMAND
www.trustwave.com<http://www.trustwave.com/>

From: owasp-modsecurity-core-rule-set-bounces at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org> [mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org>] On Behalf Of Joshua Roback
Sent: Friday, June 12, 2015 9:16 AM
To: owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>
Subject: [Owasp-modsecurity-core-rule-set] Ignore URI From Scanning

Hello Group,
I'm come across an issue in which I'll be using ModSecurity to protect a site with an encrypted URI.  For the sake of reducing false positives, what would be the most effective way to omit the URI from scanning but continue to scan other HTTP header fields and all payloads?

________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20150612/81dbd102/attachment-0001.html>

From jroback at gmail.com  Fri Jun 12 14:07:49 2015
From: jroback at gmail.com (Joshua Roback)
Date: Fri, 12 Jun 2015 14:07:49 +0000
Subject: [Owasp-modsecurity-core-rule-set] Ignore URI From Scanning
In-Reply-To: <F684BDD553BAF1479F5380EDAD3BE3711EB41D76@SKYMB1.trustwave.com>
References: <CAExQ=_cY-GKzV2rWCD2fRgGUUSXgQJ_L+=FeCykvwcnEvBpJdw@mail.gmail.com>
	<F684BDD553BAF1479F5380EDAD3BE3711EB41D3C@SKYMB1.trustwave.com>
	<CAExQ=_f5+yB21CCnhtzxu+_cDWNj+T2+VK1n-0brJMe1=CxRJg@mail.gmail.com>
	<F684BDD553BAF1479F5380EDAD3BE3711EB41D76@SKYMB1.trustwave.com>
Message-ID: <CAExQ=_e1mtdWUAe8o6Ep1iqqN8ebaGp7XacPaAo1_jRCEmNHeg@mail.gmail.com>

Thanks Chaim.

The ideal situation would be if there was a URI equivalent of

SecResponseBodyAccess Off


I can't always provide a URL string to match against and I don't want
to disable all rules since it's only the URI that's encrypted at the
application layer.  Everything else is simple SSL/TLS which I can
decrypt without problem.


On Fri, Jun 12, 2015 at 10:02 AM Chaim Sanders <CSanders at trustwave.com>
wrote:

>  That will cause all rules to be skipped every time that rule is
> triggered which will be whenever there is a request that matches that rule.
> If you want to skip it altogether you can only run ModSec rules on a
> particular <Location> (see the following example:
> https://www.digitalocean.com/community/tutorials/how-to-set-up-mod_security-with-apache-on-debian-ubuntu
> )
>
>
>
> *Chaim Sanders    *
>
> Security Researcher, SpiderLabs
>
>
>
> *Trustwave* | SMART SECURITY ON DEMAND
>
> www.trustwave.com
>
>
>
> *From:* Joshua Roback [mailto:jroback at gmail.com]
> *Sent:* Friday, June 12, 2015 9:57 AM
> *To:* Chaim Sanders; owasp-modsecurity-core-rule-set at lists.owasp.org
> *Subject:* Re: [Owasp-modsecurity-core-rule-set] Ignore URI From Scanning
>
>
>
> Wouldn't that bypass all future rules from scanning that same HTTP
> transactions?
>
>
>
> On Fri, Jun 12, 2015 at 9:44 AM Chaim Sanders <CSanders at trustwave.com>
> wrote:
>
>  You could use the ?ctl? action to disable the engine after a certain
> rule triggers, thereby skipping the rest of the checks. You could also
> place this in a virtual host area if needed.
>
>
>
> SecRule REQUEST_URI "@contains /encryptedbit/" "phase:1,t:none,pass,
> nolog,ctl:ruleEngine=Off?
>
>
>
> *Chaim Sanders    *
>
> Security Researcher, SpiderLabs
>
>
>
> *Trustwave* | SMART SECURITY ON DEMAND
>
> www.trustwave.com
>
>
>
> *From:* owasp-modsecurity-core-rule-set-bounces at lists.owasp.org [mailto:
> owasp-modsecurity-core-rule-set-bounces at lists.owasp.org] *On Behalf Of *Joshua
> Roback
> *Sent:* Friday, June 12, 2015 9:16 AM
> *To:* owasp-modsecurity-core-rule-set at lists.owasp.org
> *Subject:* [Owasp-modsecurity-core-rule-set] Ignore URI From Scanning
>
>
>
> Hello Group,
>
> I'm come across an issue in which I'll be using ModSecurity to protect a
> site with an encrypted URI.  For the sake of reducing false positives, what
> would be the most effective way to omit the URI from scanning but continue
> to scan other HTTP header fields and all payloads?
>
>
>  ------------------------------
>
>
> This transmission may contain information that is privileged,
> confidential, and/or exempt from disclosure under applicable law. If you
> are not the intended recipient, you are hereby notified that any
> disclosure, copying, distribution, or use of the information contained
> herein (including any reliance thereon) is strictly prohibited. If you
> received this transmission in error, please immediately contact the sender
> and destroy the material in its entirety, whether in electronic or hard
> copy format.
>
>
> ------------------------------
>
> This transmission may contain information that is privileged,
> confidential, and/or exempt from disclosure under applicable law. If you
> are not the intended recipient, you are hereby notified that any
> disclosure, copying, distribution, or use of the information contained
> herein (including any reliance thereon) is strictly prohibited. If you
> received this transmission in error, please immediately contact the sender
> and destroy the material in its entirety, whether in electronic or hard
> copy format.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20150612/3610d1b8/attachment.html>

From CSanders at trustwave.com  Fri Jun 12 14:11:58 2015
From: CSanders at trustwave.com (Chaim Sanders)
Date: Fri, 12 Jun 2015 14:11:58 +0000
Subject: [Owasp-modsecurity-core-rule-set] Ignore URI From Scanning
In-Reply-To: <CAExQ=_e1mtdWUAe8o6Ep1iqqN8ebaGp7XacPaAo1_jRCEmNHeg@mail.gmail.com>
References: <CAExQ=_cY-GKzV2rWCD2fRgGUUSXgQJ_L+=FeCykvwcnEvBpJdw@mail.gmail.com>
	<F684BDD553BAF1479F5380EDAD3BE3711EB41D3C@SKYMB1.trustwave.com>
	<CAExQ=_f5+yB21CCnhtzxu+_cDWNj+T2+VK1n-0brJMe1=CxRJg@mail.gmail.com>
	<F684BDD553BAF1479F5380EDAD3BE3711EB41D76@SKYMB1.trustwave.com>
	<CAExQ=_e1mtdWUAe8o6Ep1iqqN8ebaGp7XacPaAo1_jRCEmNHeg@mail.gmail.com>
Message-ID: <F684BDD553BAF1479F5380EDAD3BE3711EB41DA1@SKYMB1.trustwave.com>

There is in fact access to the requestBodyAccess directive from ctl? See https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual#ctl. You can use it in much the same way you could use RuleEngine. Hope this solves your problem.

Chaim Sanders
Security Researcher, SpiderLabs

Trustwave | SMART SECURITY ON DEMAND
www.trustwave.com<http://www.trustwave.com/>

From: Joshua Roback [mailto:jroback at gmail.com]
Sent: Friday, June 12, 2015 10:08 AM
To: Chaim Sanders; owasp-modsecurity-core-rule-set at lists.owasp.org
Subject: Re: [Owasp-modsecurity-core-rule-set] Ignore URI From Scanning

Thanks Chaim.
The ideal situation would be if there was a URI equivalent of

SecResponseBodyAccess Off


I can't always provide a URL string to match against and I don't want to disable all rules since it's only the URI that's encrypted at the application layer.  Everything else is simple SSL/TLS which I can decrypt without problem.

On Fri, Jun 12, 2015 at 10:02 AM Chaim Sanders <CSanders at trustwave.com<mailto:CSanders at trustwave.com>> wrote:
That will cause all rules to be skipped every time that rule is triggered which will be whenever there is a request that matches that rule. If you want to skip it altogether you can only run ModSec rules on a particular <Location> (see the following example: https://www.digitalocean.com/community/tutorials/how-to-set-up-mod_security-with-apache-on-debian-ubuntu<http://scanmail.trustwave.com/?c=4062&d=7Of61ZiAo31lGdi9SEEO45yLLG85pm_ZNu-l4uSGog&s=5&u=https%3a%2f%2fwww%2edigitalocean%2ecom%2fcommunity%2ftutorials%2fhow-to-set-up-mod%5fsecurity-with-apache-on-debian-ubuntu>)

Chaim Sanders
Security Researcher, SpiderLabs

Trustwave | SMART SECURITY ON DEMAND
www.trustwave.com<http://www.trustwave.com/>

From: Joshua Roback [mailto:jroback at gmail.com<mailto:jroback at gmail.com>]
Sent: Friday, June 12, 2015 9:57 AM
To: Chaim Sanders; owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>
Subject: Re: [Owasp-modsecurity-core-rule-set] Ignore URI From Scanning

Wouldn't that bypass all future rules from scanning that same HTTP transactions?

On Fri, Jun 12, 2015 at 9:44 AM Chaim Sanders <CSanders at trustwave.com<mailto:CSanders at trustwave.com>> wrote:
You could use the ?ctl? action to disable the engine after a certain rule triggers, thereby skipping the rest of the checks. You could also place this in a virtual host area if needed.

SecRule REQUEST_URI "@contains /encryptedbit/" "phase:1,t:none,pass, nolog,ctl:ruleEngine=Off?

Chaim Sanders
Security Researcher, SpiderLabs

Trustwave | SMART SECURITY ON DEMAND
www.trustwave.com<http://www.trustwave.com/>

From: owasp-modsecurity-core-rule-set-bounces at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org> [mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org>] On Behalf Of Joshua Roback
Sent: Friday, June 12, 2015 9:16 AM
To: owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>
Subject: [Owasp-modsecurity-core-rule-set] Ignore URI From Scanning

Hello Group,
I'm come across an issue in which I'll be using ModSecurity to protect a site with an encrypted URI.  For the sake of reducing false positives, what would be the most effective way to omit the URI from scanning but continue to scan other HTTP header fields and all payloads?

________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20150612/6dd2b3b6/attachment-0001.html>

From jroback at gmail.com  Fri Jun 12 14:27:08 2015
From: jroback at gmail.com (Joshua Roback)
Date: Fri, 12 Jun 2015 14:27:08 +0000
Subject: [Owasp-modsecurity-core-rule-set] Ignore URI From Scanning
In-Reply-To: <F684BDD553BAF1479F5380EDAD3BE3711EB41DA1@SKYMB1.trustwave.com>
References: <CAExQ=_cY-GKzV2rWCD2fRgGUUSXgQJ_L+=FeCykvwcnEvBpJdw@mail.gmail.com>
	<F684BDD553BAF1479F5380EDAD3BE3711EB41D3C@SKYMB1.trustwave.com>
	<CAExQ=_f5+yB21CCnhtzxu+_cDWNj+T2+VK1n-0brJMe1=CxRJg@mail.gmail.com>
	<F684BDD553BAF1479F5380EDAD3BE3711EB41D76@SKYMB1.trustwave.com>
	<CAExQ=_e1mtdWUAe8o6Ep1iqqN8ebaGp7XacPaAo1_jRCEmNHeg@mail.gmail.com>
	<F684BDD553BAF1479F5380EDAD3BE3711EB41DA1@SKYMB1.trustwave.com>
Message-ID: <CAExQ=_e3R+2LweUt+w5VsH3ZAdW8E8PKr8JRZpmYWa88cLADvg@mail.gmail.com>

That would work for items within the URI as I need it to, but wouldn't it
also ignore for data in the request body via POST?


On Fri, Jun 12, 2015 at 10:11 AM Chaim Sanders <CSanders at trustwave.com>
wrote:

>  There is in fact access to the requestBodyAccess directive from ctl? See
> https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual#ctl. You
> can use it in much the same way you could use RuleEngine. Hope this solves
> your problem.
>
>
>
> *Chaim Sanders    *
>
> Security Researcher, SpiderLabs
>
>
>
> *Trustwave* | SMART SECURITY ON DEMAND
>
> www.trustwave.com
>
>
>
> *From:* Joshua Roback [mailto:jroback at gmail.com]
> *Sent:* Friday, June 12, 2015 10:08 AM
>
>
> *To:* Chaim Sanders; owasp-modsecurity-core-rule-set at lists.owasp.org
> *Subject:* Re: [Owasp-modsecurity-core-rule-set] Ignore URI From Scanning
>
>
>
> Thanks Chaim.
>
> The ideal situation would be if there was a URI equivalent of
>
> SecResponseBodyAccess Off
>
>  I can't always provide a URL string to match against and I don't want to disable all rules since it's only the URI that's encrypted at the application layer.  Everything else is simple SSL/TLS which I can decrypt without problem.
>
>
>
> On Fri, Jun 12, 2015 at 10:02 AM Chaim Sanders <CSanders at trustwave.com>
> wrote:
>
>  That will cause all rules to be skipped every time that rule is
> triggered which will be whenever there is a request that matches that rule.
> If you want to skip it altogether you can only run ModSec rules on a
> particular <Location> (see the following example:
> https://www.digitalocean.com/community/tutorials/how-to-set-up-mod_security-with-apache-on-debian-ubuntu
> <http://scanmail.trustwave.com/?c=4062&d=7Of61ZiAo31lGdi9SEEO45yLLG85pm_ZNu-l4uSGog&s=5&u=https%3a%2f%2fwww%2edigitalocean%2ecom%2fcommunity%2ftutorials%2fhow-to-set-up-mod%5fsecurity-with-apache-on-debian-ubuntu>
> )
>
>
>
> *Chaim Sanders    *
>
> Security Researcher, SpiderLabs
>
>
>
> *Trustwave* | SMART SECURITY ON DEMAND
>
> www.trustwave.com
>
>
>
> *From:* Joshua Roback [mailto:jroback at gmail.com]
> *Sent:* Friday, June 12, 2015 9:57 AM
> *To:* Chaim Sanders; owasp-modsecurity-core-rule-set at lists.owasp.org
> *Subject:* Re: [Owasp-modsecurity-core-rule-set] Ignore URI From Scanning
>
>
>
> Wouldn't that bypass all future rules from scanning that same HTTP
> transactions?
>
>
>
> On Fri, Jun 12, 2015 at 9:44 AM Chaim Sanders <CSanders at trustwave.com>
> wrote:
>
>  You could use the ?ctl? action to disable the engine after a certain
> rule triggers, thereby skipping the rest of the checks. You could also
> place this in a virtual host area if needed.
>
>
>
> SecRule REQUEST_URI "@contains /encryptedbit/" "phase:1,t:none,pass,
> nolog,ctl:ruleEngine=Off?
>
>
>
> *Chaim Sanders    *
>
> Security Researcher, SpiderLabs
>
>
>
> *Trustwave* | SMART SECURITY ON DEMAND
>
> www.trustwave.com
>
>
>
> *From:* owasp-modsecurity-core-rule-set-bounces at lists.owasp.org [mailto:
> owasp-modsecurity-core-rule-set-bounces at lists.owasp.org] *On Behalf Of *Joshua
> Roback
> *Sent:* Friday, June 12, 2015 9:16 AM
> *To:* owasp-modsecurity-core-rule-set at lists.owasp.org
> *Subject:* [Owasp-modsecurity-core-rule-set] Ignore URI From Scanning
>
>
>
> Hello Group,
>
> I'm come across an issue in which I'll be using ModSecurity to protect a
> site with an encrypted URI.  For the sake of reducing false positives, what
> would be the most effective way to omit the URI from scanning but continue
> to scan other HTTP header fields and all payloads?
>
>
>  ------------------------------
>
>
> This transmission may contain information that is privileged,
> confidential, and/or exempt from disclosure under applicable law. If you
> are not the intended recipient, you are hereby notified that any
> disclosure, copying, distribution, or use of the information contained
> herein (including any reliance thereon) is strictly prohibited. If you
> received this transmission in error, please immediately contact the sender
> and destroy the material in its entirety, whether in electronic or hard
> copy format.
>
>
>  ------------------------------
>
>
> This transmission may contain information that is privileged,
> confidential, and/or exempt from disclosure under applicable law. If you
> are not the intended recipient, you are hereby notified that any
> disclosure, copying, distribution, or use of the information contained
> herein (including any reliance thereon) is strictly prohibited. If you
> received this transmission in error, please immediately contact the sender
> and destroy the material in its entirety, whether in electronic or hard
> copy format.
>
>
> ------------------------------
>
> This transmission may contain information that is privileged,
> confidential, and/or exempt from disclosure under applicable law. If you
> are not the intended recipient, you are hereby notified that any
> disclosure, copying, distribution, or use of the information contained
> herein (including any reliance thereon) is strictly prohibited. If you
> received this transmission in error, please immediately contact the sender
> and destroy the material in its entirety, whether in electronic or hard
> copy format.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20150612/07eac251/attachment.html>

From CSanders at trustwave.com  Fri Jun 12 19:08:18 2015
From: CSanders at trustwave.com (Chaim Sanders)
Date: Fri, 12 Jun 2015 19:08:18 +0000
Subject: [Owasp-modsecurity-core-rule-set] Ignore URI From Scanning
In-Reply-To: <CAExQ=_e3R+2LweUt+w5VsH3ZAdW8E8PKr8JRZpmYWa88cLADvg@mail.gmail.com>
References: <CAExQ=_cY-GKzV2rWCD2fRgGUUSXgQJ_L+=FeCykvwcnEvBpJdw@mail.gmail.com>
	<F684BDD553BAF1479F5380EDAD3BE3711EB41D3C@SKYMB1.trustwave.com>
	<CAExQ=_f5+yB21CCnhtzxu+_cDWNj+T2+VK1n-0brJMe1=CxRJg@mail.gmail.com>
	<F684BDD553BAF1479F5380EDAD3BE3711EB41D76@SKYMB1.trustwave.com>
	<CAExQ=_e1mtdWUAe8o6Ep1iqqN8ebaGp7XacPaAo1_jRCEmNHeg@mail.gmail.com>
	<F684BDD553BAF1479F5380EDAD3BE3711EB41DA1@SKYMB1.trustwave.com>
	<CAExQ=_e3R+2LweUt+w5VsH3ZAdW8E8PKr8JRZpmYWa88cLADvg@mail.gmail.com>
Message-ID: <D1A0A5F2.9213%csanders@trustwave.com>

At this point, I?m not exactly sure what you?re asking for. But as rules are processed in a precise order (by phase and by conf) you can either use SecMarker to skip to after the processing of a certain set of rules or you could reenable requestBodyAccess as soon as you have triggered another rule which might be after all the rules you don?t want run. Hopefully this helps.

From: Joshua Roback <jroback at gmail.com<mailto:jroback at gmail.com>>
Date: Friday, June 12, 2015 at 10:27 AM
To: Chaim Sanders <csanders at trustwave.com<mailto:csanders at trustwave.com>>, "owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>" <owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>
Subject: Re: [Owasp-modsecurity-core-rule-set] Ignore URI From Scanning

That would work for items within the URI as I need it to, but wouldn't it also ignore for data in the request body via POST?


On Fri, Jun 12, 2015 at 10:11 AM Chaim Sanders <CSanders at trustwave.com<mailto:CSanders at trustwave.com>> wrote:
There is in fact access to the requestBodyAccess directive from ctl? See https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual#ctl<http://scanmail.trustwave.com/?c=4062&d=x-z61WLVKy82sGToPcXlosLPCkYEyRZf-V9joextqQ&s=5&u=https%3a%2f%2fgithub%2ecom%2fSpiderLabs%2fModSecurity%2fwiki%2fReference-Manual%23ctl>. You can use it in much the same way you could use RuleEngine. Hope this solves your problem.

Chaim Sanders
Security Researcher, SpiderLabs

Trustwave| SMART SECURITY ON DEMAND
www.trustwave.com<http://www.trustwave.com/>

From: Joshua Roback [mailto:jroback at gmail.com<mailto:jroback at gmail.com>]
Sent: Friday, June 12, 2015 10:08 AM

To: Chaim Sanders; owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>
Subject: Re: [Owasp-modsecurity-core-rule-set] Ignore URI From Scanning

Thanks Chaim.
The ideal situation would be if there was a URI equivalent of

SecResponseBodyAccess Off


I can't always provide a URL string to match against and I don't want to disable all rules since it's only the URI that's encrypted at the application layer.  Everything else is simple SSL/TLS which I can decrypt without problem.

On Fri, Jun 12, 2015 at 10:02 AM Chaim Sanders <CSanders at trustwave.com<mailto:CSanders at trustwave.com>> wrote:
That will cause all rules to be skipped every time that rule is triggered which will be whenever there is a request that matches that rule. If you want to skip it altogether you can only run ModSec rules on a particular <Location> (see the following example: https://www.digitalocean.com/community/tutorials/how-to-set-up-mod_security-with-apache-on-debian-ubuntu<http://scanmail.trustwave.com/?c=4062&d=x-z61WLVKy82sGToPcXlosLPCkYEyRZf-VNn-LJp8g&s=5&u=https%3a%2f%2fwww%2edigitalocean%2ecom%2fcommunity%2ftutorials%2fhow-to-set-up-mod%5fsecurity-with-apache-on-debian-ubuntu>)

Chaim Sanders
Security Researcher, SpiderLabs

Trustwave| SMART SECURITY ON DEMAND
www.trustwave.com<http://www.trustwave.com/>

From: Joshua Roback [mailto:jroback at gmail.com<mailto:jroback at gmail.com>]
Sent: Friday, June 12, 2015 9:57 AM
To: Chaim Sanders; owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>
Subject: Re: [Owasp-modsecurity-core-rule-set] Ignore URI From Scanning

Wouldn't that bypass all future rules from scanning that same HTTP transactions?

On Fri, Jun 12, 2015 at 9:44 AM Chaim Sanders <CSanders at trustwave.com<mailto:CSanders at trustwave.com>> wrote:
You could use the ?ctl? action to disable the engine after a certain rule triggers, thereby skipping the rest of the checks. You could also place this in a virtual host area if needed.

SecRule REQUEST_URI "@contains /encryptedbit/" "phase:1,t:none,pass, nolog,ctl:ruleEngine=Off?

Chaim Sanders
Security Researcher, SpiderLabs

Trustwave| SMART SECURITY ON DEMAND
www.trustwave.com<http://www.trustwave.com/>

From: owasp-modsecurity-core-rule-set-bounces at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org> [mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org>] On Behalf Of Joshua Roback
Sent: Friday, June 12, 2015 9:16 AM
To: owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>
Subject: [Owasp-modsecurity-core-rule-set] Ignore URI From Scanning

Hello Group,
I'm come across an issue in which I'll be using ModSecurity to protect a site with an encrypted URI.  For the sake of reducing false positives, what would be the most effective way to omit the URI from scanning but continue to scan other HTTP header fields and all payloads?

________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20150612/7f409cfc/attachment-0001.html>

From drew.kay at gmail.com  Wed Jun 17 17:19:27 2015
From: drew.kay at gmail.com (Drew)
Date: Wed, 17 Jun 2015 10:19:27 -0700
Subject: [Owasp-modsecurity-core-rule-set] Searchable ruleset list
In-Reply-To: <20150605134550.GA24036@elias>
References: <CACJz6QshGubPPOAAvxmc0tzZmeaZDQeJrpnTKpd2---tNkcZag@mail.gmail.com>
	<20150605134550.GA24036@elias>
Message-ID: <CACJz6QvuvuYu0oOCL+Yf5_mUp2zODzGgZe=PYQ-FnRd1o9WXBw@mail.gmail.com>

I'll have to figure something out then. My webspace provider gave me a
couple rules that were triggering but no info at all about what the
rule was or what causes it, referring me to google and you folks.

Kinda helpful huh? :-)

Anyways, I'll pull a recent snapshot from git and start poking around
in there with grep, see what floats up. In the meanwhile I asked them
to disable those two rules across my accoount and things are working
fine at present, just want to understand why fresh wikimedia from
verified sources is causing security errors.

-- 
Drew

From drew.kay at gmail.com  Thu Jun 18 14:14:09 2015
From: drew.kay at gmail.com (Drew)
Date: Thu, 18 Jun 2015 07:14:09 -0700
Subject: [Owasp-modsecurity-core-rule-set] Searchable ruleset list
In-Reply-To: <20150617202558.GA24659@elias>
References: <CACJz6QshGubPPOAAvxmc0tzZmeaZDQeJrpnTKpd2---tNkcZag@mail.gmail.com>
	<20150605134550.GA24036@elias>
	<CACJz6QvuvuYu0oOCL+Yf5_mUp2zODzGgZe=PYQ-FnRd1o9WXBw@mail.gmail.com>
	<20150617202558.GA24659@elias>
Message-ID: <CACJz6QsxCqQf_-9cO504zRWsB8-0V2N5V19TWiCTKQuFXo5R9g@mail.gmail.com>

> The rule id without the parameter triggering and the value
> of the parameter does not do you any good. You need the
> audit-log or at least the apache error-log to be able to
> tune it. If that is not possible, then
> the apache error-log can take you very far as well.

They didn't give me that unfortunately. For one custom web-app I run I
was able to trace the error down to a specific section of the backend
code, which got me within the specific module. No idea why the
security triggered as the module is very basic, just takes some input,
does a sanity check on the input, sanitizes for mySQL injections, then
updates a database entry. mediawiki (black box that it is) did exactly
the same sort of thing.

What got me curious was that from the end user perspective, if you
wrote, for example, the simple basic text (minus quotes): "The Grey
fox jumped over the brown cow." it would trigger modsecurity. However,
if you changed Grey to Gray or fox to dog, it wouldn't trigger. So why
a simple word change allowed the exact same text to go through I have
no idea. In this particular instance I ended up bisecting the
paragraph being entered to discover it was a simple choice of words
causing the error.

*shrugs* Go Figure. :-)


-- 
Drew

"Nothing in life is to be feared. It is only to be understood."
--Marie Curie

"This started out as a hobby and spun horribly out of control."
-Unknown

From adrianbn at gmail.com  Fri Jun 26 11:06:10 2015
From: adrianbn at gmail.com (=?UTF-8?Q?Adri=C3=A1n?=)
Date: Fri, 26 Jun 2015 11:06:10 +0000
Subject: [Owasp-modsecurity-core-rule-set] Updating pattern for chained rule
Message-ID: <CAFDTedpALc65Y_6c+v71mAcCCKfdAwzMGWM=Or8Cfo3gHBVVrQ@mail.gmail.com>

Hi all,

I've been lately trying (and failing) to update the pattern a chained rule
matches against when certain URI or ARG name are found. Here is the rule I
am trying to update: https://gist.github.com/anonymous/18c2a881a3277009fe79.

The desire would be, without directly modifying the CRS rule, update it not
to match on a set of domains considered safe/internal. I've thought about
it for a while and couldn't come up with something that worked. I guess
that if I could append another chained rule to it, since it'd make a
logical AND I could use !@contains(mydomain). Is that or another solution
possible?

Any help welcome!
Thanks
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20150626/0ff92876/attachment.html>

From owasp-crs at kyoshiro.org  Fri Jun 26 11:54:23 2015
From: owasp-crs at kyoshiro.org (=?windows-1252?Q?Lo=EFc_Gomez?=)
Date: Fri, 26 Jun 2015 13:54:23 +0200
Subject: [Owasp-modsecurity-core-rule-set] Updating pattern for chained
 rule
In-Reply-To: <CAFDTedpALc65Y_6c+v71mAcCCKfdAwzMGWM=Or8Cfo3gHBVVrQ@mail.gmail.com>
References: <CAFDTedpALc65Y_6c+v71mAcCCKfdAwzMGWM=Or8Cfo3gHBVVrQ@mail.gmail.com>
Message-ID: <558D3D6F.7040908@kyoshiro.org>

Le 26/06/2015 13:06, Adri?n a ?crit :
> Hi all,
>
> I've been lately trying (and failing) to update the pattern a chained rule matches against
> when certain URI or ARG name are found. Here is the rule I am trying to update:
> https://gist.github.com/anonymous/18c2a881a3277009fe79.
>
> The desire would be, without directly modifying the CRS rule, update it not to match on a
> set of domains considered safe/internal. I've thought about it for a while and couldn't
> come up with something that worked. I guess that if I could append another chained rule to
> it, since it'd make a logical AND I could use !@contains(mydomain). Is that or another
> solution possible?
>
> Any help welcome!
> Thanks

Hi,

When you update an action for a chained rule you need to append ",chain" again in order for
the rule to work properly.
This is a known "bug" as indicated here :
https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual#secruleupdateactionbyid

Best regards
Lo?c Gomez

From adrianbn at gmail.com  Fri Jun 26 12:04:31 2015
From: adrianbn at gmail.com (=?UTF-8?Q?Adri=C3=A1n?=)
Date: Fri, 26 Jun 2015 12:04:31 +0000
Subject: [Owasp-modsecurity-core-rule-set] Updating pattern for chained
	rule
In-Reply-To: <558D3D6F.7040908@kyoshiro.org>
References: <CAFDTedpALc65Y_6c+v71mAcCCKfdAwzMGWM=Or8Cfo3gHBVVrQ@mail.gmail.com>
	<558D3D6F.7040908@kyoshiro.org>
Message-ID: <CAFDTedq8Sybia4ciL_mHYr3=iCzr9x91e2JoduTtMv2tre1S3w@mail.gmail.com>

Thanks Loic,

I still can't figure out how to update the target pattern. Would you be
able to provide an example I can use as template? Thank you!

El vie., 26 jun. 2015 a las 13:02, Lo?c Gomez (<owasp-crs at kyoshiro.org>)
escribi?:

> Le 26/06/2015 13:06, Adri?n a ?crit :
> > Hi all,
> >
> > I've been lately trying (and failing) to update the pattern a chained
> rule matches against
> > when certain URI or ARG name are found. Here is the rule I am trying to
> update:
> > https://gist.github.com/anonymous/18c2a881a3277009fe79.
> >
> > The desire would be, without directly modifying the CRS rule, update it
> not to match on a
> > set of domains considered safe/internal. I've thought about it for a
> while and couldn't
> > come up with something that worked. I guess that if I could append
> another chained rule to
> > it, since it'd make a logical AND I could use !@contains(mydomain). Is
> that or another
> > solution possible?
> >
> > Any help welcome!
> > Thanks
>
> Hi,
>
> When you update an action for a chained rule you need to append ",chain"
> again in order for
> the rule to work properly.
> This is a known "bug" as indicated here :
>
> https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual#secruleupdateactionbyid
>
> Best regards
> Lo?c Gomez
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20150626/da9b31d7/attachment.html>

From owasp-crs at kyoshiro.org  Fri Jun 26 12:08:14 2015
From: owasp-crs at kyoshiro.org (=?UTF-8?B?TG/Dr2MgR29tZXo=?=)
Date: Fri, 26 Jun 2015 14:08:14 +0200
Subject: [Owasp-modsecurity-core-rule-set] Updating pattern for chained
 rule
In-Reply-To: <CAFDTedq8Sybia4ciL_mHYr3=iCzr9x91e2JoduTtMv2tre1S3w@mail.gmail.com>
References: <CAFDTedpALc65Y_6c+v71mAcCCKfdAwzMGWM=Or8Cfo3gHBVVrQ@mail.gmail.com>
	<558D3D6F.7040908@kyoshiro.org>
	<CAFDTedq8Sybia4ciL_mHYr3=iCzr9x91e2JoduTtMv2tre1S3w@mail.gmail.com>
Message-ID: <558D40AE.3070307@kyoshiro.org>

Le 26/06/2015 14:04, Adri?n a ?crit :
> Thanks Loic,
>
> I still can't figure out how to update the target pattern. Would you be able to provide an
> example I can use as template? Thank you!
>

Oh sorry, I missed that part, as far as I know, you can only update a rule's action or
target (eg. parameters) but not the pattern to match. Sadly I think you'll have to copy the
rule, or edit the file directly.

Lo?c

From corovin at starnet.md  Sat Jun 27 20:57:09 2015
From: corovin at starnet.md (Andrei)
Date: Sat, 27 Jun 2015 23:57:09 +0300
Subject: [Owasp-modsecurity-core-rule-set] CRYPTOPHP DETECTED
Message-ID: <31fc158aeaf3b11c12d52608b771540f@starnet.md>

Hi all,

Could anyone know, how can I detect (i.e. md5sum) and block (i.e. 403 
error page) files like social.png, which are crypted for botnet.

Wordpress CMS example:
-----------------
domain.ru/wp-content/plugins/revslider/images/social.png: CRYPTOPHP 
DETECTED!
-----------------

From adrianbn at gmail.com  Tue Jun 30 13:14:40 2015
From: adrianbn at gmail.com (=?UTF-8?Q?Adri=C3=A1n?=)
Date: Tue, 30 Jun 2015 13:14:40 +0000
Subject: [Owasp-modsecurity-core-rule-set] Updating pattern for chained
	rule
In-Reply-To: <558D40AE.3070307@kyoshiro.org>
References: <CAFDTedpALc65Y_6c+v71mAcCCKfdAwzMGWM=Or8Cfo3gHBVVrQ@mail.gmail.com>
	<558D3D6F.7040908@kyoshiro.org>
	<CAFDTedq8Sybia4ciL_mHYr3=iCzr9x91e2JoduTtMv2tre1S3w@mail.gmail.com>
	<558D40AE.3070307@kyoshiro.org>
Message-ID: <CAFDTedpD1O+TMXHtJoijmPG7Kd6Kbcg767nw3WNd00TX+Nb-_A@mail.gmail.com>

Thank you for the answer Lo?c and sorry for the delay, I've been out a
couple of days. I'll copy the rule then.

El vie., 26 jun. 2015 a las 13:08, Lo?c Gomez (<owasp-crs at kyoshiro.org>)
escribi?:

> Le 26/06/2015 14:04, Adri?n a ?crit :
> > Thanks Loic,
> >
> > I still can't figure out how to update the target pattern. Would you be
> able to provide an
> > example I can use as template? Thank you!
> >
>
> Oh sorry, I missed that part, as far as I know, you can only update a
> rule's action or
> target (eg. parameters) but not the pattern to match. Sadly I think you'll
> have to copy the
> rule, or edit the file directly.
>
> Lo?c
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20150630/3a785955/attachment.html>

From CSanders at trustwave.com  Tue Jun 30 13:21:44 2015
From: CSanders at trustwave.com (Chaim Sanders)
Date: Tue, 30 Jun 2015 13:21:44 +0000
Subject: [Owasp-modsecurity-core-rule-set] CRYPTOPHP DETECTED
In-Reply-To: <31fc158aeaf3b11c12d52608b771540f@starnet.md>
References: <31fc158aeaf3b11c12d52608b771540f@starnet.md>
Message-ID: <BY1PR0701MB11129E83A387A844CE0C9578DBA90@BY1PR0701MB1112.namprd07.prod.outlook.com>

In terms of telling you how to detect md5sum, I'd need an example of what exactly you're looking to detect. But to block 403 pages is easy. Something like 'SecRule RESPONSE_STATUS "^403$" "id:1,deny"' might do the trick. You should of course also be fixing outdated wordpress installs :) .

Chaim Sanders
Security Researcher, SpiderLabs

Trustwave |?SMART SECURITY ON DEMAND
www.trustwave.com

-----Original Message-----
From: owasp-modsecurity-core-rule-set-bounces at lists.owasp.org [mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org] On Behalf Of Andrei
Sent: Saturday, June 27, 2015 4:57 PM
To: owasp-modsecurity-core-rule-set at lists.owasp.org
Subject: [Owasp-modsecurity-core-rule-set] CRYPTOPHP DETECTED

Hi all,

Could anyone know, how can I detect (i.e. md5sum) and block (i.e. 403 error page) files like social.png, which are crypted for botnet.

Wordpress CMS example:
-----------------
domain.ru/wp-content/plugins/revslider/images/social.png: CRYPTOPHP DETECTED!
-----------------
_______________________________________________
Owasp-modsecurity-core-rule-set mailing list Owasp-modsecurity-core-rule-set at lists.owasp.org
http://scanmail.trustwave.com/?c=4062&d=o5OP1b5s0lihsWy1_FrpB5cLZkKiX_4qvl2m88ApVA&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2fowasp-modsecurity-core-rule-set

________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

