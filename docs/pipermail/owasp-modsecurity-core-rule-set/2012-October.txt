From benwilliams+owasp at joobworld.com  Fri Oct  5 01:59:01 2012
From: benwilliams+owasp at joobworld.com (Ben WIlliams)
Date: Fri, 5 Oct 2012 14:59:01 +1300
Subject: [Owasp-modsecurity-core-rule-set] 2.2.6 rules missing action ids
Message-ID: <CANfYGQnfSExWCCUWUOhpwLjrha_RghGSAMJqHK-eKP52QkFS=g@mail.gmail.com>

Syntax error on line 35 of
/etc/httpd/modsecurity.d/activated_rules/modsecurity_crs_10_ignore_static.conf:
No action id present within the rule

Syntax error on line 38 of
/etc/httpd/modsecurity.d/activated_rules/modsecurity_crs_42_comment_spam.conf:
No action id present within the rule

Syntax error on line 169 of
/etc/httpd/modsecurity.d/optional_rules/modsecurity_crs_55_application_defects.conf:
No action id present within the rule

From jfcampos at computalleres.com  Sun Oct  7 23:52:50 2012
From: jfcampos at computalleres.com (Juan F. Campos - Computalleres.com)
Date: Sun, 07 Oct 2012 17:52:50 -0600
Subject: [Owasp-modsecurity-core-rule-set] Recommended/Rules Set for Drupal
Message-ID: <507215D2.2010705@computalleres.com>

Hi All,

kuddos to ModSecurity! Have you experience with ModSecurity+Drupal? what
rules r u using without breaking Drupal? I would like to hear some of you.

-- 
Regards,

Juan F. Campos   |  PGP Key ID: 0xDB880578

From thiago.5063 at axtronics.com.tw  Tue Oct  9 07:43:13 2012
From: thiago.5063 at axtronics.com.tw (Thiago Carneiro)
Date: Tue, 9 Oct 2012 15:43:13 +0800
Subject: [Owasp-modsecurity-core-rule-set] 2.2.6 on Source Forge
Message-ID: <CAPSNK=04A-avp32aDg-YYmRiVCP79-7c6r-68FF=F5mdEQf2pg@mail.gmail.com>

Hello,

there is any prevision when or if the new rules, version 2.2.6 will be
posted to the Source Forge Server?

Regards,
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20121009/f7da535a/attachment.html>

From rbarnett at trustwave.com  Thu Oct 11 10:57:22 2012
From: rbarnett at trustwave.com (Ryan Barnett (JIRA))
Date: Thu, 11 Oct 2012 05:57:22 -0500 (CDT)
Subject: [Owasp-modsecurity-core-rule-set] [JIRA] Closed: (CORERULES-89) Add
 application/json to tx.allowed_request_content_type
Message-ID: <1644579627.10389.1349953042299.JavaMail.root@modsec-apps.modsecurity.org>


     [ https://www.modsecurity.org/tracker/browse/CORERULES-89?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel ]

Ryan Barnett closed CORERULES-89.
---------------------------------


> Add application/json to tx.allowed_request_content_type
> -------------------------------------------------------
>
>                 Key: CORERULES-89
>                 URL: https://www.modsecurity.org/tracker/browse/CORERULES-89
>             Project: Core Rules
>          Issue Type: Improvement
>      Security Level: Normal
>          Components: Configuration
>    Affects Versions: 2.2.2
>         Environment: Enterprise Linux 6 with Apache 2.2.15 and mod_security 2.6.7 with CRS 2.2.5
>            Reporter: Andreas Dijkman
>            Assignee: Ryan Barnett
>              Labels: rules
>         Attachments: json.patch
>
>   Original Estimate: 5 minutes
>  Remaining Estimate: 5 minutes
>
> We need to add the content-type application/json to the allowed request content type, to succesfully let the application receive json-calls made from the application

--
This message is automatically generated by JIRA.
For more information on JIRA, see: http://www.atlassian.com/software/jira

        


From rbarnett at trustwave.com  Thu Oct 11 10:57:21 2012
From: rbarnett at trustwave.com (Ryan Barnett (JIRA))
Date: Thu, 11 Oct 2012 05:57:21 -0500 (CDT)
Subject: [Owasp-modsecurity-core-rule-set] [JIRA] Resolved: (CORERULES-89)
 Add application/json to tx.allowed_request_content_type
Message-ID: <794899925.10386.1349953041980.JavaMail.root@modsec-apps.modsecurity.org>


     [ https://www.modsecurity.org/tracker/browse/CORERULES-89?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel ]

Ryan Barnett resolved CORERULES-89.
-----------------------------------

    Resolution: Fixed

> Add application/json to tx.allowed_request_content_type
> -------------------------------------------------------
>
>                 Key: CORERULES-89
>                 URL: https://www.modsecurity.org/tracker/browse/CORERULES-89
>             Project: Core Rules
>          Issue Type: Improvement
>      Security Level: Normal
>          Components: Configuration
>    Affects Versions: 2.2.2
>         Environment: Enterprise Linux 6 with Apache 2.2.15 and mod_security 2.6.7 with CRS 2.2.5
>            Reporter: Andreas Dijkman
>            Assignee: Ryan Barnett
>              Labels: rules
>         Attachments: json.patch
>
>   Original Estimate: 5 minutes
>  Remaining Estimate: 5 minutes
>
> We need to add the content-type application/json to the allowed request content type, to succesfully let the application receive json-calls made from the application

--
This message is automatically generated by JIRA.
For more information on JIRA, see: http://www.atlassian.com/software/jira

        


From RBarnett at trustwave.com  Wed Oct 17 01:10:52 2012
From: RBarnett at trustwave.com (Ryan Barnett)
Date: Wed, 17 Oct 2012 01:10:52 +0000
Subject: [Owasp-modsecurity-core-rule-set] Availability of ModSecurity 2.7.0
Message-ID: <01987910BF74B341B5890120BCCE77DF031FC8@SKYMB1.trustwave.com>

Sending this to the OWASP CRS list as CRS v2.6.6 in GitHub uses the following new ModSecurity v2.7.0 actions:

  *   ver - https://sourceforge.net/apps/mediawiki/mod-security/index.php?title=Reference_Manual#ver
  *   accuracy - https://sourceforge.net/apps/mediawiki/mod-security/index.php?title=Reference_Manual#accuracy
  *   maturity - https://sourceforge.net/apps/mediawiki/mod-security/index.php?title=Reference_Manual#maturity

#################################
Availability of ModSecurity 2.7.0

The ModSecurity Development Team is pleased to announce the availability of ModSecurity 2.7.0 Stable Release.The stability of this release is good and includes many new features and bug fixes.
Highlights include:

    * Internationalization (I18N) Support
    * HMAC Token Injection to prevent data manipulation
    * PCRE JIT Support to speed up regular expression operators
    * Caching Lua VMs to speed up multiple scripts
    * Ability to add exceptions based on TAG and MSG data
    * Per-rule Performance information in audit log

Please see the release notes included into CHANGES file. For known problems and more information about bug fixes, please see the online ModSecurity Jira. Please report any bug to mod-security-developers at lists.sourceforge.net<mailto:mod-security-developers at lists.sourceforge.net>.

--
Ryan Barnett
Trustwave SpiderLabs
ModSecurity Project Leader
OWASP ModSecurity CRS Project Leader

________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is STRICTLY PROHIBITED. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20121017/9b1b4b89/attachment.html>

From martin.brolin at gmail.com  Thu Oct 18 10:51:10 2012
From: martin.brolin at gmail.com (Martin Brolin)
Date: Thu, 18 Oct 2012 12:51:10 +0200
Subject: [Owasp-modsecurity-core-rule-set] Duplicate id and lack of id...
Message-ID: <CAFFUBwSrO5Cw9Xt8-yTT8cFyUd8oUCCKF74UyCC4jiVfwOGMzg@mail.gmail.com>

Hi

In the latest crs we have duplicated id for 981240 in
"modsecurity_crs_41_sql_
injection_attacks.conf" on line 242 and
"modsecurity_crs_55_application_defects.conf" on line 121

I changed my "modsecurity_crs_55_application_defects.conf" line 121 to
981258

On "modsecurity_crs_55_application_defects.conf" line 169 we have no action
id present, I addes id='981183' on line 169

Could you please update the CRS with these changes.


/ Martin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20121018/e723b1e5/attachment.html>

From jamie at honeynet.org  Fri Oct 19 10:43:18 2012
From: jamie at honeynet.org (Jamie Riden)
Date: Fri, 19 Oct 2012 11:43:18 +0100
Subject: [Owasp-modsecurity-core-rule-set] missing httpS match in ET RFI
	attack rule
In-Reply-To: <CAHno4i_E4YUOpxL72ZkcEqfg3eUBFxGOPWHuVVt_sv=UFk8fCw@mail.gmail.com>
References: <CAHno4i_E4YUOpxL72ZkcEqfg3eUBFxGOPWHuVVt_sv=UFk8fCw@mail.gmail.com>
Message-ID: <CAHno4i9zpJD7q3=04yRKVpFnD6wb=sHOd+P+fPPamaOQxRQruQ@mail.gmail.com>

Hi all,

I found one rule which doesn't check for =https:// RFI attacks:

./slr_rules/modsecurity_crs_46_slr_et_rfi_attacks.conf

SecRule QUERY_STRING|REQUEST_BODY
"(?i:_CONF\[.*\]=(http|ftps?|php)\:\/)"
"ctl:auditLogParts=+E,setvar:'tx.msg=ET WEB_SPECIFIC_APPS GeekLog
Remote File Include
Vulnerability',setvar:tx.anomaly_score=+%{tx.critical_anomaly_score},setvar:'tx.%{rule.id}-WEB_ATTACK/RFI-%{matched_var_name}=%{matched_var}'"

This should be =(https?|ftps?|php) - same for all PHP remote file
includes, they're technically possible over any of those protocols.

( For that matter, data:// or zlib:// should be possible too - see
e.g. http://www.php.net/manual/en/wrappers.data.php , and
http://www.php.net/manual/en/wrappers.php

I have mentioned this to ET's Matt Jonkman in the past, but I gather
he was worried about the performance hit from checking
(=data|https?|ftps?|zlib| etc etc) for
all PHP RFI sigs in Emerging Threats. mod_security may not be so
sensitive to the extra pattern matches.  Just something to think about
- I can try for a proof of concept if anyone's interested?)

cheers,
 Jamie
--
Jamie Riden / jamie at honeynet.org / jamie.riden at gmail.com
http://uk.linkedin.com/in/jamieriden


-- 
Jamie Riden / jamie at honeynet.org / jamie.riden at gmail.com
http://uk.linkedin.com/in/jamieriden
Jamie Riden / jamie at honeynet.org / jamie.riden at gmail.com
http://uk.linkedin.com/in/jamieriden
Jamie Riden / jamie at honeynet.org / jamie.riden at gmail.com
http://uk.linkedin.com/in/jamieriden

From RBarnett at trustwave.com  Fri Oct 19 18:05:32 2012
From: RBarnett at trustwave.com (Ryan Barnett)
Date: Fri, 19 Oct 2012 18:05:32 +0000
Subject: [Owasp-modsecurity-core-rule-set] missing httpS match in ET RFI
 attack rule
In-Reply-To: <CAHno4i9zpJD7q3=04yRKVpFnD6wb=sHOd+P+fPPamaOQxRQruQ@mail.gmail.com>
Message-ID: <01987910BF74B341B5890120BCCE77DF034E71@SKYMB1.trustwave.com>

Hey Jamie,
I agree with your assessment and the need to strengthen the coverage.  We
have a script that auto-converts the ET Snort web signatures from here -
http://rules.emergingthreats.net/open/snort-2.8.4/rules/ - into the SLR
ModSecurity rules.

Reference blog post -
http://blog.spiderlabs.com/2011/04/modsecurity-advanced-topic-of-the-week-i
ntegrating-ids-signatures.html

The issue here is that there was not a consistent format used by ET Snort
sig writers.  For good virtual patches, we need mainly need: 1) URI, 2)
Param name - injection point and 3) Attack Category.  With this data, we
can auto-create a pretty good rule.

Let's look at one example. Here is an SQL vuln -
#by tinytwitty
#
alert tcp $EXTERNAL_NET any -> $HTTP_SERVERS $HTTP_PORTS (msg:"ET
WEB_SPECIFIC_APPS GaziYapBoz Game Portal SQL Injection Attempt --
kategori.asp kategori UPDATE"; flow:established,to_server;
uricontent:"/kategori.asp?"; nocase; uricontent:"kategori="; nocase;
uricontent:"UPDATE"; nocase; pcre:"/UPDATE.+SET/Ui";
reference:cve,CVE-2007-1410; reference:url,www.milw0rm.com/exploits/3437;
reference:url,doc.emergingthreats.net/2004402;
classtype:web-application-attack; sid:2004402; rev:5;)


We got the needed info:
1) uricontent:"kategori.asp?"
2) uricontent:"kategori="
3) SQL Injection

With this info, our scripts auto-created this rule -
# (2004402) SpiderLabs Research (SLR) Public Vulns: ET WEB_SPECIFIC_APPS
GaziYapBoz Game Portal SQL Injection Attempt -- kategori.asp kategori
UPDATE
SecRule REQUEST_LINE "@contains /kategori.asp"
"chain,phase:2,block,t:none,t:urlDecodeUni,t:htmlEntityDecode,t:normalisePa
thWin,capture,nolog,auditlog,logdata:'%{TX.0}',severity:'2',id:2004402,rev:
5,msg:'SLR: ET WEB_SPECIFIC_APPS GaziYapBoz Game Portal SQL Injection
Attempt -- kategori.asp kategori
UPDATE',tag:'web-application-attack',tag:'url,www.milw0rm.com/exploits/3437
'"
SecRule &TX:'/SQL_INJECTION.*ARGS:kategori/' "@gt 0"
"ctl:auditLogParts=+E,setvar:'tx.msg=ET WEB_SPECIFIC_APPS GaziYapBoz Game
Portal SQL Injection Attempt -- kategori.asp kategori
UPDATE',setvar:tx.anomaly_score=+%{tx.critical_anomaly_score},setvar:'tx.%{
rule.id}-WEB_ATTACK/SQL_INJECTION-%{matched_var_name}=%{matched_var}'"


The issue with the particular Snort sig that you highlighted is that it
doesn't clearly indicate the injection point/param by using -
uricontent:"param=" syntax.

#Submitted 2006-06-29 by Frank Knobbe
#
alert tcp $EXTERNAL_NET any -> $HTTP_SERVERS $HTTP_PORTS (msg:"ET
WEB_SPECIFIC_APPS GeekLog Remote File Include Vulnerability";
flow:established,to_server; uricontent:".php?"; nocase;
uricontent:"_CONF"; nocase; pcre:"/_CONF\[.*\]=(http|ftps?|php)\:\//Ui";
reference:url,securitydot.net/xpl/exploits/vulnerabilities/articles/1122/ex
ploit.html; reference:url,doc.emergingthreats.net/2002996;
classtype:web-application-attack; sid:2002996; rev:6;)

When we don't get this clean param data, we revert to using the data
provided by the original Snort rule writer.  So, your concerns about the
regex are valid but we currently can't do much about it...


I will try and look at updating our script to better handle these issues.

--
Ryan Barnett
Trustwave SpiderLabs
ModSecurity Project Leader
OWASP ModSecurity CRS Project Leader





On 10/19/12 6:43 AM, "Jamie Riden" <jamie at honeynet.org> wrote:

>Hi all,
>
>I found one rule which doesn't check for =https:// RFI attacks:
>
>./slr_rules/modsecurity_crs_46_slr_et_rfi_attacks.conf
>
>SecRule QUERY_STRING|REQUEST_BODY
>"(?i:_CONF\[.*\]=(http|ftps?|php)\:\/)"
>"ctl:auditLogParts=+E,setvar:'tx.msg=ET WEB_SPECIFIC_APPS GeekLog
>Remote File Include
>Vulnerability',setvar:tx.anomaly_score=+%{tx.critical_anomaly_score},setva
>r:'tx.%{rule.id}-WEB_ATTACK/RFI-%{matched_var_name}=%{matched_var}'"
>
>This should be =(https?|ftps?|php) - same for all PHP remote file
>includes, they're technically possible over any of those protocols.
>
>( For that matter, data:// or zlib:// should be possible too - see
>e.g. http://www.php.net/manual/en/wrappers.data.php , and
>http://www.php.net/manual/en/wrappers.php
>
>I have mentioned this to ET's Matt Jonkman in the past, but I gather
>he was worried about the performance hit from checking
>(=data|https?|ftps?|zlib| etc etc) for
>all PHP RFI sigs in Emerging Threats. mod_security may not be so
>sensitive to the extra pattern matches.  Just something to think about
>- I can try for a proof of concept if anyone's interested?)
>
>cheers,
> Jamie
>--
>Jamie Riden / jamie at honeynet.org / jamie.riden at gmail.com
>http://uk.linkedin.com/in/jamieriden
>
>
>--
>Jamie Riden / jamie at honeynet.org / jamie.riden at gmail.com
>http://uk.linkedin.com/in/jamieriden
>Jamie Riden / jamie at honeynet.org / jamie.riden at gmail.com
>http://uk.linkedin.com/in/jamieriden
>Jamie Riden / jamie at honeynet.org / jamie.riden at gmail.com
>http://uk.linkedin.com/in/jamieriden
>_______________________________________________
>Owasp-modsecurity-core-rule-set mailing list
>Owasp-modsecurity-core-rule-set at lists.owasp.org
>https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
>


________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is STRICTLY PROHIBITED. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.


From shaifful at joomla.my  Sat Oct 20 02:54:41 2012
From: shaifful at joomla.my (Shaiffulnizam Mohamad)
Date: Sat, 20 Oct 2012 10:54:41 +0800
Subject: [Owasp-modsecurity-core-rule-set] Is the latest rules compatible
	with 2.7.0 mod_sec?
Message-ID: <CAHc6GbFMdTyybh9Pxw7Ps8XnFEwkEEHL8WrCa6ib9BLyUFpeCA@mail.gmail.com>

Hi, I would like to ask, is the latest rules by OWASP is compatible with
mod_security 2.7.0? Because i have receive a lots of Syntax error,

ModSecurity: No action id present within the rule

Especially in the Optional rules and

Starting httpd: Syntax error on line 17 of
/etc/httpd/conf/crs/slr_rules/modsecurity_crs_46_slr_et_joomla_attacks.conf
ModSecurity: No action id present within the rule

How to resolve this problem. I'm not very good at this, can anybody help
and response?

thanks.

Shaiffulnizam Mohamad
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20121020/3ad83c99/attachment.html>

From tzury.by at reguluslabs.com  Sat Oct 20 20:42:33 2012
From: tzury.by at reguluslabs.com (Tzury Bar Yochay)
Date: Sat, 20 Oct 2012 22:42:33 +0200
Subject: [Owasp-modsecurity-core-rule-set] Is modsecurity vulnerable to this
	XML DoS attack
Message-ID: <CAL9DS1w0KG_Bc3vCfDX5MFqWkUJUKkaN4WYWy4P05=Bz_Unu_g@mail.gmail.com>

Hi,

I just came across this Wikipedia article called Billion Laughs
http://en.wikipedia.org/wiki/Billion_laughs and wonder if anyone ever
tested modsec XML parsing against that one

The vector is

<?xml version="1.0"?><!DOCTYPE lolz [ <!ENTITY lol "lol">
 <!ENTITY lol1 "&lol;&lol;&lol;&lol;&lol;&lol;&lol;&lol;&lol;&lol;">
 <!ENTITY lol2 "&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;">
 <!ENTITY lol3 "&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;">
 <!ENTITY lol4 "&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;">
 <!ENTITY lol5 "&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;">
 <!ENTITY lol6 "&lol5;&lol5;&lol5;&lol5;&lol5;&lol5;&lol5;&lol5;&lol5;&lol5;">
 <!ENTITY lol7 "&lol6;&lol6;&lol6;&lol6;&lol6;&lol6;&lol6;&lol6;&lol6;&lol6;">
 <!ENTITY lol8 "&lol7;&lol7;&lol7;&lol7;&lol7;&lol7;&lol7;&lol7;&lol7;&lol7;">
 <!ENTITY lol9 "&lol8;&lol8;&lol8;&lol8;&lol8;&lol8;&lol8;&lol8;&lol8;&lol8;">
]><lolz>&lol9;</lolz>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20121020/a98a9076/attachment.html>

From owasp at sic-sec.org  Sat Oct 20 21:15:56 2012
From: owasp at sic-sec.org (Achim)
Date: Sat, 20 Oct 2012 23:15:56 +0200
Subject: [Owasp-modsecurity-core-rule-set] Is modsecurity vulnerable to
 this XML DoS attack
In-Reply-To: <CAL9DS1w0KG_Bc3vCfDX5MFqWkUJUKkaN4WYWy4P05=Bz_Unu_g@mail.gmail.com>
References: <CAL9DS1w0KG_Bc3vCfDX5MFqWkUJUKkaN4WYWy4P05=Bz_Unu_g@mail.gmail.com>
Message-ID: <5083148C.7060806@sic-sec.org>

hmm, what should modsec do here?
Using a blacklist for lol, then the attacker replaces lol by lulz ;-)

This is completely valid XML syntax. I guess it is not simply detectable as
attack, just think about this example:

<?xml version="1.0"?><!DOCTYPE lolz [ <!ENTITY lol "lol">
 <!ENTITY lol1 "&lol;">
 <!ENTITY lol2 "&lol;">
 <!ENTITY lol3 "&lol1;&lol2;">
 <!ENTITY lol4 "&lol2;&lol3;">
....
]><lolz>&lol9;</lolz>

You need a sophisticated XML-parser for that.

If an application is that stupid that it accepts such user suplied XML, you
better disconnect it from network rather than trying to hot patch it, IMHO.

Just my 2 pence,
Achim

Am 20.10.2012 22:42, schrieb Tzury Bar Yochay:
> Hi,
> 
> I just came across this Wikipedia article called Billion Laughs
> http://en.wikipedia.org/wiki/Billion_laughs and wonder if anyone ever
> tested modsec XML parsing against that one
> 
> The vector is
> 
> <?xml version="1.0"?><!DOCTYPE lolz [ <!ENTITY lol "lol">
>  <!ENTITY lol1 "&lol;&lol;&lol;&lol;&lol;&lol;&lol;&lol;&lol;&lol;">
>  <!ENTITY lol2 "&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;">
>  <!ENTITY lol3 "&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;">
>  <!ENTITY lol4 "&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;">
>  <!ENTITY lol5 "&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;">
>  <!ENTITY lol6 "&lol5;&lol5;&lol5;&lol5;&lol5;&lol5;&lol5;&lol5;&lol5;&lol5;">
>  <!ENTITY lol7 "&lol6;&lol6;&lol6;&lol6;&lol6;&lol6;&lol6;&lol6;&lol6;&lol6;">
>  <!ENTITY lol8 "&lol7;&lol7;&lol7;&lol7;&lol7;&lol7;&lol7;&lol7;&lol7;&lol7;">
>  <!ENTITY lol9 "&lol8;&lol8;&lol8;&lol8;&lol8;&lol8;&lol8;&lol8;&lol8;&lol8;">
> ]><lolz>&lol9;</lolz>

From ivakili at yahoo.com  Sun Oct 21 08:07:33 2012
From: ivakili at yahoo.com (Iman Vakili)
Date: Sun, 21 Oct 2012 01:07:33 -0700 (PDT)
Subject: [Owasp-modsecurity-core-rule-set] encoding
Message-ID: <1350806853.6759.YahooMailNeo@web164901.mail.bf1.yahoo.com>



Hi

I have a big problem about how mod_security interpret other?encodings?like iso-8859-1,
when I'm sending non ASCII characters like characters from other languages (e.g my name: ????? ) ?when the encoding page is iso-8859-1(Western?European,?which is?Firefox?default browsing encoding for example) then the data will encoded in html and then transfer to the server (e.g myname: &#1575;&#1740;&#1605;&#1575;&#1606;), so I thought I can use t:htmlentitydecode to handle the problem but when I was checking my name I noticed that this?transformation?function does not work properly, it changes my name to { '\xccE'F }. I think if the function?develop?to change this kind of data to?Unicode?then it will be the best (like the new utf8tounicode function)
There are more problems for example when there is a "windows-1256" encoded web application,?my name became: %C7%26%231740%3B%E3%C7%E4, in this encoding?words doesn't match with PCRE, for example we have \w regex in many rules, ?these characters won't match to \w because of PCRE nature (which is ASCII or UTF8 base), I recommend to write a transformation function for these encodings too,?

Thanks and best regards

~IMAN?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20121021/03796086/attachment.html>

From owasp at sic-sec.org  Sun Oct 21 17:02:57 2012
From: owasp at sic-sec.org (Achim)
Date: Sun, 21 Oct 2012 19:02:57 +0200
Subject: [Owasp-modsecurity-core-rule-set] encoding
In-Reply-To: <1350806853.6759.YahooMailNeo@web164901.mail.bf1.yahoo.com>
References: <1350806853.6759.YahooMailNeo@web164901.mail.bf1.yahoo.com>
Message-ID: <50842AC1.6020605@sic-sec.org>

Hi,

the encoding is not relevant as all is 7-bit US-ASCII accoding the specifications
of HTTP. Anything else must be URL-encoded using %HH notation. You don't need to
struggle with any character set.
Consequentially all (most) rules detect non-ASCII and block, as it's considered
harmful according specifications.
Things can be different in multipart POST data.

However, you can build your own rules to handle such characters if you want to make
more detailed checks based on specific character sets.

God luck
Achim

Am 21.10.2012 10:07, schrieb Iman Vakili:
> 
> 
> Hi
> 
> I have a big problem about how mod_security interpret other encodings like iso-8859-1,
> when I'm sending non ASCII characters like characters from other languages (e.g my name: ????? )  when the encoding page is iso-8859-1(Western European, which is Firefox default browsing encoding for example) then the data will encoded in html and then transfer to the server (e.g myname: &#1575;&#1740;&#1605;&#1575;&#1606;), so I thought I can use t:htmlentitydecode to handle the problem but when I was checking my name I noticed that this transformation function does not work properly, it changes my name to { '\xccE'F }. I think if the function develop to change this kind of data to Unicode then it will be the best (like the new utf8tounicode function)
> There are more problems for example when there is a "windows-1256" encoded web application, my name became: %C7%26%231740%3B%E3%C7%E4, in this encoding words doesn't match with PCRE, for example we have \w regex in many rules,  these characters won't match to \w because of PCRE nature (which is ASCII or UTF8 base), I recommend to write a transformation function for these encodings too, 
> 
> Thanks and best regards
> 
> ~IMAN 

From PNair at barclaycardus.com  Mon Oct 22 19:01:13 2012
From: PNair at barclaycardus.com (Nair, Praveen)
Date: Mon, 22 Oct 2012 19:01:13 +0000
Subject: [Owasp-modsecurity-core-rule-set] How to enable BLOCK on a single
	CRS rule?
Message-ID: <2D8620FFA11CD047B8E51A5ECE45A775083FA325@PMEXGMB01.juniper.com>

Team,

I would appreciate your help. I would like to know if there is a possibility to BLOCK ONLY ONE rule in ModSecurity if it is configured to "Log Only" mode? Appreciate your help

With Best Regards,

Praveen Nair, CISSP, CISM, CRISC
IT Security Consultant 

Company Confidential

-----Original Message-----
From: owasp-modsecurity-core-rule-set-bounces at lists.owasp.org [mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org] On Behalf Of owasp-modsecurity-core-rule-set-request at lists.owasp.org
Sent: Monday, October 22, 2012 8:00 AM
To: owasp-modsecurity-core-rule-set at lists.owasp.org
Subject: Owasp-modsecurity-core-rule-set Digest, Vol 43, Issue 10

Send Owasp-modsecurity-core-rule-set mailing list submissions to
	owasp-modsecurity-core-rule-set at lists.owasp.org

To subscribe or unsubscribe via the World Wide Web, visit
	https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set

or, via email, send a message with subject or body 'help' to
	owasp-modsecurity-core-rule-set-request at lists.owasp.org

You can reach the person managing the list at
	owasp-modsecurity-core-rule-set-owner at lists.owasp.org

When replying, please edit your Subject line so it is more specific than "Re: Contents of Owasp-modsecurity-core-rule-set digest..."


Today's Topics:

   1. Re: encoding (Achim)


----------------------------------------------------------------------

Message: 1
Date: Sun, 21 Oct 2012 19:02:57 +0200
From: Achim <owasp at sic-sec.org>
To: Iman Vakili <ivakili at yahoo.com>
Cc: "owasp-modsecurity-core-rule-set at lists.owasp.org"
	<owasp-modsecurity-core-rule-set at lists.owasp.org>
Subject: Re: [Owasp-modsecurity-core-rule-set] encoding
Message-ID: <50842AC1.6020605 at sic-sec.org>
Content-Type: text/plain; charset=UTF-8

Hi,

the encoding is not relevant as all is 7-bit US-ASCII accoding the specifications of HTTP. Anything else must be URL-encoded using %HH notation. You don't need to struggle with any character set.
Consequentially all (most) rules detect non-ASCII and block, as it's considered harmful according specifications.
Things can be different in multipart POST data.

However, you can build your own rules to handle such characters if you want to make more detailed checks based on specific character sets.

God luck
Achim

Am 21.10.2012 10:07, schrieb Iman Vakili:
> 
> 
> Hi
> 
> I have a big problem about how mod_security interpret other encodings 
> like iso-8859-1, when I'm sending non ASCII characters like characters 
> from other languages (e.g my name: ????? )  when the encoding page is 
> iso-8859-1(Western European, which is Firefox default browsing 
> encoding for example) then the data will encoded in html and then 
> transfer to the server (e.g myname: 
> &#1575;&#1740;&#1605;&#1575;&#1606;), so I thought I can use 
> t:htmlentitydecode to handle the problem but when I was checking my 
> name I noticed that this transformation function does not work 
> properly, it changes my name to { '\xccE'F }. I think if the function 
> develop to change this kind of data to Unicode then it will be the 
> best (like the new utf8tounicode function) There are more problems for 
> example when there is a "windows-1256" encoded web application, my 
> name became: %C7%26%231740%3B%E3%C7%E4, in this encoding words doesn't 
> match with PCRE, for example we have \w regex in many rules,  these 
> characters won't match to \w because of PCRE nature (which is ASCII or 
> UTF8 base), I recommend to write a transformation function for these 
> encodings too,
> 
> Thanks and best regards
> 
> ~IMAN


------------------------------

_______________________________________________
Owasp-modsecurity-core-rule-set mailing list
Owasp-modsecurity-core-rule-set at lists.owasp.org
https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set


End of Owasp-modsecurity-core-rule-set Digest, Vol 43, Issue 10
***************************************************************



Barclaycard
www.barclaycardus.com 

This email and any files transmitted with it may contain confidential and/or proprietary information. It is intended solely for the use of the individual or entity who is the intended recipient. Unauthorized use of this information is prohibited. If you have received this in error, please contact the sender by replying to this message and delete this material from any system it may be on.



From tm3y at hotmail.com  Tue Oct 23 09:45:13 2012
From: tm3y at hotmail.com (CoeTs7)
Date: Tue, 23 Oct 2012 09:45:13 +0000
Subject: [Owasp-modsecurity-core-rule-set] A suggestion for modsecurity crs
Message-ID: <SNT129-W49F34DA83DFB6B84193499C790@phx.gbl>








hi, after i installed mod_sec with crs, i found a false positive which is triggered by  the section "SQL Tautologies" in modsecurity_crs_41_sql_injection_attacks.conf.  i think this rule is aim at finding some probe action like ?para=-1 and 1=1 or ?para=-1' and '1'='1 
  but it  most often was triggered when meet a url/cookie like a=action because of a matching of a=a.  
 i think this regular expression below can be more accurate (based on SpiderLabs-owasp-modsecurity-crs-v2.2.5-0-g28e4ec8.tar.gz),just replacing ([\d\w]+) by (\d+|'\w+') and (\d+|'\w+):
 $ diff -Nur base_rules/modsecurity_crs_41_sql_injection_attacks.conf.bak base_rules/modsecurity_crs_41_sql_injection_attacks.conf--- base_rules/modsecurity_crs_41_sql_injection_attacks.conf.bak	2012-10-23 17:25:57.417231153 +0800+++ base_rules/modsecurity_crs_41_sql_injection_attacks.conf	2012-10-23 17:26:14.820567687 +0800@@ -73,7 +73,7 @@ # # -=[ SQL Tautologies ]=- #-SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|REQUEST_FILENAME|ARGS_NAMES|ARGS|XML:/* "(?i:([\s'\"`???\(\)]*)?([\d\w]+)([\s'\"`???\(\)]*)?(?:=|<=>|r?like|sounds\s+like|regexp)([\s'\"`???\(\)]*)?\2|([\s'\"`???\(\)]*)?([\d\w]+)([\s'\"`???\(\)]*)?(?:!=|<=|>=|<>|<|>|\^|is\s+not|not\s+like|not\s+regexp)([\s'\"`???\(\)]*)?(?!\6)([\d\w]+))" \+SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|REQUEST_FILENAME|ARGS_NAMES|ARGS|XML:/* "(?i:([\s'\"`???\(\)]*)?(\d+|'\w+')([\s'\"`???\(\)]*)?(?:=|<=>|r?like|sounds\s+like|regexp)([\s'\"`???\(\)]*)?\2|([\s'\"`???\(\)]*)?(\d+|'\w+')([\s'\"`???\(\)]*)?(?:!=|<=|>=|<>|<|>|\^|is\s+not|not\s+like|not\s+regexp)([\s'\"`???\(\)]*)?(?!\6)(\d+|'\w+))" \         "phase:2,rev:'2.2.5',capture,multiMatch,t:none,t:urlDecodeUni,t:replaceComments,ctl:auditLogParts=+E,block,msg:'SQL Injection Attack',id:'950901',logdata:'%{TX.0}',severity:'2',tag:'WEB_ATTACK/SQL_INJECTION',tag:'WASCTC/WASC-19',tag:'OWASP_TOP_10/A1',tag:'OWASP_AppSensor/CIE1',tag:'PCI/6.5.2',setvar:'tx.msg=%{rule.msg}',setvar:tx.sql_injection_score=+%{tx.critical_anomaly_score},setvar:tx.anomaly_score=+%{tx.critical_anomaly_score},setvar:tx.%{rule.id}-WEB_ATTACK/SQL_INJECTION-%{matched_var_name}=%{tx.0}"
Is this more accurate?  And thanks for the great work !


Regards,
tm3y


 		 	   		  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20121023/e0db49ab/attachment.html>

From jamie at honeynet.org  Thu Oct 25 07:50:12 2012
From: jamie at honeynet.org (Jamie Riden)
Date: Thu, 25 Oct 2012 08:50:12 +0100
Subject: [Owasp-modsecurity-core-rule-set] missing httpS match in ET RFI
 attack rule
In-Reply-To: <01987910BF74B341B5890120BCCE77DF034E71@SKYMB1.trustwave.com>
References: <CAHno4i9zpJD7q3=04yRKVpFnD6wb=sHOd+P+fPPamaOQxRQruQ@mail.gmail.com>
	<01987910BF74B341B5890120BCCE77DF034E71@SKYMB1.trustwave.com>
Message-ID: <CAHno4i-SavYG7uk8UsTmGeKSJWmGTd+J0=kzqkjO+cBWWPQpYA@mail.gmail.com>

On 19 October 2012 19:05, Ryan Barnett <RBarnett at trustwave.com> wrote:
> Hey Jamie,
> I agree with your assessment and the need to strengthen the coverage.  We
> have a script that auto-converts the ET Snort web signatures from here -
> http://rules.emergingthreats.net/open/snort-2.8.4/rules/ - into the SLR
..
>
> #Submitted 2006-06-29 by Frank Knobbe
> #
> alert tcp $EXTERNAL_NET any -> $HTTP_SERVERS $HTTP_PORTS (msg:"ET
> WEB_SPECIFIC_APPS GeekLog Remote File Include Vulnerability";
> flow:established,to_server; uricontent:".php?"; nocase;
> uricontent:"_CONF"; nocase; pcre:"/_CONF\[.*\]=(http|ftps?|php)\:\//Ui";
> reference:url,securitydot.net/xpl/exploits/vulnerabilities/articles/1122/ex
> ploit.html; reference:url,doc.emergingthreats.net/2002996;
> classtype:web-application-attack; sid:2002996; rev:6;)
>
> When we don't get this clean param data, we revert to using the data
> provided by the original Snort rule writer.  So, your concerns about the
> regex are valid but we currently can't do much about it...

No worries; I have flagged this on the ET-list, so hopefully they'll
fix soon and the problem will go away for now.

cheers,
 Jamie
-- 
Jamie Riden / jamie at honeynet.org / jamie.riden at gmail.com
http://uk.linkedin.com/in/jamieriden

From RBarnett at trustwave.com  Fri Oct 26 23:31:43 2012
From: RBarnett at trustwave.com (Ryan Barnett)
Date: Fri, 26 Oct 2012 23:31:43 +0000
Subject: [Owasp-modsecurity-core-rule-set] OWASP AppSecUSA Talk: Building a
	Web Attacker Dashboard
Message-ID: <9DDBF417-B9B3-4252-805F-C2144DCD7B22@trustwave.com>

I just posted the slides from my AppSecUSA talk -

https://speakerdeck.com/rcbarnett/building-a-web-attacker-dashboard-with-modsecurity-and-beef

Cheers.

--
Ryan Barnett
Lead Security Researcher
Trustwave - SpiderLabs


________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is STRICTLY PROHIBITED. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.


