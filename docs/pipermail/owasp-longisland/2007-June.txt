From owasp-longisland at lists.owasp.org  Fri Jun  1 17:23:48 2007
From: owasp-longisland at lists.owasp.org (OWASP Long Island Chapter Mailing List)
Date: Fri, 1 Jun 2007 17:23:48 -0400
Subject: [OWASP-LongIsland] Sample Java Questions - Secure Programming
	Related.
Message-ID: <ECDD905D94348A4883ABAE615129AE1001846A1A@Email.prgf.com>

Hi, all.

I would like to share with you some Java secure programming questions.
I'll send you the answers next week.  Have fun.

Regular Questions:

1) The Java synchronized keyword is important to security because of
which of the following:

A. It allows two different functions to execute simultaneously.

B. It prevents multiple developers from writing the same block of code.

C. It allows the class to be loaded as soon as the JRE starts.

D. It prevents multiple threads from accessing a block of code at the
same time.

2) Which of the following is true and causes a security concern for Java
inner classes?

A. Private members of the inner and outer classes are given
package-visible accessor

methods.

B. Final methods of either class can be extended.

C. Inner classes are not recognized by the JVM, therefore they are
translated to subclasses

of the containing class.

D. Inner classes' data members are cached in memory by the JVM for
optimization.

3) When enabling your J2EE server application with SSL, which of the
following must occur?

A. The certificate be issued by a third-party Certificate Authority,
I.e. Verisign.

B. The certificate be signed either by a Certificate Authority or
self-signed.

C. The Sun cryptographic provider package be installed in your JVM.

D. An offline key exchange be done with the client prior to SSL
communications.

4) In a J2EE application using a JSESSIONID, which of the following does
not help protect the

session?

A. Encrypting the communications that transmit the JSESSIONID.

B. Storing the JSESSIONID as a session cookie instead of a permanent
cookie.

C. Validating the JSESSIONID to ensure it doesn't contain meta
characters.

D. Making the JSESSIONID long and random.

10

Three Challenging Questions

5) If you had to choose only one, in which J2EE tier is it BEST to
perform input validation?

A. Any tier, so long as it gets done properly.

B. The enterprise (backend) tier, as this would prevent injection
attacks into backend

systems like SQL-injection.

C. The middle tier, as this is the front-door to your application's
resources.

D. The client tier, as this is the front-door to your application and
validation should be done

as soon as possible.

6) Java offers the PreparedStatement class which when used properly
protects against SQL

Injection attacks. What is wrong with its use in the following code
snippet that potentially

enables an injection attack?

PreparedStatement stmt = con.prepareStatement

("SELECT ssn FROM usersTable WHERE "

+ "name = " + getParameter("username") );

ResultSet rs = stmt.executeQuery();

A. Because the user is able to specify the username they can change it
to someone else's

username and access another user's SSN.

B. The 'username' parameter is not being validated for dangerous
content.

C. The SQL string must be defined elsewhere, and then put into the
PreparedStatment in

order for it to protect the query.

D. The PreparedStatement is being used as a normal, dynamic SQL query.
No data is

being entered via the safe substitution methods.

7) J2EE Filters can improve the security posture of an application for
each of the following

reasons, EXCEPT:

A. Filters can be used to validate data in a JDBC database connection to
protect against

injection attacks.

B. Filters can be used to "wrap" a J2EE application, adding new security
measures without

modifying existing code.

C. Filters can modify incoming requests to the application, allowing
input validation and

other security operations to occur.

D. Filters can modify outgoing responses from the application, allowing
header-rewriting

and other security operations to occur.

11

Two Difficult Questions

8) Consider the following 'Session Fixation' attack scenario:

An attacker browses to a website and receives a JSESSIONID without
logging in. Then

embeds that ID in a link and emails it to a victim. The victim clicks on
the link and

proceeds to login, using the JSESSIONID that is known by the attacker.
The attacker

can now masquerade as the victim.

Which of the following BEST mitigates this threat?

A. Users should be instructed not to click on links in email.

B. The application should provide a new JSESSIONID to each user when
they authenticate.

C. Users should be required to enter text that is represented in a
garbled graphic, proving

they are human.

D. The application server should be configured to expire the JSESSIONID
very quickly to

reduce the window of opportunity.

9) Which of the following is NOT true about declarative J2EE access
control as setup by the

web.xml file?

A. Developers must still use the isUserInRole method to restrict access
between

resources and roles that are declared in the web.xml file.

B. Wildcard patterns can be used to setup access restrictions across
many different

resources at once.

C. Roles can be linked, allowing roles to be equivalent to or supersets
of other roles.

D. Individual methods within EJBs can be restricted to certain roles,
which ultimately

restricts the end users that can access the method.

Two Additional Code Questions

10) The code snippet below should have a "finally" block, why?

File fid = new File("C:/testfile");

try{

FileInputStream fis = new FileInputStream( fid );

...

fid.close();

} catch ( Exception e ) {

Logger.log("Exception accessing file.");

}

A. It would allow the program to access debugging information if an
exception were to occur.

B. It would prevent other code in the JVM from trying to access the same
resource.

C. It would be the best place to perform the fid.close() function.

D. It would ensure the program caught every possible type of exception
that could come out

of that section of code.

12

11) The code snippet below performs an access control check for a Web
user accessing a

system object. Which of the following would meaningfully improve this
mechanism?

//get account for which user wants details from the Request

String rqstdId = request.getParameter("ACCNT_ID");

//check that user is privileged to view the requested object

boolean accessAllowed = false;

String[] userAccountList = getAccountIds(user);

for (int i=0; i<userAccountList.length; i++) {

if (userAccountList[i].equals( rqstdId ) accessAllowed

= true;

}

if ( accessAllowed == true ) {

displayDetails( rqstdId );

} else { logAccessControlFailure(); }

A. The web interface should be redesigned to allow a unique URI for each
requested

account Id, so the Id is not treated as a parameter. This prevents a
user from tampering

with the parameter.

B. The user should not send in a reference to the actual account Id.
Instead they should

make a selection from indices that are mapped to the actual accounts
they have access

to. This prevents a user from tampering with an actual account Id.

C. The displayDetails() code should not be a separate method. Because
the access

control check was performed here, so should the actual access to the
resource. This

allows a code audit to verify that the access check directly controls
the resource.

D. The accessAllowed boolean should be initialized to true, then set to
false when known

to be false. This would prevent an error from unintentionally
restricting access to the

object.

 
Helen Gao
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-longisland/attachments/20070601/5cdc6bc4/attachment.html 

From owasp-longisland at lists.owasp.org  Mon Jun  4 17:57:29 2007
From: owasp-longisland at lists.owasp.org (OWASP Long Island Chapter Mailing List)
Date: Mon, 4 Jun 2007 17:57:29 -0400
Subject: [OWASP-LongIsland] NIST & OWASP guidelines on how to secure web
	servers
Message-ID: <ECDD905D94348A4883ABAE615129AE1001846C76@Email.prgf.com>

Hi, all.
 
NIST, National Insititute of Standards and Technologies, just published
its Guidelines on Securing Public Web Servers.  It refers to OWASP's
guide containing Web application development best practices on their
site at http://www.owasp.org/index.php/OWASP_Guide_Project. 
URL to the NIST draft:
http://csrc.nist.gov/publications/drafts.html#sp800-44-version2
<http://csrc.nist.gov/publications/drafts.html#sp800-44-version2> .
 
Helen Gao
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-longisland/attachments/20070604/ba759c28/attachment.html 

