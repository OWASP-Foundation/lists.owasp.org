From dinis at ddplus.net  Mon May  1 05:59:58 2006
From: dinis at ddplus.net (Dinis Cruz)
Date: Mon, 01 May 2006 10:59:58 +0100
Subject: [Owasp-london] Review of Owasp-London Chapter meeting on WAF (Web Application Firewalls)
Message-ID: <4455DC1E.5040005@ddplus.net>

Hello

Here is my brain dump about what happened (from my point of view of 
course) last Tuesday (25th April) on the Owasp London Chapter meeting 
(hosted on a central London pub).

As you can read here 
(http://sourceforge.net/mailarchive/forum.php?thread_id=10209024&forum_id=40284), 
here 
(http://sourceforge.net/mailarchive/forum.php?thread_id=10232868&forum_id=40284) 
and here 
(http://sourceforge.net/mailarchive/forum.php?thread_id=10239385&forum_id=40284) 
the theme of the night was "Web Application Firewalls (WAF): Where do 
they add value and who should be using them". After a public invite for 
participation, 4 vendors committed to come in an present their WAF 
appliances: F5, Imperva, Breach and Fortify (I should actually say 3 WAF 
Appliance vendors since Fortify presented a similar tool with a 
different approach).

My objective with this presentation was to go beyond the Marketing BS 
and discuss the type of issues that these tools:

    - are able to defend out of the box (i.e. with minor configuration's 
by the user)
    - are able to defend with some customization
    - are NOT able to defend

I was also very interested in the usability of the tools and the user 
experience of the WAFifyed website  (i.e. what happens when a potential 
attack is detected).

To level the playing field, each vendor was given a vulnerable website 
that they needed to protect. This website was Foundstone's HacmeBank 
v2.0 (the original plan was to use Owasp's SiteGenerator but some 
vendors had some problems in getting it to work (prob with windows 2003 
SP1 I think), so due to time constrains we used the new version of 
HacmeBank (2.0) which is very stable and feature (i.e. vulnerability) 
rich :)

To give an extra humph to the event (and to justify the tight deadlines) 
I added the element "Hacme Bank is under attack, here are the exploit 
vectors being used, your mission is to patch this system as soon as 
possible and stop the attackers". It should be noted that the vendors 
did not had a lot of time in their hands (from receiving the list of 
vulnerabilities to patch to the event).

For reference, here is a PDF (created using the new Owasp PenTest 
Reporter tool) describing all vulnerabilities: 
"http://209.97.215.160/install/Hacme Bank Pentest Report (created by 
Owasp PenTest Reporter) - ).pdf" .

Now that the scenario is set, here are my brain dump of the night:

    1) Firstly I am happy that the 4 vendors made it, that we had a good 
number of attendees (although not all Owasp London Chapter members :) 
and that the  F5 sponsorship went ok (with paid: pub dedicated to event, 
plasma screen, open bar and food)

    2) The audio recording also went ok, so give me a couple days and I 
will upload it to a server on MP3 format (need to do some audio 
normalization and minor editing)

    3) On the presentations it self (in the order they were made):
          a) F5
               - Brought their WAF Appliance (1U Rack) and did a live 
presentation
               - Showed several demos on the HacmeBank vulnerabilities 
(XSS, SQL Injection, Cookies)
               - Discussed briefly some advanced options that their 
product has: Leveraging the BigIP scripting capabilities, protecting 
admin pages by forcing a certain 'navigation path'
                - Maybe because this was the first presenter, but they 
really run out of time (the 20m minutes allocated were religiously 
enforced). I did felt that the presenter at times went over the top on 
the explanations given, and spent too much time on simple stuff. 
Basically I would had preferred if he gave the presentation at twice the 
pace covering twice the material.
          b) Imperva
               - Brought their WAF Appliance (1U Rack) and did a live 
presentation
               - Similar to F5, showed several demos on the HacmeBank 
vulnerabilities (XSS, SQL Injection, Cookies) covering roughly the same 
material
               - Shown very powerful functionality on their product, 
namely the Forms / Cookie rules creation user interface
               - Had several problems during the presentation (e.g. some 
demos that didn't work)
          c) Breach
               - No WAF Appliance, videos shown instead
               - A couple too many slides for my taste, and not enough 
demos.
               - That said, I liked Ofer style and he has clearly a very 
good technical understanding of the WAF world (he is also the organizer 
of the Owasp Chapter in Israel)
               - I didn't particularly agree with the concept of "Dinis 
WAF Requirements", which imply that what I was asking the WAF vendors is 
very advanced, difficult and has very little customer demand.
          d) Fortify
               - Fortify didn't present a WAF Appliance. They took the 
concept of WAF and applied it to the actual targeted application. Steps 
used by their product: 1) reverse engineering the J2EE application, 2) 
identify the attack surface, 3) identify insecure coding practices, 4) 
apply 'security protection layers' were necessary, and 5) monitor and 
report malicious activity. Due to the fact that their .Net product is 
still under development, Fortify's demo was based on the Owasp Web Goat 
tool.
               - I was quite impressed with their solution and can see 
real-live cases where it could be very effective (especially since some 
of the security vulnerabilities that I want to address via a WAF 
solution can only be made at the Application layer)
               - The main problem with this solution is that it requires 
a binary change/redeployment of the targeted application, and it still a 
very young product (e.g. not used by a large number of clients to 
protect mission critical web applications)
 
[this next set of comments apply mainly to the 3 WAF vendors]

   5) Coming back to the WAF Appliance presentations, there are a couple 
of comments that I have to make:

        a) The presentations were all very BASIC (as in Simplistic). 
Come on!!!! doing an SQL injection or cookies demo using Paros? That is 
'so' last century. I was expecting at least some Unit Tests or custom 
use of Web Application Security Scanners. But Paros? (or for that mater 
Web Scarab, Fiddler, Firefox/IE Tamper request, @Stake Web Proxy, 
etc...). My problem here is not that such tool(s) were used, but the 
fact that they don't allow for the automated test of the numerous 
variations that exploits like SQL Injection have. Remember that the 
WAF's must be able to detect ALL (or most) types of SQL Injections (not 
only the ones with a quote). Think of the problems that IDS have in 
detecting RPC traffic, the WAF will have exactly the same types of issues.

        b) I might be wrong on this one, but I do get the feeling that 
these WAF vendors have a good understanding of 'data validation' attacks 
( SQL Injection, XSS, Cookies, etc) but fail to grasp the security 
implications of (for example) application logic attacks (like the one in 
Hacme Bank where user A is able to access data from user B). More 
worryingly, they seem happy with this situation since (from their point 
of view) their clients don't need that functionality.

       c) Where are the published independent security reviews of these 
products? I find amazing that vendors that are selling a 'security 
product', e.g. a software application (WAF) that protects other software 
applications (Websites), do not understand the value of hiring 
independent 3rd party security companies to perform source code security 
audits to their products (note that the final results of these audits 
must be published and made available to clients). As discussed during 
the panel, it is probably impossible to create bug/vulnerability free 
applications, but to NOT perform independent security audits to their 
code is crazy. Since these vendors are still in the 'Functionality Arms 
Race' phase of their products. Basically, the development teams are more 
focused on features, performance and user experience than on Security 
(and I don't have to tell you how 'secure' apps developed like this tend 
to be :). Maybe the solution is to put a WAF protecting a WAF protecting 
a WAF protecting a website :). Note to vendors: If am am wrong in this 
comment, feel free to prove me wrong and publish the security audits 
performed on your current product(s).

       d) another area which I still think the WAF don't get it, is the 
fact that no solution allows for the easy manipulation of the data being 
analyzed (both at input and at output). At the moment you only have two 
choices: 1) let the request go, 2) block the request and either show a 
custom error page or logout the user. This is to radical. We need the 
ability to change the contents of form fields (or page contents) 
dynamically. This will be the only way that some vulnerabilities can be 
effectively managed and mitigated (while limiting the damage cause by 
false positives). Note: same WAFs have the functionality to replace 
cookies with their own (WAF controlled value)

       e) Why don't they use their WAFs to protect the WAF's web 
interface? Clearly a great test for the usability of a WAF product is to 
use it to protect the complex GUIs used on the WAF management and 
monitoring. Also, when (not if) vulnerabilities are found in their 
product, they could use their WAF to mitigate those security issues.

       g) And what about their website? Are the vendor's websites 
protected by their WAFs?

       h) To the other companies/products that want to get into the WAF 
market, advice to them is: "Create a WAF that allows a good PenTester to 
mitigate 90%+ of the vulnerabilities that he/she discovered". Basically, 
grab HacmeBank and SiteGenerator and use it to take your product were 
the current WAF vendors don't seem to want to go.

       i) What about the Web Application Firewall Evaluation Criteria 
(http://www.webappsec.org/projects/wafec/)? How do this WAF appliances 
rate to this? I might have missed it, but where is the public disclose 
of this information?

    6) After thinking about what happened for a couple days, and trying 
to come up with an explanation for the issues raised on item 5), I think 
that I came up with an answer. The problem is that the WAF technical 
teams don't have Web Penetration Testing experience. They have a 
reasonable level of understanding on how to attack an web application, 
but they are missing the advanced material (I am also puzzled by the 
lack of use of Web Application Security Scanners (WASS)). Maybe the 
solution is for a WAF company and a WASS company to merge and maximize 
the skills sets of both.

    7) Please take my comments with a pinch of salt :) . It is to late 
at night here and I am just doing a brain dump :)

    8) Moving forward, here are some ideas:

          a) Expand the current Hacme Bank challenge to all WAF vendors 
and see who is able to mitigate what. I already asked the 4 WAF vendors 
that participated on the London event to send me the list of issues 
(from Hacme Bank v2.0) that they product is: 
                * Able to protect with default functionality
                * Able to protect with Customization     
                * Not able to protect

          b) Implement all documented HacmeBank vulnerabilities in 
SiteGenerator (also add different types of navigation)

          c) help to organize other Owasp chapter events around the 
world on the same subject and using the same model (Owasp chapter 
leaders let-me know if you are interested)

          d) Implement the Foundstone Validator .Net tool on HacmeBank 
to show how most of those security issues can be resolved when the WAF 
has access to the application layer

          e) write a white paper about WAFs focusing on where they 
should be used and on where they are not effective

          f) expand the analysis of the Hacme Bank vulnerabilities and 
discuss how they could/should be mitigated at WAF

    9) Finally, I just want to give a warning to the WAF  vendors: "you 
must make your appliance invisible to attackers". By invisible I mean 
that it should not be possible to fingerprint your appliance remotely 
from the Internet. Because if you do allow this to occur, then you 
dramatically increase the risk to your clients of being exploited by a 
vulnerability in your WAF (and remember the Witty worm 
(http://www.newsfactor.com/story.xhtml?story_id=23559 and 
http://news.zdnet.co.uk/internet/security/0,39020375,39149459,00.htm) 
which was a targeted exploit on a security product).

That's it, thanks for reading, and I am looking forward to your comments.

Best regards

Dinis Cruz
Owasp .Net Project
www.owasp.net











From dinis at ddplus.net  Mon May  1 18:47:25 2006
From: dinis at ddplus.net (Dinis Cruz)
Date: Mon, 01 May 2006 23:47:25 +0100
Subject: [Owasp-london] Re: [WEB SECURITY] Review of Owasp-London Chapter meeting on WAF
 (Web Application Firewalls)
In-Reply-To: <Pine.LNX.4.33.0605011710540.25564-100000@bali.secure-net.de>
References: <Pine.LNX.4.33.0605011710540.25564-100000@bali.secure-net.de>
Message-ID: <44568FFD.4070001@ddplus.net>

Achim Hoffmann wrote:
> hmm, does this mean that nobody is able to configure WebProxy to test ALL
> (known) vulnerabilities of a categorie? Come on ;-)
>   
I am not saying that nobody would able to use a WebProxy to test ALL 
(known) vulnerabilities. That is even doable with notepad and NetCat :)

But that is not my point. My point is that these guys build WAF for a 
living, and I was expecting a more sophisticated method to automatically 
test these issues.

Remember that most HacmeBank vulnerabilities (namely the ones the WAF 
vendors did their demos on) are basic examples, which would be easy to 
implement in a automated test suite (if they had one)
> I guess that the majority of cases in the logical and semantical layer could
> not be detected by a WAF. 
My argument is that they should be detected by a WAF (we might agree to 
disagree on this one :).
> That would require that the WAF knows the business
> logic of all applications it protects.
>   
Exactly, and because that is a complex task, the WAF's vendors don't do 
it today (but in my point of view will need to do it in the future)

Think about this, normal firewalls don't do Layer 7 (port 80,443 traffic 
is not checked), if then you have WAFs (at layer 7) that only check for 
basic exploits, what happens next?

XYZ appliance that handles the Layer 7.5? (i.e. the application logic)
> Let the WAF detect the simplistic attacks, that's currently still a challenge.
>   
Well I refuse to accept that WAFs can only handle simplistic attacks.

That said, If the bottom line is that (for now) WAFs can only handle 
simple attacks, then somebody needs to update they marketing material:

"...TrafficShield? is a web application firewall that provides 
comprehensive, proactive, network and application-layer protection from 
generalized and targeted attacks..." 
(http://www.f5.com/products/TrafficShield/)

"...The SecureSphere Web Application Firewall is the only solution to 
provide automated attack protection for Web and Web Services 
applications....Dynamic Profiling is the foundation of a multi-layer 
security architecture that provides complete protection for all layers 
of the application infrastructure, including the network, server and 
application" 
(http://www.imperva.com/products/securesphere/web_application_firewall.html)

"...WebDefend is a next-generation Internet security appliance that 
provides comprehensive Web application protection to resolve information 
security challenges such as Identity Theft, Information Leakage, 
regulatory compliance, and insecurely coded applications..." 
(http://www.breach.com/products_breachgatewebdefend.asp)
> !!        d) another area which I still think the WAF don't get it, is the
> !! fact that no solution allows for the easy manipulation of the data being
> !! analyzed (both at input and at output). At the moment you only have two
> !! choices: 1) let the request go, 2) block the request and either show a
> !! custom error page or logout the user. This is to radical.
>
> hmm, the F in WAF stands for firewall and not for (substituting) filter.
>   
That depends on your definition of Firewall :)

Here is a good one:

"What is a Web Application Firewall?
An intermediary device, sitting between a web-client and a web server, 
analyzing OSI Layer-7 messages for violations in the programmed security 
policy. A web application firewall is used as a security device 
protecting the web server from attack." 
(http://www.cgisecurity.com/questions/webappfirewall.shtml)

So unless you want to start dividing Layer 7 traffic into multiple 
sub-layers (Data Validation basic, Data Validation advanced, 
Authentication, Strong Authentication, Authorization, Deep Authorization 
(I made up this last one :), etc...) I would argue that Web Application 
Firewalls are layer 7 firewalls, and should be able to protect against 
all attacks deployed via that layer.
> Do you know of any network firewall which behaves this way?
>   
No I don't know of a WAF Appliance that behaves like this (which is a 
shame because I would have several clients for them). This gap in the 
market is exactly why I am defending that this is were the new 
generation of WAF vendors should be focusing their effort on.
> It's dangerous that a WAF has its own idea how to sort data out (even if
> configuerable). 
Why? Remember that I defend that the point where WAFs are most effective 
and valuable is when they are being configured by an experienced and 
knowledgeable security consultant (preferably not the one that found the 
vulnerability).

Note that I am not defending that you should actively use a WAF on the 
entire website (especially the functions that dynamically change data).

What I am defending is that If I (the client) know that a certain 
vulnerability exist (discovered by a security consultant or by analyzing 
the logs of a 'live' attack (occurring at that moment)), then what I 
(the client) want, is to be able to as quickly as possible (and with the 
least amount of side effects) deploy a 'patch' to my application which 
will a) mitigate the vulnerability and b) have zero or minimal impact on 
my normal user's session experience.

Being able to dynamically manipulate form's (and other http) content has 
the following advantages:

    1) There are some security issues that you cannot mitigate in any 
other way (for example information leakage, or certain types of data 
validation)
    2) It minimizes site effects and allows much more flexibility on how 
do you handle (potential) malicious input (remember that at the moment 
you get a black or white decision (allow or deny))
    3) It allows for the detection of an attack without giving the 
attackers any clue that the attack was detected (of course that I am 
assuming here that there are incident escalation procedures in place)
> Just an example: the username comes as O'Reilly and your
> smart WAF replaces the '. Does it replace for SQL injection or for XSS?
> Which one would you prefer if the application needs both?
>   
That depends on the case and on the specific vulnerability. What I know 
is that I don't want Mr O'Reilly to get a 404 page or to be logged out 
every time he signs up for a newsletter (let's assume that the login 
page was not vulnerable to SQL Injection, since Mr O'Reilly needs to 
login :) )

I also like to have the possibility to replace one ' with '' (two ' ) or 
with an html version of a ' (&#39;)  or with an _ (underscore) or with a 
"[quote was here]" tag (to be replaced on the way out with a ' again :)

The bottom line is that you need to be able to have the flexibility to 
provide the business with a solution that A) solves/mitigates the 
security vulnerability and B) doesn't affect the user's experience
> Input data validation has to be done by each application for each value
> and this validation is bound to the destination of the data. 
Of course, Data Validation should ultimately be the responsibility of 
the Application. But with development cycles of weeks or months, WAFs 
'patches' are the perfect solution to stop current or future attacks on 
known vulnerabilities.

In the medium term, what would also help would be if web applications 
were able to provide (to the WAFs) xml feeds containing detailed 
information about all input points (i.e. the attack surface). Think 
Struts (http://struts.apache.org/)
> Something
> a WAF usually does not know.
>   
It doesn't do know, but I wish they did
> !! We need the
> !! ability to change the contents of form fields (or page contents)
> !! dynamically. This will be the only way that some vulnerabilities can be
> !! effectively managed and mitigated (while limiting the damage cause by
> !! false positives). Note: same WAFs have the functionality to replace
> !! cookies with their own (WAF controlled value)
>
> Don't know what you mean here. If you mean values of input fields, see above.
>   
Do you still disagree with me that sometimes you NEED to be able to 
dynamically change the contents of an HTTP request (namely Form values)
> If you mean values of fields in output (response), then there're still a
> couple of WAFs which could encrypt values in responses and check if the
> correct value comes back in the next request.
>   
Sure and that is a good thing they do.

But what about when secret data is sent on a response? Shouldn't we be 
able to stop that?
> !!        e) Why don't they use their WAFs to protect the WAF's web
> !! interface? Clearly a great test for the usability of a WAF product is to
> !! use it to protect the complex GUIs used on the WAF management and
> !! monitoring. Also, when (not if) vulnerabilities are found in their
> !! product, they could use their WAF to mitigate those security issues.
>
> OK, i.g. this is a true requirement. But keep in mind that a WAF is not
> reachable from the internet, but it should only be reachable from trusted
> hosts. Most WAFs support such a protection.
True, but in large enterprises the number of nodes that will be able to 
connect to those boxes will be quite high, but (as I explain below) the 
main reason for this request is not to reduce the risk created by these 
web applications
>  Why should a WAF protect itself
> from trusted hosts, that sounds overkill.
>   
Why? Surely a WAF should be able to handle such task without any 
problems? Aren't they all designed to handle complex websites generating 
large amounts of traffic?
> IMHO, such a protection is sufficient 'cause it only leaves the administration
> interface open to session riding (which could be solved with isolated
> administration hosts).
>   
If isolation administration hosts worked in large corporate 
environments.... :)
> Anyway, I agree that it's a shame that some WAF have XSS, SQL injection
> and some other vulnerabilities.
>   
The problem here is not that they have those issues (that is a problem 
with the software industry), the problem is that these WAF don't have a 
quick way to deploy patches for those vulnerabilities.

Also by using the WAF to protect their web applications (which are 
complex and feature rich) they (the WAF vendors) would gain a huge 
amount of experience on what a complex application looks like, and how 
to handle the issues that are created by protecting it with their product.

I would also be a great demo for them (unless they couldn't protect 
their WAF security issues with their WAF :)
> !!        g) And what about their website? Are the vendor's websites
> !! protected by their WAFs?
>
> a simple LOL could be the comment here, but I'm aware that some vendors
> are listening ...
>   
:)
> !!        i) What about the Web Application Firewall Evaluation Criteria
> !! (http://www.webappsec.org/projects/wafec/)? How do this WAF appliances
> !! rate to this? I might have missed it, but where is the public disclose
> !! of this information?
>
> yes the WAFEC could be used for that. But did you read at least the first 3
> paragraphs in the Introduction of that document before asking this question?
>   
I had read the WAFEC document before, and just to make sure I didn't 
miss any thing major I just re-read those first the paragraphs 
(http://www.webappsec.org/projects/wafec/v1/wasc-wafec-v1.0.html), and I 
don't understand your question. What is there in these 3 paragraphs that 
I should be aware of?

Note that all that I am asking for is for the WAF vendors to publicly 
disclose their WAFEC results.

Dinis Cruz
Owasp .Net Project
www.owasp.net




From dinis at ddplus.net  Mon May  1 19:15:18 2006
From: dinis at ddplus.net (Dinis Cruz)
Date: Tue, 02 May 2006 00:15:18 +0100
Subject: [Owasp-london] Re: [WEB SECURITY] Re: [Owasp-dotnet] Review of Owasp-London Chapter
 meeting on WAF (Web Application Firewalls)
In-Reply-To: <A0A653F4CB702442BFBF2FAF02C031E9014B1576@xmb-sjc-21e.amer.cisco.com>
References: <A0A653F4CB702442BFBF2FAF02C031E9014B1576@xmb-sjc-21e.amer.cisco.com>
Message-ID: <44569686.8050303@ddplus.net>

Bill McGee (bam) wrote:
>
> The trick, of course, is that standards in this area are just starting 
> to emerge.
>
Agree, and unfortunately we are still quite far from having decent 
standards
>
> So who do you get to do the verification? There is no EAL equivalent 
> for this space, #)3 people will always be able to find someone like 
> Tolley Group to provide whatever verification you want if the fee is 
> right.
>
Very true, which is why I am defending  the public disclosure of those 
security audits and verifications.

In the current environment, the public release of these reports will 
probably be the only way that you will have 'proper' security 
evaluations done (since it will expose the reputation of the 
companies/consultants doing it).

Another event which will dramatically change the current (in)security 
landscape of the products we use, will be when companies have to 
publicly disclose what unpatched vulnerabilities exist in their product 
(think eEye's upcoming vulnerability disclosure page: 
http://www.eeye.com/html/research/upcoming/index.html).

The key here, is to give paying customers information about the quality 
and security of the products that they are buying, so that they can make 
informed decisions.
>
>
> We *really* need a standards body to step up and establish/conduct a 
> soup-to-nuts verification plan. An interoperability test would also be 
> nice...
>
The problem is that at the moment there doesn't seem to be enough 
backing (both financial and in energy) to create such standards

For example at owasp there is a new project called Web Application 
Security Standard (WASS see http://www.owasp.org/standards/wass.html) 
which "...aims at creating a proposed set of minimum requirements a web 
application must exhibit...". But as always, the progress is severely 
limited by lack of resources.

Back to WAF effectiveness, in the short term, I think that tools like 
SiteGenerator (and HacmeBank) will allow for the pragmatic and focused 
analysis of the performance of WAF (Web Application Firewalls) and WAS 
(Web Application Scanners)

Dinis Cruz
Owasp .Net Project
www.owasp.net

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.owasp.org/pipermail/owasp-london/attachments/20060502/df3f5470/attachment.html 

From dinis at ddplus.net  Tue May  2 19:27:18 2006
From: dinis at ddplus.net (Dinis Cruz)
Date: Wed, 03 May 2006 00:27:18 +0100
Subject: [Owasp-london] Re: [WEB SECURITY] Review of Owasp-London Chapter meeting on WAF
 (Web Application Firewalls)
In-Reply-To: <Pine.LNX.4.33.0605022329290.9913-100000@bali.secure-net.de>
References: <Pine.LNX.4.33.0605022329290.9913-100000@bali.secure-net.de>
Message-ID: <4457EAD6.5020606@ddplus.net>

Achim Hoffmann wrote:
> !! Exactly, and because that is a complex task, the WAF's vendors don't do
> !! it today (but in my point of view will need to do it in the future)
>
> Good requirement. But I'd like to see WAFs first which fit into existing
> environemnts and do simple jobs there, before they claim to do something
> sophisticated.
>   
If by simple jobs you mean basic SQL Injection and XSS, then they 
already do that today
> Agreed. But application logic (your words: layer 7.5) is not part of layer 7.
>   
ok, so what is it part of?

Layer 8 is the User, so you can go there.

Where will you put that request?

Also how do you define Application Logic? Some WAFs are able to handle 
some types of application logic (namely the ones you can match to a 
signature)

So what you need is to find a name (or layer) for 'Application Logic not 
picked up by the WAFs that sits between Layer 7 and Layer 8'

:)

> !! > It's dangerous that a WAF has its own idea how to sort data out ..
> !! Why? Remember that I defend that the point where WAFs are most effective
> !! and valuable is when they are being configured by an experienced and
> !! knowledgeable security consultant (preferably not the one that found the
> !! vulnerability).
>
> See my example: O'Connor
> Do you configure to substitute for XSS or SQL injection?
>   
You do what:

    a) mitigates the vulnerability that existed on that form field, and

    b) is compatible with the business requirement for the affected 
functionality (i.e. doesn't break functionality and user experience)
   
    c) is more cost effective to resolve
> Also, configuering a WAF that way could not be done by a knowledgable
> consultant, except (s)he knows all the details of the application. 
If you are applying a 'patch', then you only need to know the details of 
the affected page(s). That is the beauty of the solution that I am 
proposing: Maximum Security Impact with Minimum Business side effects
> But then,
> with that knowledge, the consultant could fix the application code also.
> I'm not saying that knowledgeable security consultant are not able to
> configure WAFs, but they need to know the application including its logic,
> usually not possible without having the developer aside.
>   
I am not sure about this, it helps to have access to the developers, but 
these patches can be created and deployed without them. In fact, in this 
case, the Testers could even be more important than the developers since 
regression testing will need to be done on those 'patches'.
> !! Do you still disagree with me that sometimes you NEED to be able to
> !! dynamically change the contents of an HTTP request (namely Form values)
>
> Agree or disagree is not the question here. I personally don't like the
> idea that the WAF changes data.
Liking or not Linking is not the question here :), I personally want to 
have the option to make the WAF change the data dynamically.
>  It's purpose is to allow or to reject.
> The main reason for this strict behaviour is that you never know if the
> changed data cause problems elsewhere, or an other attack is possible with
> the changed data.
> My favorite rule: reject anything you don't know or you don't expect.
>   
This only works in clear scenarios, where you have 100% certainty that 
what you are seeing is an attack.

What about when you are not sure? Maybe you only have 80% certainty that 
what you are seeing is an attack. what do you do in these scenarios?
> !! But what about when secret data is sent on a response? Shouldn't we be
> !! able to stop that?
>
> If it is in a form, and read only, then it could be encrypted. 
What do you mean by '... then it could be encrypted'?
 
If the secret data is going out on a http response (to a valid http 
request),  then you have two choices:

       a) block the request
       b) modify the content in real time and remove/protect the secret data
> Cite:
>   "However, our aim is not to document the
>    features that must be supported in order for a product to be called a
>    web application firewall. Web application firewalls are simply too
>    complex to be treated like this."
>   
yes, but I never said that the WAFs had to support the entire WAFEC? I 
just want to know their responses to it.
> Hmm, if all your questions addressed the vendors only, but have not been
> addressed to the readers of the mailing list, then my comments could have
> been avoided :)
>   
What vendors? By the number of responses so far it seems that no vendor 
is interested in debating these points on a public forum

Best regards

Dinis Cruz
Owasp .Net Project
www.owasp.net








From mindsx at gmail.com  Mon May  1 08:28:33 2006
From: mindsx at gmail.com (MindsX)
Date: Mon, 1 May 2006 13:28:33 +0100
Subject: [Owasp-london] Re: [Owasp-dotnet] Review of Owasp-London Chapter meeting on WAF (Web Application Firewalls)
In-Reply-To: <4455DC1E.5040005@ddplus.net>
References: <4455DC1E.5040005@ddplus.net>
Message-ID: <17ccfb680605010528j1e1f6bd3y9967174d457318c5@mail.gmail.com>

My $0.02... [I seem to be giving alot away recently]....

5    c) Where are the published independent security reviews of these
products? I find amazing that vendors that are selling a 'security
product', e.g. a software application (WAF) that protects other software
applications (Websites), do not understand the value of hiring
independent 3rd party security companies to perform source code security
audits to their products (note that the final results of these audits
must be published and made available to clients). As discussed during
the panel,

>it is probably impossible to create bug/vulnerability free applications, <

but to NOT perform independent security audits to their
code is crazy. Since these vendors are still in the 'Functionality Arms
Race' phase of their products. Basically, the development teams are more
focused on features, performance and user experience than on Security
(and I don't have to tell you how 'secure' apps developed like this tend
to be :). Maybe the solution is to put a WAF protecting a WAF protecting
a WAF protecting a website :). Note to vendors: If am am wrong in this
comment, feel free to prove me wrong and publish the security audits
performed on your current product(s).


I'm sure that some of the more experienced coders on the planet will
disagree with the above...

No mention of the fact that one vendor outright _refused_ to admit that web
applications can be made secure - by that I do not mean the underlying code
processors, but more the functionality / logic enforcement and input
validation....

Nor the fact that they was a hard squeeze on the fact that the same vendors'
appliance has known bugs....

Hmm... Secure your network by adding more bugs..... or are customers
supposed to purchase an extra WAF from a different vendor to protect the
original WAF's interface ? anyways...


Moreover - how many of the above build upon open-source with out fulfilling
the requirements of the relative license? [apparently F5 are in the
clear... or so they say...]

Think the EFF should engage....

MindsX
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.owasp.org/pipermail/owasp-london/attachments/20060501/b46a6487/attachment.html 

From bam at cisco.com  Mon May  1 10:55:50 2006
From: bam at cisco.com (Bill McGee (bam))
Date: Mon, 1 May 2006 07:55:50 -0700
Subject: [Owasp-london] RE: [WEB SECURITY] Re: [Owasp-dotnet] Review of Owasp-London Chapter meeting on WAF (Web Application Firewalls)
Message-ID: <A0A653F4CB702442BFBF2FAF02C031E9014B1576@xmb-sjc-21e.amer.cisco.com>

The trick, of course, is that standards in this area are just starting to emerge. So who do you get to do the verification? There is no EAL equivalent for this space, #)3 people will always be able to find someone like Tolley Group to provide whatever verification you want if the fee is right.

We *really* need a standards body to step up and establish/conduct a soup-to-nuts verification plan. An interoperability test would also be nice...

That's MY .02...

-bill

 -----Original Message-----
From: 	MindsX [mailto:mindsx at gmail.com]
Sent:	Mon May 01 06:18:29 2006
To:	Dinis Cruz
Cc:	owasp-dotnet at lists.sourceforge.net; owasp-london at lists.sourceforge.net; webappsec at securityfocus.com; websecurity at webappsec.org
Subject:	[WEB SECURITY] Re: [Owasp-dotnet] Review of Owasp-London Chapter meeting on WAF (Web Application Firewalls)

My $0.02... [I seem to be giving alot away recently]....

5    c) Where are the published independent security reviews of these
products? I find amazing that vendors that are selling a 'security
product', e.g. a software application (WAF) that protects other software
applications (Websites), do not understand the value of hiring
independent 3rd party security companies to perform source code security
audits to their products (note that the final results of these audits
must be published and made available to clients). As discussed during
the panel,

>it is probably impossible to create bug/vulnerability free applications, <

but to NOT perform independent security audits to their
code is crazy. Since these vendors are still in the 'Functionality Arms
Race' phase of their products. Basically, the development teams are more
focused on features, performance and user experience than on Security
(and I don't have to tell you how 'secure' apps developed like this tend
to be :). Maybe the solution is to put a WAF protecting a WAF protecting
a WAF protecting a website :). Note to vendors: If am am wrong in this
comment, feel free to prove me wrong and publish the security audits
performed on your current product(s).


I'm sure that some of the more experienced coders on the planet will
disagree with the above...

No mention of the fact that one vendor outright _refused_ to admit that web
applications can be made secure - by that I do not mean the underlying code
processors, but more the functionality / logic enforcement and input
validation....

Nor the fact that they was a hard squeeze on the fact that the same vendors'
appliance has known bugs....

Hmm... Secure your network by adding more bugs..... or are customers
supposed to purchase an extra WAF from a different vendor to protect the
original WAF's interface ? anyways...


Moreover - how many of the above build upon open-source with out fulfilling
the requirements of the relative license? [apparently F5 are in the
clear... or so they say...]

Think the EFF should engage....

MindsX
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.owasp.org/pipermail/owasp-london/attachments/20060501/713ca1b2/attachment.html 

From david.munge at equallykeen.com  Tue May  2 06:55:35 2006
From: david.munge at equallykeen.com (David Munge)
Date: Tue, 2 May 2006 11:55:35 +0100
Subject: [Owasp-london] RE: Owasp-london digest, Vol 1 #78 - 4 msgs
In-Reply-To: <20060501224901.AF00F33F07@sc8-sf-spam1.sourceforge.net>
Message-ID: <00a201c66dd6$f40699a0$0201a8c0@mungedesktop>

As a completely non technical OWASP follower (there are some) I thought I
might add a comment on the WAF shoot out organised by Dinis, in London the
other evening.  By the way it's a great compliment to Dinis's energy and
enthusiasm that the evening took place.

The standard of the presentations was very varied. f5 deserve credit for
fronting up, paying for the evening, and it was interesting that at least
one of their senior managers attended. As a non techi I found f5's
presentation suited my level the best.

There can be no pretense that the evening could be taken too seriously by
any company thinking of buying a WAF solution. There are just as many
questions unanswered from the evening as answered. However the strength of
such a meeting is the ability of both vendors and OWASP to build bridges and
to start to communicate with each other.

The requirement in security at all levels for belt and braces is paramount,
and it needs both sides of the argument to recognise this.

Dinis brings up the old issue of WASS and WAFS talking to each other, AVDL
was designed to make this happen, but there does not seem to be the will in
the vendor sector to make such a sensible idea happen.

What about starting with OWASP tools?

David Munge


-----Original Message-----
From: owasp-london-admin at lists.sourceforge.net
[mailto:owasp-london-admin at lists.sourceforge.net] On Behalf Of
owasp-london-request at lists.sourceforge.net
Sent: Monday, May 01, 2006 11:48 PM
To: owasp-london at lists.sourceforge.net
Subject: Owasp-london digest, Vol 1 #78 - 4 msgs

Send Owasp-london mailing list submissions to
	owasp-london at lists.sourceforge.net

To subscribe or unsubscribe via the World Wide Web, visit
	https://lists.sourceforge.net/lists/listinfo/owasp-london
or, via email, send a message with subject or body 'help' to
	owasp-london-request at lists.sourceforge.net

You can reach the person managing the list at
	owasp-london-admin at lists.sourceforge.net

When replying, please edit your Subject line so it is more specific
than "Re: Contents of Owasp-london digest..."


Today's Topics:

   1. Review of Owasp-London Chapter meeting on WAF (Web Application
Firewalls) (Dinis Cruz)
   2. [WEB SECURITY] Review of Owasp-London Chapter meeting on WAF (Web
Application Firewalls) (Dinis Cruz)
   3. Re: [WEB SECURITY] Review of Owasp-London Chapter meeting on WAF
       (Web Application Firewalls) (Dinis Cruz)

--__--__--

Message: 1
Date: Mon, 01 May 2006 10:59:58 +0100
From: Dinis Cruz <dinis at ddplus.net>
To: "'owasp-dotnet at lists.sourceforge.net'"
<owasp-dotnet at lists.sourceforge.net>,
  owasp-london at lists.sourceforge.net,  webappsec at securityfocus.com, 
 websecurity at webappsec.org
Subject: [Owasp-london] Review of Owasp-London Chapter meeting on WAF (Web
Application Firewalls)

Hello

Here is my brain dump about what happened (from my point of view of 
course) last Tuesday (25th April) on the Owasp London Chapter meeting 
(hosted on a central London pub).

As you can read here 
(http://sourceforge.net/mailarchive/forum.php?thread_id=10209024&forum_id=40
284), 
here 
(http://sourceforge.net/mailarchive/forum.php?thread_id=10232868&forum_id=40
284) 
and here 
(http://sourceforge.net/mailarchive/forum.php?thread_id=10239385&forum_id=40
284) 
the theme of the night was "Web Application Firewalls (WAF): Where do 
they add value and who should be using them". After a public invite for 
participation, 4 vendors committed to come in an present their WAF 
appliances: F5, Imperva, Breach and Fortify (I should actually say 3 WAF 
Appliance vendors since Fortify presented a similar tool with a 
different approach).

My objective with this presentation was to go beyond the Marketing BS 
and discuss the type of issues that these tools:

    - are able to defend out of the box (i.e. with minor configuration's 
by the user)
    - are able to defend with some customization
    - are NOT able to defend

I was also very interested in the usability of the tools and the user 
experience of the WAFifyed website  (i.e. what happens when a potential 
attack is detected).

To level the playing field, each vendor was given a vulnerable website 
that they needed to protect. This website was Foundstone's HacmeBank 
v2.0 (the original plan was to use Owasp's SiteGenerator but some 
vendors had some problems in getting it to work (prob with windows 2003 
SP1 I think), so due to time constrains we used the new version of 
HacmeBank (2.0) which is very stable and feature (i.e. vulnerability) 
rich :)

To give an extra humph to the event (and to justify the tight deadlines) 
I added the element "Hacme Bank is under attack, here are the exploit 
vectors being used, your mission is to patch this system as soon as 
possible and stop the attackers". It should be noted that the vendors 
did not had a lot of time in their hands (from receiving the list of 
vulnerabilities to patch to the event).

For reference, here is a PDF (created using the new Owasp PenTest 
Reporter tool) describing all vulnerabilities: 
"http://209.97.215.160/install/Hacme Bank Pentest Report (created by 
Owasp PenTest Reporter) - ).pdf" .

Now that the scenario is set, here are my brain dump of the night:

    1) Firstly I am happy that the 4 vendors made it, that we had a good 
number of attendees (although not all Owasp London Chapter members :) 
and that the  F5 sponsorship went ok (with paid: pub dedicated to event, 
plasma screen, open bar and food)

    2) The audio recording also went ok, so give me a couple days and I 
will upload it to a server on MP3 format (need to do some audio 
normalization and minor editing)

    3) On the presentations it self (in the order they were made):
          a) F5
               - Brought their WAF Appliance (1U Rack) and did a live 
presentation
               - Showed several demos on the HacmeBank vulnerabilities 
(XSS, SQL Injection, Cookies)
               - Discussed briefly some advanced options that their 
product has: Leveraging the BigIP scripting capabilities, protecting 
admin pages by forcing a certain 'navigation path'
                - Maybe because this was the first presenter, but they 
really run out of time (the 20m minutes allocated were religiously 
enforced). I did felt that the presenter at times went over the top on 
the explanations given, and spent too much time on simple stuff. 
Basically I would had preferred if he gave the presentation at twice the 
pace covering twice the material.
          b) Imperva
               - Brought their WAF Appliance (1U Rack) and did a live 
presentation
               - Similar to F5, showed several demos on the HacmeBank 
vulnerabilities (XSS, SQL Injection, Cookies) covering roughly the same 
material
               - Shown very powerful functionality on their product, 
namely the Forms / Cookie rules creation user interface
               - Had several problems during the presentation (e.g. some 
demos that didn't work)
          c) Breach
               - No WAF Appliance, videos shown instead
               - A couple too many slides for my taste, and not enough 
demos.
               - That said, I liked Ofer style and he has clearly a very 
good technical understanding of the WAF world (he is also the organizer 
of the Owasp Chapter in Israel)
               - I didn't particularly agree with the concept of "Dinis 
WAF Requirements", which imply that what I was asking the WAF vendors is 
very advanced, difficult and has very little customer demand.
          d) Fortify
               - Fortify didn't present a WAF Appliance. They took the 
concept of WAF and applied it to the actual targeted application. Steps 
used by their product: 1) reverse engineering the J2EE application, 2) 
identify the attack surface, 3) identify insecure coding practices, 4) 
apply 'security protection layers' were necessary, and 5) monitor and 
report malicious activity. Due to the fact that their .Net product is 
still under development, Fortify's demo was based on the Owasp Web Goat 
tool.
               - I was quite impressed with their solution and can see 
real-live cases where it could be very effective (especially since some 
of the security vulnerabilities that I want to address via a WAF 
solution can only be made at the Application layer)
               - The main problem with this solution is that it requires 
a binary change/redeployment of the targeted application, and it still a 
very young product (e.g. not used by a large number of clients to 
protect mission critical web applications)
 
[this next set of comments apply mainly to the 3 WAF vendors]

   5) Coming back to the WAF Appliance presentations, there are a couple 
of comments that I have to make:

        a) The presentations were all very BASIC (as in Simplistic). 
Come on!!!! doing an SQL injection or cookies demo using Paros? That is 
'so' last century. I was expecting at least some Unit Tests or custom 
use of Web Application Security Scanners. But Paros? (or for that mater 
Web Scarab, Fiddler, Firefox/IE Tamper request, @Stake Web Proxy, 
etc...). My problem here is not that such tool(s) were used, but the 
fact that they don't allow for the automated test of the numerous 
variations that exploits like SQL Injection have. Remember that the 
WAF's must be able to detect ALL (or most) types of SQL Injections (not 
only the ones with a quote). Think of the problems that IDS have in 
detecting RPC traffic, the WAF will have exactly the same types of issues.

        b) I might be wrong on this one, but I do get the feeling that 
these WAF vendors have a good understanding of 'data validation' attacks 
( SQL Injection, XSS, Cookies, etc) but fail to grasp the security 
implications of (for example) application logic attacks (like the one in 
Hacme Bank where user A is able to access data from user B). More 
worryingly, they seem happy with this situation since (from their point 
of view) their clients don't need that functionality.

       c) Where are the published independent security reviews of these 
products? I find amazing that vendors that are selling a 'security 
product', e.g. a software application (WAF) that protects other software 
applications (Websites), do not understand the value of hiring 
independent 3rd party security companies to perform source code security 
audits to their products (note that the final results of these audits 
must be published and made available to clients). As discussed during 
the panel, it is probably impossible to create bug/vulnerability free 
applications, but to NOT perform independent security audits to their 
code is crazy. Since these vendors are still in the 'Functionality Arms 
Race' phase of their products. Basically, the development teams are more 
focused on features, performance and user experience than on Security 
(and I don't have to tell you how 'secure' apps developed like this tend 
to be :). Maybe the solution is to put a WAF protecting a WAF protecting 
a WAF protecting a website :). Note to vendors: If am am wrong in this 
comment, feel free to prove me wrong and publish the security audits 
performed on your current product(s).

       d) another area which I still think the WAF don't get it, is the 
fact that no solution allows for the easy manipulation of the data being 
analyzed (both at input and at output). At the moment you only have two 
choices: 1) let the request go, 2) block the request and either show a 
custom error page or logout the user. This is to radical. We need the 
ability to change the contents of form fields (or page contents) 
dynamically. This will be the only way that some vulnerabilities can be 
effectively managed and mitigated (while limiting the damage cause by 
false positives). Note: same WAFs have the functionality to replace 
cookies with their own (WAF controlled value)

       e) Why don't they use their WAFs to protect the WAF's web 
interface? Clearly a great test for the usability of a WAF product is to 
use it to protect the complex GUIs used on the WAF management and 
monitoring. Also, when (not if) vulnerabilities are found in their 
product, they could use their WAF to mitigate those security issues.

       g) And what about their website? Are the vendor's websites 
protected by their WAFs?

       h) To the other companies/products that want to get into the WAF 
market, advice to them is: "Create a WAF that allows a good PenTester to 
mitigate 90%+ of the vulnerabilities that he/she discovered". Basically, 
grab HacmeBank and SiteGenerator and use it to take your product were 
the current WAF vendors don't seem to want to go.

       i) What about the Web Application Firewall Evaluation Criteria 
(http://www.webappsec.org/projects/wafec/)? How do this WAF appliances 
rate to this? I might have missed it, but where is the public disclose 
of this information?

    6) After thinking about what happened for a couple days, and trying 
to come up with an explanation for the issues raised on item 5), I think 
that I came up with an answer. The problem is that the WAF technical 
teams don't have Web Penetration Testing experience. They have a 
reasonable level of understanding on how to attack an web application, 
but they are missing the advanced material (I am also puzzled by the 
lack of use of Web Application Security Scanners (WASS)). Maybe the 
solution is for a WAF company and a WASS company to merge and maximize 
the skills sets of both.

    7) Please take my comments with a pinch of salt :) . It is to late 
at night here and I am just doing a brain dump :)

    8) Moving forward, here are some ideas:

          a) Expand the current Hacme Bank challenge to all WAF vendors 
and see who is able to mitigate what. I already asked the 4 WAF vendors 
that participated on the London event to send me the list of issues 
(from Hacme Bank v2.0) that they product is: 
                * Able to protect with default functionality
                * Able to protect with Customization     
                * Not able to protect

          b) Implement all documented HacmeBank vulnerabilities in 
SiteGenerator (also add different types of navigation)

          c) help to organize other Owasp chapter events around the 
world on the same subject and using the same model (Owasp chapter 
leaders let-me know if you are interested)

          d) Implement the Foundstone Validator .Net tool on HacmeBank 
to show how most of those security issues can be resolved when the WAF 
has access to the application layer

          e) write a white paper about WAFs focusing on where they 
should be used and on where they are not effective

          f) expand the analysis of the Hacme Bank vulnerabilities and 
discuss how they could/should be mitigated at WAF

    9) Finally, I just want to give a warning to the WAF  vendors: "you 
must make your appliance invisible to attackers". By invisible I mean 
that it should not be possible to fingerprint your appliance remotely 
from the Internet. Because if you do allow this to occur, then you 
dramatically increase the risk to your clients of being exploited by a 
vulnerability in your WAF (and remember the Witty worm 
(http://www.newsfactor.com/story.xhtml?story_id=23559 and 
http://news.zdnet.co.uk/internet/security/0,39020375,39149459,00.htm) 
which was a targeted exploit on a security product).

That's it, thanks for reading, and I am looking forward to your comments.

Best regards

Dinis Cruz
Owasp .Net Project
www.owasp.net










--__--__--

Message: 2
Date:	Mon, 01 May 2006 10:59:58 +0100
From:	Dinis Cruz <dinis at ddplus.net>
To:	"'owasp-dotnet at lists.sourceforge.net'" 
	<owasp-dotnet at lists.sourceforge.net>,
	owasp-london at lists.sourceforge.net, webappsec at securityfocus.com,
	websecurity at webappsec.org
Subject: [Owasp-london] [WEB SECURITY] Review of Owasp-London Chapter
meeting on WAF (Web Application Firewalls)

Hello

Here is my brain dump about what happened (from my point of view of 
course) last Tuesday (25th April) on the Owasp London Chapter meeting 
(hosted on a central London pub).

As you can read here 
(http://sourceforge.net/mailarchive/forum.php?thread_id=10209024&forum_id=40
284), 
here 
(http://sourceforge.net/mailarchive/forum.php?thread_id=10232868&forum_id=40
284) 
and here 
(http://sourceforge.net/mailarchive/forum.php?thread_id=10239385&forum_id=40
284) 
the theme of the night was "Web Application Firewalls (WAF): Where do 
they add value and who should be using them". After a public invite for 
participation, 4 vendors committed to come in an present their WAF 
appliances: F5, Imperva, Breach and Fortify (I should actually say 3 WAF 
Appliance vendors since Fortify presented a similar tool with a 
different approach).

My objective with this presentation was to go beyond the Marketing BS 
and discuss the type of issues that these tools:

    - are able to defend out of the box (i.e. with minor configuration's 
by the user)
    - are able to defend with some customization
    - are NOT able to defend

I was also very interested in the usability of the tools and the user 
experience of the WAFifyed website  (i.e. what happens when a potential 
attack is detected).

To level the playing field, each vendor was given a vulnerable website 
that they needed to protect. This website was Foundstone's HacmeBank 
v2.0 (the original plan was to use Owasp's SiteGenerator but some 
vendors had some problems in getting it to work (prob with windows 2003 
SP1 I think), so due to time constrains we used the new version of 
HacmeBank (2.0) which is very stable and feature (i.e. vulnerability) 
rich :)

To give an extra humph to the event (and to justify the tight deadlines) 
I added the element "Hacme Bank is under attack, here are the exploit 
vectors being used, your mission is to patch this system as soon as 
possible and stop the attackers". It should be noted that the vendors 
did not had a lot of time in their hands (from receiving the list of 
vulnerabilities to patch to the event).

For reference, here is a PDF (created using the new Owasp PenTest 
Reporter tool) describing all vulnerabilities: 
"http://209.97.215.160/install/Hacme Bank Pentest Report (created by 
Owasp PenTest Reporter) - ).pdf" .

Now that the scenario is set, here are my brain dump of the night:

    1) Firstly I am happy that the 4 vendors made it, that we had a good 
number of attendees (although not all Owasp London Chapter members :) 
and that the  F5 sponsorship went ok (with paid: pub dedicated to event, 
plasma screen, open bar and food)

    2) The audio recording also went ok, so give me a couple days and I 
will upload it to a server on MP3 format (need to do some audio 
normalization and minor editing)

    3) On the presentations it self (in the order they were made):
          a) F5
               - Brought their WAF Appliance (1U Rack) and did a live 
presentation
               - Showed several demos on the HacmeBank vulnerabilities 
(XSS, SQL Injection, Cookies)
               - Discussed briefly some advanced options that their 
product has: Leveraging the BigIP scripting capabilities, protecting 
admin pages by forcing a certain 'navigation path'
                - Maybe because this was the first presenter, but they 
really run out of time (the 20m minutes allocated were religiously 
enforced). I did felt that the presenter at times went over the top on 
the explanations given, and spent too much time on simple stuff. 
Basically I would had preferred if he gave the presentation at twice the 
pace covering twice the material.
          b) Imperva
               - Brought their WAF Appliance (1U Rack) and did a live 
presentation
               - Similar to F5, showed several demos on the HacmeBank 
vulnerabilities (XSS, SQL Injection, Cookies) covering roughly the same 
material
               - Shown very powerful functionality on their product, 
namely the Forms / Cookie rules creation user interface
               - Had several problems during the presentation (e.g. some 
demos that didn't work)
          c) Breach
               - No WAF Appliance, videos shown instead
               - A couple too many slides for my taste, and not enough 
demos.
               - That said, I liked Ofer style and he has clearly a very 
good technical understanding of the WAF world (he is also the organizer 
of the Owasp Chapter in Israel)
               - I didn't particularly agree with the concept of "Dinis 
WAF Requirements", which imply that what I was asking the WAF vendors is 
very advanced, difficult and has very little customer demand.
          d) Fortify
               - Fortify didn't present a WAF Appliance. They took the 
concept of WAF and applied it to the actual targeted application. Steps 
used by their product: 1) reverse engineering the J2EE application, 2) 
identify the attack surface, 3) identify insecure coding practices, 4) 
apply 'security protection layers' were necessary, and 5) monitor and 
report malicious activity. Due to the fact that their .Net product is 
still under development, Fortify's demo was based on the Owasp Web Goat 
tool.
               - I was quite impressed with their solution and can see 
real-live cases where it could be very effective (especially since some 
of the security vulnerabilities that I want to address via a WAF 
solution can only be made at the Application layer)
               - The main problem with this solution is that it requires 
a binary change/redeployment of the targeted application, and it still a 
very young product (e.g. not used by a large number of clients to 
protect mission critical web applications)
 
[this next set of comments apply mainly to the 3 WAF vendors]

   5) Coming back to the WAF Appliance presentations, there are a couple 
of comments that I have to make:

        a) The presentations were all very BASIC (as in Simplistic). 
Come on!!!! doing an SQL injection or cookies demo using Paros? That is 
'so' last century. I was expecting at least some Unit Tests or custom 
use of Web Application Security Scanners. But Paros? (or for that mater 
Web Scarab, Fiddler, Firefox/IE Tamper request, @Stake Web Proxy, 
etc...). My problem here is not that such tool(s) were used, but the 
fact that they don't allow for the automated test of the numerous 
variations that exploits like SQL Injection have. Remember that the 
WAF's must be able to detect ALL (or most) types of SQL Injections (not 
only the ones with a quote). Think of the problems that IDS have in 
detecting RPC traffic, the WAF will have exactly the same types of issues.

        b) I might be wrong on this one, but I do get the feeling that 
these WAF vendors have a good understanding of 'data validation' attacks 
( SQL Injection, XSS, Cookies, etc) but fail to grasp the security 
implications of (for example) application logic attacks (like the one in 
Hacme Bank where user A is able to access data from user B). More 
worryingly, they seem happy with this situation since (from their point 
of view) their clients don't need that functionality.

       c) Where are the published independent security reviews of these 
products? I find amazing that vendors that are selling a 'security 
product', e.g. a software application (WAF) that protects other software 
applications (Websites), do not understand the value of hiring 
independent 3rd party security companies to perform source code security 
audits to their products (note that the final results of these audits 
must be published and made available to clients). As discussed during 
the panel, it is probably impossible to create bug/vulnerability free 
applications, but to NOT perform independent security audits to their 
code is crazy. Since these vendors are still in the 'Functionality Arms 
Race' phase of their products. Basically, the development teams are more 
focused on features, performance and user experience than on Security 
(and I don't have to tell you how 'secure' apps developed like this tend 
to be :). Maybe the solution is to put a WAF protecting a WAF protecting 
a WAF protecting a website :). Note to vendors: If am am wrong in this 
comment, feel free to prove me wrong and publish the security audits 
performed on your current product(s).

       d) another area which I still think the WAF don't get it, is the 
fact that no solution allows for the easy manipulation of the data being 
analyzed (both at input and at output). At the moment you only have two 
choices: 1) let the request go, 2) block the request and either show a 
custom error page or logout the user. This is to radical. We need the 
ability to change the contents of form fields (or page contents) 
dynamically. This will be the only way that some vulnerabilities can be 
effectively managed and mitigated (while limiting the damage cause by 
false positives). Note: same WAFs have the functionality to replace 
cookies with their own (WAF controlled value)

       e) Why don't they use their WAFs to protect the WAF's web 
interface? Clearly a great test for the usability of a WAF product is to 
use it to protect the complex GUIs used on the WAF management and 
monitoring. Also, when (not if) vulnerabilities are found in their 
product, they could use their WAF to mitigate those security issues.

       g) And what about their website? Are the vendor's websites 
protected by their WAFs?

       h) To the other companies/products that want to get into the WAF 
market, advice to them is: "Create a WAF that allows a good PenTester to 
mitigate 90%+ of the vulnerabilities that he/she discovered". Basically, 
grab HacmeBank and SiteGenerator and use it to take your product were 
the current WAF vendors don't seem to want to go.

       i) What about the Web Application Firewall Evaluation Criteria 
(http://www.webappsec.org/projects/wafec/)? How do this WAF appliances 
rate to this? I might have missed it, but where is the public disclose 
of this information?

    6) After thinking about what happened for a couple days, and trying 
to come up with an explanation for the issues raised on item 5), I think 
that I came up with an answer. The problem is that the WAF technical 
teams don't have Web Penetration Testing experience. They have a 
reasonable level of understanding on how to attack an web application, 
but they are missing the advanced material (I am also puzzled by the 
lack of use of Web Application Security Scanners (WASS)). Maybe the 
solution is for a WAF company and a WASS company to merge and maximize 
the skills sets of both.

    7) Please take my comments with a pinch of salt :) . It is to late 
at night here and I am just doing a brain dump :)

    8) Moving forward, here are some ideas:

          a) Expand the current Hacme Bank challenge to all WAF vendors 
and see who is able to mitigate what. I already asked the 4 WAF vendors 
that participated on the London event to send me the list of issues 
(from Hacme Bank v2.0) that they product is: 
                * Able to protect with default functionality
                * Able to protect with Customization     
                * Not able to protect

          b) Implement all documented HacmeBank vulnerabilities in 
SiteGenerator (also add different types of navigation)

          c) help to organize other Owasp chapter events around the 
world on the same subject and using the same model (Owasp chapter 
leaders let-me know if you are interested)

          d) Implement the Foundstone Validator .Net tool on HacmeBank 
to show how most of those security issues can be resolved when the WAF 
has access to the application layer

          e) write a white paper about WAFs focusing on where they 
should be used and on where they are not effective

          f) expand the analysis of the Hacme Bank vulnerabilities and 
discuss how they could/should be mitigated at WAF

    9) Finally, I just want to give a warning to the WAF  vendors: "you 
must make your appliance invisible to attackers". By invisible I mean 
that it should not be possible to fingerprint your appliance remotely 
from the Internet. Because if you do allow this to occur, then you 
dramatically increase the risk to your clients of being exploited by a 
vulnerability in your WAF (and remember the Witty worm 
(http://www.newsfactor.com/story.xhtml?story_id=23559 and 
http://news.zdnet.co.uk/internet/security/0,39020375,39149459,00.htm) 
which was a targeted exploit on a security product).

That's it, thanks for reading, and I am looking forward to your comments.

Best regards

Dinis Cruz
Owasp .Net Project
www.owasp.net









---------------------------------------------------------------------
The Web Security Mailing List
http://www.webappsec.org/lists/websecurity/

The Web Security Mailing List Archives
http://www.webappsec.org/lists/websecurity/archive/



--__--__--

Message: 3
Date: Mon, 01 May 2006 23:47:25 +0100
From: Dinis Cruz <dinis at ddplus.net>
To:  kirke11 at securenet.de
CC:  websecurity at webappsec.org,  webappsec at securityfocus.com, 
 "'owasp-dotnet at lists.sourceforge.net'"
<owasp-dotnet at lists.sourceforge.net>,
  owasp-london at lists.sourceforge.net
Subject: [Owasp-london] Re: [WEB SECURITY] Review of Owasp-London Chapter
meeting on WAF
 (Web Application Firewalls)

Achim Hoffmann wrote:
> hmm, does this mean that nobody is able to configure WebProxy to test ALL
> (known) vulnerabilities of a categorie? Come on ;-)
>   
I am not saying that nobody would able to use a WebProxy to test ALL 
(known) vulnerabilities. That is even doable with notepad and NetCat :)

But that is not my point. My point is that these guys build WAF for a 
living, and I was expecting a more sophisticated method to automatically 
test these issues.

Remember that most HacmeBank vulnerabilities (namely the ones the WAF 
vendors did their demos on) are basic examples, which would be easy to 
implement in a automated test suite (if they had one)
> I guess that the majority of cases in the logical and semantical layer
could
> not be detected by a WAF. 
My argument is that they should be detected by a WAF (we might agree to 
disagree on this one :).
> That would require that the WAF knows the business
> logic of all applications it protects.
>   
Exactly, and because that is a complex task, the WAF's vendors don't do 
it today (but in my point of view will need to do it in the future)

Think about this, normal firewalls don't do Layer 7 (port 80,443 traffic 
is not checked), if then you have WAFs (at layer 7) that only check for 
basic exploits, what happens next?

XYZ appliance that handles the Layer 7.5? (i.e. the application logic)
> Let the WAF detect the simplistic attacks, that's currently still a
challenge.
>   
Well I refuse to accept that WAFs can only handle simplistic attacks.

That said, If the bottom line is that (for now) WAFs can only handle 
simple attacks, then somebody needs to update they marketing material:

"...TrafficShieldR is a web application firewall that provides 
comprehensive, proactive, network and application-layer protection from 
generalized and targeted attacks..." 
(http://www.f5.com/products/TrafficShield/)

"...The SecureSphere Web Application Firewall is the only solution to 
provide automated attack protection for Web and Web Services 
applications....Dynamic Profiling is the foundation of a multi-layer 
security architecture that provides complete protection for all layers 
of the application infrastructure, including the network, server and 
application" 
(http://www.imperva.com/products/securesphere/web_application_firewall.html)

"...WebDefend is a next-generation Internet security appliance that 
provides comprehensive Web application protection to resolve information 
security challenges such as Identity Theft, Information Leakage, 
regulatory compliance, and insecurely coded applications..." 
(http://www.breach.com/products_breachgatewebdefend.asp)
> !!        d) another area which I still think the WAF don't get it, is the
> !! fact that no solution allows for the easy manipulation of the data
being
> !! analyzed (both at input and at output). At the moment you only have two
> !! choices: 1) let the request go, 2) block the request and either show a
> !! custom error page or logout the user. This is to radical.
>
> hmm, the F in WAF stands for firewall and not for (substituting) filter.
>   
That depends on your definition of Firewall :)

Here is a good one:

"What is a Web Application Firewall?
An intermediary device, sitting between a web-client and a web server, 
analyzing OSI Layer-7 messages for violations in the programmed security 
policy. A web application firewall is used as a security device 
protecting the web server from attack." 
(http://www.cgisecurity.com/questions/webappfirewall.shtml)

So unless you want to start dividing Layer 7 traffic into multiple 
sub-layers (Data Validation basic, Data Validation advanced, 
Authentication, Strong Authentication, Authorization, Deep Authorization 
(I made up this last one :), etc...) I would argue that Web Application 
Firewalls are layer 7 firewalls, and should be able to protect against 
all attacks deployed via that layer.
> Do you know of any network firewall which behaves this way?
>   
No I don't know of a WAF Appliance that behaves like this (which is a 
shame because I would have several clients for them). This gap in the 
market is exactly why I am defending that this is were the new 
generation of WAF vendors should be focusing their effort on.
> It's dangerous that a WAF has its own idea how to sort data out (even if
> configuerable). 
Why? Remember that I defend that the point where WAFs are most effective 
and valuable is when they are being configured by an experienced and 
knowledgeable security consultant (preferably not the one that found the 
vulnerability).

Note that I am not defending that you should actively use a WAF on the 
entire website (especially the functions that dynamically change data).

What I am defending is that If I (the client) know that a certain 
vulnerability exist (discovered by a security consultant or by analyzing 
the logs of a 'live' attack (occurring at that moment)), then what I 
(the client) want, is to be able to as quickly as possible (and with the 
least amount of side effects) deploy a 'patch' to my application which 
will a) mitigate the vulnerability and b) have zero or minimal impact on 
my normal user's session experience.

Being able to dynamically manipulate form's (and other http) content has 
the following advantages:

    1) There are some security issues that you cannot mitigate in any 
other way (for example information leakage, or certain types of data 
validation)
    2) It minimizes site effects and allows much more flexibility on how 
do you handle (potential) malicious input (remember that at the moment 
you get a black or white decision (allow or deny))
    3) It allows for the detection of an attack without giving the 
attackers any clue that the attack was detected (of course that I am 
assuming here that there are incident escalation procedures in place)
> Just an example: the username comes as O'Reilly and your
> smart WAF replaces the '. Does it replace for SQL injection or for XSS?
> Which one would you prefer if the application needs both?
>   
That depends on the case and on the specific vulnerability. What I know 
is that I don't want Mr O'Reilly to get a 404 page or to be logged out 
every time he signs up for a newsletter (let's assume that the login 
page was not vulnerable to SQL Injection, since Mr O'Reilly needs to 
login :) )

I also like to have the possibility to replace one ' with '' (two ' ) or 
with an html version of a ' (&#39;)  or with an _ (underscore) or with a 
"[quote was here]" tag (to be replaced on the way out with a ' again :)

The bottom line is that you need to be able to have the flexibility to 
provide the business with a solution that A) solves/mitigates the 
security vulnerability and B) doesn't affect the user's experience
> Input data validation has to be done by each application for each value
> and this validation is bound to the destination of the data. 
Of course, Data Validation should ultimately be the responsibility of 
the Application. But with development cycles of weeks or months, WAFs 
'patches' are the perfect solution to stop current or future attacks on 
known vulnerabilities.

In the medium term, what would also help would be if web applications 
were able to provide (to the WAFs) xml feeds containing detailed 
information about all input points (i.e. the attack surface). Think 
Struts (http://struts.apache.org/)
> Something
> a WAF usually does not know.
>   
It doesn't do know, but I wish they did
> !! We need the
> !! ability to change the contents of form fields (or page contents)
> !! dynamically. This will be the only way that some vulnerabilities can be
> !! effectively managed and mitigated (while limiting the damage cause by
> !! false positives). Note: same WAFs have the functionality to replace
> !! cookies with their own (WAF controlled value)
>
> Don't know what you mean here. If you mean values of input fields, see
above.
>   
Do you still disagree with me that sometimes you NEED to be able to 
dynamically change the contents of an HTTP request (namely Form values)
> If you mean values of fields in output (response), then there're still a
> couple of WAFs which could encrypt values in responses and check if the
> correct value comes back in the next request.
>   
Sure and that is a good thing they do.

But what about when secret data is sent on a response? Shouldn't we be 
able to stop that?
> !!        e) Why don't they use their WAFs to protect the WAF's web
> !! interface? Clearly a great test for the usability of a WAF product is
to
> !! use it to protect the complex GUIs used on the WAF management and
> !! monitoring. Also, when (not if) vulnerabilities are found in their
> !! product, they could use their WAF to mitigate those security issues.
>
> OK, i.g. this is a true requirement. But keep in mind that a WAF is not
> reachable from the internet, but it should only be reachable from trusted
> hosts. Most WAFs support such a protection.
True, but in large enterprises the number of nodes that will be able to 
connect to those boxes will be quite high, but (as I explain below) the 
main reason for this request is not to reduce the risk created by these 
web applications
>  Why should a WAF protect itself
> from trusted hosts, that sounds overkill.
>   
Why? Surely a WAF should be able to handle such task without any 
problems? Aren't they all designed to handle complex websites generating 
large amounts of traffic?
> IMHO, such a protection is sufficient 'cause it only leaves the
administration
> interface open to session riding (which could be solved with isolated
> administration hosts).
>   
If isolation administration hosts worked in large corporate 
environments.... :)
> Anyway, I agree that it's a shame that some WAF have XSS, SQL injection
> and some other vulnerabilities.
>   
The problem here is not that they have those issues (that is a problem 
with the software industry), the problem is that these WAF don't have a 
quick way to deploy patches for those vulnerabilities.

Also by using the WAF to protect their web applications (which are 
complex and feature rich) they (the WAF vendors) would gain a huge 
amount of experience on what a complex application looks like, and how 
to handle the issues that are created by protecting it with their product.

I would also be a great demo for them (unless they couldn't protect 
their WAF security issues with their WAF :)
> !!        g) And what about their website? Are the vendor's websites
> !! protected by their WAFs?
>
> a simple LOL could be the comment here, but I'm aware that some vendors
> are listening ...
>   
:)
> !!        i) What about the Web Application Firewall Evaluation Criteria
> !! (http://www.webappsec.org/projects/wafec/)? How do this WAF appliances
> !! rate to this? I might have missed it, but where is the public disclose
> !! of this information?
>
> yes the WAFEC could be used for that. But did you read at least the first
3
> paragraphs in the Introduction of that document before asking this
question?
>   
I had read the WAFEC document before, and just to make sure I didn't 
miss any thing major I just re-read those first the paragraphs 
(http://www.webappsec.org/projects/wafec/v1/wasc-wafec-v1.0.html), and I 
don't understand your question. What is there in these 3 paragraphs that 
I should be aware of?

Note that all that I am asking for is for the WAF vendors to publicly 
disclose their WAFEC results.

Dinis Cruz
Owasp .Net Project
www.owasp.net




--__--__--

_______________________________________________
Owasp-london mailing list
Owasp-london at lists.sourceforge.net
https://lists.sourceforge.net/lists/listinfo/owasp-london


End of Owasp-london Digest





From dinis at ddplus.net  Wed May  3 22:58:13 2006
From: dinis at ddplus.net (Dinis Cruz)
Date: Thu, 04 May 2006 03:58:13 +0100
Subject: [Owasp-london] Re: [WEB SECURITY] Re: [Owasp-dotnet] Review of Owasp-London Chapter
 meeting on WAF (Web Application Firewalls)
In-Reply-To: <B546C312A37C12438A22154026CDC7E008A83922@exchfive.olympus.f5net.com>
References: <B546C312A37C12438A22154026CDC7E008A83922@exchfive.olympus.f5net.com>
Message-ID: <44596DC5.3010702@ddplus.net>

The ICSA reports seem to be quite interesting (thank Patrick for the link)

What about the other WAF vendors and Web Application Scanners?

Have they done similar certification?

If so can we have the links to the reports please? (I had a quick look 
on the ICSALabs.com website and couldn't find the link to other WAF 
tests (even TrafficShield's report doesn't seem to be publicly linked  
http://www.google.com/custom?q=TrafficShield&sa=Google+Search&domains=icsalabs.com&sitesearch=icsalabs.com) 


Dinis Cruz
Owasp .Net Project
www.owasp.net

Patrick Wolf wrote:
> Regarding independent security verifications of the products themselves, several WAF vendors created an ICSA Premier Services certification for WAF to specifically answer this question. Part of this certification was a full audit of the management console as well.
>
> Here is the lab report for F5's TrafficShield:
>
> https://www.icsalabs.com/icsa/docs/html/communities/services/Lab_Reports/F5_Certification_Final_Report.PDF
>
> F5 also contracted Aspect Security last year to test the security provided by TrafficShield vis-?-vis the OWASP Top Ten. That report can be found here:
>
> http://www.f5.com/reports/Aspect_F5_TrafficShield_Summary_Report.pdf
>
> I should also point out that it is our standard QA practice to test our UI with an application scanner.
>
>
> Patrick Wolf  |  Product Manager             
> F5 Networks www.f5.com   
> P 408-273-4859  D 206.272.5556    
> D 408-273-4859  M 408-390-9400   
>             
>
> ________________________________________
> From: Bill McGee (bam) [mailto:bam at cisco.com] 
> Sent: Monday, May 01, 2006 7:56 AM
> To: MindsX; Dinis Cruz
> Cc: owasp-dotnet at lists.sourceforge.net; owasp-london at lists.sourceforge.net; webappsec at securityfocus.com; websecurity at webappsec.org
> Subject: RE: [WEB SECURITY] Re: [Owasp-dotnet] Review of Owasp-London Chapter meeting on WAF (Web Application Firewalls)
>
> The trick, of course, is that standards in this area are just starting to emerge. So who do you get to do the verification? There is no EAL equivalent for this space, #)3 people will always be able to find someone like Tolley Group to provide whatever verification you want if the fee is right.
>
> We *really* need a standards body to step up and establish/conduct a soup-to-nuts verification plan. An interoperability test would also be nice...
>
> That's MY .02...
>
> -bill
>
>  -----Original Message-----
> From:   MindsX [mailto:mindsx at gmail.com]
> Sent:   Mon May 01 06:18:29 2006
> To:     Dinis Cruz
> Cc:     owasp-dotnet at lists.sourceforge.net; owasp-london at lists.sourceforge.net; webappsec at securityfocus.com; websecurity at webappsec.org
> Subject:        [WEB SECURITY] Re: [Owasp-dotnet] Review of Owasp-London Chapter meeting on WAF (Web Application Firewalls)
>
> My $0.02... [I seem to be giving alot away recently]....
>
> 5    c) Where are the published independent security reviews of these
> products? I find amazing that vendors that are selling a 'security
> product', e.g. a software application (WAF) that protects other software
> applications (Websites), do not understand the value of hiring
> independent 3rd party security companies to perform source code security
> audits to their products (note that the final results of these audits
> must be published and made available to clients). As discussed during
> the panel,
>
>   
>> it is probably impossible to create bug/vulnerability free applications, <
>>     
>
> but to NOT perform independent security audits to their
> code is crazy. Since these vendors are still in the 'Functionality Arms
> Race' phase of their products. Basically, the development teams are more
> focused on features, performance and user experience than on Security
> (and I don't have to tell you how 'secure' apps developed like this tend
> to be :). Maybe the solution is to put a WAF protecting a WAF protecting
> a WAF protecting a website :). Note to vendors: If am am wrong in this
> comment, feel free to prove me wrong and publish the security audits
> performed on your current product(s).
>
>
> I'm sure that some of the more experienced coders on the planet will
> disagree with the above...
>
> No mention of the fact that one vendor outright _refused_ to admit that web
> applications can be made secure - by that I do not mean the underlying code
> processors, but more the functionality / logic enforcement and input
> validation....
>
> Nor the fact that they was a hard squeeze on the fact that the same vendors'
> appliance has known bugs....
>
> Hmm... Secure your network by adding more bugs..... or are customers
> supposed to purchase an extra WAF from a different vendor to protect the
> original WAF's interface ? anyways...
>
>
> Moreover - how many of the above build upon open-source with out fulfilling
> the requirements of the relative license? [apparently F5 are in the
> clear... or so they say...]
>
> Think the EFF should engage....
>
> MindsX
>
> - Sponsored Advertisement --------------------------------------------------
> The Software Security Summit is the only event that addresses security
> issues at the application development level. Join us Jun 5-7, Baltimore, MD.
> http://www.s-3con.com
> ----------------------------------------------------------------------------
> The Web Security Mailing List
> http://www.webappsec.org/lists/websecurity/
>
> The Web Security Mailing List Archives
> http://www.webappsec.org/lists/websecurity/archive/
>
>
>   





From P.Wolf at F5.com  Wed May  3 21:17:25 2006
From: P.Wolf at F5.com (Patrick Wolf)
Date: Wed, 3 May 2006 18:17:25 -0700
Subject: [Owasp-london] RE: [WEB SECURITY] Re: [Owasp-dotnet] Review of Owasp-London Chapter meeting on WAF (Web Application Firewalls)
Message-ID: <B546C312A37C12438A22154026CDC7E008A83922@exchfive.olympus.f5net.com>

Regarding independent security verifications of the products themselves, several WAF vendors created an ICSA Premier Services certification for WAF to specifically answer this question. Part of this certification was a full audit of the management console as well.

Here is the lab report for F5's TrafficShield:

https://www.icsalabs.com/icsa/docs/html/communities/services/Lab_Reports/F5_Certification_Final_Report.PDF

F5 also contracted Aspect Security last year to test the security provided by TrafficShield vis-?-vis the OWASP Top Ten. That report can be found here:

http://www.f5.com/reports/Aspect_F5_TrafficShield_Summary_Report.pdf

I should also point out that it is our standard QA practice to test our UI with an application scanner.


Patrick Wolf  |  Product Manager             
F5 Networks www.f5.com   
P?408-273-4859  D?206.272.5556    
D?408-273-4859  M?408-390-9400   
            

________________________________________
From: Bill McGee (bam) [mailto:bam at cisco.com] 
Sent: Monday, May 01, 2006 7:56 AM
To: MindsX; Dinis Cruz
Cc: owasp-dotnet at lists.sourceforge.net; owasp-london at lists.sourceforge.net; webappsec at securityfocus.com; websecurity at webappsec.org
Subject: RE: [WEB SECURITY] Re: [Owasp-dotnet] Review of Owasp-London Chapter meeting on WAF (Web Application Firewalls)

The trick, of course, is that standards in this area are just starting to emerge. So who do you get to do the verification? There is no EAL equivalent for this space, #)3 people will always be able to find someone like Tolley Group to provide whatever verification you want if the fee is right.

We *really* need a standards body to step up and establish/conduct a soup-to-nuts verification plan. An interoperability test would also be nice...

That's MY .02...

-bill

?-----Original Message-----
From: ? MindsX [mailto:mindsx at gmail.com]
Sent:?? Mon May 01 06:18:29 2006
To:???? Dinis Cruz
Cc:???? owasp-dotnet at lists.sourceforge.net; owasp-london at lists.sourceforge.net; webappsec at securityfocus.com; websecurity at webappsec.org
Subject:??????? [WEB SECURITY] Re: [Owasp-dotnet] Review of Owasp-London Chapter meeting on WAF (Web Application Firewalls)

My $0.02... [I seem to be giving alot away recently]....

5??? c) Where are the published independent security reviews of these
products? I find amazing that vendors that are selling a 'security
product', e.g. a software application (WAF) that protects other software
applications (Websites), do not understand the value of hiring
independent 3rd party security companies to perform source code security
audits to their products (note that the final results of these audits
must be published and made available to clients). As discussed during
the panel,

>it is probably impossible to create bug/vulnerability free applications, <

but to NOT perform independent security audits to their
code is crazy. Since these vendors are still in the 'Functionality Arms
Race' phase of their products. Basically, the development teams are more
focused on features, performance and user experience than on Security
(and I don't have to tell you how 'secure' apps developed like this tend
to be :). Maybe the solution is to put a WAF protecting a WAF protecting
a WAF protecting a website :). Note to vendors: If am am wrong in this
comment, feel free to prove me wrong and publish the security audits
performed on your current product(s).


I'm sure that some of the more experienced coders on the planet will
disagree with the above...

No mention of the fact that one vendor outright _refused_ to admit that web
applications can be made secure - by that I do not mean the underlying code
processors, but more the functionality / logic enforcement and input
validation....

Nor the fact that they was a hard squeeze on the fact that the same vendors'
appliance has known bugs....

Hmm... Secure your network by adding more bugs..... or are customers
supposed to purchase an extra WAF from a different vendor to protect the
original WAF's interface ? anyways...


Moreover - how many of the above build upon open-source with out fulfilling
the requirements of the relative license? [apparently F5 are in the
clear... or so they say...]

Think the EFF should engage....

MindsX



From dinis at ddplus.net  Mon May  8 19:57:19 2006
From: dinis at ddplus.net (Dinis Cruz)
Date: Tue, 09 May 2006 00:57:19 +0100
Subject: [Owasp-london] Black Hat class: Advanced Asp.Net Exploits and Countermeasures
Message-ID: <445FDADF.1070700@ddplus.net>

<Shameless Plug>

For the ones that are going to the next Black Hat in Vegas, I am 
delivering a two day course based on my .Net research which some of you 
might want to attend (or recommend to somebody).

You can read the relevant details at the end of this email or directly 
on http://www.blackhat.com/html/bh-usa-06/train-bh-us-06-io-net.html.

Dinis Cruz
Owasp .Net Project
www.owasp.net








*Title: Advanced Asp.Net Exploits and Countermeasures*

*Overview:*

In this 2 day course you will push Asp.Net to the limit and will be 
shown how Asp .NET applications and environments can be exploited by
skilled attackers. Advanced exploitation techniques will be presented 
together with low-level technical analysis of the .Net Framework. You
will also learn advanced defense techniques such as: Building an Asp 
.NET Security Protection layer (also called a Web Application Firewall)
and Real time patching of vulnerabilities in the target application, the 
.Net Framework or the CLR."

*Structure:*

The Course is made of 4 modules (2 per day, one in the morning and one 
in the afternoon)

* Module 1: Security principles and .NET Framework Architecture*

* Module 2: Guerrilla Threat Modeling and Exploiting Asp.Net Applications*

    * Using quick-and-dirty threat models to discover vulnerabilities in
      the target application
    * Exploiting vulnerabilities in Asp.Net applications: Data
      Validation, Authorization, Authentication, SessionState, XSS,
      Cookies, AJAX, Web Services, Remoting, etc.. (using basic and
      advanced techniques)
    * Exploiting Buffer Overflows and Windows vulnerabilities via
      Asp.Net Applications


* Module 3: Exploiting Full Trust and Partial Trust Asp.Net Environments*

    * Practical demonstrations of the power of Full Trust Asp.Net:
      Rooting the CLR (e.g. patching the .Net Framework and CLR),
      Reflection,
    * IIS Metabase, Shellcode injection, Launching internal attacks to
      compromise the server and the data center
    * Full Trust non-verification and Type Safety attacks (via MSIL
      manipulation)
    * Exploiting Insecure Partial Trust Asp.Net Environments

* Module 4: Advanced Asp.Net Countermeasures*

    * Applying real-time security patches in the target application,
      .Net Framework and CLR
    * Solutions to create secure Data Validation and Authorization
      architectures
    * Creating secure Asp.Net hosting environments
    * Building an Asp.Net Security Protection layer (also called web
      Application Firewall);
    * Using Mono

You will walk away from this class with a much better understanding of 
some of the weaknesses of .NET applications, particularly the internals 
of the .NET framework. You will also get the chance to put your skills 
to the test against a target application over the course of the class.

*Requirements:*

A laptop with VMWare Player pre-installed. A VMWare image containing all 
necessary lab tools will be provided.

*Prerequisites:*

This is an advanced course targeted at industry professionals who want 
to understand the weaknesses and the power of the .Net Framework.

To get the most of this course and to be able to do the extensive 
practice material provided (using a VMWare image), the participants must:

    * Have a good understanding of a .NET Language (Ideally C#)
    * Be familiar with MSIL/Assembly
    * Have some experience with debugging user-land applications
    * Have commercial experience on either application development or
      security auditing.

The material is presented at a pace adjusted for experienced developers 
and/or security consultants.


*Trainer:*

Dinis Cruz is a Senior IOActive Security Consultant based in London (UK) 
and specialized in: ASP.NET Application Security, Active Directory 
deployments, Application Security audits and .NET Security Curriculum 
Development.

Since the 1.1 release of the .Net Framework, Dinis has been one of the 
strongest proponents of the need to write .Net applications that can be 
executed in secure Partially Trusted .Net environments, and has done 
extensive research on: Rooting the CLR, exposing the dangers of Full 
Trust Asp.Net Code, Type Confusion vulnerabilities in Full Trust (i.e. 
non verifiable) code, creating .Net Security Protection Layers and using 
Reflection to dynamically manipulate .Net Client applications.

Dinis is also the current Owasp .Net Project leader and the main 
developer of several of OWASP .Net tools (SAM'SHE, ANBS, SiteGenerator, 
PenTest Reporter, Asp.Net Reflector, Online IIS Metabase Explorer).


</Shameless Plug>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.owasp.org/pipermail/owasp-london/attachments/20060509/a56630f2/attachment.html 

From Kit.Wetzler at citrix.com  Mon May  8 18:27:25 2006
From: Kit.Wetzler at citrix.com (Kit Wetzler)
Date: Mon, 8 May 2006 18:27:25 -0400
Subject: [Owasp-london] RE: [WEB SECURITY] Re: [Owasp-dotnet] Review of Owasp-London Chapter meeting on WAF (Web Application Firewalls)
Message-ID: <3A751774C266C343A86FEDFCCC2CBA1D0816B745@ftlpexch01.citrite.net>

https://www.icsalabs.com/icsa/docs/html/communities/services/Lab_Reports/Citrix_Teros100_Certification_Final_0003.pdf

Here is our certification report.  Hope that helps! 


Kit Wetzler
Sr. Product Manager, Application Firewall
Application Networking Group
 
Citrix Systems, Inc
V: 408.850.0877
M: 408.660.7536
F: 408.850.0899
kit.wetzler at citrix.com

-----Original Message-----
From: Dinis Cruz [mailto:dinis at ddplus.net] 
Sent: Thursday, May 04, 2006 12:58 PM
To: owasp-dotnet at lists.sourceforge.net; owasp-london at lists.sourceforge.net; webappsec at securityfocus.com
Cc: Patrick Wolf; websecurity at webappsec.org
Subject: Re: [WEB SECURITY] Re: [Owasp-dotnet] Review of Owasp-London Chapter meeting on WAF (Web Application Firewalls)

The ICSA reports seem to be quite interesting (thank Patrick for the link)

What about the other WAF vendors and Web Application Scanners?

Have they done similar certification?

If so can we have the links to the reports please? (I had a quick look on the ICSALabs.com website and couldn't find the link to other WAF tests (even TrafficShield's report doesn't seem to be publicly linked
http://www.google.com/custom?q=TrafficShield&sa=Google+Search&domains=icsalabs.com&sitesearch=icsalabs.com) 


Dinis Cruz
Owasp .Net Project
www.owasp.net

Patrick Wolf wrote:
> Regarding independent security verifications of the products themselves, several WAF vendors created an ICSA Premier Services certification for WAF to specifically answer this question. Part of this certification was a full audit of the management console as well.
>
> Here is the lab report for F5's TrafficShield:
>
> https://www.icsalabs.com/icsa/docs/html/communities/services/Lab_Repor
> ts/F5_Certification_Final_Report.PDF
>
> F5 also contracted Aspect Security last year to test the security provided by TrafficShield vis-?-vis the OWASP Top Ten. That report can be found here:
>
> http://www.f5.com/reports/Aspect_F5_TrafficShield_Summary_Report.pdf
>
> I should also point out that it is our standard QA practice to test our UI with an application scanner.
>
>
> Patrick Wolf  |  Product Manager             
> F5 Networks www.f5.com   
> P 408-273-4859  D 206.272.5556    
> D 408-273-4859  M 408-390-9400   
>             
>
> ________________________________________
> From: Bill McGee (bam) [mailto:bam at cisco.com]
> Sent: Monday, May 01, 2006 7:56 AM
> To: MindsX; Dinis Cruz
> Cc: owasp-dotnet at lists.sourceforge.net; 
> owasp-london at lists.sourceforge.net; webappsec at securityfocus.com; 
> websecurity at webappsec.org
> Subject: RE: [WEB SECURITY] Re: [Owasp-dotnet] Review of Owasp-London 
> Chapter meeting on WAF (Web Application Firewalls)
>
> The trick, of course, is that standards in this area are just starting to emerge. So who do you get to do the verification? There is no EAL equivalent for this space, #)3 people will always be able to find someone like Tolley Group to provide whatever verification you want if the fee is right.
>
> We *really* need a standards body to step up and establish/conduct a soup-to-nuts verification plan. An interoperability test would also be nice...
>
> That's MY .02...
>
> -bill
>
>  -----Original Message-----
> From:   MindsX [mailto:mindsx at gmail.com]
> Sent:   Mon May 01 06:18:29 2006
> To:     Dinis Cruz
> Cc:     owasp-dotnet at lists.sourceforge.net; owasp-london at lists.sourceforge.net; webappsec at securityfocus.com; websecurity at webappsec.org
> Subject:        [WEB SECURITY] Re: [Owasp-dotnet] Review of Owasp-London Chapter meeting on WAF (Web Application Firewalls)
>
> My $0.02... [I seem to be giving alot away recently]....
>
> 5    c) Where are the published independent security reviews of these
> products? I find amazing that vendors that are selling a 'security 
> product', e.g. a software application (WAF) that protects other 
> software applications (Websites), do not understand the value of 
> hiring independent 3rd party security companies to perform source code 
> security audits to their products (note that the final results of 
> these audits must be published and made available to clients). As 
> discussed during the panel,
>
>   
>> it is probably impossible to create bug/vulnerability free 
>> applications, <
>>     
>
> but to NOT perform independent security audits to their code is crazy. 
> Since these vendors are still in the 'Functionality Arms Race' phase 
> of their products. Basically, the development teams are more focused 
> on features, performance and user experience than on Security (and I 
> don't have to tell you how 'secure' apps developed like this tend to 
> be :). Maybe the solution is to put a WAF protecting a WAF protecting 
> a WAF protecting a website :). Note to vendors: If am am wrong in this 
> comment, feel free to prove me wrong and publish the security audits 
> performed on your current product(s).
>
>
> I'm sure that some of the more experienced coders on the planet will 
> disagree with the above...
>
> No mention of the fact that one vendor outright _refused_ to admit 
> that web applications can be made secure - by that I do not mean the 
> underlying code processors, but more the functionality / logic 
> enforcement and input validation....
>
> Nor the fact that they was a hard squeeze on the fact that the same vendors'
> appliance has known bugs....
>
> Hmm... Secure your network by adding more bugs..... or are customers 
> supposed to purchase an extra WAF from a different vendor to protect 
> the original WAF's interface ? anyways...
>
>
> Moreover - how many of the above build upon open-source with out 
> fulfilling the requirements of the relative license? [apparently F5 
> are in the clear... or so they say...]
>
> Think the EFF should engage....
>
> MindsX
>
> - Sponsored Advertisement 
> --------------------------------------------------
> The Software Security Summit is the only event that addresses security 
> issues at the application development level. Join us Jun 5-7, Baltimore, MD.
> http://www.s-3con.com
> ----------------------------------------------------------------------
> ------
> The Web Security Mailing List
> http://www.webappsec.org/lists/websecurity/
>
> The Web Security Mailing List Archives 
> http://www.webappsec.org/lists/websecurity/archive/
>
>
>   



-------------------------------------------------------------------------
Sponsored by: Watchfire

The Twelve Most Common Application-level Hack Attacks Hackers continue to add billions to the cost of doing business online despite security executives' efforts to prevent malicious attacks. This whitepaper identifies the most common methods of attacks that we have seen, and outlines a guideline for developing secure web applications. 
Download this whitepaper today!

https://www.watchfire.com/securearea/whitepapers.aspx?id=701300000007t9r
--------------------------------------------------------------------------



From dinis at ddplus.net  Sun May 14 13:21:44 2006
From: dinis at ddplus.net (Dinis Cruz)
Date: Sun, 14 May 2006 18:21:44 +0100
Subject: [Owasp-london] [Fwd: [LondonDotNet] DDD3 News]
Message-ID: <44676728.1000500@ddplus.net>

See below, the latest news about the DDD3 event (which I am doing a 
presentation)

I highly recommend this event

See you there

Dinis Cruz
Owasp .Net Project
www.owasp.net

-------- Original Message --------
Subject: 	[LondonDotNet] DDD3 News
Date: 	Sun, 14 May 2006 12:12:04 -0000
From: 	Ian Cooper <ian_hammond_cooper at yahoo.co.uk>
To: 	LondonDotNet at yahoogroups.com



Hi all,

I just wanted to pass on some DDD3 news.

 - We are almost full. Which is great for the event as it remains
popular, not so good if you haven't signed up yet.
 - The bookstall will only be there for the first part of the morning
on the day, so don't leave it late to get anything you want. For those
of you who are early birds, the bookstall will be open before the start.
 - There is no free bus from the train station to the Microsoft campus
on the day. Please look into taxi sharing or the like to get you
there. Go look at the ride share wiki
http://www.developerday.co.uk/wiki/ow.asp?Taxi%2FCar%5FSharing
please.

Look forward to seeing you there on the day.



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.owasp.org/pipermail/owasp-london/attachments/20060514/cd173f8e/attachment.html 

From dinis at ddplus.net  Thu May 18 17:22:27 2006
From: dinis at ddplus.net (Dinis Cruz)
Date: Thu, 18 May 2006 22:22:27 +0100
Subject: [Owasp-london] DeveloperDeveloperDeveloper 3
Message-ID: <446CE593.3090605@ddplus.net>

Just a quick post to say that I am doing a presentation on the next DDD 
event (3rd June): http://www.developerday.co.uk/ddd/agendaddd3.asp

/*Attacking Web and Windows Applications* //(Presentation) *Dinis Cruz 
<http://www.developerday.co.uk/ddd/speakers.asp#Dinis%20Cruz>

*In this session (a variation of the one delivered in DDD2) multiple 
attack vectors will be shown covering a wide variety of vulnerabilities 
and exploits: Sql Injection (basic and advanced), XSS (session hijacking 
and remote command execution), Elevation of Privilege, Web Services 
exploitation, AJAX exploitation, Rootkits (user and kernel level), 
attacking fat-clients by hooking into windows functions (and patching 
applications in real time), dynamically manipulating .Net client 
applications, exploiting buffer overflows, exploiting IE 
vulnerabilities, exploiting Full Trust Asp.Net, attacking IIS, and, 
using MetaSploit to automate attacks (and exploit generation).

/
Dinis Cruz
Owasp .Net Project
www.owasp.net
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.owasp.org/pipermail/owasp-london/attachments/20060518/7c66f639/attachment.html 

From dinis at ddplus.net  Thu May 18 20:05:27 2006
From: dinis at ddplus.net (Dinis Cruz)
Date: Fri, 19 May 2006 01:05:27 +0100
Subject: [Owasp-london] MP3 of Owasp London Chapter WAF event
Message-ID: <446D0BC7.3080408@ddplus.net>

As promised the Owasp London Chapter event of WAF was recorded and you 
can get the MP3s from the new (still in heavy construction) Owasp .Net 
Project wiki:

    http://69.10.155.160/index.php/London_Chapter_WAF_event

Note that this page (and site) is still in draft format

Dinis Cruz
Owasp .Net Project
www.owasp.net





From adrian.asher at betfair.com  Fri May 19 17:44:05 2006
From: adrian.asher at betfair.com (Adrian Asher)
Date: Fri, 19 May 2006 22:44:05 +0100
Subject: [Owasp-london] Spam :-) (Job advert)
Message-ID: <A748AF375DD9964EB741257F80FFE881047F7E5C@UKMAIL.sportex.com>

Hello All
 
Some of you I know from the limited number of chapter meetings I have
been able to attend, and the rest, hello. 
 
We're recruiting additional people into security here at betfair. The
attached job spec is for the deputy head of security role in case there
are any security professionals interested....
This spec is being sent out to our recruitment agencies so some of you
may already have been contacted by the ones that hoard phone numbers...
but if you are interested just let me know by email with a CV. This is a
permanent role, based in Hammersmith (just up the road from the river
meeting two months ago). Price on application, but market / slightly
higher than market.
 
Not really sure if this is an appropriate use of this forum, but I think
there are few enough opportunities for security professionals to hear
about really interesting roles without then phoning up to be told that
it's a 3month contract or rolling out av in milton keynes....
 
No agencies!
 
Thanks

Adrian Asher
Head of Security

  

		
            		
email:	 adrian.asher at betfair.com	

Betfair Limited | Waterfront | Hammersmith Embankment | Chancellors Road
| London W6 9HP

The information contained in this e-mail and any attachment is
confidential, may contain legal advice protected by privilege and is
intended only for the named recipient(s). The e-mail may not be
disclosed or used by any person other than the addressee, nor may it be
copied in any way. If you are not a named recipient please notify the
sender immediately and delete any copies of this message. Any
unauthorized copying, disclosure or distribution of the material in this
e-mail is strictly forbidden. Any view or opinions presented are solely
those of the author and do not necessarily represent those of Betfair.
Betfair Limited's registered office is: Waterfront, Hammersmith
Embankment, Chancellors Road, London W6 9HP. Registered in England with
No. 1540986. 

 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.owasp.org/pipermail/owasp-london/attachments/20060519/f6b38c67/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: image/gif
Size: 876 bytes
Desc: att9855a.gif
Url : http://lists.owasp.org/pipermail/owasp-london/attachments/20060519/f6b38c67/attachment.gif 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Deputy Head of Securty.doc
Type: application/msword
Size: 147456 bytes
Desc: Deputy Head of Securty.doc
Url : http://lists.owasp.org/pipermail/owasp-london/attachments/20060519/f6b38c67/attachment.doc 

From Daniel.Cuthbert at owasp.org  Tue May 30 03:32:49 2006
From: Daniel.Cuthbert at owasp.org (Daniel Cuthbert)
Date: Tue, 30 May 2006 08:32:49 +0100
Subject: [Owasp-london] Next London Meeting 17th August
Message-ID: <0A39B0C9-1A7E-439B-A1F0-6F24F9AE72E0@owasp.org>

Morning all,

The next london meeting will be on the 17th August (location to be  
confirmed) and I would like everyone who wants to give a talk to drop  
me a mail.
Also, if anyone has any idea's on topics which should be included,  
would you drop us a mail?

Thanks

Daniel



From daniel.cuthbert at owasp.org  Tue May 30 18:07:46 2006
From: daniel.cuthbert at owasp.org (Daniel Cuthbert)
Date: Tue, 30 May 2006 23:07:46 +0100
Subject: [Owasp-london] Aug 17th Meeting, any sponsors for a location?
Message-ID: <A0B65038-48A7-4E37-A7C8-26B8B9B27183@owasp.org>

Was wondering if any of the bigger corporations would be willing to  
help out with the sponsorship of a location for the next meeting?

Im trying to make this meeting the biggest yet and will include some  
pretty cool speakers and topics and it would be great if someone  
could help with the location aspect

Daniel



