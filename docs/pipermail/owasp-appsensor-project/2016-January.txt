From jtmelton at gmail.com  Sat Jan 30 04:09:52 2016
From: jtmelton at gmail.com (John Melton)
Date: Fri, 29 Jan 2016 23:09:52 -0500
Subject: [Owasp-appsensor-project] appsensor update (new sub-project
	announcement!)
Message-ID: <CAM8z=yJH7XOy5i2-2KvhHLRxFdARPmkSKVENCKL34b4AHzz8fw@mail.gmail.com>

All,

Just a periodic update on what's been happening with appsensor development.

As I mentioned in the last update, we have a number of folks who are
contributing great work as of late. Here are a few of the things being
done:

- docker-ization of our apps and product
- adding support for per-client-application detection point overrides
(allow different client applications on the same appsensor server to have
different configurations for the same detection point)
- new analysis engines being built (2 folks working on this)

While other folks are leading the charge on the efforts above (yay!), I've
been working on another common feature request: detection points. One of
the biggest things to consider when integrating appsensor is the level of
effort to build detection points into your application. While many will be
custom, there are some that are generic enough to be built once and
re-used.

To that end, I've created a related sub-project on github called
appsensor-reverse-proxy (
https://github.com/jtmelton/appsensor-reverse-proxy/). The tool provides a
few primary features:

- blocks requests based on a blacklist (this requires some straightforward
integration with the appsensor server and a "block store")
- implements several canned detection points (the readme specifies which
ones), and there are more to come
- provides simple integration points to do more detection points, ie. it's
very simple to contribute code to this one
- collects basic summarized statistical information that can be used for
more intelligent data analysis
- everything except the reverse proxy feature (blocking, detection points,
trending info) is disabled by default and must be explicitly enabled.

I'm pretty happy with how it's been running so far. It's still new, but in
the testing I've done, it's been pretty solid. Feel free to view the
readme, try it out and give us feedback. Excited to see how people use it.
If you have any ideas about how to improve it, or a new feature request,
feel free to email or add a github issue.

As always, if you have any questions, let me know.

Thanks,
John
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20160129/e1ffe3d6/attachment.html>

