From colin.watson at owasp.org  Wed Jan 27 11:05:53 2010
From: colin.watson at owasp.org (Colin Watson)
Date: Wed, 27 Jan 2010 16:05:53 +0000
Subject: [Owasp-appsensor-project] Another Sensor Location Idea - Deployed
	at the client as the threat level increases
Message-ID: <b46e4cdd1001270805o5959713eyb5cd8b96ab187089@mail.gmail.com>

I was rummaging around some ModSecurity discussions and noticed this:

  http://www.modsecurity.org/projects/modsecurity/apache/feature_content_injection.html#id281488

concerning sending a payload back to an attacker, to determine their
real IP address.  So perhaps another sensor position is one deployed
dynamically (by the application) on the client.  Some non-IT examples
of this would be:

- deploying an airplane to take a closer look at another ship
approaching an aircraft carrier, to find out more information about
the potential threat
- using a manual hydrocarbon detection instrument in a refinery, if
someone reports a smell of gas, to determine if there really is a
problem

The appsensor is getting more complex, but cleverer.

Colin

From michael.coates at aspectsecurity.com  Wed Jan 27 11:30:24 2010
From: michael.coates at aspectsecurity.com (Michael Coates)
Date: Wed, 27 Jan 2010 11:30:24 -0500
Subject: [Owasp-appsensor-project] Another Sensor Location Idea -
	Deployedat the client as the threat level increases
In-Reply-To: <b46e4cdd1001270805o5959713eyb5cd8b96ab187089@mail.gmail.com>
References: <b46e4cdd1001270805o5959713eyb5cd8b96ab187089@mail.gmail.com>
Message-ID: <B9A412898630124ABE8350F4EBD32E840121E40D@mymail.aspectsecurity.com>

Clever idea. I like it.

I have a different question though. How do we keep managing this
project? The first approach was to create the pdf/book with all of the
information.  But now I'm feeling that it might be easier to maintain if
all of the detection points are in the wiki. Then people can update and
add as they see fit?

Any thoughts?  For that matter, any feedback on the book itself? Should
we put out another version? What's missing? Do you want to see code
examples?


Michael Coates
Aspect Security
OWASP AppSensor Project Lead



-----Original Message-----
From: owasp-appsensor-project-bounces at lists.owasp.org
[mailto:owasp-appsensor-project-bounces at lists.owasp.org] On Behalf Of
Colin Watson
Sent: Wednesday, January 27, 2010 10:06 AM
To: owasp-appsensor-project
Subject: [Owasp-appsensor-project] Another Sensor Location Idea -
Deployedat the client as the threat level increases
Importance: High

I was rummaging around some ModSecurity discussions and noticed this:

 
http://www.modsecurity.org/projects/modsecurity/apache/feature_content_i
njection.html#id281488

concerning sending a payload back to an attacker, to determine their
real IP address.  So perhaps another sensor position is one deployed
dynamically (by the application) on the client.  Some non-IT examples
of this would be:

- deploying an airplane to take a closer look at another ship
approaching an aircraft carrier, to find out more information about
the potential threat
- using a manual hydrocarbon detection instrument in a refinery, if
someone reports a smell of gas, to determine if there really is a
problem

The appsensor is getting more complex, but cleverer.

Colin
_______________________________________________
Owasp-appsensor-project mailing list
Owasp-appsensor-project at lists.owasp.org
https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project

From jtmelton at gmail.com  Wed Jan 27 11:47:55 2010
From: jtmelton at gmail.com (John Melton)
Date: Wed, 27 Jan 2010 11:47:55 -0500
Subject: [Owasp-appsensor-project] Another Sensor Location Idea -
	Deployedat the client as the threat level increases
In-Reply-To: <B9A412898630124ABE8350F4EBD32E840121E40D@mymail.aspectsecurity.com>
References: <b46e4cdd1001270805o5959713eyb5cd8b96ab187089@mail.gmail.com> 
	<B9A412898630124ABE8350F4EBD32E840121E40D@mymail.aspectsecurity.com>
Message-ID: <d67ecf7a1001270847s27169c8evd9599128930e318f@mail.gmail.com>

New to this list, so sorry if this is out of place.  I looked at appsensor a
bit ago, but couldn't find any code ... just checked and still couldn't.  As
for the book, I thought it was very good, but code examples would probably
go a long way to helping most devs.

-jm

On Wed, Jan 27, 2010 at 11:30 AM, Michael Coates <
michael.coates at aspectsecurity.com> wrote:

> Clever idea. I like it.
>
> I have a different question though. How do we keep managing this
> project? The first approach was to create the pdf/book with all of the
> information.  But now I'm feeling that it might be easier to maintain if
> all of the detection points are in the wiki. Then people can update and
> add as they see fit?
>
> Any thoughts?  For that matter, any feedback on the book itself? Should
> we put out another version? What's missing? Do you want to see code
> examples?
>
>
> Michael Coates
> Aspect Security
> OWASP AppSensor Project Lead
>
>
>
> -----Original Message-----
> From: owasp-appsensor-project-bounces at lists.owasp.org
> [mailto:owasp-appsensor-project-bounces at lists.owasp.org] On Behalf Of
> Colin Watson
> Sent: Wednesday, January 27, 2010 10:06 AM
> To: owasp-appsensor-project
> Subject: [Owasp-appsensor-project] Another Sensor Location Idea -
> Deployedat the client as the threat level increases
> Importance: High
>
> I was rummaging around some ModSecurity discussions and noticed this:
>
>
> http://www.modsecurity.org/projects/modsecurity/apache/feature_content_i
> njection.html#id281488<http://www.modsecurity.org/projects/modsecurity/apache/feature_content_i%0Anjection.html#id281488>
>
> concerning sending a payload back to an attacker, to determine their
> real IP address.  So perhaps another sensor position is one deployed
> dynamically (by the application) on the client.  Some non-IT examples
> of this would be:
>
> - deploying an airplane to take a closer look at another ship
> approaching an aircraft carrier, to find out more information about
> the potential threat
> - using a manual hydrocarbon detection instrument in a refinery, if
> someone reports a smell of gas, to determine if there really is a
> problem
>
> The appsensor is getting more complex, but cleverer.
>
> Colin
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20100127/59457681/attachment.html 

From michael.coates at aspectsecurity.com  Wed Jan 27 12:08:19 2010
From: michael.coates at aspectsecurity.com (Michael Coates)
Date: Wed, 27 Jan 2010 12:08:19 -0500
Subject: [Owasp-appsensor-project] Another Sensor Location Idea -
	Deployedat the client as the threat level increases
In-Reply-To: <d67ecf7a1001270847s27169c8evd9599128930e318f@mail.gmail.com>
References: <b46e4cdd1001270805o5959713eyb5cd8b96ab187089@mail.gmail.com>
	<B9A412898630124ABE8350F4EBD32E840121E40D@mymail.aspectsecurity.com>
	<d67ecf7a1001270847s27169c8evd9599128930e318f@mail.gmail.com>
Message-ID: <B9A412898630124ABE8350F4EBD32E840121E420@mymail.aspectsecurity.com>

Yep, no code right now. It's all about the methodology and concept of
detecting and responding to attacks in the application.  Ultimately the
code would be unique to an individual application, but it wouldn't be
hard for us to provide samples of how to integrate into esapi or provide
sample code for each detection point.

 

It sounds like this would be useful to you and others and help the
adoption of AppSensor concepts.

 

 

Michael Coates

 

From: John Melton [mailto:jtmelton at gmail.com] 
Sent: Wednesday, January 27, 2010 10:48 AM
To: Michael Coates
Cc: Colin Watson; owasp-appsensor-project
Subject: Re: [Owasp-appsensor-project] Another Sensor Location Idea -
Deployedat the client as the threat level increases
Importance: High

 

New to this list, so sorry if this is out of place.  I looked at
appsensor a bit ago, but couldn't find any code ... just checked and
still couldn't.  As for the book, I thought it was very good, but code
examples would probably go a long way to helping most devs.  

-jm

On Wed, Jan 27, 2010 at 11:30 AM, Michael Coates
<michael.coates at aspectsecurity.com> wrote:

Clever idea. I like it.

I have a different question though. How do we keep managing this
project? The first approach was to create the pdf/book with all of the
information.  But now I'm feeling that it might be easier to maintain if
all of the detection points are in the wiki. Then people can update and
add as they see fit?

Any thoughts?  For that matter, any feedback on the book itself? Should
we put out another version? What's missing? Do you want to see code
examples?


Michael Coates
Aspect Security
OWASP AppSensor Project Lead



-----Original Message-----
From: owasp-appsensor-project-bounces at lists.owasp.org
[mailto:owasp-appsensor-project-bounces at lists.owasp.org] On Behalf Of
Colin Watson
Sent: Wednesday, January 27, 2010 10:06 AM
To: owasp-appsensor-project
Subject: [Owasp-appsensor-project] Another Sensor Location Idea -
Deployedat the client as the threat level increases
Importance: High

I was rummaging around some ModSecurity discussions and noticed this:


http://www.modsecurity.org/projects/modsecurity/apache/feature_content_i
njection.html#id281488
<http://www.modsecurity.org/projects/modsecurity/apache/feature_content_
i%0Anjection.html#id281488> 

concerning sending a payload back to an attacker, to determine their
real IP address.  So perhaps another sensor position is one deployed
dynamically (by the application) on the client.  Some non-IT examples
of this would be:

- deploying an airplane to take a closer look at another ship
approaching an aircraft carrier, to find out more information about
the potential threat
- using a manual hydrocarbon detection instrument in a refinery, if
someone reports a smell of gas, to determine if there really is a
problem

The appsensor is getting more complex, but cleverer.

Colin
_______________________________________________
Owasp-appsensor-project mailing list
Owasp-appsensor-project at lists.owasp.org
https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
_______________________________________________
Owasp-appsensor-project mailing list
Owasp-appsensor-project at lists.owasp.org
https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20100127/f86f98d8/attachment.html 

From jtmelton at gmail.com  Wed Jan 27 12:54:32 2010
From: jtmelton at gmail.com (John Melton)
Date: Wed, 27 Jan 2010 12:54:32 -0500
Subject: [Owasp-appsensor-project] Another Sensor Location Idea -
	Deployedat the client as the threat level increases
In-Reply-To: <B9A412898630124ABE8350F4EBD32E840121E420@mymail.aspectsecurity.com>
References: <b46e4cdd1001270805o5959713eyb5cd8b96ab187089@mail.gmail.com> 
	<B9A412898630124ABE8350F4EBD32E840121E40D@mymail.aspectsecurity.com> 
	<d67ecf7a1001270847s27169c8evd9599128930e318f@mail.gmail.com> 
	<B9A412898630124ABE8350F4EBD32E840121E420@mymail.aspectsecurity.com>
Message-ID: <d67ecf7a1001270954t63711077le067c4b8712768fa@mail.gmail.com>

Thanks for the response.  Not to laud you too much, but I think the project
is queued for success.  I think the mix of the timing (w/ regards to real
events in the community) along with the significant effort put into the
project (excellent documentation with clear descriptions of event types)
could make it a big win for some applications.

My one dissent would be that I think it will require at least some code to
get initial uptake.  Obviously the low hanging fruit would make sense, if
there are some simple rules to implement.  My thought is most developers
will use a project if it gives them something tactical today.  They may also
contribute back if they like the project.  Are there any plans along these
lines for the project currently?  Is there a roadmap?  I only see what's on
the OWASP site for documentation about where the project is going, which
seems thin at the moment.  My thought is most of those discussions are
happening on this list, which I've only recently joined.

On a somewhat related note, I can't find it in the book, but I could swear I
read somewhere at some point something about a rules engine, or maybe a
diagram with that in it in reference to implementing the trend monitoring
... am I off base here?  That's the reason I was thinking there was code out
there somewhere.

-jm

On Wed, Jan 27, 2010 at 12:08 PM, Michael Coates <
michael.coates at aspectsecurity.com> wrote:

>  Yep, no code right now. It?s all about the methodology and concept of
> detecting and responding to attacks in the application.  Ultimately the code
> would be unique to an individual application, but it wouldn?t be hard for us
> to provide samples of how to integrate into esapi or provide sample code for
> each detection point.
>
>
>
> It sounds like this would be useful to you and others and help the adoption
> of AppSensor concepts.
>
>
>
> * *
>
> *Michael Coates*
>
>
>
> *From:* John Melton [mailto:jtmelton at gmail.com]
> *Sent:* Wednesday, January 27, 2010 10:48 AM
> *To:* Michael Coates
> *Cc:* Colin Watson; owasp-appsensor-project
> *Subject:* Re: [Owasp-appsensor-project] Another Sensor Location Idea -
> Deployedat the client as the threat level increases
> *Importance:* High
>
>
>
> New to this list, so sorry if this is out of place.  I looked at appsensor
> a bit ago, but couldn't find any code ... just checked and still couldn't.
> As for the book, I thought it was very good, but code examples would
> probably go a long way to helping most devs.
>
> -jm
>
> On Wed, Jan 27, 2010 at 11:30 AM, Michael Coates <
> michael.coates at aspectsecurity.com> wrote:
>
> Clever idea. I like it.
>
> I have a different question though. How do we keep managing this
> project? The first approach was to create the pdf/book with all of the
> information.  But now I'm feeling that it might be easier to maintain if
> all of the detection points are in the wiki. Then people can update and
> add as they see fit?
>
> Any thoughts?  For that matter, any feedback on the book itself? Should
> we put out another version? What's missing? Do you want to see code
> examples?
>
>
> Michael Coates
> Aspect Security
> OWASP AppSensor Project Lead
>
>
>
> -----Original Message-----
> From: owasp-appsensor-project-bounces at lists.owasp.org
> [mailto:owasp-appsensor-project-bounces at lists.owasp.org] On Behalf Of
> Colin Watson
> Sent: Wednesday, January 27, 2010 10:06 AM
> To: owasp-appsensor-project
> Subject: [Owasp-appsensor-project] Another Sensor Location Idea -
> Deployedat the client as the threat level increases
> Importance: High
>
> I was rummaging around some ModSecurity discussions and noticed this:
>
>
> http://www.modsecurity.org/projects/modsecurity/apache/feature_content_i
> njection.html#id281488<http://www.modsecurity.org/projects/modsecurity/apache/feature_content_i%0Anjection.html#id281488>
>
> concerning sending a payload back to an attacker, to determine their
> real IP address.  So perhaps another sensor position is one deployed
> dynamically (by the application) on the client.  Some non-IT examples
> of this would be:
>
> - deploying an airplane to take a closer look at another ship
> approaching an aircraft carrier, to find out more information about
> the potential threat
> - using a manual hydrocarbon detection instrument in a refinery, if
> someone reports a smell of gas, to determine if there really is a
> problem
>
> The appsensor is getting more complex, but cleverer.
>
> Colin
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20100127/5f7395ac/attachment-0001.html 

From michael.coates at aspectsecurity.com  Wed Jan 27 13:09:41 2010
From: michael.coates at aspectsecurity.com (Michael Coates)
Date: Wed, 27 Jan 2010 13:09:41 -0500
Subject: [Owasp-appsensor-project] Another Sensor Location Idea -
	Deployedat the client as the threat level increases
In-Reply-To: <d67ecf7a1001270954t63711077le067c4b8712768fa@mail.gmail.com>
References: <b46e4cdd1001270805o5959713eyb5cd8b96ab187089@mail.gmail.com>
	<B9A412898630124ABE8350F4EBD32E840121E40D@mymail.aspectsecurity.com>
	<d67ecf7a1001270847s27169c8evd9599128930e318f@mail.gmail.com>
	<B9A412898630124ABE8350F4EBD32E840121E420@mymail.aspectsecurity.com>
	<d67ecf7a1001270954t63711077le067c4b8712768fa@mail.gmail.com>
Message-ID: <B9A412898630124ABE8350F4EBD32E840121E42F@mymail.aspectsecurity.com>

Glad to hear the good thoughts. I am certainly behind this project and
would like to see it succeed.

 

I agree, it would take some initial code. However, the demo at
http://defendtheapp.com leverages a large amount of code from esapi. I
basically built 3 or 4 classes to extend a few things and that was it.
I'd be happy to make that code available. We'd need to clean it up a bit
since its just in proof of concept style, but it all works great.  What
do you think if we were to make the framework code available (esapi.jar
plus 4 classes) and provide the samples of how to do the detection
points (3-4 lines of code plus the appropriate intrusion detection
call)?

 

Roadmap:

It is a weak little roadmap.  I'm looking for more interested people to
help with this project.  I think we have a lot of good ideas and need to
find a way to push them forward.

 

Regarding your comment on a rules engine. That was probably from slide
34 of this presentation:

http://www.owasp.org/images/0/06/Defend_Yourself-Integrating_Real_Time_D
efenses_into_Online_Applications-Michael_Coates.pdf

One of my sample implementations for detection of application based
worms was to define rules within the Drools rule based engine.

 

 

 

 

Michael Coates

 

From: John Melton [mailto:jtmelton at gmail.com] 
Sent: Wednesday, January 27, 2010 11:55 AM
To: Michael Coates
Cc: owasp-appsensor-project
Subject: Re: [Owasp-appsensor-project] Another Sensor Location Idea -
Deployedat the client as the threat level increases
Importance: High

 

Thanks for the response.  Not to laud you too much, but I think the
project is queued for success.  I think the mix of the timing (w/
regards to real events in the community) along with the significant
effort put into the project (excellent documentation with clear
descriptions of event types) could make it a big win for some
applications.  

My one dissent would be that I think it will require at least some code
to get initial uptake.  Obviously the low hanging fruit would make
sense, if there are some simple rules to implement.  My thought is most
developers will use a project if it gives them something tactical today.
They may also contribute back if they like the project.  Are there any
plans along these lines for the project currently?  Is there a roadmap?
I only see what's on the OWASP site for documentation about where the
project is going, which seems thin at the moment.  My thought is most of
those discussions are happening on this list, which I've only recently
joined.

On a somewhat related note, I can't find it in the book, but I could
swear I read somewhere at some point something about a rules engine, or
maybe a diagram with that in it in reference to implementing the trend
monitoring ... am I off base here?  That's the reason I was thinking
there was code out there somewhere.

-jm

On Wed, Jan 27, 2010 at 12:08 PM, Michael Coates
<michael.coates at aspectsecurity.com> wrote:

Yep, no code right now. It's all about the methodology and concept of
detecting and responding to attacks in the application.  Ultimately the
code would be unique to an individual application, but it wouldn't be
hard for us to provide samples of how to integrate into esapi or provide
sample code for each detection point.

 

It sounds like this would be useful to you and others and help the
adoption of AppSensor concepts.

 

 

Michael Coates

 

From: John Melton [mailto:jtmelton at gmail.com] 
Sent: Wednesday, January 27, 2010 10:48 AM
To: Michael Coates
Cc: Colin Watson; owasp-appsensor-project
Subject: Re: [Owasp-appsensor-project] Another Sensor Location Idea -
Deployedat the client as the threat level increases
Importance: High

 

New to this list, so sorry if this is out of place.  I looked at
appsensor a bit ago, but couldn't find any code ... just checked and
still couldn't.  As for the book, I thought it was very good, but code
examples would probably go a long way to helping most devs.  

-jm

On Wed, Jan 27, 2010 at 11:30 AM, Michael Coates
<michael.coates at aspectsecurity.com> wrote:

Clever idea. I like it.

I have a different question though. How do we keep managing this
project? The first approach was to create the pdf/book with all of the
information.  But now I'm feeling that it might be easier to maintain if
all of the detection points are in the wiki. Then people can update and
add as they see fit?

Any thoughts?  For that matter, any feedback on the book itself? Should
we put out another version? What's missing? Do you want to see code
examples?


Michael Coates
Aspect Security
OWASP AppSensor Project Lead



-----Original Message-----
From: owasp-appsensor-project-bounces at lists.owasp.org
[mailto:owasp-appsensor-project-bounces at lists.owasp.org] On Behalf Of
Colin Watson
Sent: Wednesday, January 27, 2010 10:06 AM
To: owasp-appsensor-project
Subject: [Owasp-appsensor-project] Another Sensor Location Idea -
Deployedat the client as the threat level increases
Importance: High

I was rummaging around some ModSecurity discussions and noticed this:


http://www.modsecurity.org/projects/modsecurity/apache/feature_content_i
njection.html#id281488
<http://www.modsecurity.org/projects/modsecurity/apache/feature_content_
i%0Anjection.html#id281488> 

concerning sending a payload back to an attacker, to determine their
real IP address.  So perhaps another sensor position is one deployed
dynamically (by the application) on the client.  Some non-IT examples
of this would be:

- deploying an airplane to take a closer look at another ship
approaching an aircraft carrier, to find out more information about
the potential threat
- using a manual hydrocarbon detection instrument in a refinery, if
someone reports a smell of gas, to determine if there really is a
problem

The appsensor is getting more complex, but cleverer.

Colin
_______________________________________________
Owasp-appsensor-project mailing list
Owasp-appsensor-project at lists.owasp.org
https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
_______________________________________________
Owasp-appsensor-project mailing list
Owasp-appsensor-project at lists.owasp.org
https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20100127/838fa33b/attachment.html 

From colin.watson at owasp.org  Wed Jan 27 13:42:08 2010
From: colin.watson at owasp.org (Colin Watson)
Date: Wed, 27 Jan 2010 18:42:08 +0000
Subject: [Owasp-appsensor-project] Another Sensor Location Idea -
	Deployedat the client as the threat level increases
In-Reply-To: <B9A412898630124ABE8350F4EBD32E840121E40D@mymail.aspectsecurity.com>
References: <b46e4cdd1001270805o5959713eyb5cd8b96ab187089@mail.gmail.com>
	<B9A412898630124ABE8350F4EBD32E840121E40D@mymail.aspectsecurity.com>
Message-ID: <b46e4cdd1001271042v4b7a1905l9ca2ca74eaa0b11d@mail.gmail.com>

Michael and John

In some ways it's good the AppSensor hasn't been cast fully into code,
as it means it's easier to add ideas and extensions without worrying
too much about how it might be implemented.  That said, I can see the
advantage of having code snippets.

Perhaps the difficulty of integrating with something like EASPI is
that it begins to tie the two projects together and i think there is
scope for AppSensor separate to that.  Every modification to EASPI
might mean AppSensor has to be updated.

The book is great, and maybe another version would be useful some time
this year.

Wiki pages might be useful, and this could be where code examples are
added?  I think if as much as possible is language independent, it'll
help the continued growth.  Implementations can then just reference
the spec.  Drools sounds interesting.

Perhaps defining a suggested database structure for collecting the
events, allowing trend analysis and checking thresholds would be
useful to go along with the sensor specs.


Colin

From jtmelton at gmail.com  Wed Jan 27 13:49:14 2010
From: jtmelton at gmail.com (John Melton)
Date: Wed, 27 Jan 2010 13:49:14 -0500
Subject: [Owasp-appsensor-project] Another Sensor Location Idea -
	Deployedat the client as the threat level increases
In-Reply-To: <B9A412898630124ABE8350F4EBD32E840121E42F@mymail.aspectsecurity.com>
References: <b46e4cdd1001270805o5959713eyb5cd8b96ab187089@mail.gmail.com> 
	<B9A412898630124ABE8350F4EBD32E840121E40D@mymail.aspectsecurity.com> 
	<d67ecf7a1001270847s27169c8evd9599128930e318f@mail.gmail.com> 
	<B9A412898630124ABE8350F4EBD32E840121E420@mymail.aspectsecurity.com> 
	<d67ecf7a1001270954t63711077le067c4b8712768fa@mail.gmail.com> 
	<B9A412898630124ABE8350F4EBD32E840121E42F@mymail.aspectsecurity.com>
Message-ID: <d67ecf7a1001271049g67da7f57ib42bcf8c019ae106@mail.gmail.com>

I very much like the idea of having access to the source for the detection
portion of the demo, possibly even the entire demo could be tagged as a toy
app for folks to get an idea of what's going on.  Also, it might be nice to
have a matrix maintained like the following for all the detection points

ID    |  Implemented ?  |  Notes
---------------------------------------------------
ID1  |  Yes                  |  Simply drop this J2EE filter in your app
....
ID2  |  Partial               |  There is some code ... but it's just a
sample you need to customize
ID3  |  No                    |  No implementation yet
ID4  |  Yes                  |  The code is here, you just need to override
these X properties in this X config file.
ID3  |  No                    |  Will never be implemented ... This is
completely custom to your app
....

This way, the project could build some working implementations of the
detection points akin to the reference implementations in ESAPI.  There is
some churn on that project right now trying to decide which implementations
to create and how to plug them in and package them and so forth,
particularly with regards to how the configuration is going to work for
separate implementations.  If they come to good decisions, that could
possibly help inform some of the decisions here.

A couple of other things.  I would be willing to take an initial stab at the
code for a couple of the detection points, particularly if you can point to
any you think would be simple and/or high value.  I could also try and
follow that up w/ a take at the "implementation matrix" above if there's any
perceived value.

Also w/ regards to code, was there ever any intention for this project to
produce any code?  If not, maybe all of this discussion is out of line.  If
so, is it intended to be part of ESAPI or separate?  There's a simple
"intrusion detector" for tracking security exceptions and their frequency
per user.  Is the idea that this project would simply detect, and bubble up
exceptions that the detector would act upon?  If so, there would certainly
need to be another detector written (likely custom to an app) to handle all
of the response types (like shutting down a feature).

Lastly, if my comments are not valuable for group discussion, feel free to
take them offline.

-jm


On Wed, Jan 27, 2010 at 1:09 PM, Michael Coates <
michael.coates at aspectsecurity.com> wrote:

>  Glad to hear the good thoughts. I am certainly behind this project and
> would like to see it succeed.
>
>
>
> I agree, it would take some initial code. However, the demo at
> http://defendtheapp.com leverages a large amount of code from esapi. I
> basically built 3 or 4 classes to extend a few things and that was it.  I?d
> be happy to make that code available. We?d need to clean it up a bit since
> its just in proof of concept style, but it all works great.  What do you
> think if we were to make the framework code available (esapi.jar plus 4
> classes) and provide the samples of how to do the detection points (3-4
> lines of code plus the appropriate intrusion detection call)?
>
>
>
> Roadmap:
>
> It is a weak little roadmap.  I?m looking for more interested people to
> help with this project.  I think we have a lot of good ideas and need to
> find a way to push them forward.
>
>
>
> Regarding your comment on a rules engine. That was probably from slide 34
> of this presentation:
>
>
> http://www.owasp.org/images/0/06/Defend_Yourself-Integrating_Real_Time_Defenses_into_Online_Applications-Michael_Coates.pdf
>
> One of my sample implementations for detection of application based worms
> was to define rules within the Drools rule based engine.
>
> * *
>
> * *
>
> * *
>
> * *
>
> *Michael Coates*
>
>
>
> *From:* John Melton [mailto:jtmelton at gmail.com]
> *Sent:* Wednesday, January 27, 2010 11:55 AM
> *To:* Michael Coates
> *Cc:* owasp-appsensor-project
>
> *Subject:* Re: [Owasp-appsensor-project] Another Sensor Location Idea -
> Deployedat the client as the threat level increases
> *Importance:* High
>
>
>
> Thanks for the response.  Not to laud you too much, but I think the project
> is queued for success.  I think the mix of the timing (w/ regards to real
> events in the community) along with the significant effort put into the
> project (excellent documentation with clear descriptions of event types)
> could make it a big win for some applications.
>
> My one dissent would be that I think it will require at least some code to
> get initial uptake.  Obviously the low hanging fruit would make sense, if
> there are some simple rules to implement.  My thought is most developers
> will use a project if it gives them something tactical today.  They may also
> contribute back if they like the project.  Are there any plans along these
> lines for the project currently?  Is there a roadmap?  I only see what's on
> the OWASP site for documentation about where the project is going, which
> seems thin at the moment.  My thought is most of those discussions are
> happening on this list, which I've only recently joined.
>
> On a somewhat related note, I can't find it in the book, but I could swear
> I read somewhere at some point something about a rules engine, or maybe a
> diagram with that in it in reference to implementing the trend monitoring
> ... am I off base here?  That's the reason I was thinking there was code out
> there somewhere.
>
> -jm
>
> On Wed, Jan 27, 2010 at 12:08 PM, Michael Coates <
> michael.coates at aspectsecurity.com> wrote:
>
> Yep, no code right now. It?s all about the methodology and concept of
> detecting and responding to attacks in the application.  Ultimately the code
> would be unique to an individual application, but it wouldn?t be hard for us
> to provide samples of how to integrate into esapi or provide sample code for
> each detection point.
>
>
>
> It sounds like this would be useful to you and others and help the adoption
> of AppSensor concepts.
>
>
>
> * *
>
> *Michael Coates*
>
>
>
> *From:* John Melton [mailto:jtmelton at gmail.com]
> *Sent:* Wednesday, January 27, 2010 10:48 AM
> *To:* Michael Coates
> *Cc:* Colin Watson; owasp-appsensor-project
> *Subject:* Re: [Owasp-appsensor-project] Another Sensor Location Idea -
> Deployedat the client as the threat level increases
> *Importance:* High
>
>
>
> New to this list, so sorry if this is out of place.  I looked at appsensor
> a bit ago, but couldn't find any code ... just checked and still couldn't.
> As for the book, I thought it was very good, but code examples would
> probably go a long way to helping most devs.
>
> -jm
>
> On Wed, Jan 27, 2010 at 11:30 AM, Michael Coates <
> michael.coates at aspectsecurity.com> wrote:
>
> Clever idea. I like it.
>
> I have a different question though. How do we keep managing this
> project? The first approach was to create the pdf/book with all of the
> information.  But now I'm feeling that it might be easier to maintain if
> all of the detection points are in the wiki. Then people can update and
> add as they see fit?
>
> Any thoughts?  For that matter, any feedback on the book itself? Should
> we put out another version? What's missing? Do you want to see code
> examples?
>
>
> Michael Coates
> Aspect Security
> OWASP AppSensor Project Lead
>
>
>
> -----Original Message-----
> From: owasp-appsensor-project-bounces at lists.owasp.org
> [mailto:owasp-appsensor-project-bounces at lists.owasp.org] On Behalf Of
> Colin Watson
> Sent: Wednesday, January 27, 2010 10:06 AM
> To: owasp-appsensor-project
> Subject: [Owasp-appsensor-project] Another Sensor Location Idea -
> Deployedat the client as the threat level increases
> Importance: High
>
> I was rummaging around some ModSecurity discussions and noticed this:
>
>
> http://www.modsecurity.org/projects/modsecurity/apache/feature_content_i
> njection.html#id281488<http://www.modsecurity.org/projects/modsecurity/apache/feature_content_i%0Anjection.html#id281488>
>
> concerning sending a payload back to an attacker, to determine their
> real IP address.  So perhaps another sensor position is one deployed
> dynamically (by the application) on the client.  Some non-IT examples
> of this would be:
>
> - deploying an airplane to take a closer look at another ship
> approaching an aircraft carrier, to find out more information about
> the potential threat
> - using a manual hydrocarbon detection instrument in a refinery, if
> someone reports a smell of gas, to determine if there really is a
> problem
>
> The appsensor is getting more complex, but cleverer.
>
> Colin
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20100127/3c10ccc4/attachment-0001.html 

From michael.coates at aspectsecurity.com  Wed Jan 27 16:15:18 2010
From: michael.coates at aspectsecurity.com (Michael Coates)
Date: Wed, 27 Jan 2010 16:15:18 -0500
Subject: [Owasp-appsensor-project] Another Sensor Location Idea -
	Deployedat the client as the threat level increases
In-Reply-To: <d67ecf7a1001271049g67da7f57ib42bcf8c019ae106@mail.gmail.com>
References: <b46e4cdd1001270805o5959713eyb5cd8b96ab187089@mail.gmail.com>
	<B9A412898630124ABE8350F4EBD32E840121E40D@mymail.aspectsecurity.com>
	<d67ecf7a1001270847s27169c8evd9599128930e318f@mail.gmail.com>
	<B9A412898630124ABE8350F4EBD32E840121E420@mymail.aspectsecurity.com>
	<d67ecf7a1001270954t63711077le067c4b8712768fa@mail.gmail.com>
	<B9A412898630124ABE8350F4EBD32E840121E42F@mymail.aspectsecurity.com>
	<d67ecf7a1001271049g67da7f57ib42bcf8c019ae106@mail.gmail.com>
Message-ID: <B9A412898630124ABE8350F4EBD32E840121E47A@mymail.aspectsecurity.com>

I like these ideas.  I will try and get that source code up at the
google project site very soon.

 

The matrix looks good. What I'd like to do is make an individual wiki
page for each ID item, then we can create a table like the one you've
described with clickable links to each detection point.  Within the wiki
page for each detection point we can include the info from the book and
any code samples that may be available (none at this time)

 

There are a  few detection points which I think are more popular than
others. I can get that list together and send it to the mailing list.

 

Regarding code, I don't know if we originally planned for code or not.
The idea was to get this concept out there and then do what was needed
to get people on board.  So if code is what we need, then let's go that
direction too.

 

To your final point, the comments are most definitely for mail list
discussion. That's the reason why we have the list and why people signed
up on it.

 

 

 

Michael Coates

 

From: John Melton [mailto:jtmelton at gmail.com] 
Sent: Wednesday, January 27, 2010 12:49 PM
To: Michael Coates
Cc: owasp-appsensor-project
Subject: Re: [Owasp-appsensor-project] Another Sensor Location Idea -
Deployedat the client as the threat level increases
Importance: High

 

I very much like the idea of having access to the source for the
detection portion of the demo, possibly even the entire demo could be
tagged as a toy app for folks to get an idea of what's going on.  Also,
it might be nice to have a matrix maintained like the following for all
the detection points

ID    |  Implemented ?  |  Notes
---------------------------------------------------
ID1  |  Yes                  |  Simply drop this J2EE filter in your app
....
ID2  |  Partial               |  There is some code ... but it's just a
sample you need to customize
ID3  |  No                    |  No implementation yet
ID4  |  Yes                  |  The code is here, you just need to
override these X properties in this X config file.
ID3  |  No                    |  Will never be implemented ... This is
completely custom to your app
....

This way, the project could build some working implementations of the
detection points akin to the reference implementations in ESAPI.  There
is some churn on that project right now trying to decide which
implementations to create and how to plug them in and package them and
so forth, particularly with regards to how the configuration is going to
work for separate implementations.  If they come to good decisions, that
could possibly help inform some of the decisions here.

A couple of other things.  I would be willing to take an initial stab at
the code for a couple of the detection points, particularly if you can
point to any you think would be simple and/or high value.  I could also
try and follow that up w/ a take at the "implementation matrix" above if
there's any perceived value.

Also w/ regards to code, was there ever any intention for this project
to produce any code?  If not, maybe all of this discussion is out of
line.  If so, is it intended to be part of ESAPI or separate?  There's a
simple "intrusion detector" for tracking security exceptions and their
frequency per user.  Is the idea that this project would simply detect,
and bubble up exceptions that the detector would act upon?  If so, there
would certainly need to be another detector written (likely custom to an
app) to handle all of the response types (like shutting down a feature).


Lastly, if my comments are not valuable for group discussion, feel free
to take them offline.

-jm



On Wed, Jan 27, 2010 at 1:09 PM, Michael Coates
<michael.coates at aspectsecurity.com> wrote:

Glad to hear the good thoughts. I am certainly behind this project and
would like to see it succeed.

 

I agree, it would take some initial code. However, the demo at
http://defendtheapp.com leverages a large amount of code from esapi. I
basically built 3 or 4 classes to extend a few things and that was it.
I'd be happy to make that code available. We'd need to clean it up a bit
since its just in proof of concept style, but it all works great.  What
do you think if we were to make the framework code available (esapi.jar
plus 4 classes) and provide the samples of how to do the detection
points (3-4 lines of code plus the appropriate intrusion detection
call)?

 

Roadmap:

It is a weak little roadmap.  I'm looking for more interested people to
help with this project.  I think we have a lot of good ideas and need to
find a way to push them forward.

 

Regarding your comment on a rules engine. That was probably from slide
34 of this presentation:

http://www.owasp.org/images/0/06/Defend_Yourself-Integrating_Real_Time_D
efenses_into_Online_Applications-Michael_Coates.pdf

One of my sample implementations for detection of application based
worms was to define rules within the Drools rule based engine.

 

 

 

 

Michael Coates

 

From: John Melton [mailto:jtmelton at gmail.com] 
Sent: Wednesday, January 27, 2010 11:55 AM
To: Michael Coates
Cc: owasp-appsensor-project


Subject: Re: [Owasp-appsensor-project] Another Sensor Location Idea -
Deployedat the client as the threat level increases
Importance: High

 

Thanks for the response.  Not to laud you too much, but I think the
project is queued for success.  I think the mix of the timing (w/
regards to real events in the community) along with the significant
effort put into the project (excellent documentation with clear
descriptions of event types) could make it a big win for some
applications.  

My one dissent would be that I think it will require at least some code
to get initial uptake.  Obviously the low hanging fruit would make
sense, if there are some simple rules to implement.  My thought is most
developers will use a project if it gives them something tactical today.
They may also contribute back if they like the project.  Are there any
plans along these lines for the project currently?  Is there a roadmap?
I only see what's on the OWASP site for documentation about where the
project is going, which seems thin at the moment.  My thought is most of
those discussions are happening on this list, which I've only recently
joined.

On a somewhat related note, I can't find it in the book, but I could
swear I read somewhere at some point something about a rules engine, or
maybe a diagram with that in it in reference to implementing the trend
monitoring ... am I off base here?  That's the reason I was thinking
there was code out there somewhere.

-jm

On Wed, Jan 27, 2010 at 12:08 PM, Michael Coates
<michael.coates at aspectsecurity.com> wrote:

Yep, no code right now. It's all about the methodology and concept of
detecting and responding to attacks in the application.  Ultimately the
code would be unique to an individual application, but it wouldn't be
hard for us to provide samples of how to integrate into esapi or provide
sample code for each detection point.

 

It sounds like this would be useful to you and others and help the
adoption of AppSensor concepts.

 

 

Michael Coates

 

From: John Melton [mailto:jtmelton at gmail.com] 
Sent: Wednesday, January 27, 2010 10:48 AM
To: Michael Coates
Cc: Colin Watson; owasp-appsensor-project
Subject: Re: [Owasp-appsensor-project] Another Sensor Location Idea -
Deployedat the client as the threat level increases
Importance: High

 

New to this list, so sorry if this is out of place.  I looked at
appsensor a bit ago, but couldn't find any code ... just checked and
still couldn't.  As for the book, I thought it was very good, but code
examples would probably go a long way to helping most devs.  

-jm

On Wed, Jan 27, 2010 at 11:30 AM, Michael Coates
<michael.coates at aspectsecurity.com> wrote:

Clever idea. I like it.

I have a different question though. How do we keep managing this
project? The first approach was to create the pdf/book with all of the
information.  But now I'm feeling that it might be easier to maintain if
all of the detection points are in the wiki. Then people can update and
add as they see fit?

Any thoughts?  For that matter, any feedback on the book itself? Should
we put out another version? What's missing? Do you want to see code
examples?


Michael Coates
Aspect Security
OWASP AppSensor Project Lead



-----Original Message-----
From: owasp-appsensor-project-bounces at lists.owasp.org
[mailto:owasp-appsensor-project-bounces at lists.owasp.org] On Behalf Of
Colin Watson
Sent: Wednesday, January 27, 2010 10:06 AM
To: owasp-appsensor-project
Subject: [Owasp-appsensor-project] Another Sensor Location Idea -
Deployedat the client as the threat level increases
Importance: High

I was rummaging around some ModSecurity discussions and noticed this:


http://www.modsecurity.org/projects/modsecurity/apache/feature_content_i
njection.html#id281488
<http://www.modsecurity.org/projects/modsecurity/apache/feature_content_
i%0Anjection.html#id281488> 

concerning sending a payload back to an attacker, to determine their
real IP address.  So perhaps another sensor position is one deployed
dynamically (by the application) on the client.  Some non-IT examples
of this would be:

- deploying an airplane to take a closer look at another ship
approaching an aircraft carrier, to find out more information about
the potential threat
- using a manual hydrocarbon detection instrument in a refinery, if
someone reports a smell of gas, to determine if there really is a
problem

The appsensor is getting more complex, but cleverer.

Colin
_______________________________________________
Owasp-appsensor-project mailing list
Owasp-appsensor-project at lists.owasp.org
https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
_______________________________________________
Owasp-appsensor-project mailing list
Owasp-appsensor-project at lists.owasp.org
https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project

 

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20100127/027b6c1b/attachment-0001.html 

