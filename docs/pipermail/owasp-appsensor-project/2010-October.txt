From jtmelton at gmail.com  Tue Oct 19 00:10:15 2010
From: jtmelton at gmail.com (John Melton)
Date: Tue, 19 Oct 2010 00:10:15 -0400
Subject: [Owasp-appsensor-project] New DB implementation in demo code
Message-ID: <AANLkTinr+V=s7iUJkjPY_bPoSvtpnC+XtE=9gqKUfVpz@mail.gmail.com>

All,
For anyone interested, I just finished adding an HSQLDB implementation of
the intrusion store to the AppSensorDemo2 (
http://code.google.com/p/appsensor/source/browse/#svn/trunk/AppSensorDemo2)
code base.  This is a really simple implementation based on the original
in-memory version that is the default.  However, it does store all the
pertinent intrusion related data in the DB.  I'll mention up front that this
is absolutely not optimal.  I spent no real time optimizing and it will be
slow if you try it on any decent size app, but it does provide a simple
example of how it can be done.  It is also included in the demo code so I
can get away with less optimal code.  If there is a good amount of interest,
we can spend some time doing optimization, though I tend to think how this
is done will be very specific to the app/organization using appsensor.

The code's been sitting there for a few weeks, but I had to wait for ESAPI
to push their latest version that included a patch I added in order to make
the exceptions from ESAPI serializable - this simple code just serializes
the actual exception objects to the DB as opposed to parsing out all the
data, then trying to reconstruct exceptions.

The last thing is that I updated the maven POM from the core code to point
to the latest version of ESAPI, which thanks to the ESAPI team is now in the
central maven repo.  Now there should be no manual adding of ESAPI to your
local maven repo.  You should just be able to pull the appsensor source and
build directly.  I'll try to update the online build docs soon with the
revised info.
Thanks,
John
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20101019/1089f450/attachment.html 

From michael.coates at owasp.org  Tue Oct 19 13:21:07 2010
From: michael.coates at owasp.org (Michael Coates)
Date: Tue, 19 Oct 2010 10:21:07 -0700
Subject: [Owasp-appsensor-project] New DB implementation in demo code
In-Reply-To: <AANLkTinr+V=s7iUJkjPY_bPoSvtpnC+XtE=9gqKUfVpz@mail.gmail.com>
References: <AANLkTinr+V=s7iUJkjPY_bPoSvtpnC+XtE=9gqKUfVpz@mail.gmail.com>
Message-ID: <4CBDD383.3030700@owasp.org>

 Awesome work!  The db example is going to be really helpful. Several
people have requested this in the past.

Michael Coates
OWASP


On 10/18/10 9:10 PM, John Melton wrote:
> All,
> For anyone interested, I just finished adding an HSQLDB implementation of the 
> intrusion store to the AppSensorDemo2 
> (http://code.google.com/p/appsensor/source/browse/#svn/trunk/AppSensorDemo2) 
> code base.  This is a really simple implementation based on the original 
> in-memory version that is the default.  However, it does store all the pertinent 
> intrusion related data in the DB.  I'll mention up front that this is absolutely 
> not optimal.  I spent no real time optimizing and it will be slow if you try it 
> on any decent size app, but it does provide a simple example of how it can be 
> done.  It is also included in the demo code so I can get away with less optimal 
> code.  If there is a good amount of interest, we can spend some time doing 
> optimization, though I tend to think how this is done will be very specific to 
> the app/organization using appsensor.
>
> The code's been sitting there for a few weeks, but I had to wait for ESAPI to 
> push their latest version that included a patch I added in order to make the 
> exceptions from ESAPI serializable - this simple code just serializes the actual 
> exception objects to the DB as opposed to parsing out all the data, then trying 
> to reconstruct exceptions.
>
> The last thing is that I updated the maven POM from the core code to point to 
> the latest version of ESAPI, which thanks to the ESAPI team is now in the 
> central maven repo.  Now there should be no manual adding of ESAPI to your local 
> maven repo.  You should just be able to pull the appsensor source and build 
> directly.  I'll try to update the online build docs soon with the revised info.
> Thanks,
> John
>
>
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20101019/2676a719/attachment.html 

From jtmelton at gmail.com  Tue Oct 19 14:17:13 2010
From: jtmelton at gmail.com (John Melton)
Date: Tue, 19 Oct 2010 14:17:13 -0400
Subject: [Owasp-appsensor-project] New DB implementation in demo code
In-Reply-To: <AANLkTikSMGvEG8PPWxAi2JVcDBTqj_GOYoyAy_voB1AN@mail.gmail.com>
References: <AANLkTinr+V=s7iUJkjPY_bPoSvtpnC+XtE=9gqKUfVpz@mail.gmail.com>
	<AANLkTikSMGvEG8PPWxAi2JVcDBTqj_GOYoyAy_voB1AN@mail.gmail.com>
Message-ID: <AANLkTikdnJ1fm-5=+W=1GnR1dh++dhdpW1mTr8kAPzT6@mail.gmail.com>

Colin,
That would be fine.  Just ping me offline about when you'd like to chat.
I've tried to give a short answer to each of your questions listed below for
the benefit of those on the list.
Thanks,
John

On Tue, Oct 19, 2010 at 1:41 PM, Colin Watson <colin.watson at owasp.org>wrote:

> John
>
> This sounds very useful.
>
> Could I maybe have a telephone/VOIP chat with you in a week or so's
> time?  I'm writing a code/language agnostic guidance about a method of
> selecting detection points and response actions (things to consider,
> how detection points relate top other taxonomies, etc).  One chart
> (work in progress attached, which tries to show how some detection
> points are a more general version of another detection point).   It is
> aimed at perhaps a less developer-orientated audience, and I'd like to
> understand what the ESAPI AppSensor code includes/does not include so
> I don't drop me or anyone else in it, when asked a question.
>
> Some of the sorts of things I'd like to ask are:
>
> - how configurable are threshold levels and time periods (per
> application, per detection point)

per detection point

> - which detection points and responses are implemented (sorry about
> adding all those extra ideas)
>
Most if not all of the detection points we've implemented so far are in
http://code.google.com/p/appsensor/source/browse/trunk/AppSensor/src/main/java/org/owasp/appsensor/AttackDetectorUtils.java
As far as response actions - those are listed in
http://code.google.com/p/appsensor/source/browse/trunk/AppSensor/src/main/java/org/owasp/appsensor/intrusiondetection/reference/DefaultResponseAction.java
the current list is [log, logout, disable, disableComponent,
disableComponentForUser, smsAdmin, emailAdmin]

> - are the trend exceptions handled differently
>
trend exceptions are handled differently.  This is currently a weak area
where not much time has been spent working through these issues.  There is
some very basic code in the core project for trend monitoring, and a bit of
code in the demo that exercises it -
http://code.google.com/p/appsensor/source/browse/trunk/AppSensorDemo2/src/org/owasp/appsensor/demoapp/#demoapp/trend.
This will be an area of increased effort going forward.  This is going to be
more complicated than the base functionality of threshold monitoring.

> - how are the detection points that accumulate events (e.g. multiple
> failed passwords, large number of file uploads) implemented, if at all
>
If I understand the question, this is the core of appsensor.  An error state
occurs, and the code creates an exception.  Part of the exception
declaration includes the identifier code (IE1, STE1, etc).  The intrusion
store differentiates between these exceptions.  When a new exception is
created, the intrusion store checks if X number of that specific intrusion
have occurred over Y amount of time, and if so, triggers a response.  The
core detection/response code is there and working.  As for the detection of
the 2 specific events you mentioned, I don't think those are implemented at
all from a detection standpoint.

> - etc
>
> Regards
>
> Colin
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20101019/eff62ddb/attachment.html 

From colin.watson at owasp.org  Wed Oct 20 06:20:48 2010
From: colin.watson at owasp.org (Colin Watson)
Date: Wed, 20 Oct 2010 11:20:48 +0100
Subject: [Owasp-appsensor-project] New DB implementation in demo code
In-Reply-To: <AANLkTikdnJ1fm-5=+W=1GnR1dh++dhdpW1mTr8kAPzT6@mail.gmail.com>
References: <AANLkTinr+V=s7iUJkjPY_bPoSvtpnC+XtE=9gqKUfVpz@mail.gmail.com>
	<AANLkTikSMGvEG8PPWxAi2JVcDBTqj_GOYoyAy_voB1AN@mail.gmail.com>
	<AANLkTikdnJ1fm-5=+W=1GnR1dh++dhdpW1mTr8kAPzT6@mail.gmail.com>
Message-ID: <AANLkTin2aL6QvAnCH76vC8+4Ln7s29rSggZ4Arps6nCH@mail.gmail.com>

John

Thank you very much for the confirmation and pointers.  I will have a
read of those links in more detail and contact you directly with final
queries.

Regards

Colin

On 19 October 2010 19:17, John Melton <jtmelton at gmail.com> wrote:
> Colin,
> That would be fine.? Just ping me offline about when you'd like to chat.
> I've tried to give a short answer to each of your questions listed below for
> the benefit of those on the list.
> Thanks,
> John
>
> On Tue, Oct 19, 2010 at 1:41 PM, Colin Watson <colin.watson at owasp.org>
> wrote:
>>
>> John
>>
>> This sounds very useful.
>>
>> Could I maybe have a telephone/VOIP chat with you in a week or so's
>> time? ?I'm writing a code/language agnostic guidance about a method of
>> selecting detection points and response actions (things to consider,
>> how detection points relate top other taxonomies, etc). ?One chart
>> (work in progress attached, which tries to show how some detection
>> points are a more general version of another detection point). ? It is
>> aimed at perhaps a less developer-orientated audience, and I'd like to
>> understand what the ESAPI AppSensor code includes/does not include so
>> I don't drop me or anyone else in it, when asked a question.
>>
>> Some of the sorts of things I'd like to ask are:
>>
>> - how configurable are threshold levels and time periods (per
>> application, per detection point)
>
> per detection point
>>
>> - which detection points and responses are implemented (sorry about
>> adding all those extra ideas)
>
> Most if not all of the detection points we've implemented so far are in
> http://code.google.com/p/appsensor/source/browse/trunk/AppSensor/src/main/java/org/owasp/appsensor/AttackDetectorUtils.java
> As far as response actions - those are listed in
> http://code.google.com/p/appsensor/source/browse/trunk/AppSensor/src/main/java/org/owasp/appsensor/intrusiondetection/reference/DefaultResponseAction.java
> the current list is [log, logout, disable, disableComponent,
> disableComponentForUser, smsAdmin, emailAdmin]
>>
>> - are the trend exceptions handled differently
>
> trend exceptions are handled differently.? This is currently a weak area
> where not much time has been spent working through these issues.? There is
> some very basic code in the core project for trend monitoring, and a bit of
> code in the demo that exercises it -
> http://code.google.com/p/appsensor/source/browse/trunk/AppSensorDemo2/src/org/owasp/appsensor/demoapp/#demoapp/trend.
> This will be an area of increased effort going forward.? This is going to be
> more complicated than the base functionality of threshold monitoring.
>>
>> - how are the detection points that accumulate events (e.g. multiple
>> failed passwords, large number of file uploads) implemented, if at all
>
> If I understand the question, this is the core of appsensor.? An error state
> occurs, and the code creates an exception.? Part of the exception
> declaration includes the identifier code (IE1, STE1, etc).? The intrusion
> store differentiates between these exceptions.? When a new exception is
> created, the intrusion store checks if X number of that specific intrusion
> have occurred over Y amount of time, and if so, triggers a response.? The
> core detection/response code is there and working.? As for the detection of
> the 2 specific events you mentioned, I don't think those are implemented at
> all from a detection standpoint.
>>
>> - etc
>>
>> Regards
>>
>> Colin
>
>

From michael.coates at owasp.org  Sun Oct 31 13:23:38 2010
From: michael.coates at owasp.org (Michael Coates)
Date: Sun, 31 Oct 2010 12:23:38 -0500
Subject: [Owasp-appsensor-project] Fwd: AppSensor & ESAPI
Message-ID: <4CCDA61A.3070707@owasp.org>

Forwarding to AppSensor mailing list.  I think John will have the most
current info for several of these questions.

But, we do need to get the appsensor.jar as a feature download.  We
don't want people to build from scratch if they don't want to.

-------- Original Message --------
Subject: 	AppSensor & ESAPI
Date: 	Sun, 31 Oct 2010 09:37:31 -0400
From: 	Kevin W. Wall <kevin.w.wall at gmail.com>
Organization: 	Qwest IT - Application Security Team
To: 	Michael Coates <michael.coates at owasp.org>



Michael,

I just watched your AppSec USA 2010 video presentation about AppSensor & ESAPI
yesterday. (Thanks for the credit as contributor BTW. Totally unexpected.)

In it, you mentioned that it was planned to have appsensor.jar bundled with
ESAPI as of ESAPI 2.0rc8. Since I don't see it in ESAPI even in 2.0rc10,
I'm guessing that there was a delay for some reason.

So then I go to look for the AppSensor tutorial and the AppSensor jar file
at the AppSensor Google Code site and I don't find either. (The tutorial is
under '/' of the trunk under the svn/trunk though, so I did get it.) But
surprisingly (to me, at least) was the fact that I could not find appsensor.jar
anywhere under the featured or previous Downloads. (Do you expect people to
build it from scratch?)

Anyway, the reason that I am bringing this up is that I am about ready to
start working on the ESAPI crypto for the 2.1 branch and I see many places
where I'd like to wire-in AppSensor detection points into either JavaEncryptor
or perhaps even EncryptionException. If AppSensor was truly bundled as part of
ESAPI that would be fairly easy to do. OTOH, if it is not, I may need to
rethink this because I don't want to create yet another dependency on an
external class library. (ESAPI already has something like 30+ jars that it
is dependent upon.)

Lastly, from your AppSec USA 2010 video, I recall you stating that that the
way that AppSensor would be enabled in ESAPI would be to set

ESAPI.IntrusionDetector=org.owasp.appsensor.intrusiondetection.AppSensorIntrusionDetector

in the ESAPI.properties file. However, I also vaguely recall discussion
as to how that property should not be used as that would disable
ESAPI's built-in WAF and I thought that I remember Jeff Williams arguing that
AppSensor and the ESAPI WAF were _complimentary_ rather than _competing_
technologies so therefore they should use different properties in ESAPI.
Anyway, I am not sure that this has been resolved or not, so would appreciate
an update in this area as well.

Thanks,
-kevin
P.S.- If you wish to reply to the OWASP-AppSensor-Project mailing list, that's
      fine as I subscribe to that. Just wasn't sure if this was to appropriate
      to ask this there as I'm not sure if that's a developers list or a users
      list.
-- 
Kevin W. Wall
"The most likely way for the world to be destroyed, most experts agree,
is by accident. That's where we come in; we're computer professionals.
We cause accidents."        -- Nathaniel Borenstein, co-creator of MIME

-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20101031/5233dfbb/attachment.html 

From jtmelton at gmail.com  Sun Oct 31 19:53:23 2010
From: jtmelton at gmail.com (John Melton)
Date: Sun, 31 Oct 2010 19:53:23 -0400
Subject: [Owasp-appsensor-project] Fwd: AppSensor & ESAPI
In-Reply-To: <4CCDA61A.3070707@owasp.org>
References: <4CCDA61A.3070707@owasp.org>
Message-ID: <AANLkTi=Vs5DuKZMJEPxv2vjJetiUq+2Breb06mSBe-io@mail.gmail.com>

Kevin,
Hi, Glad you are considering AppSensor.  I attempted answers inline - if you
have further questions, let me know.
Thanks,
John

On Sun, Oct 31, 2010 at 1:23 PM, Michael Coates <michael.coates at owasp.org>wrote:

>  Forwarding to AppSensor mailing list.  I think John will have the most
> current info for several of these questions.
>
> But, we do need to get the appsensor.jar as a feature download.  We don't
> want people to build from scratch if they don't want to.
>
> -------- Original Message --------  Subject: AppSensor & ESAPI  Date: Sun,
> 31 Oct 2010 09:37:31 -0400  From: Kevin W. Wall <kevin.w.wall at gmail.com><kevin.w.wall at gmail.com>  Organization:
> Qwest IT - Application Security Team  To: Michael Coates
> <michael.coates at owasp.org> <michael.coates at owasp.org>
>
> Michael,
>
> I just watched your AppSec USA 2010 video presentation about AppSensor & ESAPI
> yesterday. (Thanks for the credit as contributor BTW. Totally unexpected.)
>
> In it, you mentioned that it was planned to have appsensor.jar bundled with
> ESAPI as of ESAPI 2.0rc8. Since I don't see it in ESAPI even in 2.0rc10,
> I'm guessing that there was a delay for some reason.
>
> I copied Jim on this email b/c he was discussing this with us.  I
personally am not sure what's required on the ESAPI side to get AppSensor
bundled. I can say AppSensor depends on ESAPI in some of it's code (ESAPI is
a maven dependency of AppSensor).  I would be happy to do whatever I can to
get it included in the bundle.  Jim, any thoughts?

> So then I go to look for the AppSensor tutorial and the AppSensor jar file
> at the AppSensor Google Code site and I don't find either. (The tutorial is
> under '/' of the trunk under the svn/trunk though, so I did get it.) But
> surprisingly (to me, at least) was the fact that I could not find appsensor.jar
> anywhere under the featured or previous Downloads. (Do you expect people to
> build it from scratch?)
>
> Right now, there are 3 ways to get the jar, and I agree this should be
reorganized ... we all admit documentation is our next hurdle.  The first is
to build from scratch as you mentioned, unpalatable to most.  The second is
to grab the jar from the link on
http://www.owasp.org/index.php/AppSensor_Developer_Guide.  The third is to
add it as a maven dependency - AppSensor is in Maven central (same as ESAPI
as of 2.0RC10.  We really do need to move towards producing a deliverable
similar to ESAPI that is a zip w/ the jar/dependencies/javadoc/config files,
etc. in a zip or something like that, but we're not there yet.

> Anyway, the reason that I am bringing this up is that I am about ready to
> start working on the ESAPI crypto for the 2.1 branch and I see many places
> where I'd like to wire-in AppSensor detection points into either JavaEncryptor
> or perhaps even EncryptionException. If AppSensor was truly bundled as part of
> ESAPI that would be fairly easy to do. OTOH, if it is not, I may need to
> rethink this because I don't want to create yet another dependency on an
> external class library. (ESAPI already has something like 30+ jars that it
> is dependent upon.)
>
> Glad you're thinking of going this way, again, I'd need to talk to Jim
about bundling.

> Lastly, from your AppSec USA 2010 video, I recall you stating that that the
> way that AppSensor would be enabled in ESAPI would be to set
>
> ESAPI.IntrusionDetector=org.owasp.appsensor.intrusiondetection.AppSensorIntrusionDetector
>
> in the ESAPI.properties file. However, I also vaguely recall discussion
> as to how that property should not be used as that would disable
> ESAPI's built-in WAF and I thought that I remember Jeff Williams arguing that
> AppSensor and the ESAPI WAF were _complimentary_ rather than _competing_
> technologies so therefore they should use different properties in ESAPI.
> Anyway, I am not sure that this has been resolved or not, so would appreciate
> an update in this area as well.
>
> This will probably have to be cleared up with Jeff and/or Jim.  I haven't
seen anything in the intrusion detector code that says anything about the
WAF, but I could be wrong.  I agree with Jeff's core point, but if that
configuration is true, then I think the current setup is confusing.  The WAF
should have separate configuration.  I wouldn't necessarily hook the WAF
into the intrusion detection config, since some folks would want to use one
or the other.
Also wanted to point out that in addition to changing that 1-line config,
you do need to add the appsensor.properties file (goes in the same folder as
the esapi.properties), and make sure the config is right there.  That config
file is in svn.

> Thanks,
> -kevin
> P.S.- If you wish to reply to the OWASP-AppSensor-Project mailing list, that's
>       fine as I subscribe to that. Just wasn't sure if this was to appropriate
>       to ask this there as I'm not sure if that's a developers list or a users
>       list.
> --
> Kevin W. Wall
> "The most likely way for the world to be destroyed, most experts agree,
> is by accident. That's where we come in; we're computer professionals.
> We cause accidents."        -- Nathaniel Borenstein, co-creator of MIME
>
>
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20101031/3c4b903b/attachment.html 

