From jtmelton at gmail.com  Thu Mar  3 04:10:25 2016
From: jtmelton at gmail.com (John Melton)
Date: Wed, 2 Mar 2016 23:10:25 -0500
Subject: [Owasp-appsensor-project] GSoC 2016
Message-ID: <CAM8z=yLvf5duXgGrx67c2Auio8GA6O-6fkmQbaNmozA2YpEzXA@mail.gmail.com>

All,

OWASP has been selected this year to participate in the Google Summer of
Code! This is great news for the org, and hopefully appsensor will be able
to participate again. We don't yet know how many slots we'll get, but now
is the time to get started with planning. There are 2 specific things you
can do:
1. If you are aware of students that might be interested, let them know
ASAP. There's ~2 weeks for Q&A, then ~2 weeks for submission.
2. If you have time, sign up as a mentor. That could be for appsensor, or
any of the other owasp projects. From past experience, I'd say you should
plan for about 2-3 hours per week for the duration of the program (~3
months). It's a really good experience with smart students. It's an easy
short-term way to contribute.

Let me know if you have any questions.

Thanks,
John

----------------------------------

Students will start applying for projects on March 14th but a lot of them
are already exploring ideas on our corresponding wiki page:
https://www.owasp.org/index.php/GSOC2016_Ideas.

*How you can get involved:*
If you are a project leader and would like for your project to participate add
your idea on our  GSOC 2016 Idea
<https://www.owasp.org/index.php/GSOC2016_Ideas> wiki page ASAP!

*Become a Mentor:*
Do you want to become a mentor for a student?
Choose a participating OWASP project from the wiki page listed below preferably
the one you are most familiar with.

Link: https://www.owasp.org/index.php/GSOC2016_Ideas

Touch base with the project leader and ask one of the org admins (Claudia
<claudia.aviles-casanovas at owasp.org>, Kostas <konstantinos at owasp.org> or
Fabio <fcerullo at owasp.org>) to send you an invitation and get you started
today.

*Help OWASP Invite Students: *
Are you somehow affiliated with a university? Get in touch with students,
inform them about the program and how they can participate with OWASP.
Please direct students to the wiki page for details:
https://www.owasp.org/index.php/GSoC

Please let us know if you need help or supporting material.

Thank you in advance for your time and look forward to your participation.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20160302/030c4a10/attachment.html>

From timo.goosen at owasp.org  Thu Mar  3 05:38:29 2016
From: timo.goosen at owasp.org (Timo Goosen)
Date: Thu, 3 Mar 2016 07:38:29 +0200
Subject: [Owasp-appsensor-project] GSoC 2016
In-Reply-To: <CAM8z=yLvf5duXgGrx67c2Auio8GA6O-6fkmQbaNmozA2YpEzXA@mail.gmail.com>
References: <CAM8z=yLvf5duXgGrx67c2Auio8GA6O-6fkmQbaNmozA2YpEzXA@mail.gmail.com>
Message-ID: <CAMOWqYCQMMNXnU1mAnXYy9v62nnn4+DaE2p2ttDHx6VU07UgHQ@mail.gmail.com>

Can we make suggestions on specific things that students can work on?

I've got some suggestions for the reverse proxy in Golang.

This is pretty cool.

Regards.
Timo

On Thu, Mar 3, 2016 at 6:10 AM, John Melton <jtmelton at gmail.com> wrote:

> All,
>
> OWASP has been selected this year to participate in the Google Summer of
> Code! This is great news for the org, and hopefully appsensor will be able
> to participate again. We don't yet know how many slots we'll get, but now
> is the time to get started with planning. There are 2 specific things you
> can do:
> 1. If you are aware of students that might be interested, let them know
> ASAP. There's ~2 weeks for Q&A, then ~2 weeks for submission.
> 2. If you have time, sign up as a mentor. That could be for appsensor, or
> any of the other owasp projects. From past experience, I'd say you should
> plan for about 2-3 hours per week for the duration of the program (~3
> months). It's a really good experience with smart students. It's an easy
> short-term way to contribute.
>
> Let me know if you have any questions.
>
> Thanks,
> John
>
> ----------------------------------
>
> Students will start applying for projects on March 14th but a lot of them
> are already exploring ideas on our corresponding wiki page:
> https://www.owasp.org/index.php/GSOC2016_Ideas.
>
> *How you can get involved:*
> If you are a project leader and would like for your project to participate
> add your idea on our  GSOC 2016 Idea
> <https://www.owasp.org/index.php/GSOC2016_Ideas> wiki page ASAP!
>
> *Become a Mentor:*
> Do you want to become a mentor for a student?
> Choose a participating OWASP project from the wiki page listed below preferably
> the one you are most familiar with.
>
> Link: https://www.owasp.org/index.php/GSOC2016_Ideas
>
> Touch base with the project leader and ask one of the org admins (Claudia
> <claudia.aviles-casanovas at owasp.org>, Kostas <konstantinos at owasp.org> or
> Fabio <fcerullo at owasp.org>) to send you an invitation and get you started
> today.
>
> *Help OWASP Invite Students: *
> Are you somehow affiliated with a university? Get in touch with students,
> inform them about the program and how they can participate with OWASP.
> Please direct students to the wiki page for details:
> https://www.owasp.org/index.php/GSoC
>
> Please let us know if you need help or supporting material.
>
> Thank you in advance for your time and look forward to your participation.
>
>
>
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20160303/3979af0f/attachment.html>

From jtmelton at gmail.com  Thu Mar  3 05:41:00 2016
From: jtmelton at gmail.com (John Melton)
Date: Thu, 3 Mar 2016 00:41:00 -0500
Subject: [Owasp-appsensor-project] GSoC 2016
In-Reply-To: <CAMOWqYCQMMNXnU1mAnXYy9v62nnn4+DaE2p2ttDHx6VU07UgHQ@mail.gmail.com>
References: <CAM8z=yLvf5duXgGrx67c2Auio8GA6O-6fkmQbaNmozA2YpEzXA@mail.gmail.com>
	<CAMOWqYCQMMNXnU1mAnXYy9v62nnn4+DaE2p2ttDHx6VU07UgHQ@mail.gmail.com>
Message-ID: <CAM8z=yKoW9JSxjhYn4m2bAm09KoKmysnCshKqUF50Y=o_ZfPKA@mail.gmail.com>

Yes, absolutely. More ideas is also a huge help.

Thanks,
John

On Thu, Mar 3, 2016 at 12:38 AM, Timo Goosen <timo.goosen at owasp.org> wrote:

> Can we make suggestions on specific things that students can work on?
>
> I've got some suggestions for the reverse proxy in Golang.
>
> This is pretty cool.
>
> Regards.
> Timo
>
> On Thu, Mar 3, 2016 at 6:10 AM, John Melton <jtmelton at gmail.com> wrote:
>
>> All,
>>
>> OWASP has been selected this year to participate in the Google Summer of
>> Code! This is great news for the org, and hopefully appsensor will be able
>> to participate again. We don't yet know how many slots we'll get, but now
>> is the time to get started with planning. There are 2 specific things you
>> can do:
>> 1. If you are aware of students that might be interested, let them know
>> ASAP. There's ~2 weeks for Q&A, then ~2 weeks for submission.
>> 2. If you have time, sign up as a mentor. That could be for appsensor, or
>> any of the other owasp projects. From past experience, I'd say you should
>> plan for about 2-3 hours per week for the duration of the program (~3
>> months). It's a really good experience with smart students. It's an easy
>> short-term way to contribute.
>>
>> Let me know if you have any questions.
>>
>> Thanks,
>> John
>>
>> ----------------------------------
>>
>> Students will start applying for projects on March 14th but a lot of
>> them are already exploring ideas on our corresponding wiki page:
>> https://www.owasp.org/index.php/GSOC2016_Ideas.
>>
>> *How you can get involved:*
>> If you are a project leader and would like for your project to
>> participate add your idea on our  GSOC 2016 Idea
>> <https://www.owasp.org/index.php/GSOC2016_Ideas> wiki page ASAP!
>>
>> *Become a Mentor:*
>> Do you want to become a mentor for a student?
>> Choose a participating OWASP project from the wiki page listed below preferably
>> the one you are most familiar with.
>>
>> Link: https://www.owasp.org/index.php/GSOC2016_Ideas
>>
>> Touch base with the project leader and ask one of the org admins (Claudia
>> <claudia.aviles-casanovas at owasp.org>, Kostas <konstantinos at owasp.org> or
>> Fabio <fcerullo at owasp.org>) to send you an invitation and get you
>> started today.
>>
>> *Help OWASP Invite Students: *
>> Are you somehow affiliated with a university? Get in touch with
>> students, inform them about the program and how they can participate with
>> OWASP.  Please direct students to the wiki page for details:
>> https://www.owasp.org/index.php/GSoC
>>
>> Please let us know if you need help or supporting material.
>>
>> Thank you in advance for your time and look forward to your participation.
>>
>>
>>
>> _______________________________________________
>> Owasp-appsensor-project mailing list
>> Owasp-appsensor-project at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20160303/ea6f08b8/attachment-0001.html>

From colin.watson at owasp.org  Thu Mar  3 11:58:20 2016
From: colin.watson at owasp.org (Colin WATSON)
Date: Thu, 03 Mar 2016 08:58:20 -0300
Subject: [Owasp-appsensor-project] [Owasp-appsensor-dev] GSoC 2016
In-Reply-To: <CAM8z=yLvf5duXgGrx67c2Auio8GA6O-6fkmQbaNmozA2YpEzXA@mail.gmail.com>
References: <CAM8z=yLvf5duXgGrx67c2Auio8GA6O-6fkmQbaNmozA2YpEzXA@mail.gmail.com>
Message-ID: <rfdmpj9kvekb5hf60mh94ge6.1457006300045@email.android.com>

Fantastic news,

Colin


---- John Melton wrote ----

>All,
>
>OWASP has been selected this year to participate in the Google Summer of
>Code! This is great news for the org, and hopefully appsensor will be able
>to participate again. We don't yet know how many slots we'll get, but now
>is the time to get started with planning. There are 2 specific things you
>can do:
>1. If you are aware of students that might be interested, let them know
>ASAP. There's ~2 weeks for Q&A, then ~2 weeks for submission.
>2. If you have time, sign up as a mentor. That could be for appsensor, or
>any of the other owasp projects. From past experience, I'd say you should
>plan for about 2-3 hours per week for the duration of the program (~3
>months). It's a really good experience with smart students. It's an easy
>short-term way to contribute.
>
>Let me know if you have any questions.
>
>Thanks,
>John
>
>----------------------------------
>
>Students will start applying for projects on March 14th but a lot of them
>are already exploring ideas on our corresponding wiki page:
>https://www.owasp.org/index.php/GSOC2016_Ideas.
>
>*How you can get involved:*
>If you are a project leader and would like for your project to participate add
>your idea on our  GSOC 2016 Idea
><https://www.owasp.org/index.php/GSOC2016_Ideas> wiki page ASAP!
>
>*Become a Mentor:*
>Do you want to become a mentor for a student?
>Choose a participating OWASP project from the wiki page listed below preferably
>the one you are most familiar with.
>
>Link: https://www.owasp.org/index.php/GSOC2016_Ideas
>
>Touch base with the project leader and ask one of the org admins (Claudia
><claudia.aviles-casanovas at owasp.org>, Kostas <konstantinos at owasp.org> or
>Fabio <fcerullo at owasp.org>) to send you an invitation and get you started
>today.
>
>*Help OWASP Invite Students: *
>Are you somehow affiliated with a university? Get in touch with students,
>inform them about the program and how they can participate with OWASP.
>Please direct students to the wiki page for details:
>https://www.owasp.org/index.php/GSoC
>
>Please let us know if you need help or supporting material.
>
>Thank you in advance for your time and look forward to your participation.
>
>_______________________________________________
>Owasp-appsensor-dev mailing list
>Owasp-appsensor-dev at lists.owasp.org
>https://lists.owasp.org/mailman/listinfo/owasp-appsensor-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20160303/a82d0b4d/attachment.html>

From timothy22000 at gmail.com  Sun Mar  6 18:58:57 2016
From: timothy22000 at gmail.com (Timothy Sum Hon Mun)
Date: Sun, 6 Mar 2016 18:58:57 +0000
Subject: [Owasp-appsensor-project] GSoC 2016 Trend Monitoring Analysis Engine
Message-ID: <CAPQUyzxgH3UdrSh-i_NYwg4-UEbfTLRBzb+zxCJV=qnGGc1eDA@mail.gmail.com>

Hi all,

Firstly, congratulations on OWASP being accepted for GSoC 2016!!

My name is Timothy Sum and I am from Malaysia. I am currently a final year
MSc Computer Science student studying at University of Kent in the UK. I
have experience in Java, Javascript, Python, Node.js, MongoDB, AWS,
Jenkins, Git workflow, Dropwizard, Logstash, Apache Spark (MSc
dissertation) and others, I am always keen to learn new technologies and
try things outside my comfort zone!

I am currently undergoing my placement (where I gained most of my
experience from) which will be concluded on the 31st March 2016. I will be
working full time on the weekdays before then. Therefore, I will do my
research about the project and prepare my proposal typically at night or
during the weekends. After my placement finishes, I will be able to
completely commit to GSoC by researching, learning and experimenting about
gaps in my knowledge during April even before the community bonding period.
I?ll have a written report to write about my placement that is due on June
2016 but I can do that while coding over the summer!

I just recently stumbled over GSoC 3 days ago and have been looking through
the project list to decide which project I should go for. This will be my
first time contributing to an open source project and I am very hyped up
about it as I get to learn from a mentor and contribute at the same time.
:) I also do not mind having skype/hangout discussion with mentors
regularly to discuss about my progress.

I am interested in the Trend Monitoring Analysis Engine project for OWASP
AppSensor and would be excited if I can work on it. I do not have a
background in application security and intrusion detection but am highly
interested learning about it. So far, I have:

i) Read the Chapter 3 and Chapter 4 of the OWASP guide briefly and
understand the approach behind AppSensor, its high level architecture
(detection and response unit), its pattern (Event, EventManager,
EventAnalysisEngine and so on)

ii) Manage to get a demo running locally as per the AppSensor Demo Setup
guide (
https://github.com/jtmelton/appsensor/blob/master/sample-apps/DemoSetup.md).
Had a little bump with a mongo test failing when doing mvn install but got
it to work in the end. Went through part of the codebase while doing this.

iii) Research on trend monitoring analysis techniques. It seems that trend
analysis falls into anomaly detection based on my understanding so far but
feel free to correct me (will expand in the section below). It would be
great if you recommend me additional papers/books to read to learn more on
this topic.

Did a first pass on two papers that cover general topics in IDS:

http://galaxy.cs.lamar.edu/~bsun/seminar/example_papers/IDS_taxonomy.pdf

http://www.ijcset.net/docs/Volumes/volume2issue4/ijcset2012020419.pdf

Currently, I have given it some thought and my high level understanding of
the expected deliverables are:

i)  A trend monitoring analysis engine - Extend the analysis-engines
package and add tests. Depending on which implementation strategies to use,
it seems that I would have to record the ?normal? behaviour pattern of a
system and then trigger a response if the application behaves out of the
norm which will be defined by the trending rules.

ii)  Associated configuration mechanism to specify the trending rules/policy
- Extend the configuration mode package, create respective xml and xsd
configuration for the Trend Monitoring analysis engine.

iii) A small full sample demo application showing usage of the trend
monitoring feature. - Built on the existing demo application?

It would be great if the mentor/team can give me feedback on my ideas and
things to read to expand my knowledge in this domain. If there is any task
that you would like me to complete, I am eager to do it and will find time
at night or the weekends to complete it.

I would also like to start preparing my project proposal to be able to
share with the mailing list to get feedback as this will be my first time
applying for GSoC and I will need all the help I can get!!

Thanks for your time and look forward to your feedbacks/replies. This young
padawan needs guidance. :D


I have also started a topic in the OWASP GSoC group.

https://groups.google.com/forum/?fromgroups#!topic/owasp-gsoc/59vAa402jXo


Kind Regards,

Tim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20160306/6b151aee/attachment.html>

From jtmelton at gmail.com  Mon Mar  7 04:37:56 2016
From: jtmelton at gmail.com (John Melton)
Date: Sun, 6 Mar 2016 23:37:56 -0500
Subject: [Owasp-appsensor-project] GSoC 2016 Trend Monitoring Analysis
	Engine
In-Reply-To: <CAPQUyzxgH3UdrSh-i_NYwg4-UEbfTLRBzb+zxCJV=qnGGc1eDA@mail.gmail.com>
References: <CAPQUyzxgH3UdrSh-i_NYwg4-UEbfTLRBzb+zxCJV=qnGGc1eDA@mail.gmail.com>
Message-ID: <CAM8z=y+DvfjbZCMQVB4RwghhLg8d_UsDsVqQbzXtexCOuw3Dvg@mail.gmail.com>

Tim,

Hi, and thanks so much for your email. I've responded with specific
comments inline below.

Thanks,
John

On Sun, Mar 6, 2016 at 1:58 PM, Timothy Sum Hon Mun <timothy22000 at gmail.com>
wrote:

> Hi all,
>
> Firstly, congratulations on OWASP being accepted for GSoC 2016!!
>
> My name is Timothy Sum and I am from Malaysia. I am currently a final year
> MSc Computer Science student studying at University of Kent in the UK. I
> have experience in Java, Javascript, Python, Node.js, MongoDB, AWS,
> Jenkins, Git workflow, Dropwizard, Logstash, Apache Spark (MSc
> dissertation) and others, I am always keen to learn new technologies and
> try things outside my comfort zone!
>
> I am currently undergoing my placement (where I gained most of my
> experience from) which will be concluded on the 31st March 2016. I will be
> working full time on the weekdays before then. Therefore, I will do my
> research about the project and prepare my proposal typically at night or
> during the weekends. After my placement finishes, I will be able to
> completely commit to GSoC by researching, learning and experimenting about
> gaps in my knowledge during April even before the community bonding period.
> I?ll have a written report to write about my placement that is due on June
> 2016 but I can do that while coding over the summer!
>
> I just recently stumbled over GSoC 3 days ago and have been looking
> through the project list to decide which project I should go for. This will
> be my first time contributing to an open source project and I am very hyped
> up about it as I get to learn from a mentor and contribute at the same
> time. :) I also do not mind having skype/hangout discussion with mentors
> regularly to discuss about my progress.
>

Yes, skype/hangouts is the normal way we communicate. I generally aim for
meetings 2-3 times a week so we can make sure we're making forward progress
and then use email in between meetings for specific questions.


>
> I am interested in the Trend Monitoring Analysis Engine project for OWASP
> AppSensor and would be excited if I can work on it. I do not have a
> background in application security and intrusion detection but am highly
> interested learning about it. So far, I have:
>

Fantastic. Honestly, a background in spark / machine learning will be more
important.


>
> i) Read the Chapter 3 and Chapter 4 of the OWASP guide briefly and
> understand the approach behind AppSensor, its high level architecture
> (detection and response unit), its pattern (Event, EventManager,
> EventAnalysisEngine and so on)
>
> ii) Manage to get a demo running locally as per the AppSensor Demo Setup
> guide (
> https://github.com/jtmelton/appsensor/blob/master/sample-apps/DemoSetup.md).
> Had a little bump with a mongo test failing when doing mvn install but got
> it to work in the end. Went through part of the codebase while doing this.
>
> iii) Research on trend monitoring analysis techniques. It seems that trend
> analysis falls into anomaly detection based on my understanding so far but
> feel free to correct me (will expand in the section below). It would be
> great if you recommend me additional papers/books to read to learn more on
> this topic.
>
> Did a first pass on two papers that cover general topics in IDS:
>
> http://galaxy.cs.lamar.edu/~bsun/seminar/example_papers/IDS_taxonomy.pdf
>
> http://www.ijcset.net/docs/Volumes/volume2issue4/ijcset2012020419.pdf
>
>
There is not much literature specific to application intrusion detection.
The concept is roughly based on network IDS systems. It is mostly
transferring those concepts to the application layer, and looking for
activity that is not possible (or is much harder) to detect at the network
layer, but is possible (or much easier) at the application layer.


> Currently, I have given it some thought and my high level understanding of
> the expected deliverables are:
>
> i)  A trend monitoring analysis engine - Extend the analysis-engines
> package and add tests. Depending on which implementation strategies to use,
> it seems that I would have to record the ?normal? behaviour pattern of a
> system and then trigger a response if the application behaves out of the
> norm which will be defined by the trending rules.
>

I think of 2 possible approaches:
- *simple trending engine* - this would be an implementation that would
essentially do some simple counting. An example here might be that we have
seen the occurrence of detection point ABC go up 500% in the last hour over
the "normal" usage. This would likely be pretty straightforward, and could
use something like a time series database to track the metadata, and do
some very fast analysis.
- *machine learning engine* - this is a more complex implementation. This
would involve creating a ML style engine that would allow for various types
of analysis. An example might be noticing a shift in the composition of
HTTP verb usage for a given time period. If you decide to go this route, I
think you'll want to be very specific with the types of analysis you want
to provide, and focus on doing great documentation about how to build rules
based on training data and the algorithm selection process.


>
> ii)  Associated configuration mechanism to specify the trending
> rules/policy - Extend the configuration mode package, create respective
> xml and xsd configuration for the Trend Monitoring analysis engine.
>
> iii) A small full sample demo application showing usage of the trend
> monitoring feature. - Built on the existing demo application?
>
>
Yes, these would be the 3 basic outputs for that project, along with the
associated documentation. Additionally, I would say that we should produce
a small number of rules. That will be necessary for the demo application
anyways, but we can use those rules as examples for the community. As for
the demo application, it's very small and trivial. We actually have a user
who built a demo application for a talk about appsensor that is likely a
much better fit (https://github.com/dschadow/ApplicationIntrusionDetection)


> It would be great if the mentor/team can give me feedback on my ideas and
> things to read to expand my knowledge in this domain. If there is any task
> that you would like me to complete, I am eager to do it and will find time
> at night or the weekends to complete it.
>

I think what I'd be most interested in is if you could let us know which
approach (simple trending, machine learning) you would prefer to take when
building the analysis engine. Beyond that, I think your skillset looks well
suited to the project.


>
> I would also like to start preparing my project proposal to be able to
> share with the mailing list to get feedback as this will be my first time
> applying for GSoC and I will need all the help I can get!!
>

Sounds great. I think your notes in this email are a very solid start. To
build a good proposal, I think the most important thing to do is scope the
work. Try to build a detailed plan (ie. what task(s) you will accomplish
each week). After that, we can review it and make suggestions about whether
or not we think you should try to do more or less work, and what parts may
be tricky. It will also help us know which mentor(s) to bring onto the
project.


>
> Thanks for your time and look forward to your feedbacks/replies. This
> young padawan needs guidance. :D
>
>
>
Thank you!


> I have also started a topic in the OWASP GSoC group.
>
> https://groups.google.com/forum/?fromgroups#!topic/owasp-gsoc/59vAa402jXo
>
>
> Kind Regards,
>
> Tim
>
>
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20160306/e318b1fd/attachment-0001.html>

From timothy22000 at gmail.com  Tue Mar  8 09:33:51 2016
From: timothy22000 at gmail.com (Timothy Sum Hon Mun)
Date: Tue, 8 Mar 2016 09:33:51 +0000
Subject: [Owasp-appsensor-project] GSoC 2016 Trend Monitoring Analysis
	Engine
In-Reply-To: <CAM8z=y+DvfjbZCMQVB4RwghhLg8d_UsDsVqQbzXtexCOuw3Dvg@mail.gmail.com>
References: <CAPQUyzxgH3UdrSh-i_NYwg4-UEbfTLRBzb+zxCJV=qnGGc1eDA@mail.gmail.com>
	<CAM8z=y+DvfjbZCMQVB4RwghhLg8d_UsDsVqQbzXtexCOuw3Dvg@mail.gmail.com>
Message-ID: <CAPQUyzzwEzrVhe_CtGRYErY6nJwKJ0Qx=Qy+rtXsCmndk4O7nA@mail.gmail.com>

Hi John,

Thanks for getting back to me. It was good hearing back from you. I've
replied to you inline below.

Besides that, I made a pull request for some minor changes and test that I
added for appsensor as a first contribution:
https://github.com/jtmelton/appsensor/pull/38

Thanks again!

Best Regards,
Tim

On Mon, Mar 7, 2016 at 4:37 AM, John Melton <jtmelton at gmail.com> wrote:

> Tim,
>
> Hi, and thanks so much for your email. I've responded with specific
> comments inline below.
>
> Thanks,
> John
>
> On Sun, Mar 6, 2016 at 1:58 PM, Timothy Sum Hon Mun <
> timothy22000 at gmail.com> wrote:
>
>> Hi all,
>>
>> Firstly, congratulations on OWASP being accepted for GSoC 2016!!
>>
>> My name is Timothy Sum and I am from Malaysia. I am currently a final
>> year MSc Computer Science student studying at University of Kent in the UK.
>> I have experience in Java, Javascript, Python, Node.js, MongoDB, AWS,
>> Jenkins, Git workflow, Dropwizard, Logstash, Apache Spark (MSc
>> dissertation) and others, I am always keen to learn new technologies and
>> try things outside my comfort zone!
>>
>> I am currently undergoing my placement (where I gained most of my
>> experience from) which will be concluded on the 31st March 2016. I will be
>> working full time on the weekdays before then. Therefore, I will do my
>> research about the project and prepare my proposal typically at night or
>> during the weekends. After my placement finishes, I will be able to
>> completely commit to GSoC by researching, learning and experimenting about
>> gaps in my knowledge during April even before the community bonding period.
>> I?ll have a written report to write about my placement that is due on June
>> 2016 but I can do that while coding over the summer!
>>
>> I just recently stumbled over GSoC 3 days ago and have been looking
>> through the project list to decide which project I should go for. This will
>> be my first time contributing to an open source project and I am very hyped
>> up about it as I get to learn from a mentor and contribute at the same
>> time. :) I also do not mind having skype/hangout discussion with mentors
>> regularly to discuss about my progress.
>>
>
> Yes, skype/hangouts is the normal way we communicate. I generally aim for
> meetings 2-3 times a week so we can make sure we're making forward progress
> and then use email in between meetings for specific questions.
>

>
>>
>> I am interested in the Trend Monitoring Analysis Engine project for
>> OWASP AppSensor and would be excited if I can work on it. I do not have
>> a background in application security and intrusion detection but am highly
>> interested learning about it. So far, I have:
>>
>
> Fantastic. Honestly, a background in spark / machine learning will be more
> important.
>

Cool! I did a module in data mining for my MSc that would come in handy
(learned about machine learning algos like decision trees etc).  I used
Spark for the first time during my dissertation to implement a
classification algorithm. I did not get to use Spark's machine learning
library but my past experience would hopefully make the transition easier.

>
>
>>
>> i) Read the Chapter 3 and Chapter 4 of the OWASP guide briefly and
>> understand the approach behind AppSensor, its high level architecture
>> (detection and response unit), its pattern (Event, EventManager,
>> EventAnalysisEngine and so on)
>>
>> ii) Manage to get a demo running locally as per the AppSensor Demo Setup
>> guide (
>> https://github.com/jtmelton/appsensor/blob/master/sample-apps/DemoSetup.md).
>> Had a little bump with a mongo test failing when doing mvn install but got
>> it to work in the end. Went through part of the codebase while doing this.
>>
>> iii) Research on trend monitoring analysis techniques. It seems that
>> trend analysis falls into anomaly detection based on my understanding so
>> far but feel free to correct me (will expand in the section below). It
>> would be great if you recommend me additional papers/books to read to learn
>> more on this topic.
>>
>> Did a first pass on two papers that cover general topics in IDS:
>>
>> http://galaxy.cs.lamar.edu/~bsun/seminar/example_papers/IDS_taxonomy.pdf
>>
>> http://www.ijcset.net/docs/Volumes/volume2issue4/ijcset2012020419.pdf
>>
>>
> There is not much literature specific to application intrusion detection.
> The concept is roughly based on network IDS systems. It is mostly
> transferring those concepts to the application layer, and looking for
> activity that is not possible (or is much harder) to detect at the network
> layer, but is possible (or much easier) at the application layer.
>

 Interesting, I will probably do some reading to get an better overview of
IDS in general.

>
>
>> Currently, I have given it some thought and my high level understanding
>> of the expected deliverables are:
>>
>> i)  A trend monitoring analysis engine - Extend the analysis-engines
>> package and add tests. Depending on which implementation strategies to use,
>> it seems that I would have to record the ?normal? behaviour pattern of a
>> system and then trigger a response if the application behaves out of the
>> norm which will be defined by the trending rules.
>>
>
> I think of 2 possible approaches:
> - *simple trending engine* - this would be an implementation that would
> essentially do some simple counting. An example here might be that we have
> seen the occurrence of detection point ABC go up 500% in the last hour over
> the "normal" usage. This would likely be pretty straightforward, and could
> use something like a time series database to track the metadata, and do
> some very fast analysis.
>

I looked up on time series database to learn about them better as I have
not work with it.

http://stackoverflow.com/questions/8816429/is-there-a-powerful-database-system-for-time-series-data

I notice that we have a implementation to integrate with influxdb in the
package appsensor-integration-influxdb.

If I were to do the simple trending machine, I would have to extend the
current implementation to be able to retrieve events written to it so that
I can retrieve it in order to conduct the counting and analysis to compare
whether it is unusual. This is assuming that I will be using influxDB of
course. what are your opinions?

>
>
- *machine learning engine* - this is a more complex implementation. This
> would involve creating a ML style engine that would allow for various types
> of analysis. An example might be noticing a shift in the composition of
> HTTP verb usage for a given time period. If you decide to go this route, I
> think you'll want to be very specific with the types of analysis you want
> to provide, and focus on doing great documentation about how to build rules
> based on training data and the algorithm selection process.
>

 This is a really interesting idea! I did some researching in order to get
an idea of what needs to be done using Spark as a base. Idea and questions
below:

i) Idea 1: There has been some work on using spark and cassandra (as a time
series db even though its a k-v store) for data analysis. In relation to
appsensor, I would have to implement Spark (probably as part of the
analysis engine) for its machine learning library and implement a storage
provider for cassandra prior to wiring them together. I will have to design
a schema for the time series data storage inside cassandra as well. This
seems quite a lot of work for the duration of the project but i'll be able
to leverage some existing work done.

http://www.slideshare.net/patrickmcfadin/apache-cassandra-apache-spark-for-time-series-data

ii) Idea 2: Implement a simple trending analysis ending as the main project
work (related to the question below simple trending approach) and finish
the 3 deliverables. Built a ML engine using Spark for machine learning
which will involve wiring it to the time series db used in the simple
trending approach. This way I don't have to implement a separate store for
the ML analysis engine but challenge probably lies into working out how to
connect them together.

iii) Question 1: What do you mean by specific about the type of analysis
that I am providing and algorithm selection? From what I understand, its
either:
- For example, if we have 2 cases: measure shift in composition of HTTP
verb and number of API calls to an endpoint. I would implement it such that
I will use one algorithm for checking composition of HTTP verb and another
algorithm for number of API calls. I guess some research needs to be done
to decide which algorithm would be suitable for which use
case/scenario/event.

- Implement wide variety of algorithm for analysis engine and then let the
user decide which algorithm to use for events or each event.

I am leaning towards with the simple trending approach for now taking into
account of time although I would really like to give the machine learning a
go. Feedback and answers to the questions above will help me scope out the
amount of work required for the machine learning approach especially (ii).
:D

>
>
>>
>> ii)  Associated configuration mechanism to specify the trending
>> rules/policy - Extend the configuration mode package, create respective
>> xml and xsd configuration for the Trend Monitoring analysis engine.
>>
>> iii) A small full sample demo application showing usage of the trend
>> monitoring feature. - Built on the existing demo application?
>>
>>
> Yes, these would be the 3 basic outputs for that project, along with the
> associated documentation. Additionally, I would say that we should produce
> a small number of rules. That will be necessary for the demo application
> anyways, but we can use those rules as examples for the community. As for
> the demo application, it's very small and trivial. We actually have a user
> who built a demo application for a talk about appsensor that is likely a
> much better fit (https://github.com/dschadow/ApplicationIntrusionDetection
> )
>

Agreed about the rules bit. I took a look at the demo application built
above and it looks great, will refer to it when working on the demo
application part. I've used Dropwizard to built web apps but I haven't work
with Spring (only a little on DI) before and will have to read about it.

>
>
>> It would be great if the mentor/team can give me feedback on my ideas and
>> things to read to expand my knowledge in this domain. If there is any task
>> that you would like me to complete, I am eager to do it and will find time
>> at night or the weekends to complete it.
>>
>
> I think what I'd be most interested in is if you could let us know which
> approach (simple trending, machine learning) you would prefer to take when
> building the analysis engine. Beyond that, I think your skillset looks well
> suited to the project.
>
>
>>
>> I would also like to start preparing my project proposal to be able to
>> share with the mailing list to get feedback as this will be my first time
>> applying for GSoC and I will need all the help I can get!!
>>
>
> Sounds great. I think your notes in this email are a very solid start. To
> build a good proposal, I think the most important thing to do is scope the
> work. Try to build a detailed plan (ie. what task(s) you will accomplish
> each week). After that, we can review it and make suggestions about whether
> or not we think you should try to do more or less work, and what parts may
> be tricky. It will also help us know which mentor(s) to bring onto the
> project.
>
>
 I will build up my plan as I scope out the work for the two approaches and
will definitely share it as soon as it is ready.


>
>> Thanks for your time and look forward to your feedbacks/replies. This
>> young padawan needs guidance. :D
>>
>>
>>
> Thank you!
>
>
>> I have also started a topic in the OWASP GSoC group.
>>
>> https://groups.google.com/forum/?fromgroups#!topic/owasp-gsoc/59vAa402jXo
>>
>>
>> Kind Regards,
>>
>> Tim
>>
>>
>> _______________________________________________
>> Owasp-appsensor-project mailing list
>> Owasp-appsensor-project at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20160308/c0199a4d/attachment-0001.html>

From timo.goosen at owasp.org  Tue Mar  8 09:55:07 2016
From: timo.goosen at owasp.org (Timo Goosen)
Date: Tue, 8 Mar 2016 11:55:07 +0200
Subject: [Owasp-appsensor-project] [Owasp-appsensor-dev] GSoC 2016
In-Reply-To: <rfdmpj9kvekb5hf60mh94ge6.1457006300045@email.android.com>
References: <CAM8z=yLvf5duXgGrx67c2Auio8GA6O-6fkmQbaNmozA2YpEzXA@mail.gmail.com>
	<rfdmpj9kvekb5hf60mh94ge6.1457006300045@email.android.com>
Message-ID: <CAMOWqYCJUyWmz+qBZe+tZtdkrV0qBZttC8gA5QMPMAVcYUudoQ@mail.gmail.com>

My suggestions: (For reverse proxy)

Some checks related to cookies:

-Look at how many cookies a session has. There is a maximum between
browsers. We need to check between browsers I think the max is 255 or
something. The point of checking for more cookies than that is to prevent
cookie overflow.
-Look at how many characters a cookie contains.
-Some header related checks.


Regards.
Timo

On Thu, Mar 3, 2016 at 1:58 PM, Colin WATSON <colin.watson at owasp.org> wrote:

> Fantastic news,
>
> Colin
>
>
> ---- John Melton wrote ----
>
>
> All,
>
> OWASP has been selected this year to participate in the Google Summer of
> Code! This is great news for the org, and hopefully appsensor will be able
> to participate again. We don't yet know how many slots we'll get, but now
> is the time to get started with planning. There are 2 specific things you
> can do:
> 1. If you are aware of students that might be interested, let them know
> ASAP. There's ~2 weeks for Q&A, then ~2 weeks for submission.
> 2. If you have time, sign up as a mentor. That could be for appsensor, or
> any of the other owasp projects. From past experience, I'd say you should
> plan for about 2-3 hours per week for the duration of the program (~3
> months). It's a really good experience with smart students. It's an easy
> short-term way to contribute.
>
> Let me know if you have any questions.
>
> Thanks,
> John
>
> ----------------------------------
>
> Students will start applying for projects on March 14th but a lot of them
> are already exploring ideas on our corresponding wiki page:
> https://www.owasp.org/index.php/GSOC2016_Ideas.
>
> *How you can get involved:*
> If you are a project leader and would like for your project to participate
> add your idea on our  GSOC 2016 Idea
> <https://www.owasp.org/index.php/GSOC2016_Ideas> wiki page ASAP!
>
> *Become a Mentor:*
> Do you want to become a mentor for a student?
> Choose a participating OWASP project from the wiki page listed below preferably
> the one you are most familiar with.
>
> Link: https://www.owasp.org/index.php/GSOC2016_Ideas
>
> Touch base with the project leader and ask one of the org admins (Claudia
> <claudia.aviles-casanovas at owasp.org>, Kostas <konstantinos at owasp.org> or
> Fabio <fcerullo at owasp.org>) to send you an invitation and get you started
> today.
>
> *Help OWASP Invite Students: *
> Are you somehow affiliated with a university? Get in touch with students,
> inform them about the program and how they can participate with OWASP.
> Please direct students to the wiki page for details:
> https://www.owasp.org/index.php/GSoC
>
> Please let us know if you need help or supporting material.
>
> Thank you in advance for your time and look forward to your participation.
>
>
>
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20160308/2a26b3b3/attachment.html>

From jtmelton at gmail.com  Tue Mar  8 17:27:30 2016
From: jtmelton at gmail.com (John Melton)
Date: Tue, 8 Mar 2016 12:27:30 -0500
Subject: [Owasp-appsensor-project] GSoC 2016 Trend Monitoring Analysis
	Engine
In-Reply-To: <CAPQUyzzwEzrVhe_CtGRYErY6nJwKJ0Qx=Qy+rtXsCmndk4O7nA@mail.gmail.com>
References: <CAPQUyzxgH3UdrSh-i_NYwg4-UEbfTLRBzb+zxCJV=qnGGc1eDA@mail.gmail.com>
	<CAM8z=y+DvfjbZCMQVB4RwghhLg8d_UsDsVqQbzXtexCOuw3Dvg@mail.gmail.com>
	<CAPQUyzzwEzrVhe_CtGRYErY6nJwKJ0Qx=Qy+rtXsCmndk4O7nA@mail.gmail.com>
Message-ID: <CAM8z=yLuNd9vkTV-UJa3=kVawA2jASNZ029qLaEcM=si4UsQ4g@mail.gmail.com>

Responses inline.

On Tue, Mar 8, 2016 at 4:33 AM, Timothy Sum Hon Mun <timothy22000 at gmail.com>
wrote:

> Hi John,
>
> Thanks for getting back to me. It was good hearing back from you. I've
> replied to you inline below.
>
> Besides that, I made a pull request for some minor changes and test that I
> added for appsensor as a first contribution:
> https://github.com/jtmelton/appsensor/pull/38
>
>
Fantastic. I'll take a look at that later today!


> Thanks again!
>
> Best Regards,
> Tim
>
> On Mon, Mar 7, 2016 at 4:37 AM, John Melton <jtmelton at gmail.com> wrote:
>
>> Tim,
>>
>> Hi, and thanks so much for your email. I've responded with specific
>> comments inline below.
>>
>> Thanks,
>> John
>>
>> On Sun, Mar 6, 2016 at 1:58 PM, Timothy Sum Hon Mun <
>> timothy22000 at gmail.com> wrote:
>>
>>> Hi all,
>>>
>>> Firstly, congratulations on OWASP being accepted for GSoC 2016!!
>>>
>>> My name is Timothy Sum and I am from Malaysia. I am currently a final
>>> year MSc Computer Science student studying at University of Kent in the UK.
>>> I have experience in Java, Javascript, Python, Node.js, MongoDB, AWS,
>>> Jenkins, Git workflow, Dropwizard, Logstash, Apache Spark (MSc
>>> dissertation) and others, I am always keen to learn new technologies and
>>> try things outside my comfort zone!
>>>
>>> I am currently undergoing my placement (where I gained most of my
>>> experience from) which will be concluded on the 31st March 2016. I will be
>>> working full time on the weekdays before then. Therefore, I will do my
>>> research about the project and prepare my proposal typically at night or
>>> during the weekends. After my placement finishes, I will be able to
>>> completely commit to GSoC by researching, learning and experimenting about
>>> gaps in my knowledge during April even before the community bonding period.
>>> I?ll have a written report to write about my placement that is due on June
>>> 2016 but I can do that while coding over the summer!
>>>
>>> I just recently stumbled over GSoC 3 days ago and have been looking
>>> through the project list to decide which project I should go for. This will
>>> be my first time contributing to an open source project and I am very hyped
>>> up about it as I get to learn from a mentor and contribute at the same
>>> time. :) I also do not mind having skype/hangout discussion with mentors
>>> regularly to discuss about my progress.
>>>
>>
>> Yes, skype/hangouts is the normal way we communicate. I generally aim for
>> meetings 2-3 times a week so we can make sure we're making forward progress
>> and then use email in between meetings for specific questions.
>>
>
>>
>>>
>>> I am interested in the Trend Monitoring Analysis Engine project for
>>> OWASP AppSensor and would be excited if I can work on it. I do not have
>>> a background in application security and intrusion detection but am highly
>>> interested learning about it. So far, I have:
>>>
>>
>> Fantastic. Honestly, a background in spark / machine learning will be
>> more important.
>>
>
> Cool! I did a module in data mining for my MSc that would come in handy
> (learned about machine learning algos like decision trees etc).  I used
> Spark for the first time during my dissertation to implement a
> classification algorithm. I did not get to use Spark's machine learning
> library but my past experience would hopefully make the transition easier.
>
>>
>>
>>>
>>> i) Read the Chapter 3 and Chapter 4 of the OWASP guide briefly and
>>> understand the approach behind AppSensor, its high level architecture
>>> (detection and response unit), its pattern (Event, EventManager,
>>> EventAnalysisEngine and so on)
>>>
>>> ii) Manage to get a demo running locally as per the AppSensor Demo Setup
>>> guide (
>>> https://github.com/jtmelton/appsensor/blob/master/sample-apps/DemoSetup.md).
>>> Had a little bump with a mongo test failing when doing mvn install but got
>>> it to work in the end. Went through part of the codebase while doing this.
>>>
>>> iii) Research on trend monitoring analysis techniques. It seems that
>>> trend analysis falls into anomaly detection based on my understanding so
>>> far but feel free to correct me (will expand in the section below). It
>>> would be great if you recommend me additional papers/books to read to learn
>>> more on this topic.
>>>
>>> Did a first pass on two papers that cover general topics in IDS:
>>>
>>> http://galaxy.cs.lamar.edu/~bsun/seminar/example_papers/IDS_taxonomy.pdf
>>>
>>> http://www.ijcset.net/docs/Volumes/volume2issue4/ijcset2012020419.pdf
>>>
>>>
>> There is not much literature specific to application intrusion detection.
>> The concept is roughly based on network IDS systems. It is mostly
>> transferring those concepts to the application layer, and looking for
>> activity that is not possible (or is much harder) to detect at the network
>> layer, but is possible (or much easier) at the application layer.
>>
>
>  Interesting, I will probably do some reading to get an better overview of
> IDS in general.
>
>>
>>
>>> Currently, I have given it some thought and my high level understanding
>>> of the expected deliverables are:
>>>
>>> i)  A trend monitoring analysis engine - Extend the analysis-engines
>>> package and add tests. Depending on which implementation strategies to use,
>>> it seems that I would have to record the ?normal? behaviour pattern of a
>>> system and then trigger a response if the application behaves out of the
>>> norm which will be defined by the trending rules.
>>>
>>
>> I think of 2 possible approaches:
>> - *simple trending engine* - this would be an implementation that would
>> essentially do some simple counting. An example here might be that we have
>> seen the occurrence of detection point ABC go up 500% in the last hour over
>> the "normal" usage. This would likely be pretty straightforward, and could
>> use something like a time series database to track the metadata, and do
>> some very fast analysis.
>>
>
> I looked up on time series database to learn about them better as I have
> not work with it.
>
>
> http://stackoverflow.com/questions/8816429/is-there-a-powerful-database-system-for-time-series-data
>
> I notice that we have a implementation to integrate with influxdb in the
> package appsensor-integration-influxdb.
>
> If I were to do the simple trending machine, I would have to extend the
> current implementation to be able to retrieve events written to it so that
> I can retrieve it in order to conduct the counting and analysis to compare
> whether it is unusual. This is assuming that I will be using influxDB of
> course. what are your opinions?
>

Yes, that's the basic idea. There are several that you could use. I don't
really care that much about the implementation (tool) to be honest, but
rather the idea. We can provide 1 implementation, then add implementations
for specific tools if people would like one that we don't already cover.


>
>>
> - *machine learning engine* - this is a more complex implementation. This
>> would involve creating a ML style engine that would allow for various types
>> of analysis. An example might be noticing a shift in the composition of
>> HTTP verb usage for a given time period. If you decide to go this route, I
>> think you'll want to be very specific with the types of analysis you want
>> to provide, and focus on doing great documentation about how to build rules
>> based on training data and the algorithm selection process.
>>
>
>  This is a really interesting idea! I did some researching in order to get
> an idea of what needs to be done using Spark as a base. Idea and questions
> below:
>
> i) Idea 1: There has been some work on using spark and cassandra (as a
> time series db even though its a k-v store) for data analysis. In relation
> to appsensor, I would have to implement Spark (probably as part of the
> analysis engine) for its machine learning library and implement a storage
> provider for cassandra prior to wiring them together. I will have to design
> a schema for the time series data storage inside cassandra as well. This
> seems quite a lot of work for the duration of the project but i'll be able
> to leverage some existing work done.
>
>
> http://www.slideshare.net/patrickmcfadin/apache-cassandra-apache-spark-for-time-series-data
>
> ii) Idea 2: Implement a simple trending analysis ending as the main
> project work (related to the question below simple trending approach) and
> finish the 3 deliverables. Built a ML engine using Spark for machine
> learning which will involve wiring it to the time series db used in the
> simple trending approach. This way I don't have to implement a separate
> store for the ML analysis engine but challenge probably lies into working
> out how to connect them together.
>
>
Both of these ideas are good, honestly. I'd focus on which one you think
you can accomplish in the 3-month time frame. We don't want you to be able
to finish the project in 2 weeks, but we also don't want it to take a year.


> iii) Question 1: What do you mean by specific about the type of analysis
> that I am providing and algorithm selection? From what I understand, its
> either:
> - For example, if we have 2 cases: measure shift in composition of HTTP
> verb and number of API calls to an endpoint. I would implement it such that
> I will use one algorithm for checking composition of HTTP verb and another
> algorithm for number of API calls. I guess some research needs to be done
> to decide which algorithm would be suitable for which use
> case/scenario/event.
>
> - Implement wide variety of algorithm for analysis engine and then let the
> user decide which algorithm to use for events or each event.
>
> I am leaning towards with the simple trending approach for now taking into
> account of time although I would really like to give the machine learning a
> go. Feedback and answers to the questions above will help me scope out the
> amount of work required for the machine learning approach especially (ii).
> :D
>

What I meant by the "specific type of analysis" comment is around machine
learning. For machine learning, you have to decide which algorithm (or
family of algorithms) to use to solve a particular problem. We can
certainly use spark-ml or some other library to give us those algorithms,
but in order to make it useful to our users, we'll have to write some code
to integrate those algorithms with the types of problems we want to solve.
If we're trying to solve a problem that requires "k nearest neighbors",
then we'll have to write some code that uses that. My point was that we
don't want to solve _every_ problem. We want to essentially document the
process: 1) decide what problem you want to solve, 2) pick best algorithm,
3) implement algorithm, 4) use training dataset, 5) turn on analysis. In
that workflow, we are not going to implement _all_ the different types of
analysis you could do over the summer of code. I just want us to pick a few
problems to solve, and document the process so that our users can do the
same thing themselves to build new types of analysis.


>
>>
>>>
>>> ii)  Associated configuration mechanism to specify the trending
>>> rules/policy - Extend the configuration mode package, create respective
>>> xml and xsd configuration for the Trend Monitoring analysis engine.
>>>
>>> iii) A small full sample demo application showing usage of the trend
>>> monitoring feature. - Built on the existing demo application?
>>>
>>>
>> Yes, these would be the 3 basic outputs for that project, along with the
>> associated documentation. Additionally, I would say that we should produce
>> a small number of rules. That will be necessary for the demo application
>> anyways, but we can use those rules as examples for the community. As for
>> the demo application, it's very small and trivial. We actually have a user
>> who built a demo application for a talk about appsensor that is likely a
>> much better fit (
>> https://github.com/dschadow/ApplicationIntrusionDetection)
>>
>
> Agreed about the rules bit. I took a look at the demo application built
> above and it looks great, will refer to it when working on the demo
> application part. I've used Dropwizard to built web apps but I haven't work
> with Spring (only a little on DI) before and will have to read about it.
>

The Spring parts should be pretty straightforward, and I (and others) can
help you there if you need anything. You don't need to know much Spring at
all for this project.


>
>>
>>> It would be great if the mentor/team can give me feedback on my ideas
>>> and things to read to expand my knowledge in this domain. If there is any
>>> task that you would like me to complete, I am eager to do it and will find
>>> time at night or the weekends to complete it.
>>>
>>
>> I think what I'd be most interested in is if you could let us know which
>> approach (simple trending, machine learning) you would prefer to take when
>> building the analysis engine. Beyond that, I think your skillset looks well
>> suited to the project.
>>
>>
>>>
>>> I would also like to start preparing my project proposal to be able to
>>> share with the mailing list to get feedback as this will be my first time
>>> applying for GSoC and I will need all the help I can get!!
>>>
>>
>> Sounds great. I think your notes in this email are a very solid start. To
>> build a good proposal, I think the most important thing to do is scope the
>> work. Try to build a detailed plan (ie. what task(s) you will accomplish
>> each week). After that, we can review it and make suggestions about whether
>> or not we think you should try to do more or less work, and what parts may
>> be tricky. It will also help us know which mentor(s) to bring onto the
>> project.
>>
>>
>  I will build up my plan as I scope out the work for the two approaches
> and will definitely share it as soon as it is ready.
>

Perfect.


>
>
>>
>>> Thanks for your time and look forward to your feedbacks/replies. This
>>> young padawan needs guidance. :D
>>>
>>>
>>>
>> Thank you!
>>
>>
>>> I have also started a topic in the OWASP GSoC group.
>>>
>>> https://groups.google.com/forum/?fromgroups#!topic/owasp-gsoc/59vAa402jXo
>>>
>>>
>>> Kind Regards,
>>>
>>> Tim
>>>
>>>
>>> _______________________________________________
>>> Owasp-appsensor-project mailing list
>>> Owasp-appsensor-project at lists.owasp.org
>>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>>
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20160308/aa9204b2/attachment-0001.html>

From jtmelton at gmail.com  Tue Mar  8 19:05:27 2016
From: jtmelton at gmail.com (John Melton)
Date: Tue, 8 Mar 2016 14:05:27 -0500
Subject: [Owasp-appsensor-project] [Owasp-appsensor-dev] GSoC 2016
In-Reply-To: <CAMOWqYCJUyWmz+qBZe+tZtdkrV0qBZttC8gA5QMPMAVcYUudoQ@mail.gmail.com>
References: <CAM8z=yLvf5duXgGrx67c2Auio8GA6O-6fkmQbaNmozA2YpEzXA@mail.gmail.com>
	<rfdmpj9kvekb5hf60mh94ge6.1457006300045@email.android.com>
	<CAMOWqYCJUyWmz+qBZe+tZtdkrV0qBZttC8gA5QMPMAVcYUudoQ@mail.gmail.com>
Message-ID: <CAM8z=yKzDy+kFiJYP5xLxTcwU3a7-2YCki8XRzB+DkUhU0xWJg@mail.gmail.com>

These are great - thanks Timo! I added them to the ideas page. Those could
be a really useful output and are generic across applications - nice.

On Tue, Mar 8, 2016 at 4:55 AM, Timo Goosen <timo.goosen at owasp.org> wrote:

> My suggestions: (For reverse proxy)
>
> Some checks related to cookies:
>
> -Look at how many cookies a session has. There is a maximum between
> browsers. We need to check between browsers I think the max is 255 or
> something. The point of checking for more cookies than that is to prevent
> cookie overflow.
> -Look at how many characters a cookie contains.
> -Some header related checks.
>
>
> Regards.
> Timo
>
> On Thu, Mar 3, 2016 at 1:58 PM, Colin WATSON <colin.watson at owasp.org>
> wrote:
>
>> Fantastic news,
>>
>> Colin
>>
>>
>> ---- John Melton wrote ----
>>
>>
>> All,
>>
>> OWASP has been selected this year to participate in the Google Summer of
>> Code! This is great news for the org, and hopefully appsensor will be able
>> to participate again. We don't yet know how many slots we'll get, but now
>> is the time to get started with planning. There are 2 specific things you
>> can do:
>> 1. If you are aware of students that might be interested, let them know
>> ASAP. There's ~2 weeks for Q&A, then ~2 weeks for submission.
>> 2. If you have time, sign up as a mentor. That could be for appsensor, or
>> any of the other owasp projects. From past experience, I'd say you should
>> plan for about 2-3 hours per week for the duration of the program (~3
>> months). It's a really good experience with smart students. It's an easy
>> short-term way to contribute.
>>
>> Let me know if you have any questions.
>>
>> Thanks,
>> John
>>
>> ----------------------------------
>>
>> Students will start applying for projects on March 14th but a lot of
>> them are already exploring ideas on our corresponding wiki page:
>> https://www.owasp.org/index.php/GSOC2016_Ideas.
>>
>> *How you can get involved:*
>> If you are a project leader and would like for your project to
>> participate add your idea on our  GSOC 2016 Idea
>> <https://www.owasp.org/index.php/GSOC2016_Ideas> wiki page ASAP!
>>
>> *Become a Mentor:*
>> Do you want to become a mentor for a student?
>> Choose a participating OWASP project from the wiki page listed below preferably
>> the one you are most familiar with.
>>
>> Link: https://www.owasp.org/index.php/GSOC2016_Ideas
>>
>> Touch base with the project leader and ask one of the org admins (Claudia
>> <claudia.aviles-casanovas at owasp.org>, Kostas <konstantinos at owasp.org> or
>> Fabio <fcerullo at owasp.org>) to send you an invitation and get you
>> started today.
>>
>> *Help OWASP Invite Students: *
>> Are you somehow affiliated with a university? Get in touch with
>> students, inform them about the program and how they can participate with
>> OWASP.  Please direct students to the wiki page for details:
>> https://www.owasp.org/index.php/GSoC
>>
>> Please let us know if you need help or supporting material.
>>
>> Thank you in advance for your time and look forward to your participation.
>>
>>
>>
>> _______________________________________________
>> Owasp-appsensor-project mailing list
>> Owasp-appsensor-project at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20160308/bc102322/attachment.html>

From timo.goosen at owasp.org  Wed Mar  9 11:12:57 2016
From: timo.goosen at owasp.org (Timo Goosen)
Date: Wed, 9 Mar 2016 13:12:57 +0200
Subject: [Owasp-appsensor-project] [Owasp-appsensor-dev] GSoC 2016
In-Reply-To: <CAM8z=yKzDy+kFiJYP5xLxTcwU3a7-2YCki8XRzB+DkUhU0xWJg@mail.gmail.com>
References: <CAM8z=yLvf5duXgGrx67c2Auio8GA6O-6fkmQbaNmozA2YpEzXA@mail.gmail.com>
	<rfdmpj9kvekb5hf60mh94ge6.1457006300045@email.android.com>
	<CAMOWqYCJUyWmz+qBZe+tZtdkrV0qBZttC8gA5QMPMAVcYUudoQ@mail.gmail.com>
	<CAM8z=yKzDy+kFiJYP5xLxTcwU3a7-2YCki8XRzB+DkUhU0xWJg@mail.gmail.com>
Message-ID: <CAMOWqYCx0cPxECE94108d8ht01eoC0cTOffa0kWPFt_ogaeRdw@mail.gmail.com>

Thanks glad if I could add something.

Good luck with GSOC.

I'm a bit busy but might have time next GSOC run to mentor.

Regards.
Timo

On Tue, Mar 8, 2016 at 9:05 PM, John Melton <jtmelton at gmail.com> wrote:

> These are great - thanks Timo! I added them to the ideas page. Those could
> be a really useful output and are generic across applications - nice.
>
> On Tue, Mar 8, 2016 at 4:55 AM, Timo Goosen <timo.goosen at owasp.org> wrote:
>
>> My suggestions: (For reverse proxy)
>>
>> Some checks related to cookies:
>>
>> -Look at how many cookies a session has. There is a maximum between
>> browsers. We need to check between browsers I think the max is 255 or
>> something. The point of checking for more cookies than that is to prevent
>> cookie overflow.
>> -Look at how many characters a cookie contains.
>> -Some header related checks.
>>
>>
>> Regards.
>> Timo
>>
>> On Thu, Mar 3, 2016 at 1:58 PM, Colin WATSON <colin.watson at owasp.org>
>> wrote:
>>
>>> Fantastic news,
>>>
>>> Colin
>>>
>>>
>>> ---- John Melton wrote ----
>>>
>>>
>>> All,
>>>
>>> OWASP has been selected this year to participate in the Google Summer of
>>> Code! This is great news for the org, and hopefully appsensor will be able
>>> to participate again. We don't yet know how many slots we'll get, but now
>>> is the time to get started with planning. There are 2 specific things you
>>> can do:
>>> 1. If you are aware of students that might be interested, let them know
>>> ASAP. There's ~2 weeks for Q&A, then ~2 weeks for submission.
>>> 2. If you have time, sign up as a mentor. That could be for appsensor,
>>> or any of the other owasp projects. From past experience, I'd say you
>>> should plan for about 2-3 hours per week for the duration of the program
>>> (~3 months). It's a really good experience with smart students. It's an
>>> easy short-term way to contribute.
>>>
>>> Let me know if you have any questions.
>>>
>>> Thanks,
>>> John
>>>
>>> ----------------------------------
>>>
>>> Students will start applying for projects on March 14th but a lot of
>>> them are already exploring ideas on our corresponding wiki page:
>>> https://www.owasp.org/index.php/GSOC2016_Ideas.
>>>
>>> *How you can get involved:*
>>> If you are a project leader and would like for your project to
>>> participate add your idea on our  GSOC 2016 Idea
>>> <https://www.owasp.org/index.php/GSOC2016_Ideas> wiki page ASAP!
>>>
>>> *Become a Mentor:*
>>> Do you want to become a mentor for a student?
>>> Choose a participating OWASP project from the wiki page listed below preferably
>>> the one you are most familiar with.
>>>
>>> Link: https://www.owasp.org/index.php/GSOC2016_Ideas
>>>
>>> Touch base with the project leader and ask one of the org admins (
>>> Claudia <claudia.aviles-casanovas at owasp.org>, Kostas
>>> <konstantinos at owasp.org> or Fabio <fcerullo at owasp.org>) to send you an
>>> invitation and get you started today.
>>>
>>> *Help OWASP Invite Students: *
>>> Are you somehow affiliated with a university? Get in touch with
>>> students, inform them about the program and how they can participate with
>>> OWASP.  Please direct students to the wiki page for details:
>>> https://www.owasp.org/index.php/GSoC
>>>
>>> Please let us know if you need help or supporting material.
>>>
>>> Thank you in advance for your time and look forward to your
>>> participation.
>>>
>>>
>>>
>>> _______________________________________________
>>> Owasp-appsensor-project mailing list
>>> Owasp-appsensor-project at lists.owasp.org
>>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>>
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20160309/d1335e04/attachment.html>

From timothy22000 at gmail.com  Tue Mar 15 18:26:49 2016
From: timothy22000 at gmail.com (Timothy Sum Hon Mun)
Date: Tue, 15 Mar 2016 18:26:49 +0000
Subject: [Owasp-appsensor-project] GSoC 2016 Trend Monitoring Analysis
	Engine
In-Reply-To: <CAM8z=yLuNd9vkTV-UJa3=kVawA2jASNZ029qLaEcM=si4UsQ4g@mail.gmail.com>
References: <CAPQUyzxgH3UdrSh-i_NYwg4-UEbfTLRBzb+zxCJV=qnGGc1eDA@mail.gmail.com>
	<CAM8z=y+DvfjbZCMQVB4RwghhLg8d_UsDsVqQbzXtexCOuw3Dvg@mail.gmail.com>
	<CAPQUyzzwEzrVhe_CtGRYErY6nJwKJ0Qx=Qy+rtXsCmndk4O7nA@mail.gmail.com>
	<CAM8z=yLuNd9vkTV-UJa3=kVawA2jASNZ029qLaEcM=si4UsQ4g@mail.gmail.com>
Message-ID: <CAPQUyzwg7mmardUnujo72TVHhyK9=QOsbYM8Bg0XZhD=TMMEKA@mail.gmail.com>

Dear John,

Sorry for the late reply. Been busy for my last few weeks of placement. :)
Hope you are doing well. Responses inline with regards to GSoC.

Side note: I notice that there are 3 new issues open with regards to the
appsensor (elasticsearch, kafka, and mongo query) and I am wondering if
anybody is working on any of them? I am keen to help out with the kafka one
(although I might start work on it in April/May when I am done with my
placement bar the report). I read on the version 0.9, its new consumer API
and security features.

I suppose the scope of that issue covers upgrading, ensuring nothing breaks
and the new consumer API with the new security features being a separate
issue? We can discuss on the issue ticket itself.

Kind Regards,
Tim

On Tue, Mar 8, 2016 at 5:27 PM, John Melton <jtmelton at gmail.com> wrote:

> Responses inline.
>
> On Tue, Mar 8, 2016 at 4:33 AM, Timothy Sum Hon Mun <
> timothy22000 at gmail.com> wrote:
>
>> Hi John,
>>
>> Thanks for getting back to me. It was good hearing back from you. I've
>> replied to you inline below.
>>
>> Besides that, I made a pull request for some minor changes and test that
>> I added for appsensor as a first contribution:
>> https://github.com/jtmelton/appsensor/pull/38
>>
>>
> Fantastic. I'll take a look at that later today!
>
>
>> Thanks again!
>>
>> Best Regards,
>> Tim
>>
>> On Mon, Mar 7, 2016 at 4:37 AM, John Melton <jtmelton at gmail.com> wrote:
>>
>>> Tim,
>>>
>>> Hi, and thanks so much for your email. I've responded with specific
>>> comments inline below.
>>>
>>> Thanks,
>>> John
>>>
>>> On Sun, Mar 6, 2016 at 1:58 PM, Timothy Sum Hon Mun <
>>> timothy22000 at gmail.com> wrote:
>>>
>>>> Hi all,
>>>>
>>>> Firstly, congratulations on OWASP being accepted for GSoC 2016!!
>>>>
>>>> My name is Timothy Sum and I am from Malaysia. I am currently a final
>>>> year MSc Computer Science student studying at University of Kent in the UK.
>>>> I have experience in Java, Javascript, Python, Node.js, MongoDB, AWS,
>>>> Jenkins, Git workflow, Dropwizard, Logstash, Apache Spark (MSc
>>>> dissertation) and others, I am always keen to learn new technologies and
>>>> try things outside my comfort zone!
>>>>
>>>> I am currently undergoing my placement (where I gained most of my
>>>> experience from) which will be concluded on the 31st March 2016. I will be
>>>> working full time on the weekdays before then. Therefore, I will do my
>>>> research about the project and prepare my proposal typically at night or
>>>> during the weekends. After my placement finishes, I will be able to
>>>> completely commit to GSoC by researching, learning and experimenting about
>>>> gaps in my knowledge during April even before the community bonding period.
>>>> I?ll have a written report to write about my placement that is due on June
>>>> 2016 but I can do that while coding over the summer!
>>>>
>>>> I just recently stumbled over GSoC 3 days ago and have been looking
>>>> through the project list to decide which project I should go for. This will
>>>> be my first time contributing to an open source project and I am very hyped
>>>> up about it as I get to learn from a mentor and contribute at the same
>>>> time. :) I also do not mind having skype/hangout discussion with mentors
>>>> regularly to discuss about my progress.
>>>>
>>>
>>> Yes, skype/hangouts is the normal way we communicate. I generally aim
>>> for meetings 2-3 times a week so we can make sure we're making forward
>>> progress and then use email in between meetings for specific questions.
>>>
>>
>>>
>>>>
>>>> I am interested in the Trend Monitoring Analysis Engine project for
>>>> OWASP AppSensor and would be excited if I can work on it. I do not
>>>> have a background in application security and intrusion detection but am
>>>> highly interested learning about it. So far, I have:
>>>>
>>>
>>> Fantastic. Honestly, a background in spark / machine learning will be
>>> more important.
>>>
>>
>> Cool! I did a module in data mining for my MSc that would come in handy
>> (learned about machine learning algos like decision trees etc).  I used
>> Spark for the first time during my dissertation to implement a
>> classification algorithm. I did not get to use Spark's machine learning
>> library but my past experience would hopefully make the transition easier.
>>
>>>
>>>
>>>>
>>>> i) Read the Chapter 3 and Chapter 4 of the OWASP guide briefly and
>>>> understand the approach behind AppSensor, its high level architecture
>>>> (detection and response unit), its pattern (Event, EventManager,
>>>> EventAnalysisEngine and so on)
>>>>
>>>> ii) Manage to get a demo running locally as per the AppSensor Demo
>>>> Setup guide (
>>>> https://github.com/jtmelton/appsensor/blob/master/sample-apps/DemoSetup.md).
>>>> Had a little bump with a mongo test failing when doing mvn install but got
>>>> it to work in the end. Went through part of the codebase while doing this.
>>>>
>>>> iii) Research on trend monitoring analysis techniques. It seems that
>>>> trend analysis falls into anomaly detection based on my understanding so
>>>> far but feel free to correct me (will expand in the section below). It
>>>> would be great if you recommend me additional papers/books to read to learn
>>>> more on this topic.
>>>>
>>>> Did a first pass on two papers that cover general topics in IDS:
>>>>
>>>> http://galaxy.cs.lamar.edu/~bsun/seminar/example_papers/IDS_taxonomy.pdf
>>>>
>>>> http://www.ijcset.net/docs/Volumes/volume2issue4/ijcset2012020419.pdf
>>>>
>>>>
>>> There is not much literature specific to application intrusion
>>> detection. The concept is roughly based on network IDS systems. It is
>>> mostly transferring those concepts to the application layer, and looking
>>> for activity that is not possible (or is much harder) to detect at the
>>> network layer, but is possible (or much easier) at the application layer.
>>>
>>
>>  Interesting, I will probably do some reading to get an better overview
>> of IDS in general.
>>
>>>
>>>
>>>> Currently, I have given it some thought and my high level understanding
>>>> of the expected deliverables are:
>>>>
>>>> i)  A trend monitoring analysis engine - Extend the analysis-engines
>>>> package and add tests. Depending on which implementation strategies to use,
>>>> it seems that I would have to record the ?normal? behaviour pattern of a
>>>> system and then trigger a response if the application behaves out of the
>>>> norm which will be defined by the trending rules.
>>>>
>>>
>>> I think of 2 possible approaches:
>>> - *simple trending engine* - this would be an implementation that would
>>> essentially do some simple counting. An example here might be that we have
>>> seen the occurrence of detection point ABC go up 500% in the last hour over
>>> the "normal" usage. This would likely be pretty straightforward, and could
>>> use something like a time series database to track the metadata, and do
>>> some very fast analysis.
>>>
>>
>> I looked up on time series database to learn about them better as I have
>> not work with it.
>>
>>
>> http://stackoverflow.com/questions/8816429/is-there-a-powerful-database-system-for-time-series-data
>>
>> I notice that we have a implementation to integrate with influxdb in the
>> package appsensor-integration-influxdb.
>>
>> If I were to do the simple trending machine, I would have to extend the
>> current implementation to be able to retrieve events written to it so that
>> I can retrieve it in order to conduct the counting and analysis to compare
>> whether it is unusual. This is assuming that I will be using influxDB of
>> course. what are your opinions?
>>
>
> Yes, that's the basic idea. There are several that you could use. I don't
> really care that much about the implementation (tool) to be honest, but
> rather the idea. We can provide 1 implementation, then add implementations
> for specific tools if people would like one that we don't already cover.
>
>
>>
>>>
>> - *machine learning engine* - this is a more complex implementation.
>>> This would involve creating a ML style engine that would allow for various
>>> types of analysis. An example might be noticing a shift in the composition
>>> of HTTP verb usage for a given time period. If you decide to go this route,
>>> I think you'll want to be very specific with the types of analysis you want
>>> to provide, and focus on doing great documentation about how to build rules
>>> based on training data and the algorithm selection process.
>>>
>>
>>  This is a really interesting idea! I did some researching in order to
>> get an idea of what needs to be done using Spark as a base. Idea and
>> questions below:
>>
>> i) Idea 1: There has been some work on using spark and cassandra (as a
>> time series db even though its a k-v store) for data analysis. In relation
>> to appsensor, I would have to implement Spark (probably as part of the
>> analysis engine) for its machine learning library and implement a storage
>> provider for cassandra prior to wiring them together. I will have to design
>> a schema for the time series data storage inside cassandra as well. This
>> seems quite a lot of work for the duration of the project but i'll be able
>> to leverage some existing work done.
>>
>>
>> http://www.slideshare.net/patrickmcfadin/apache-cassandra-apache-spark-for-time-series-data
>>
>> ii) Idea 2: Implement a simple trending analysis ending as the main
>> project work (related to the question below simple trending approach) and
>> finish the 3 deliverables. Built a ML engine using Spark for machine
>> learning which will involve wiring it to the time series db used in the
>> simple trending approach. This way I don't have to implement a separate
>> store for the ML analysis engine but challenge probably lies into working
>> out how to connect them together.
>>
>>
> Both of these ideas are good, honestly. I'd focus on which one you think
> you can accomplish in the 3-month time frame. We don't want you to be able
> to finish the project in 2 weeks, but we also don't want it to take a year.
>
>
>> iii) Question 1: What do you mean by specific about the type of analysis
>> that I am providing and algorithm selection? From what I understand, its
>> either:
>> - For example, if we have 2 cases: measure shift in composition of HTTP
>> verb and number of API calls to an endpoint. I would implement it such that
>> I will use one algorithm for checking composition of HTTP verb and another
>> algorithm for number of API calls. I guess some research needs to be done
>> to decide which algorithm would be suitable for which use
>> case/scenario/event.
>>
>> - Implement wide variety of algorithm for analysis engine and then let
>> the user decide which algorithm to use for events or each event.
>>
>> I am leaning towards with the simple trending approach for now taking
>> into account of time although I would really like to give the machine
>> learning a go. Feedback and answers to the questions above will help me
>> scope out the amount of work required for the machine learning approach
>> especially (ii). :D
>>
>
> What I meant by the "specific type of analysis" comment is around machine
> learning. For machine learning, you have to decide which algorithm (or
> family of algorithms) to use to solve a particular problem. We can
> certainly use spark-ml or some other library to give us those algorithms,
> but in order to make it useful to our users, we'll have to write some code
> to integrate those algorithms with the types of problems we want to solve.
> If we're trying to solve a problem that requires "k nearest neighbors",
> then we'll have to write some code that uses that. My point was that we
> don't want to solve _every_ problem. We want to essentially document the
> process: 1) decide what problem you want to solve, 2) pick best algorithm,
> 3) implement algorithm, 4) use training dataset, 5) turn on analysis. In
> that workflow, we are not going to implement _all_ the different types of
> analysis you could do over the summer of code. I just want us to pick a few
> problems to solve, and document the process so that our users can do the
> same thing themselves to build new types of analysis.
>
>
I did some additional research on Spark and influxDB, it looks there are
issues open to improve intergration between Spark and influxDB especially
for querying large data from influxDB.
https://github.com/influxdata/influxdb/issues/3276
https://groups.google.com/forum/#!msg/influxdb/P9BEMslIQ1Q/ydrylZ3dDAAJ

Thanks to your feedback, I will probably decide on doing the ML
implementation. I read on detection points to decide on the problem I want
to solve and algorithms that I will use, here is my idea so far:

i) Problem: Rate of login attempts / Speed of application use / Change in
usage of same transaction for the website.

ii) Algorithm: Random Forest, Decision Trees / SVM / K-NN

iii) Implementing algorithm using existing library (JavaML, sparkML or
quickml(http://quickml.org/)) with regards to the problem.

iv) Training dataset: how will we get the training dataset for the
particular problem? I suppose I will be creating it by modifying an
existing dataset to replicate a behaviour.

what do you think? I will focus on implementing one problem and an
algorithm for it as advised and probably can put the other problems as nice
to haves if I have additional time. The above is using influxDB to track
the data and using ML algorithm upon retrieval to identify abnormal
behaviours.


>>>
>>>>
>>>> ii)  Associated configuration mechanism to specify the trending
>>>> rules/policy - Extend the configuration mode package, create
>>>> respective xml and xsd configuration for the Trend Monitoring analysis
>>>> engine.
>>>>
>>>> iii) A small full sample demo application showing usage of the trend
>>>> monitoring feature. - Built on the existing demo application?
>>>>
>>>>
>>> Yes, these would be the 3 basic outputs for that project, along with the
>>> associated documentation. Additionally, I would say that we should produce
>>> a small number of rules. That will be necessary for the demo application
>>> anyways, but we can use those rules as examples for the community. As for
>>> the demo application, it's very small and trivial. We actually have a user
>>> who built a demo application for a talk about appsensor that is likely a
>>> much better fit (
>>> https://github.com/dschadow/ApplicationIntrusionDetection)
>>>
>>
>> Agreed about the rules bit. I took a look at the demo application built
>> above and it looks great, will refer to it when working on the demo
>> application part. I've used Dropwizard to built web apps but I haven't work
>> with Spring (only a little on DI) before and will have to read about it.
>>
>
> The Spring parts should be pretty straightforward, and I (and others) can
> help you there if you need anything. You don't need to know much Spring at
> all for this project.
>

Got it. I will keep that in mind.

>
>
>>
>>>
>>>> It would be great if the mentor/team can give me feedback on my ideas
>>>> and things to read to expand my knowledge in this domain. If there is any
>>>> task that you would like me to complete, I am eager to do it and will find
>>>> time at night or the weekends to complete it.
>>>>
>>>
>>> I think what I'd be most interested in is if you could let us know which
>>> approach (simple trending, machine learning) you would prefer to take when
>>> building the analysis engine. Beyond that, I think your skillset looks well
>>> suited to the project.
>>>
>>>
>>>>
>>>> I would also like to start preparing my project proposal to be able to
>>>> share with the mailing list to get feedback as this will be my first time
>>>> applying for GSoC and I will need all the help I can get!!
>>>>
>>>
>>> Sounds great. I think your notes in this email are a very solid start.
>>> To build a good proposal, I think the most important thing to do is scope
>>> the work. Try to build a detailed plan (ie. what task(s) you will
>>> accomplish each week). After that, we can review it and make suggestions
>>> about whether or not we think you should try to do more or less work, and
>>> what parts may be tricky. It will also help us know which mentor(s) to
>>> bring onto the project.
>>>
>>>
>>  I will build up my plan as I scope out the work for the two approaches
>> and will definitely share it as soon as it is ready.
>>
>
> Perfect.
>

I will share a draft depending on the response to my suggestion above
tonight or tomorrow night for my proposal so that i'll have time to tweak
it over the coming weekend. :D

>
>

>
>>
>>
>>>
>>>> Thanks for your time and look forward to your feedbacks/replies. This
>>>> young padawan needs guidance. :D
>>>>
>>>>
>>>>
>>> Thank you!
>>>
>>>
>>>> I have also started a topic in the OWASP GSoC group.
>>>>
>>>>
>>>> https://groups.google.com/forum/?fromgroups#!topic/owasp-gsoc/59vAa402jXo
>>>>
>>>>
>>>> Kind Regards,
>>>>
>>>> Tim
>>>>
>>>>
>>>> _______________________________________________
>>>> Owasp-appsensor-project mailing list
>>>> Owasp-appsensor-project at lists.owasp.org
>>>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>>>
>>>>
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20160315/48806e63/attachment-0001.html>

From jtmelton at gmail.com  Wed Mar 16 02:32:40 2016
From: jtmelton at gmail.com (John Melton)
Date: Tue, 15 Mar 2016 22:32:40 -0400
Subject: [Owasp-appsensor-project] GSoC 2016 Trend Monitoring Analysis
	Engine
In-Reply-To: <CAPQUyzwg7mmardUnujo72TVHhyK9=QOsbYM8Bg0XZhD=TMMEKA@mail.gmail.com>
References: <CAPQUyzxgH3UdrSh-i_NYwg4-UEbfTLRBzb+zxCJV=qnGGc1eDA@mail.gmail.com>
	<CAM8z=y+DvfjbZCMQVB4RwghhLg8d_UsDsVqQbzXtexCOuw3Dvg@mail.gmail.com>
	<CAPQUyzzwEzrVhe_CtGRYErY6nJwKJ0Qx=Qy+rtXsCmndk4O7nA@mail.gmail.com>
	<CAM8z=yLuNd9vkTV-UJa3=kVawA2jASNZ029qLaEcM=si4UsQ4g@mail.gmail.com>
	<CAPQUyzwg7mmardUnujo72TVHhyK9=QOsbYM8Bg0XZhD=TMMEKA@mail.gmail.com>
Message-ID: <CAM8z=yLMhNAiL8z3r5veiO54k-qfU1QcF5L1QDi9ALNFoGoKFQ@mail.gmail.com>

Tim,
Responses inline.
Thanks,
John

On Tue, Mar 15, 2016 at 2:26 PM, Timothy Sum Hon Mun <timothy22000 at gmail.com
> wrote:

> Dear John,
>
> Sorry for the late reply. Been busy for my last few weeks of placement. :)
> Hope you are doing well. Responses inline with regards to GSoC.
>
> Side note: I notice that there are 3 new issues open with regards to the
> appsensor (elasticsearch, kafka, and mongo query) and I am wondering if
> anybody is working on any of them? I am keen to help out with the kafka one
> (although I might start work on it in April/May when I am done with my
> placement bar the report). I read on the version 0.9, its new consumer API
> and security features.
>

Yep, that's correct. I'm currently working on elasticsearch and mongo.
Kafka is not yet assigned, and if you want to tackle it, that'd be great.


> I suppose the scope of that issue covers upgrading, ensuring nothing
> breaks and the new consumer API with the new security features being a
> separate issue? We can discuss on the issue ticket itself.
>

Yes, that's the main idea. We want to move to the new consumer api and
enable support for the new security features. We'll need to work with the
community to see what the needs are. My preference is to _require_ using
the new security features, but there are likely still many deployments
lower than 0.9, so we may enable security by default, and have a temporary
way to disable it. After a few months, we should remove that to ensure
folks are using kafka properly.


>
> Kind Regards,
> Tim
>
> On Tue, Mar 8, 2016 at 5:27 PM, John Melton <jtmelton at gmail.com> wrote:
>
>> Responses inline.
>>
>> On Tue, Mar 8, 2016 at 4:33 AM, Timothy Sum Hon Mun <
>> timothy22000 at gmail.com> wrote:
>>
>>> Hi John,
>>>
>>> Thanks for getting back to me. It was good hearing back from you. I've
>>> replied to you inline below.
>>>
>>> Besides that, I made a pull request for some minor changes and test that
>>> I added for appsensor as a first contribution:
>>> https://github.com/jtmelton/appsensor/pull/38
>>>
>>>
>> Fantastic. I'll take a look at that later today!
>>
>>
>>> Thanks again!
>>>
>>> Best Regards,
>>> Tim
>>>
>>> On Mon, Mar 7, 2016 at 4:37 AM, John Melton <jtmelton at gmail.com> wrote:
>>>
>>>> Tim,
>>>>
>>>> Hi, and thanks so much for your email. I've responded with specific
>>>> comments inline below.
>>>>
>>>> Thanks,
>>>> John
>>>>
>>>> On Sun, Mar 6, 2016 at 1:58 PM, Timothy Sum Hon Mun <
>>>> timothy22000 at gmail.com> wrote:
>>>>
>>>>> Hi all,
>>>>>
>>>>> Firstly, congratulations on OWASP being accepted for GSoC 2016!!
>>>>>
>>>>> My name is Timothy Sum and I am from Malaysia. I am currently a final
>>>>> year MSc Computer Science student studying at University of Kent in the UK.
>>>>> I have experience in Java, Javascript, Python, Node.js, MongoDB, AWS,
>>>>> Jenkins, Git workflow, Dropwizard, Logstash, Apache Spark (MSc
>>>>> dissertation) and others, I am always keen to learn new technologies and
>>>>> try things outside my comfort zone!
>>>>>
>>>>> I am currently undergoing my placement (where I gained most of my
>>>>> experience from) which will be concluded on the 31st March 2016. I will be
>>>>> working full time on the weekdays before then. Therefore, I will do my
>>>>> research about the project and prepare my proposal typically at night or
>>>>> during the weekends. After my placement finishes, I will be able to
>>>>> completely commit to GSoC by researching, learning and experimenting about
>>>>> gaps in my knowledge during April even before the community bonding period.
>>>>> I?ll have a written report to write about my placement that is due on June
>>>>> 2016 but I can do that while coding over the summer!
>>>>>
>>>>> I just recently stumbled over GSoC 3 days ago and have been looking
>>>>> through the project list to decide which project I should go for. This will
>>>>> be my first time contributing to an open source project and I am very hyped
>>>>> up about it as I get to learn from a mentor and contribute at the same
>>>>> time. :) I also do not mind having skype/hangout discussion with mentors
>>>>> regularly to discuss about my progress.
>>>>>
>>>>
>>>> Yes, skype/hangouts is the normal way we communicate. I generally aim
>>>> for meetings 2-3 times a week so we can make sure we're making forward
>>>> progress and then use email in between meetings for specific questions.
>>>>
>>>
>>>>
>>>>>
>>>>> I am interested in the Trend Monitoring Analysis Engine project for
>>>>> OWASP AppSensor and would be excited if I can work on it. I do not
>>>>> have a background in application security and intrusion detection but am
>>>>> highly interested learning about it. So far, I have:
>>>>>
>>>>
>>>> Fantastic. Honestly, a background in spark / machine learning will be
>>>> more important.
>>>>
>>>
>>> Cool! I did a module in data mining for my MSc that would come in handy
>>> (learned about machine learning algos like decision trees etc).  I used
>>> Spark for the first time during my dissertation to implement a
>>> classification algorithm. I did not get to use Spark's machine learning
>>> library but my past experience would hopefully make the transition easier.
>>>
>>>>
>>>>
>>>>>
>>>>> i) Read the Chapter 3 and Chapter 4 of the OWASP guide briefly and
>>>>> understand the approach behind AppSensor, its high level architecture
>>>>> (detection and response unit), its pattern (Event, EventManager,
>>>>> EventAnalysisEngine and so on)
>>>>>
>>>>> ii) Manage to get a demo running locally as per the AppSensor Demo
>>>>> Setup guide (
>>>>> https://github.com/jtmelton/appsensor/blob/master/sample-apps/DemoSetup.md).
>>>>> Had a little bump with a mongo test failing when doing mvn install but got
>>>>> it to work in the end. Went through part of the codebase while doing this.
>>>>>
>>>>> iii) Research on trend monitoring analysis techniques. It seems that
>>>>> trend analysis falls into anomaly detection based on my understanding so
>>>>> far but feel free to correct me (will expand in the section below). It
>>>>> would be great if you recommend me additional papers/books to read to learn
>>>>> more on this topic.
>>>>>
>>>>> Did a first pass on two papers that cover general topics in IDS:
>>>>>
>>>>>
>>>>> http://galaxy.cs.lamar.edu/~bsun/seminar/example_papers/IDS_taxonomy.pdf
>>>>>
>>>>> http://www.ijcset.net/docs/Volumes/volume2issue4/ijcset2012020419.pdf
>>>>>
>>>>>
>>>> There is not much literature specific to application intrusion
>>>> detection. The concept is roughly based on network IDS systems. It is
>>>> mostly transferring those concepts to the application layer, and looking
>>>> for activity that is not possible (or is much harder) to detect at the
>>>> network layer, but is possible (or much easier) at the application layer.
>>>>
>>>
>>>  Interesting, I will probably do some reading to get an better overview
>>> of IDS in general.
>>>
>>>>
>>>>
>>>>> Currently, I have given it some thought and my high level
>>>>> understanding of the expected deliverables are:
>>>>>
>>>>> i)  A trend monitoring analysis engine - Extend the analysis-engines
>>>>> package and add tests. Depending on which implementation strategies to use,
>>>>> it seems that I would have to record the ?normal? behaviour pattern of a
>>>>> system and then trigger a response if the application behaves out of the
>>>>> norm which will be defined by the trending rules.
>>>>>
>>>>
>>>> I think of 2 possible approaches:
>>>> - *simple trending engine* - this would be an implementation that
>>>> would essentially do some simple counting. An example here might be that we
>>>> have seen the occurrence of detection point ABC go up 500% in the last hour
>>>> over the "normal" usage. This would likely be pretty straightforward, and
>>>> could use something like a time series database to track the metadata, and
>>>> do some very fast analysis.
>>>>
>>>
>>> I looked up on time series database to learn about them better as I have
>>> not work with it.
>>>
>>>
>>> http://stackoverflow.com/questions/8816429/is-there-a-powerful-database-system-for-time-series-data
>>>
>>> I notice that we have a implementation to integrate with influxdb in the
>>> package appsensor-integration-influxdb.
>>>
>>> If I were to do the simple trending machine, I would have to extend the
>>> current implementation to be able to retrieve events written to it so that
>>> I can retrieve it in order to conduct the counting and analysis to compare
>>> whether it is unusual. This is assuming that I will be using influxDB of
>>> course. what are your opinions?
>>>
>>
>> Yes, that's the basic idea. There are several that you could use. I don't
>> really care that much about the implementation (tool) to be honest, but
>> rather the idea. We can provide 1 implementation, then add implementations
>> for specific tools if people would like one that we don't already cover.
>>
>>
>>>
>>>>
>>> - *machine learning engine* - this is a more complex implementation.
>>>> This would involve creating a ML style engine that would allow for various
>>>> types of analysis. An example might be noticing a shift in the composition
>>>> of HTTP verb usage for a given time period. If you decide to go this route,
>>>> I think you'll want to be very specific with the types of analysis you want
>>>> to provide, and focus on doing great documentation about how to build rules
>>>> based on training data and the algorithm selection process.
>>>>
>>>
>>>  This is a really interesting idea! I did some researching in order to
>>> get an idea of what needs to be done using Spark as a base. Idea and
>>> questions below:
>>>
>>> i) Idea 1: There has been some work on using spark and cassandra (as a
>>> time series db even though its a k-v store) for data analysis. In relation
>>> to appsensor, I would have to implement Spark (probably as part of the
>>> analysis engine) for its machine learning library and implement a storage
>>> provider for cassandra prior to wiring them together. I will have to design
>>> a schema for the time series data storage inside cassandra as well. This
>>> seems quite a lot of work for the duration of the project but i'll be able
>>> to leverage some existing work done.
>>>
>>>
>>> http://www.slideshare.net/patrickmcfadin/apache-cassandra-apache-spark-for-time-series-data
>>>
>>> ii) Idea 2: Implement a simple trending analysis ending as the main
>>> project work (related to the question below simple trending approach) and
>>> finish the 3 deliverables. Built a ML engine using Spark for machine
>>> learning which will involve wiring it to the time series db used in the
>>> simple trending approach. This way I don't have to implement a separate
>>> store for the ML analysis engine but challenge probably lies into working
>>> out how to connect them together.
>>>
>>>
>> Both of these ideas are good, honestly. I'd focus on which one you think
>> you can accomplish in the 3-month time frame. We don't want you to be able
>> to finish the project in 2 weeks, but we also don't want it to take a year.
>>
>>
>>> iii) Question 1: What do you mean by specific about the type of analysis
>>> that I am providing and algorithm selection? From what I understand, its
>>> either:
>>> - For example, if we have 2 cases: measure shift in composition of HTTP
>>> verb and number of API calls to an endpoint. I would implement it such that
>>> I will use one algorithm for checking composition of HTTP verb and another
>>> algorithm for number of API calls. I guess some research needs to be done
>>> to decide which algorithm would be suitable for which use
>>> case/scenario/event.
>>>
>>> - Implement wide variety of algorithm for analysis engine and then let
>>> the user decide which algorithm to use for events or each event.
>>>
>>> I am leaning towards with the simple trending approach for now taking
>>> into account of time although I would really like to give the machine
>>> learning a go. Feedback and answers to the questions above will help me
>>> scope out the amount of work required for the machine learning approach
>>> especially (ii). :D
>>>
>>
>> What I meant by the "specific type of analysis" comment is around machine
>> learning. For machine learning, you have to decide which algorithm (or
>> family of algorithms) to use to solve a particular problem. We can
>> certainly use spark-ml or some other library to give us those algorithms,
>> but in order to make it useful to our users, we'll have to write some code
>> to integrate those algorithms with the types of problems we want to solve.
>> If we're trying to solve a problem that requires "k nearest neighbors",
>> then we'll have to write some code that uses that. My point was that we
>> don't want to solve _every_ problem. We want to essentially document the
>> process: 1) decide what problem you want to solve, 2) pick best algorithm,
>> 3) implement algorithm, 4) use training dataset, 5) turn on analysis. In
>> that workflow, we are not going to implement _all_ the different types of
>> analysis you could do over the summer of code. I just want us to pick a few
>> problems to solve, and document the process so that our users can do the
>> same thing themselves to build new types of analysis.
>>
>>
> I did some additional research on Spark and influxDB, it looks there are
> issues open to improve intergration between Spark and influxDB especially
> for querying large data from influxDB.
> https://github.com/influxdata/influxdb/issues/3276
> https://groups.google.com/forum/#!msg/influxdb/P9BEMslIQ1Q/ydrylZ3dDAAJ
>
> Thanks to your feedback, I will probably decide on doing the ML
> implementation. I read on detection points to decide on the problem I want
> to solve and algorithms that I will use, here is my idea so far:
>
> i) Problem: Rate of login attempts / Speed of application use / Change in
> usage of same transaction for the website.
>
> ii) Algorithm: Random Forest, Decision Trees / SVM / K-NN
>
> iii) Implementing algorithm using existing library (JavaML, sparkML or
> quickml(http://quickml.org/)) with regards to the problem.
>
> iv) Training dataset: how will we get the training dataset for the
> particular problem? I suppose I will be creating it by modifying an
> existing dataset to replicate a behaviour.
>
> what do you think? I will focus on implementing one problem and an
> algorithm for it as advised and probably can put the other problems as nice
> to haves if I have additional time. The above is using influxDB to track
> the data and using ML algorithm upon retrieval to identify abnormal
> behaviours.
>

This sounds great. Getting a data set could be a difficult task. Given the
sensitivity of the data, folks are not comfortable sharing their appsensor
dataset. Having said that, I've had decent luck just using web server logs
for many tasks. Those are pretty easy to get if you ask around. As for data
storage, feel free to pick the best tool. If that's influxdb, great. If
it's cassandra, mongo, riak, etc. ... that's fine too. I would pick
something reasonably common and well-known so you'll have good examples to
work from and so we have reasonable confidence it will work pretty well.


>
>
>>>>
>>>>>
>>>>> ii)  Associated configuration mechanism to specify the trending
>>>>> rules/policy - Extend the configuration mode package, create
>>>>> respective xml and xsd configuration for the Trend Monitoring analysis
>>>>> engine.
>>>>>
>>>>> iii) A small full sample demo application showing usage of the trend
>>>>> monitoring feature. - Built on the existing demo application?
>>>>>
>>>>>
>>>> Yes, these would be the 3 basic outputs for that project, along with
>>>> the associated documentation. Additionally, I would say that we should
>>>> produce a small number of rules. That will be necessary for the demo
>>>> application anyways, but we can use those rules as examples for the
>>>> community. As for the demo application, it's very small and trivial. We
>>>> actually have a user who built a demo application for a talk about
>>>> appsensor that is likely a much better fit (
>>>> https://github.com/dschadow/ApplicationIntrusionDetection)
>>>>
>>>
>>> Agreed about the rules bit. I took a look at the demo application built
>>> above and it looks great, will refer to it when working on the demo
>>> application part. I've used Dropwizard to built web apps but I haven't work
>>> with Spring (only a little on DI) before and will have to read about it.
>>>
>>
>> The Spring parts should be pretty straightforward, and I (and others) can
>> help you there if you need anything. You don't need to know much Spring at
>> all for this project.
>>
>
> Got it. I will keep that in mind.
>
>>
>>
>>>
>>>>
>>>>> It would be great if the mentor/team can give me feedback on my ideas
>>>>> and things to read to expand my knowledge in this domain. If there is any
>>>>> task that you would like me to complete, I am eager to do it and will find
>>>>> time at night or the weekends to complete it.
>>>>>
>>>>
>>>> I think what I'd be most interested in is if you could let us know
>>>> which approach (simple trending, machine learning) you would prefer to take
>>>> when building the analysis engine. Beyond that, I think your skillset looks
>>>> well suited to the project.
>>>>
>>>>
>>>>>
>>>>> I would also like to start preparing my project proposal to be able to
>>>>> share with the mailing list to get feedback as this will be my first time
>>>>> applying for GSoC and I will need all the help I can get!!
>>>>>
>>>>
>>>> Sounds great. I think your notes in this email are a very solid start.
>>>> To build a good proposal, I think the most important thing to do is scope
>>>> the work. Try to build a detailed plan (ie. what task(s) you will
>>>> accomplish each week). After that, we can review it and make suggestions
>>>> about whether or not we think you should try to do more or less work, and
>>>> what parts may be tricky. It will also help us know which mentor(s) to
>>>> bring onto the project.
>>>>
>>>>
>>>  I will build up my plan as I scope out the work for the two approaches
>>> and will definitely share it as soon as it is ready.
>>>
>>
>> Perfect.
>>
>
> I will share a draft depending on the response to my suggestion above
> tonight or tomorrow night for my proposal so that i'll have time to tweak
> it over the coming weekend. :D
>

Perfect, thank you.


>
>>
>
>>
>>>
>>>
>>>>
>>>>> Thanks for your time and look forward to your feedbacks/replies. This
>>>>> young padawan needs guidance. :D
>>>>>
>>>>>
>>>>>
>>>> Thank you!
>>>>
>>>>
>>>>> I have also started a topic in the OWASP GSoC group.
>>>>>
>>>>>
>>>>> https://groups.google.com/forum/?fromgroups#!topic/owasp-gsoc/59vAa402jXo
>>>>>
>>>>>
>>>>> Kind Regards,
>>>>>
>>>>> Tim
>>>>>
>>>>>
>>>>> _______________________________________________
>>>>> Owasp-appsensor-project mailing list
>>>>> Owasp-appsensor-project at lists.owasp.org
>>>>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>>>>
>>>>>
>>>>
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20160315/6ed9fc5c/attachment-0001.html>

From colin.watson at owasp.org  Thu Mar 17 18:47:14 2016
From: colin.watson at owasp.org (Colin Watson)
Date: Thu, 17 Mar 2016 18:47:14 +0000
Subject: [Owasp-appsensor-project] Project leadership
Message-ID: <CAAxdBBnWeKW1kWwSd+maVA-3K1qrpQaZCExqU4qi5b=XTYHgcg@mail.gmail.com>

AppSensor supporters

My own circumstances have changed somewhat and I am much less involved
in appsec than previously. As a result I am reviewing my obligations,
and am therefore stepping down as an AppSensor project leader.

With the solid foundations laid by Michael Coates, the help of the
co-project leaders and many of you on this list, I took the
documentation to version 2, and that has now been leap-frogged by the
wonderful reference implementation (did you attend/watch John's
presentation at AppSec USA last year?).

So I hope it is a good point to step down. The project is in safe
hands, but like all OWASP's projects, there is always scope for
greater involvement. It has been a pleasure working with you all.

Best wishes,

Colin

From jtmelton at gmail.com  Thu Mar 17 19:45:48 2016
From: jtmelton at gmail.com (John Melton)
Date: Thu, 17 Mar 2016 15:45:48 -0400
Subject: [Owasp-appsensor-project] Project leadership
In-Reply-To: <CAAxdBBnWeKW1kWwSd+maVA-3K1qrpQaZCExqU4qi5b=XTYHgcg@mail.gmail.com>
References: <CAAxdBBnWeKW1kWwSd+maVA-3K1qrpQaZCExqU4qi5b=XTYHgcg@mail.gmail.com>
Message-ID: <CAM8z=yLKOosLCMa1W+AR5uCQipSehrBoaUGSZdenPAN2PSZG2w@mail.gmail.com>

Colin,

Your leadership/work on the project has been outstanding and is the model I
try to emulate. Thanks so much for all your efforts!

Thanks,
John

On Thu, Mar 17, 2016 at 2:47 PM, Colin Watson <colin.watson at owasp.org>
wrote:

> AppSensor supporters
>
> My own circumstances have changed somewhat and I am much less involved
> in appsec than previously. As a result I am reviewing my obligations,
> and am therefore stepping down as an AppSensor project leader.
>
> With the solid foundations laid by Michael Coates, the help of the
> co-project leaders and many of you on this list, I took the
> documentation to version 2, and that has now been leap-frogged by the
> wonderful reference implementation (did you attend/watch John's
> presentation at AppSec USA last year?).
>
> So I hope it is a good point to step down. The project is in safe
> hands, but like all OWASP's projects, there is always scope for
> greater involvement. It has been a pleasure working with you all.
>
> Best wishes,
>
> Colin
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20160317/e7387820/attachment.html>

From timo.goosen at owasp.org  Fri Mar 18 10:47:14 2016
From: timo.goosen at owasp.org (Timo Goosen)
Date: Fri, 18 Mar 2016 12:47:14 +0200
Subject: [Owasp-appsensor-project] Project leadership
In-Reply-To: <CAM8z=yLKOosLCMa1W+AR5uCQipSehrBoaUGSZdenPAN2PSZG2w@mail.gmail.com>
References: <CAAxdBBnWeKW1kWwSd+maVA-3K1qrpQaZCExqU4qi5b=XTYHgcg@mail.gmail.com>
	<CAM8z=yLKOosLCMa1W+AR5uCQipSehrBoaUGSZdenPAN2PSZG2w@mail.gmail.com>
Message-ID: <CAMOWqYC+c8JouRtA-ANHjXL1HFAm6DV_-yH4kGPiEowS1OU3nA@mail.gmail.com>

Good luck with whatever you are taking on next.

Thanks for all the effort you've put into this project.

Regards.
Timo

On Thu, Mar 17, 2016 at 9:45 PM, John Melton <jtmelton at gmail.com> wrote:

> Colin,
>
> Your leadership/work on the project has been outstanding and is the model
> I try to emulate. Thanks so much for all your efforts!
>
> Thanks,
> John
>
> On Thu, Mar 17, 2016 at 2:47 PM, Colin Watson <colin.watson at owasp.org>
> wrote:
>
>> AppSensor supporters
>>
>> My own circumstances have changed somewhat and I am much less involved
>> in appsec than previously. As a result I am reviewing my obligations,
>> and am therefore stepping down as an AppSensor project leader.
>>
>> With the solid foundations laid by Michael Coates, the help of the
>> co-project leaders and many of you on this list, I took the
>> documentation to version 2, and that has now been leap-frogged by the
>> wonderful reference implementation (did you attend/watch John's
>> presentation at AppSec USA last year?).
>>
>> So I hope it is a good point to step down. The project is in safe
>> hands, but like all OWASP's projects, there is always scope for
>> greater involvement. It has been a pleasure working with you all.
>>
>> Best wishes,
>>
>> Colin
>> _______________________________________________
>> Owasp-appsensor-project mailing list
>> Owasp-appsensor-project at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>
>
>
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20160318/8ec3882e/attachment.html>

From colin.watson at owasp.org  Sun Mar 20 14:17:27 2016
From: colin.watson at owasp.org (Colin Watson)
Date: Sun, 20 Mar 2016 14:17:27 +0000
Subject: [Owasp-appsensor-project] Project leadership
In-Reply-To: <CAMOWqYC+c8JouRtA-ANHjXL1HFAm6DV_-yH4kGPiEowS1OU3nA@mail.gmail.com>
References: <CAAxdBBnWeKW1kWwSd+maVA-3K1qrpQaZCExqU4qi5b=XTYHgcg@mail.gmail.com>
	<CAM8z=yLKOosLCMa1W+AR5uCQipSehrBoaUGSZdenPAN2PSZG2w@mail.gmail.com>
	<CAMOWqYC+c8JouRtA-ANHjXL1HFAm6DV_-yH4kGPiEowS1OU3nA@mail.gmail.com>
Message-ID: <CAAxdBBmUwN3=unpRU7B+FE1iK4E+9c9_VKTy=Fhuk8_jFD1RxA@mail.gmail.com>

John and Timo

Thanks guys.

Colin




On 18 March 2016 at 10:47, Timo Goosen <timo.goosen at owasp.org> wrote:
> Good luck with whatever you are taking on next.
>
> Thanks for all the effort you've put into this project.
>
> Regards.
> Timo
>
> On Thu, Mar 17, 2016 at 9:45 PM, John Melton <jtmelton at gmail.com> wrote:
>>
>> Colin,
>>
>> Your leadership/work on the project has been outstanding and is the model
>> I try to emulate. Thanks so much for all your efforts!
>>
>> Thanks,
>> John
>>
>> On Thu, Mar 17, 2016 at 2:47 PM, Colin Watson <colin.watson at owasp.org>
>> wrote:
>>>
>>> AppSensor supporters
>>>
>>> My own circumstances have changed somewhat and I am much less involved
>>> in appsec than previously. As a result I am reviewing my obligations,
>>> and am therefore stepping down as an AppSensor project leader.
>>>
>>> With the solid foundations laid by Michael Coates, the help of the
>>> co-project leaders and many of you on this list, I took the
>>> documentation to version 2, and that has now been leap-frogged by the
>>> wonderful reference implementation (did you attend/watch John's
>>> presentation at AppSec USA last year?).
>>>
>>> So I hope it is a good point to step down. The project is in safe
>>> hands, but like all OWASP's projects, there is always scope for
>>> greater involvement. It has been a pleasure working with you all.
>>>
>>> Best wishes,
>>>
>>> Colin
>>> _______________________________________________
>>> Owasp-appsensor-project mailing list
>>> Owasp-appsensor-project at lists.owasp.org
>>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>
>>
>>
>> _______________________________________________
>> Owasp-appsensor-project mailing list
>> Owasp-appsensor-project at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>
>

From timothy22000 at gmail.com  Mon Mar 21 02:52:13 2016
From: timothy22000 at gmail.com (Timothy Sum Hon Mun)
Date: Mon, 21 Mar 2016 02:52:13 +0000
Subject: [Owasp-appsensor-project] GSoC 2016 Student Proposal for Trend
	Monitoring Analysis Engine
Message-ID: <CAPQUyzxZ2Og+qGEX6m-dATxSUuBK35_mkC6rq2m13hhsUMosfA@mail.gmail.com>

Dear All,

I have completed a draft of my student proposal and would really appreciate
if you could give me feedback on it before I submit it.

I will implement the feedback and share the updated draft if there are a
lot of changes to be made.

Thanks for your time!

Best Regards,
Tim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20160321/59fcfeea/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: GSoC2016TrendMonitoringAnalysisEngineforOWASPAppSensor (2).docx
Type: application/vnd.openxmlformats-officedocument.wordprocessingml.document
Size: 9013 bytes
Desc: not available
URL: <http://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20160321/59fcfeea/attachment.docx>

From jtmelton at gmail.com  Mon Mar 21 03:26:34 2016
From: jtmelton at gmail.com (John Melton)
Date: Sun, 20 Mar 2016 23:26:34 -0400
Subject: [Owasp-appsensor-project] GSoC 2016 Student Proposal for Trend
	Monitoring Analysis Engine
In-Reply-To: <CAPQUyzxZ2Og+qGEX6m-dATxSUuBK35_mkC6rq2m13hhsUMosfA@mail.gmail.com>
References: <CAPQUyzxZ2Og+qGEX6m-dATxSUuBK35_mkC6rq2m13hhsUMosfA@mail.gmail.com>
Message-ID: <CAM8z=yL7jssom+3NEnjrFVYKC1tbJN0XDSjX8KYGGkahBNWq=g@mail.gmail.com>

Tim,

>From my perspective, you've done a great job. I think this would be great
to submit as-is.

Thanks,
John

On Sun, Mar 20, 2016 at 10:52 PM, Timothy Sum Hon Mun <
timothy22000 at gmail.com> wrote:

> Dear All,
>
> I have completed a draft of my student proposal and would really
> appreciate if you could give me feedback on it before I submit it.
>
> I will implement the feedback and share the updated draft if there are a
> lot of changes to be made.
>
> Thanks for your time!
>
> Best Regards,
> Tim
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20160320/4b8d1ca1/attachment.html>

From timothy22000 at gmail.com  Mon Mar 21 04:07:17 2016
From: timothy22000 at gmail.com (Timothy Sum Hon Mun)
Date: Mon, 21 Mar 2016 04:07:17 +0000
Subject: [Owasp-appsensor-project] GSoC 2016 Student Proposal for Trend
	Monitoring Analysis Engine
In-Reply-To: <CAM8z=yL7jssom+3NEnjrFVYKC1tbJN0XDSjX8KYGGkahBNWq=g@mail.gmail.com>
References: <CAPQUyzxZ2Og+qGEX6m-dATxSUuBK35_mkC6rq2m13hhsUMosfA@mail.gmail.com>
	<CAM8z=yL7jssom+3NEnjrFVYKC1tbJN0XDSjX8KYGGkahBNWq=g@mail.gmail.com>
Message-ID: <CAPQUyzzP3x6u1xXNE=ZfAQ-MzJ8zZJ5t5+tFKnKm_hNbu7XZfA@mail.gmail.com>

Dear John,

Thanks for your response! I did not expect a reply so soon. :)

I will submit it soon then and hope for the best.

Best Regards,
Tim

On Mon, Mar 21, 2016 at 3:26 AM, John Melton <jtmelton at gmail.com> wrote:

> Tim,
>
> From my perspective, you've done a great job. I think this would be great
> to submit as-is.
>
> Thanks,
> John
>
> On Sun, Mar 20, 2016 at 10:52 PM, Timothy Sum Hon Mun <
> timothy22000 at gmail.com> wrote:
>
>> Dear All,
>>
>> I have completed a draft of my student proposal and would really
>> appreciate if you could give me feedback on it before I submit it.
>>
>> I will implement the feedback and share the updated draft if there are a
>> lot of changes to be made.
>>
>> Thanks for your time!
>>
>> Best Regards,
>> Tim
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20160321/bc6f3c9b/attachment-0001.html>

From timothy22000 at gmail.com  Mon Mar 21 04:10:45 2016
From: timothy22000 at gmail.com (Timothy Sum Hon Mun)
Date: Mon, 21 Mar 2016 04:10:45 +0000
Subject: [Owasp-appsensor-project] GSoC 2016 Trend Monitoring Analysis
	Engine
In-Reply-To: <CAM8z=yLMhNAiL8z3r5veiO54k-qfU1QcF5L1QDi9ALNFoGoKFQ@mail.gmail.com>
References: <CAPQUyzxgH3UdrSh-i_NYwg4-UEbfTLRBzb+zxCJV=qnGGc1eDA@mail.gmail.com>
	<CAM8z=y+DvfjbZCMQVB4RwghhLg8d_UsDsVqQbzXtexCOuw3Dvg@mail.gmail.com>
	<CAPQUyzzwEzrVhe_CtGRYErY6nJwKJ0Qx=Qy+rtXsCmndk4O7nA@mail.gmail.com>
	<CAM8z=yLuNd9vkTV-UJa3=kVawA2jASNZ029qLaEcM=si4UsQ4g@mail.gmail.com>
	<CAPQUyzwg7mmardUnujo72TVHhyK9=QOsbYM8Bg0XZhD=TMMEKA@mail.gmail.com>
	<CAM8z=yLMhNAiL8z3r5veiO54k-qfU1QcF5L1QDi9ALNFoGoKFQ@mail.gmail.com>
Message-ID: <CAPQUyzw=2yhLnOeSH3vj2akJLydkx=UYYxykD7wG1_KbkMBO5Q@mail.gmail.com>

Dear John,

Thanks for your feedback and support so far. With regards to the kafka
ticket, I will keep in mind what you said. I'll update you if I do start
dabbling in it or create a PR.

Best Regards,
Tim

On Wed, Mar 16, 2016 at 2:32 AM, John Melton <jtmelton at gmail.com> wrote:

> Tim,
> Responses inline.
> Thanks,
> John
>
> On Tue, Mar 15, 2016 at 2:26 PM, Timothy Sum Hon Mun <
> timothy22000 at gmail.com> wrote:
>
>> Dear John,
>>
>> Sorry for the late reply. Been busy for my last few weeks of placement.
>> :) Hope you are doing well. Responses inline with regards to GSoC.
>>
>> Side note: I notice that there are 3 new issues open with regards to the
>> appsensor (elasticsearch, kafka, and mongo query) and I am wondering if
>> anybody is working on any of them? I am keen to help out with the kafka one
>> (although I might start work on it in April/May when I am done with my
>> placement bar the report). I read on the version 0.9, its new consumer API
>> and security features.
>>
>
> Yep, that's correct. I'm currently working on elasticsearch and mongo.
> Kafka is not yet assigned, and if you want to tackle it, that'd be great.
>
>
>> I suppose the scope of that issue covers upgrading, ensuring nothing
>> breaks and the new consumer API with the new security features being a
>> separate issue? We can discuss on the issue ticket itself.
>>
>
> Yes, that's the main idea. We want to move to the new consumer api and
> enable support for the new security features. We'll need to work with the
> community to see what the needs are. My preference is to _require_ using
> the new security features, but there are likely still many deployments
> lower than 0.9, so we may enable security by default, and have a temporary
> way to disable it. After a few months, we should remove that to ensure
> folks are using kafka properly.
>
>
>>
>> Kind Regards,
>> Tim
>>
>> On Tue, Mar 8, 2016 at 5:27 PM, John Melton <jtmelton at gmail.com> wrote:
>>
>>> Responses inline.
>>>
>>> On Tue, Mar 8, 2016 at 4:33 AM, Timothy Sum Hon Mun <
>>> timothy22000 at gmail.com> wrote:
>>>
>>>> Hi John,
>>>>
>>>> Thanks for getting back to me. It was good hearing back from you. I've
>>>> replied to you inline below.
>>>>
>>>> Besides that, I made a pull request for some minor changes and test
>>>> that I added for appsensor as a first contribution:
>>>> https://github.com/jtmelton/appsensor/pull/38
>>>>
>>>>
>>> Fantastic. I'll take a look at that later today!
>>>
>>>
>>>> Thanks again!
>>>>
>>>> Best Regards,
>>>> Tim
>>>>
>>>> On Mon, Mar 7, 2016 at 4:37 AM, John Melton <jtmelton at gmail.com> wrote:
>>>>
>>>>> Tim,
>>>>>
>>>>> Hi, and thanks so much for your email. I've responded with specific
>>>>> comments inline below.
>>>>>
>>>>> Thanks,
>>>>> John
>>>>>
>>>>> On Sun, Mar 6, 2016 at 1:58 PM, Timothy Sum Hon Mun <
>>>>> timothy22000 at gmail.com> wrote:
>>>>>
>>>>>> Hi all,
>>>>>>
>>>>>> Firstly, congratulations on OWASP being accepted for GSoC 2016!!
>>>>>>
>>>>>> My name is Timothy Sum and I am from Malaysia. I am currently a final
>>>>>> year MSc Computer Science student studying at University of Kent in the UK.
>>>>>> I have experience in Java, Javascript, Python, Node.js, MongoDB, AWS,
>>>>>> Jenkins, Git workflow, Dropwizard, Logstash, Apache Spark (MSc
>>>>>> dissertation) and others, I am always keen to learn new technologies and
>>>>>> try things outside my comfort zone!
>>>>>>
>>>>>> I am currently undergoing my placement (where I gained most of my
>>>>>> experience from) which will be concluded on the 31st March 2016. I will be
>>>>>> working full time on the weekdays before then. Therefore, I will do my
>>>>>> research about the project and prepare my proposal typically at night or
>>>>>> during the weekends. After my placement finishes, I will be able to
>>>>>> completely commit to GSoC by researching, learning and experimenting about
>>>>>> gaps in my knowledge during April even before the community bonding period.
>>>>>> I?ll have a written report to write about my placement that is due on June
>>>>>> 2016 but I can do that while coding over the summer!
>>>>>>
>>>>>> I just recently stumbled over GSoC 3 days ago and have been looking
>>>>>> through the project list to decide which project I should go for. This will
>>>>>> be my first time contributing to an open source project and I am very hyped
>>>>>> up about it as I get to learn from a mentor and contribute at the same
>>>>>> time. :) I also do not mind having skype/hangout discussion with mentors
>>>>>> regularly to discuss about my progress.
>>>>>>
>>>>>
>>>>> Yes, skype/hangouts is the normal way we communicate. I generally aim
>>>>> for meetings 2-3 times a week so we can make sure we're making forward
>>>>> progress and then use email in between meetings for specific questions.
>>>>>
>>>>
>>>>>
>>>>>>
>>>>>> I am interested in the Trend Monitoring Analysis Engine project for
>>>>>> OWASP AppSensor and would be excited if I can work on it. I do not
>>>>>> have a background in application security and intrusion detection but am
>>>>>> highly interested learning about it. So far, I have:
>>>>>>
>>>>>
>>>>> Fantastic. Honestly, a background in spark / machine learning will be
>>>>> more important.
>>>>>
>>>>
>>>> Cool! I did a module in data mining for my MSc that would come in handy
>>>> (learned about machine learning algos like decision trees etc).  I used
>>>> Spark for the first time during my dissertation to implement a
>>>> classification algorithm. I did not get to use Spark's machine learning
>>>> library but my past experience would hopefully make the transition easier.
>>>>
>>>>>
>>>>>
>>>>>>
>>>>>> i) Read the Chapter 3 and Chapter 4 of the OWASP guide briefly and
>>>>>> understand the approach behind AppSensor, its high level architecture
>>>>>> (detection and response unit), its pattern (Event, EventManager,
>>>>>> EventAnalysisEngine and so on)
>>>>>>
>>>>>> ii) Manage to get a demo running locally as per the AppSensor Demo
>>>>>> Setup guide (
>>>>>> https://github.com/jtmelton/appsensor/blob/master/sample-apps/DemoSetup.md).
>>>>>> Had a little bump with a mongo test failing when doing mvn install but got
>>>>>> it to work in the end. Went through part of the codebase while doing this.
>>>>>>
>>>>>> iii) Research on trend monitoring analysis techniques. It seems that
>>>>>> trend analysis falls into anomaly detection based on my understanding so
>>>>>> far but feel free to correct me (will expand in the section below). It
>>>>>> would be great if you recommend me additional papers/books to read to learn
>>>>>> more on this topic.
>>>>>>
>>>>>> Did a first pass on two papers that cover general topics in IDS:
>>>>>>
>>>>>>
>>>>>> http://galaxy.cs.lamar.edu/~bsun/seminar/example_papers/IDS_taxonomy.pdf
>>>>>>
>>>>>> http://www.ijcset.net/docs/Volumes/volume2issue4/ijcset2012020419.pdf
>>>>>>
>>>>>>
>>>>> There is not much literature specific to application intrusion
>>>>> detection. The concept is roughly based on network IDS systems. It is
>>>>> mostly transferring those concepts to the application layer, and looking
>>>>> for activity that is not possible (or is much harder) to detect at the
>>>>> network layer, but is possible (or much easier) at the application layer.
>>>>>
>>>>
>>>>  Interesting, I will probably do some reading to get an better overview
>>>> of IDS in general.
>>>>
>>>>>
>>>>>
>>>>>> Currently, I have given it some thought and my high level
>>>>>> understanding of the expected deliverables are:
>>>>>>
>>>>>> i)  A trend monitoring analysis engine - Extend the analysis-engines
>>>>>> package and add tests. Depending on which implementation strategies to use,
>>>>>> it seems that I would have to record the ?normal? behaviour pattern of a
>>>>>> system and then trigger a response if the application behaves out of the
>>>>>> norm which will be defined by the trending rules.
>>>>>>
>>>>>
>>>>> I think of 2 possible approaches:
>>>>> - *simple trending engine* - this would be an implementation that
>>>>> would essentially do some simple counting. An example here might be that we
>>>>> have seen the occurrence of detection point ABC go up 500% in the last hour
>>>>> over the "normal" usage. This would likely be pretty straightforward, and
>>>>> could use something like a time series database to track the metadata, and
>>>>> do some very fast analysis.
>>>>>
>>>>
>>>> I looked up on time series database to learn about them better as I
>>>> have not work with it.
>>>>
>>>>
>>>> http://stackoverflow.com/questions/8816429/is-there-a-powerful-database-system-for-time-series-data
>>>>
>>>> I notice that we have a implementation to integrate with influxdb in
>>>> the package appsensor-integration-influxdb.
>>>>
>>>> If I were to do the simple trending machine, I would have to extend the
>>>> current implementation to be able to retrieve events written to it so that
>>>> I can retrieve it in order to conduct the counting and analysis to compare
>>>> whether it is unusual. This is assuming that I will be using influxDB of
>>>> course. what are your opinions?
>>>>
>>>
>>> Yes, that's the basic idea. There are several that you could use. I
>>> don't really care that much about the implementation (tool) to be honest,
>>> but rather the idea. We can provide 1 implementation, then add
>>> implementations for specific tools if people would like one that we don't
>>> already cover.
>>>
>>>
>>>>
>>>>>
>>>> - *machine learning engine* - this is a more complex implementation.
>>>>> This would involve creating a ML style engine that would allow for various
>>>>> types of analysis. An example might be noticing a shift in the composition
>>>>> of HTTP verb usage for a given time period. If you decide to go this route,
>>>>> I think you'll want to be very specific with the types of analysis you want
>>>>> to provide, and focus on doing great documentation about how to build rules
>>>>> based on training data and the algorithm selection process.
>>>>>
>>>>
>>>>  This is a really interesting idea! I did some researching in order to
>>>> get an idea of what needs to be done using Spark as a base. Idea and
>>>> questions below:
>>>>
>>>> i) Idea 1: There has been some work on using spark and cassandra (as a
>>>> time series db even though its a k-v store) for data analysis. In relation
>>>> to appsensor, I would have to implement Spark (probably as part of the
>>>> analysis engine) for its machine learning library and implement a storage
>>>> provider for cassandra prior to wiring them together. I will have to design
>>>> a schema for the time series data storage inside cassandra as well. This
>>>> seems quite a lot of work for the duration of the project but i'll be able
>>>> to leverage some existing work done.
>>>>
>>>>
>>>> http://www.slideshare.net/patrickmcfadin/apache-cassandra-apache-spark-for-time-series-data
>>>>
>>>> ii) Idea 2: Implement a simple trending analysis ending as the main
>>>> project work (related to the question below simple trending approach) and
>>>> finish the 3 deliverables. Built a ML engine using Spark for machine
>>>> learning which will involve wiring it to the time series db used in the
>>>> simple trending approach. This way I don't have to implement a separate
>>>> store for the ML analysis engine but challenge probably lies into working
>>>> out how to connect them together.
>>>>
>>>>
>>> Both of these ideas are good, honestly. I'd focus on which one you think
>>> you can accomplish in the 3-month time frame. We don't want you to be able
>>> to finish the project in 2 weeks, but we also don't want it to take a year.
>>>
>>>
>>>> iii) Question 1: What do you mean by specific about the type of
>>>> analysis that I am providing and algorithm selection? From what I
>>>> understand, its either:
>>>> - For example, if we have 2 cases: measure shift in composition of HTTP
>>>> verb and number of API calls to an endpoint. I would implement it such that
>>>> I will use one algorithm for checking composition of HTTP verb and another
>>>> algorithm for number of API calls. I guess some research needs to be done
>>>> to decide which algorithm would be suitable for which use
>>>> case/scenario/event.
>>>>
>>>> - Implement wide variety of algorithm for analysis engine and then let
>>>> the user decide which algorithm to use for events or each event.
>>>>
>>>> I am leaning towards with the simple trending approach for now taking
>>>> into account of time although I would really like to give the machine
>>>> learning a go. Feedback and answers to the questions above will help me
>>>> scope out the amount of work required for the machine learning approach
>>>> especially (ii). :D
>>>>
>>>
>>> What I meant by the "specific type of analysis" comment is around
>>> machine learning. For machine learning, you have to decide which algorithm
>>> (or family of algorithms) to use to solve a particular problem. We can
>>> certainly use spark-ml or some other library to give us those algorithms,
>>> but in order to make it useful to our users, we'll have to write some code
>>> to integrate those algorithms with the types of problems we want to solve.
>>> If we're trying to solve a problem that requires "k nearest neighbors",
>>> then we'll have to write some code that uses that. My point was that we
>>> don't want to solve _every_ problem. We want to essentially document the
>>> process: 1) decide what problem you want to solve, 2) pick best algorithm,
>>> 3) implement algorithm, 4) use training dataset, 5) turn on analysis. In
>>> that workflow, we are not going to implement _all_ the different types of
>>> analysis you could do over the summer of code. I just want us to pick a few
>>> problems to solve, and document the process so that our users can do the
>>> same thing themselves to build new types of analysis.
>>>
>>>
>> I did some additional research on Spark and influxDB, it looks there are
>> issues open to improve intergration between Spark and influxDB especially
>> for querying large data from influxDB.
>> https://github.com/influxdata/influxdb/issues/3276
>> https://groups.google.com/forum/#!msg/influxdb/P9BEMslIQ1Q/ydrylZ3dDAAJ
>>
>> Thanks to your feedback, I will probably decide on doing the ML
>> implementation. I read on detection points to decide on the problem I want
>> to solve and algorithms that I will use, here is my idea so far:
>>
>> i) Problem: Rate of login attempts / Speed of application use / Change in
>> usage of same transaction for the website.
>>
>> ii) Algorithm: Random Forest, Decision Trees / SVM / K-NN
>>
>> iii) Implementing algorithm using existing library (JavaML, sparkML or
>> quickml(http://quickml.org/)) with regards to the problem.
>>
>> iv) Training dataset: how will we get the training dataset for the
>> particular problem? I suppose I will be creating it by modifying an
>> existing dataset to replicate a behaviour.
>>
>> what do you think? I will focus on implementing one problem and an
>> algorithm for it as advised and probably can put the other problems as nice
>> to haves if I have additional time. The above is using influxDB to track
>> the data and using ML algorithm upon retrieval to identify abnormal
>> behaviours.
>>
>
> This sounds great. Getting a data set could be a difficult task. Given the
> sensitivity of the data, folks are not comfortable sharing their appsensor
> dataset. Having said that, I've had decent luck just using web server logs
> for many tasks. Those are pretty easy to get if you ask around. As for data
> storage, feel free to pick the best tool. If that's influxdb, great. If
> it's cassandra, mongo, riak, etc. ... that's fine too. I would pick
> something reasonably common and well-known so you'll have good examples to
> work from and so we have reasonable confidence it will work pretty well.
>
>
>>
>>
>>>>>
>>>>>>
>>>>>> ii)  Associated configuration mechanism to specify the trending
>>>>>> rules/policy - Extend the configuration mode package, create
>>>>>> respective xml and xsd configuration for the Trend Monitoring analysis
>>>>>> engine.
>>>>>>
>>>>>> iii) A small full sample demo application showing usage of the trend
>>>>>> monitoring feature. - Built on the existing demo application?
>>>>>>
>>>>>>
>>>>> Yes, these would be the 3 basic outputs for that project, along with
>>>>> the associated documentation. Additionally, I would say that we should
>>>>> produce a small number of rules. That will be necessary for the demo
>>>>> application anyways, but we can use those rules as examples for the
>>>>> community. As for the demo application, it's very small and trivial. We
>>>>> actually have a user who built a demo application for a talk about
>>>>> appsensor that is likely a much better fit (
>>>>> https://github.com/dschadow/ApplicationIntrusionDetection)
>>>>>
>>>>
>>>> Agreed about the rules bit. I took a look at the demo application built
>>>> above and it looks great, will refer to it when working on the demo
>>>> application part. I've used Dropwizard to built web apps but I haven't work
>>>> with Spring (only a little on DI) before and will have to read about it.
>>>>
>>>
>>> The Spring parts should be pretty straightforward, and I (and others)
>>> can help you there if you need anything. You don't need to know much Spring
>>> at all for this project.
>>>
>>
>> Got it. I will keep that in mind.
>>
>>>
>>>
>>>>
>>>>>
>>>>>> It would be great if the mentor/team can give me feedback on my ideas
>>>>>> and things to read to expand my knowledge in this domain. If there is any
>>>>>> task that you would like me to complete, I am eager to do it and will find
>>>>>> time at night or the weekends to complete it.
>>>>>>
>>>>>
>>>>> I think what I'd be most interested in is if you could let us know
>>>>> which approach (simple trending, machine learning) you would prefer to take
>>>>> when building the analysis engine. Beyond that, I think your skillset looks
>>>>> well suited to the project.
>>>>>
>>>>>
>>>>>>
>>>>>> I would also like to start preparing my project proposal to be able
>>>>>> to share with the mailing list to get feedback as this will be my first
>>>>>> time applying for GSoC and I will need all the help I can get!!
>>>>>>
>>>>>
>>>>> Sounds great. I think your notes in this email are a very solid start.
>>>>> To build a good proposal, I think the most important thing to do is scope
>>>>> the work. Try to build a detailed plan (ie. what task(s) you will
>>>>> accomplish each week). After that, we can review it and make suggestions
>>>>> about whether or not we think you should try to do more or less work, and
>>>>> what parts may be tricky. It will also help us know which mentor(s) to
>>>>> bring onto the project.
>>>>>
>>>>>
>>>>  I will build up my plan as I scope out the work for the two approaches
>>>> and will definitely share it as soon as it is ready.
>>>>
>>>
>>> Perfect.
>>>
>>
>> I will share a draft depending on the response to my suggestion above
>> tonight or tomorrow night for my proposal so that i'll have time to tweak
>> it over the coming weekend. :D
>>
>
> Perfect, thank you.
>
>
>>
>>>
>>
>>>
>>>>
>>>>
>>>>>
>>>>>> Thanks for your time and look forward to your feedbacks/replies. This
>>>>>> young padawan needs guidance. :D
>>>>>>
>>>>>>
>>>>>>
>>>>> Thank you!
>>>>>
>>>>>
>>>>>> I have also started a topic in the OWASP GSoC group.
>>>>>>
>>>>>>
>>>>>> https://groups.google.com/forum/?fromgroups#!topic/owasp-gsoc/59vAa402jXo
>>>>>>
>>>>>>
>>>>>> Kind Regards,
>>>>>>
>>>>>> Tim
>>>>>>
>>>>>>
>>>>>> _______________________________________________
>>>>>> Owasp-appsensor-project mailing list
>>>>>> Owasp-appsensor-project at lists.owasp.org
>>>>>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>>>>>
>>>>>>
>>>>>
>>>>
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20160321/e09115fa/attachment-0001.html>

From jtmelton at gmail.com  Mon Mar 21 04:18:33 2016
From: jtmelton at gmail.com (John Melton)
Date: Mon, 21 Mar 2016 00:18:33 -0400
Subject: [Owasp-appsensor-project] GSoC 2016 Trend Monitoring Analysis
	Engine
In-Reply-To: <CAPQUyzw=2yhLnOeSH3vj2akJLydkx=UYYxykD7wG1_KbkMBO5Q@mail.gmail.com>
References: <CAPQUyzxgH3UdrSh-i_NYwg4-UEbfTLRBzb+zxCJV=qnGGc1eDA@mail.gmail.com>
	<CAM8z=y+DvfjbZCMQVB4RwghhLg8d_UsDsVqQbzXtexCOuw3Dvg@mail.gmail.com>
	<CAPQUyzzwEzrVhe_CtGRYErY6nJwKJ0Qx=Qy+rtXsCmndk4O7nA@mail.gmail.com>
	<CAM8z=yLuNd9vkTV-UJa3=kVawA2jASNZ029qLaEcM=si4UsQ4g@mail.gmail.com>
	<CAPQUyzwg7mmardUnujo72TVHhyK9=QOsbYM8Bg0XZhD=TMMEKA@mail.gmail.com>
	<CAM8z=yLMhNAiL8z3r5veiO54k-qfU1QcF5L1QDi9ALNFoGoKFQ@mail.gmail.com>
	<CAPQUyzw=2yhLnOeSH3vj2akJLydkx=UYYxykD7wG1_KbkMBO5Q@mail.gmail.com>
Message-ID: <CAM8z=y+cPj=82z2wQc0X7xH9x3kwNGmx19Rr_C4kmJRvO78rrw@mail.gmail.com>

Sounds great - thanks Tim!

On Mon, Mar 21, 2016 at 12:10 AM, Timothy Sum Hon Mun <
timothy22000 at gmail.com> wrote:

> Dear John,
>
> Thanks for your feedback and support so far. With regards to the kafka
> ticket, I will keep in mind what you said. I'll update you if I do start
> dabbling in it or create a PR.
>
> Best Regards,
> Tim
>
> On Wed, Mar 16, 2016 at 2:32 AM, John Melton <jtmelton at gmail.com> wrote:
>
>> Tim,
>> Responses inline.
>> Thanks,
>> John
>>
>> On Tue, Mar 15, 2016 at 2:26 PM, Timothy Sum Hon Mun <
>> timothy22000 at gmail.com> wrote:
>>
>>> Dear John,
>>>
>>> Sorry for the late reply. Been busy for my last few weeks of placement.
>>> :) Hope you are doing well. Responses inline with regards to GSoC.
>>>
>>> Side note: I notice that there are 3 new issues open with regards to the
>>> appsensor (elasticsearch, kafka, and mongo query) and I am wondering if
>>> anybody is working on any of them? I am keen to help out with the kafka one
>>> (although I might start work on it in April/May when I am done with my
>>> placement bar the report). I read on the version 0.9, its new consumer API
>>> and security features.
>>>
>>
>> Yep, that's correct. I'm currently working on elasticsearch and mongo.
>> Kafka is not yet assigned, and if you want to tackle it, that'd be great.
>>
>>
>>> I suppose the scope of that issue covers upgrading, ensuring nothing
>>> breaks and the new consumer API with the new security features being a
>>> separate issue? We can discuss on the issue ticket itself.
>>>
>>
>> Yes, that's the main idea. We want to move to the new consumer api and
>> enable support for the new security features. We'll need to work with the
>> community to see what the needs are. My preference is to _require_ using
>> the new security features, but there are likely still many deployments
>> lower than 0.9, so we may enable security by default, and have a temporary
>> way to disable it. After a few months, we should remove that to ensure
>> folks are using kafka properly.
>>
>>
>>>
>>> Kind Regards,
>>> Tim
>>>
>>> On Tue, Mar 8, 2016 at 5:27 PM, John Melton <jtmelton at gmail.com> wrote:
>>>
>>>> Responses inline.
>>>>
>>>> On Tue, Mar 8, 2016 at 4:33 AM, Timothy Sum Hon Mun <
>>>> timothy22000 at gmail.com> wrote:
>>>>
>>>>> Hi John,
>>>>>
>>>>> Thanks for getting back to me. It was good hearing back from you. I've
>>>>> replied to you inline below.
>>>>>
>>>>> Besides that, I made a pull request for some minor changes and test
>>>>> that I added for appsensor as a first contribution:
>>>>> https://github.com/jtmelton/appsensor/pull/38
>>>>>
>>>>>
>>>> Fantastic. I'll take a look at that later today!
>>>>
>>>>
>>>>> Thanks again!
>>>>>
>>>>> Best Regards,
>>>>> Tim
>>>>>
>>>>> On Mon, Mar 7, 2016 at 4:37 AM, John Melton <jtmelton at gmail.com>
>>>>> wrote:
>>>>>
>>>>>> Tim,
>>>>>>
>>>>>> Hi, and thanks so much for your email. I've responded with specific
>>>>>> comments inline below.
>>>>>>
>>>>>> Thanks,
>>>>>> John
>>>>>>
>>>>>> On Sun, Mar 6, 2016 at 1:58 PM, Timothy Sum Hon Mun <
>>>>>> timothy22000 at gmail.com> wrote:
>>>>>>
>>>>>>> Hi all,
>>>>>>>
>>>>>>> Firstly, congratulations on OWASP being accepted for GSoC 2016!!
>>>>>>>
>>>>>>> My name is Timothy Sum and I am from Malaysia. I am currently a
>>>>>>> final year MSc Computer Science student studying at University of Kent in
>>>>>>> the UK. I have experience in Java, Javascript, Python, Node.js, MongoDB,
>>>>>>> AWS, Jenkins, Git workflow, Dropwizard, Logstash, Apache Spark (MSc
>>>>>>> dissertation) and others, I am always keen to learn new technologies and
>>>>>>> try things outside my comfort zone!
>>>>>>>
>>>>>>> I am currently undergoing my placement (where I gained most of my
>>>>>>> experience from) which will be concluded on the 31st March 2016. I will be
>>>>>>> working full time on the weekdays before then. Therefore, I will do my
>>>>>>> research about the project and prepare my proposal typically at night or
>>>>>>> during the weekends. After my placement finishes, I will be able to
>>>>>>> completely commit to GSoC by researching, learning and experimenting about
>>>>>>> gaps in my knowledge during April even before the community bonding period.
>>>>>>> I?ll have a written report to write about my placement that is due on June
>>>>>>> 2016 but I can do that while coding over the summer!
>>>>>>>
>>>>>>> I just recently stumbled over GSoC 3 days ago and have been looking
>>>>>>> through the project list to decide which project I should go for. This will
>>>>>>> be my first time contributing to an open source project and I am very hyped
>>>>>>> up about it as I get to learn from a mentor and contribute at the same
>>>>>>> time. :) I also do not mind having skype/hangout discussion with mentors
>>>>>>> regularly to discuss about my progress.
>>>>>>>
>>>>>>
>>>>>> Yes, skype/hangouts is the normal way we communicate. I generally aim
>>>>>> for meetings 2-3 times a week so we can make sure we're making forward
>>>>>> progress and then use email in between meetings for specific questions.
>>>>>>
>>>>>
>>>>>>
>>>>>>>
>>>>>>> I am interested in the Trend Monitoring Analysis Engine project for
>>>>>>> OWASP AppSensor and would be excited if I can work on it. I do not
>>>>>>> have a background in application security and intrusion detection but am
>>>>>>> highly interested learning about it. So far, I have:
>>>>>>>
>>>>>>
>>>>>> Fantastic. Honestly, a background in spark / machine learning will be
>>>>>> more important.
>>>>>>
>>>>>
>>>>> Cool! I did a module in data mining for my MSc that would come in
>>>>> handy (learned about machine learning algos like decision trees etc).  I
>>>>> used Spark for the first time during my dissertation to implement a
>>>>> classification algorithm. I did not get to use Spark's machine learning
>>>>> library but my past experience would hopefully make the transition easier.
>>>>>
>>>>>>
>>>>>>
>>>>>>>
>>>>>>> i) Read the Chapter 3 and Chapter 4 of the OWASP guide briefly and
>>>>>>> understand the approach behind AppSensor, its high level architecture
>>>>>>> (detection and response unit), its pattern (Event, EventManager,
>>>>>>> EventAnalysisEngine and so on)
>>>>>>>
>>>>>>> ii) Manage to get a demo running locally as per the AppSensor Demo
>>>>>>> Setup guide (
>>>>>>> https://github.com/jtmelton/appsensor/blob/master/sample-apps/DemoSetup.md).
>>>>>>> Had a little bump with a mongo test failing when doing mvn install but got
>>>>>>> it to work in the end. Went through part of the codebase while doing this.
>>>>>>>
>>>>>>> iii) Research on trend monitoring analysis techniques. It seems that
>>>>>>> trend analysis falls into anomaly detection based on my understanding so
>>>>>>> far but feel free to correct me (will expand in the section below). It
>>>>>>> would be great if you recommend me additional papers/books to read to learn
>>>>>>> more on this topic.
>>>>>>>
>>>>>>> Did a first pass on two papers that cover general topics in IDS:
>>>>>>>
>>>>>>>
>>>>>>> http://galaxy.cs.lamar.edu/~bsun/seminar/example_papers/IDS_taxonomy.pdf
>>>>>>>
>>>>>>> http://www.ijcset.net/docs/Volumes/volume2issue4/ijcset2012020419.pdf
>>>>>>>
>>>>>>>
>>>>>> There is not much literature specific to application intrusion
>>>>>> detection. The concept is roughly based on network IDS systems. It is
>>>>>> mostly transferring those concepts to the application layer, and looking
>>>>>> for activity that is not possible (or is much harder) to detect at the
>>>>>> network layer, but is possible (or much easier) at the application layer.
>>>>>>
>>>>>
>>>>>  Interesting, I will probably do some reading to get an better
>>>>> overview of IDS in general.
>>>>>
>>>>>>
>>>>>>
>>>>>>> Currently, I have given it some thought and my high level
>>>>>>> understanding of the expected deliverables are:
>>>>>>>
>>>>>>> i)  A trend monitoring analysis engine - Extend the
>>>>>>> analysis-engines package and add tests. Depending on which implementation
>>>>>>> strategies to use, it seems that I would have to record the ?normal?
>>>>>>> behaviour pattern of a system and then trigger a response if the
>>>>>>> application behaves out of the norm which will be defined by the trending
>>>>>>> rules.
>>>>>>>
>>>>>>
>>>>>> I think of 2 possible approaches:
>>>>>> - *simple trending engine* - this would be an implementation that
>>>>>> would essentially do some simple counting. An example here might be that we
>>>>>> have seen the occurrence of detection point ABC go up 500% in the last hour
>>>>>> over the "normal" usage. This would likely be pretty straightforward, and
>>>>>> could use something like a time series database to track the metadata, and
>>>>>> do some very fast analysis.
>>>>>>
>>>>>
>>>>> I looked up on time series database to learn about them better as I
>>>>> have not work with it.
>>>>>
>>>>>
>>>>> http://stackoverflow.com/questions/8816429/is-there-a-powerful-database-system-for-time-series-data
>>>>>
>>>>> I notice that we have a implementation to integrate with influxdb in
>>>>> the package appsensor-integration-influxdb.
>>>>>
>>>>> If I were to do the simple trending machine, I would have to extend
>>>>> the current implementation to be able to retrieve events written to it so
>>>>> that I can retrieve it in order to conduct the counting and analysis to
>>>>> compare whether it is unusual. This is assuming that I will be using
>>>>> influxDB of course. what are your opinions?
>>>>>
>>>>
>>>> Yes, that's the basic idea. There are several that you could use. I
>>>> don't really care that much about the implementation (tool) to be honest,
>>>> but rather the idea. We can provide 1 implementation, then add
>>>> implementations for specific tools if people would like one that we don't
>>>> already cover.
>>>>
>>>>
>>>>>
>>>>>>
>>>>> - *machine learning engine* - this is a more complex implementation.
>>>>>> This would involve creating a ML style engine that would allow for various
>>>>>> types of analysis. An example might be noticing a shift in the composition
>>>>>> of HTTP verb usage for a given time period. If you decide to go this route,
>>>>>> I think you'll want to be very specific with the types of analysis you want
>>>>>> to provide, and focus on doing great documentation about how to build rules
>>>>>> based on training data and the algorithm selection process.
>>>>>>
>>>>>
>>>>>  This is a really interesting idea! I did some researching in order to
>>>>> get an idea of what needs to be done using Spark as a base. Idea and
>>>>> questions below:
>>>>>
>>>>> i) Idea 1: There has been some work on using spark and cassandra (as a
>>>>> time series db even though its a k-v store) for data analysis. In relation
>>>>> to appsensor, I would have to implement Spark (probably as part of the
>>>>> analysis engine) for its machine learning library and implement a storage
>>>>> provider for cassandra prior to wiring them together. I will have to design
>>>>> a schema for the time series data storage inside cassandra as well. This
>>>>> seems quite a lot of work for the duration of the project but i'll be able
>>>>> to leverage some existing work done.
>>>>>
>>>>>
>>>>> http://www.slideshare.net/patrickmcfadin/apache-cassandra-apache-spark-for-time-series-data
>>>>>
>>>>> ii) Idea 2: Implement a simple trending analysis ending as the main
>>>>> project work (related to the question below simple trending approach) and
>>>>> finish the 3 deliverables. Built a ML engine using Spark for machine
>>>>> learning which will involve wiring it to the time series db used in the
>>>>> simple trending approach. This way I don't have to implement a separate
>>>>> store for the ML analysis engine but challenge probably lies into working
>>>>> out how to connect them together.
>>>>>
>>>>>
>>>> Both of these ideas are good, honestly. I'd focus on which one you
>>>> think you can accomplish in the 3-month time frame. We don't want you to be
>>>> able to finish the project in 2 weeks, but we also don't want it to take a
>>>> year.
>>>>
>>>>
>>>>> iii) Question 1: What do you mean by specific about the type of
>>>>> analysis that I am providing and algorithm selection? From what I
>>>>> understand, its either:
>>>>> - For example, if we have 2 cases: measure shift in composition of
>>>>> HTTP verb and number of API calls to an endpoint. I would implement it such
>>>>> that I will use one algorithm for checking composition of HTTP verb and
>>>>> another algorithm for number of API calls. I guess some research needs to
>>>>> be done to decide which algorithm would be suitable for which use
>>>>> case/scenario/event.
>>>>>
>>>>> - Implement wide variety of algorithm for analysis engine and then let
>>>>> the user decide which algorithm to use for events or each event.
>>>>>
>>>>> I am leaning towards with the simple trending approach for now taking
>>>>> into account of time although I would really like to give the machine
>>>>> learning a go. Feedback and answers to the questions above will help me
>>>>> scope out the amount of work required for the machine learning approach
>>>>> especially (ii). :D
>>>>>
>>>>
>>>> What I meant by the "specific type of analysis" comment is around
>>>> machine learning. For machine learning, you have to decide which algorithm
>>>> (or family of algorithms) to use to solve a particular problem. We can
>>>> certainly use spark-ml or some other library to give us those algorithms,
>>>> but in order to make it useful to our users, we'll have to write some code
>>>> to integrate those algorithms with the types of problems we want to solve.
>>>> If we're trying to solve a problem that requires "k nearest neighbors",
>>>> then we'll have to write some code that uses that. My point was that we
>>>> don't want to solve _every_ problem. We want to essentially document the
>>>> process: 1) decide what problem you want to solve, 2) pick best algorithm,
>>>> 3) implement algorithm, 4) use training dataset, 5) turn on analysis. In
>>>> that workflow, we are not going to implement _all_ the different types of
>>>> analysis you could do over the summer of code. I just want us to pick a few
>>>> problems to solve, and document the process so that our users can do the
>>>> same thing themselves to build new types of analysis.
>>>>
>>>>
>>> I did some additional research on Spark and influxDB, it looks there are
>>> issues open to improve intergration between Spark and influxDB especially
>>> for querying large data from influxDB.
>>> https://github.com/influxdata/influxdb/issues/3276
>>> https://groups.google.com/forum/#!msg/influxdb/P9BEMslIQ1Q/ydrylZ3dDAAJ
>>>
>>> Thanks to your feedback, I will probably decide on doing the ML
>>> implementation. I read on detection points to decide on the problem I want
>>> to solve and algorithms that I will use, here is my idea so far:
>>>
>>> i) Problem: Rate of login attempts / Speed of application use / Change
>>> in usage of same transaction for the website.
>>>
>>> ii) Algorithm: Random Forest, Decision Trees / SVM / K-NN
>>>
>>> iii) Implementing algorithm using existing library (JavaML, sparkML or
>>> quickml(http://quickml.org/)) with regards to the problem.
>>>
>>> iv) Training dataset: how will we get the training dataset for the
>>> particular problem? I suppose I will be creating it by modifying an
>>> existing dataset to replicate a behaviour.
>>>
>>> what do you think? I will focus on implementing one problem and an
>>> algorithm for it as advised and probably can put the other problems as nice
>>> to haves if I have additional time. The above is using influxDB to track
>>> the data and using ML algorithm upon retrieval to identify abnormal
>>> behaviours.
>>>
>>
>> This sounds great. Getting a data set could be a difficult task. Given
>> the sensitivity of the data, folks are not comfortable sharing their
>> appsensor dataset. Having said that, I've had decent luck just using web
>> server logs for many tasks. Those are pretty easy to get if you ask around.
>> As for data storage, feel free to pick the best tool. If that's influxdb,
>> great. If it's cassandra, mongo, riak, etc. ... that's fine too. I would
>> pick something reasonably common and well-known so you'll have good
>> examples to work from and so we have reasonable confidence it will work
>> pretty well.
>>
>>
>>>
>>>
>>>>>>
>>>>>>>
>>>>>>> ii)  Associated configuration mechanism to specify the trending
>>>>>>> rules/policy - Extend the configuration mode package, create
>>>>>>> respective xml and xsd configuration for the Trend Monitoring analysis
>>>>>>> engine.
>>>>>>>
>>>>>>> iii) A small full sample demo application showing usage of the
>>>>>>> trend monitoring feature. - Built on the existing demo application?
>>>>>>>
>>>>>>>
>>>>>> Yes, these would be the 3 basic outputs for that project, along with
>>>>>> the associated documentation. Additionally, I would say that we should
>>>>>> produce a small number of rules. That will be necessary for the demo
>>>>>> application anyways, but we can use those rules as examples for the
>>>>>> community. As for the demo application, it's very small and trivial. We
>>>>>> actually have a user who built a demo application for a talk about
>>>>>> appsensor that is likely a much better fit (
>>>>>> https://github.com/dschadow/ApplicationIntrusionDetection)
>>>>>>
>>>>>
>>>>> Agreed about the rules bit. I took a look at the demo application
>>>>> built above and it looks great, will refer to it when working on the demo
>>>>> application part. I've used Dropwizard to built web apps but I haven't work
>>>>> with Spring (only a little on DI) before and will have to read about it.
>>>>>
>>>>
>>>> The Spring parts should be pretty straightforward, and I (and others)
>>>> can help you there if you need anything. You don't need to know much Spring
>>>> at all for this project.
>>>>
>>>
>>> Got it. I will keep that in mind.
>>>
>>>>
>>>>
>>>>>
>>>>>>
>>>>>>> It would be great if the mentor/team can give me feedback on my
>>>>>>> ideas and things to read to expand my knowledge in this domain. If there is
>>>>>>> any task that you would like me to complete, I am eager to do it and will
>>>>>>> find time at night or the weekends to complete it.
>>>>>>>
>>>>>>
>>>>>> I think what I'd be most interested in is if you could let us know
>>>>>> which approach (simple trending, machine learning) you would prefer to take
>>>>>> when building the analysis engine. Beyond that, I think your skillset looks
>>>>>> well suited to the project.
>>>>>>
>>>>>>
>>>>>>>
>>>>>>> I would also like to start preparing my project proposal to be able
>>>>>>> to share with the mailing list to get feedback as this will be my first
>>>>>>> time applying for GSoC and I will need all the help I can get!!
>>>>>>>
>>>>>>
>>>>>> Sounds great. I think your notes in this email are a very solid
>>>>>> start. To build a good proposal, I think the most important thing to do is
>>>>>> scope the work. Try to build a detailed plan (ie. what task(s) you will
>>>>>> accomplish each week). After that, we can review it and make suggestions
>>>>>> about whether or not we think you should try to do more or less work, and
>>>>>> what parts may be tricky. It will also help us know which mentor(s) to
>>>>>> bring onto the project.
>>>>>>
>>>>>>
>>>>>  I will build up my plan as I scope out the work for the two
>>>>> approaches and will definitely share it as soon as it is ready.
>>>>>
>>>>
>>>> Perfect.
>>>>
>>>
>>> I will share a draft depending on the response to my suggestion above
>>> tonight or tomorrow night for my proposal so that i'll have time to tweak
>>> it over the coming weekend. :D
>>>
>>
>> Perfect, thank you.
>>
>>
>>>
>>>>
>>>
>>>>
>>>>>
>>>>>
>>>>>>
>>>>>>> Thanks for your time and look forward to your feedbacks/replies.
>>>>>>> This young padawan needs guidance. :D
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>> Thank you!
>>>>>>
>>>>>>
>>>>>>> I have also started a topic in the OWASP GSoC group.
>>>>>>>
>>>>>>>
>>>>>>> https://groups.google.com/forum/?fromgroups#!topic/owasp-gsoc/59vAa402jXo
>>>>>>>
>>>>>>>
>>>>>>> Kind Regards,
>>>>>>>
>>>>>>> Tim
>>>>>>>
>>>>>>>
>>>>>>> _______________________________________________
>>>>>>> Owasp-appsensor-project mailing list
>>>>>>> Owasp-appsensor-project at lists.owasp.org
>>>>>>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>>>>>>
>>>>>>>
>>>>>>
>>>>>
>>>>
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20160321/d96f8756/attachment-0001.html>

