From colin.watson at owasp.org  Fri Apr  8 10:17:41 2011
From: colin.watson at owasp.org (Colin Watson)
Date: Fri, 8 Apr 2011 15:17:41 +0100
Subject: [Owasp-appsensor-project] Results for competition: IFSEC Future of
	Security
In-Reply-To: <fde9a05f46333344acf8464538055f10@omnicompete.com>
References: <fde9a05f46333344acf8464538055f10@omnicompete.com>
Message-ID: <BANLkTik5LufB5OfiDe9pMYuVKaWKjyHyTA@mail.gmail.com>

AppSensor fans

I have received the result (see below) of our entry for the IFSEC
Future of Security competition in the Global Security Challenge.  We
were not successful.  I logged on, and have pasted the judges'
"Overall opinion / Comments" feedback below:

Judge   Feedback
========================================================
1          Interesting approach, though I am not sure I fully
understand it. Is the not-for-profit linkage an issue ?
2          Useful concept, but limited feel for the market potential.
3          An unusual background to this entry. It clearly addresses a
need but there must be competition in this space.
4          Historically, the intruder detection market has been a slow
mover. Great to see developments proceeding here. Targeting the
architects will not hurt, either.
========================================================

It's a bit disappointing, considering all the effort and support a
number of people, and the GPC, gave this.  There is another higher
value competition in progress http://www.omnicompete.com/security.html
(closing date 31 May) with an award of up to $500,000, but OWASP is
neither a very recent start-up nor an SME, so I think we are excluded.

THANKS FOR EVERYONE'S HELP, but I'm sorry it didn't work out.

Colin



---------- Forwarded message ----------
From: OmniCompete Mailer <noreply at omnicompete.com>
Date: 4 April 2011 16:17
Subject: Results for competition: IFSEC Future of Security
To: Colin Watson <colin.watson at owasp.org>


Hello, Colin !
Dear Entrant,

IFSEC results

Thank you for applying to the IFSEC Future of Security Competition 2011.

The Judging Committee has now reviewed all the submissions for the
Competition and unfortunately, your entry was not selected as a
finalist.

The quality of the submitted ideas was extremely high and not being
selected as a finalist does not imply that the Judging Committee was
not impressed with your innovation and company.

To access feedback from the judges please log in at
www.omnicompete.com using the same details you provided when
registered to the Competition and then by clicking on My Dashboard.

A new opportunity

Now in its sixth year, the Global Security Challenge is officially
open for entries. Winners of this challenge benefit from cash grants
of US$500,000 courtesy of the US Department of Defense.

In addition to top-quality mentoring for the winners, every entrant
will receive expert feedback from the judges. The GSC judging panel
differs from the IFSEC judging panel, so we strongly encourage you to
enter.

Open to Start-ups and SMEs, full details of what the judges are
looking for can be found at
www.omnicompete.com ??? hurry though, entry deadline is May 31st 2011.

Many thanks,

The GSC Team
OmniCompete

From kevin.w.wall at gmail.com  Fri Apr  8 11:54:35 2011
From: kevin.w.wall at gmail.com (Kevin W. Wall)
Date: Fri, 08 Apr 2011 11:54:35 -0400
Subject: [Owasp-appsensor-project] Results for competition: IFSEC Future
 of	Security
In-Reply-To: <BANLkTik5LufB5OfiDe9pMYuVKaWKjyHyTA@mail.gmail.com>
References: <fde9a05f46333344acf8464538055f10@omnicompete.com>
	<BANLkTik5LufB5OfiDe9pMYuVKaWKjyHyTA@mail.gmail.com>
Message-ID: <4D9F2FBB.9040801@gmail.com>

On 04/08/2011 10:17 AM, Colin Watson wrote:
> Judge   Feedback
> ========================================================
> 3          An unusual background to this entry. It clearly addresses a
> need but there must be competition in this space.

Translation: We don't award innovation. You obviously are off-track because
	     you aren't doing the same thing that everyone else is.

Sigh. Anyhow, Colin, we appreciate all your hard work on this.

-kevin
-- 
Kevin W. Wall
"The most likely way for the world to be destroyed, most experts agree,
is by accident. That's where we come in; we're computer professionals.
We cause accidents."        -- Nathaniel Borenstein, co-creator of MIME

From dennis.groves at owasp.org  Fri Apr  8 12:24:54 2011
From: dennis.groves at owasp.org (Dennis Groves)
Date: Fri, 8 Apr 2011 17:24:54 +0100
Subject: [Owasp-appsensor-project] Results for competition: IFSEC Future
 of Security
In-Reply-To: <BANLkTik5LufB5OfiDe9pMYuVKaWKjyHyTA@mail.gmail.com>
References: <fde9a05f46333344acf8464538055f10@omnicompete.com>
	<BANLkTik5LufB5OfiDe9pMYuVKaWKjyHyTA@mail.gmail.com>
Message-ID: <BANLkTikKUxF=erouCE3zW6DK=w1ht-M4+A@mail.gmail.com>

Colin -

I read this as follows:

1          Interesting approach, though I am not sure I fully
understand it. Is the not-for-profit linkage an issue ?

TRANSLATION: No market potential.

2          Useful concept, but limited feel for the market potential.

TRANSLATION: No market potential.

3          An unusual background to this entry. It clearly addresses a
> need but there must be competition in this space.


TRANSLATION: No market potential.

4          Historically, the intruder detection market has been a slow
> mover. Great to see developments proceeding here. Targeting the
> architects will not hurt, either.


TRANSLATION: No market potential.

If they are looking for the"next generation security
innovations to radically change the security world" they clearly are not
judging in that basis - in fact, from what I read they are actually looking
for something they can capitalize on; which is an entirely different
motivation that "next generation security innovations." Judge one even
thinks it is questionable to have published with OWASP!!!  In fact if you
look at the finalists they are all products!

We need innovative ideas like OWASP AppSensor which I fully believe is the
real next generation of security, it is a pattern for creating applications
that detect and respond to security events themselves. This is so cutting
edge it is practically science fiction - and OWASP even has a
reference implementation. Selling more security controls is doing the same
shit we have always done; is the same thinking that has us patching, praying
and upgrading all the time. How this qualifies as 'next generation security
innovation' is a complete mystery. In my world that is not security at all,
that is masturbation. Unfortunately, it seems to have been more of a circle
jerking contest, than it was about security.

No worries Colin, OWASP is about changing the world - your in the right
place doing the right things.

Cheers,

-- 
Dennis Groves, MSc
dennis.groves at owasp.org

 <http://www.owasp.org/>



On Fri, Apr 8, 2011 at 3:17 PM, Colin Watson <colin.watson at owasp.org> wrote:

> AppSensor fans
>
> I have received the result (see below) of our entry for the IFSEC
> Future of Security competition in the Global Security Challenge.  We
> were not successful.  I logged on, and have pasted the judges'
> "Overall opinion / Comments" feedback below:
>
> Judge   Feedback
> ========================================================
> 1          Interesting approach, though I am not sure I fully
> understand it. Is the not-for-profit linkage an issue ?
> 2          Useful concept, but limited feel for the market potential.
> 3          An unusual background to this entry. It clearly addresses a
> need but there must be competition in this space.
> 4          Historically, the intruder detection market has been a slow
> mover. Great to see developments proceeding here. Targeting the
> architects will not hurt, either.
> ========================================================
>
> It's a bit disappointing, considering all the effort and support a
> number of people, and the GPC, gave this.  There is another higher
> value competition in progress http://www.omnicompete.com/security.html
> (closing date 31 May) with an award of up to $500,000, but OWASP is
> neither a very recent start-up nor an SME, so I think we are excluded.
>
> THANKS FOR EVERYONE'S HELP, but I'm sorry it didn't work out.
>
> Colin
>
>
>
> ---------- Forwarded message ----------
> From: OmniCompete Mailer <noreply at omnicompete.com>
> Date: 4 April 2011 16:17
> Subject: Results for competition: IFSEC Future of Security
> To: Colin Watson <colin.watson at owasp.org>
>
>
> Hello, Colin !
> Dear Entrant,
>
> IFSEC results
>
> Thank you for applying to the IFSEC Future of Security Competition 2011.
>
> The Judging Committee has now reviewed all the submissions for the
> Competition and unfortunately, your entry was not selected as a
> finalist.
>
> The quality of the submitted ideas was extremely high and not being
> selected as a finalist does not imply that the Judging Committee was
> not impressed with your innovation and company.
>
> To access feedback from the judges please log in at
> www.omnicompete.com using the same details you provided when
> registered to the Competition and then by clicking on My Dashboard.
>
> A new opportunity
>
> Now in its sixth year, the Global Security Challenge is officially
> open for entries. Winners of this challenge benefit from cash grants
> of US$500,000 courtesy of the US Department of Defense.
>
> In addition to top-quality mentoring for the winners, every entrant
> will receive expert feedback from the judges. The GSC judging panel
> differs from the IFSEC judging panel, so we strongly encourage you to
> enter.
>
> Open to Start-ups and SMEs, full details of what the judges are
> looking for can be found at
> www.omnicompete.com ??? hurry though, entry deadline is May 31st 2011.
>
> Many thanks,
>
> The GSC Team
> OmniCompete
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20110408/2469bbb2/attachment.html 

From michael.coates at owasp.org  Fri Apr  8 13:21:46 2011
From: michael.coates at owasp.org (Michael Coates)
Date: Fri, 8 Apr 2011 10:21:46 -0700
Subject: [Owasp-appsensor-project] AppSensor Workshop at OWASP USA?
In-Reply-To: <BANLkTikKUxF=erouCE3zW6DK=w1ht-M4+A@mail.gmail.com>
References: <fde9a05f46333344acf8464538055f10@omnicompete.com>
	<BANLkTik5LufB5OfiDe9pMYuVKaWKjyHyTA@mail.gmail.com>
	<BANLkTikKUxF=erouCE3zW6DK=w1ht-M4+A@mail.gmail.com>
Message-ID: <B0CB12C2-917B-4E7A-AD61-AAB978B65FBD@owasp.org>

Just a crazy idea at the moment, but I bet we could do some awesome stuff if we all got into a room together (day prior to conf).


Any takers? I can start to formalize the idea.


-Michael

From colin.watson at owasp.org  Fri Apr  8 13:28:27 2011
From: colin.watson at owasp.org (Colin Watson)
Date: Fri, 8 Apr 2011 18:28:27 +0100
Subject: [Owasp-appsensor-project] AppSensor Workshop at OWASP USA?
In-Reply-To: <B0CB12C2-917B-4E7A-AD61-AAB978B65FBD@owasp.org>
References: <fde9a05f46333344acf8464538055f10@omnicompete.com>
	<BANLkTik5LufB5OfiDe9pMYuVKaWKjyHyTA@mail.gmail.com>
	<BANLkTikKUxF=erouCE3zW6DK=w1ht-M4+A@mail.gmail.com>
	<B0CB12C2-917B-4E7A-AD61-AAB978B65FBD@owasp.org>
Message-ID: <BANLkTikX323ErEo+dBXJRE+wPXGoT6yj4A@mail.gmail.com>

I'm up for it.  I've proposed a (non AppSensor) presentation, but also
a one-day training course on how to select detection points and
responses etc (based on the planning document I wrote last year).  I
will be going to the conference anyway but if the training proposal is
accepted, I wouldn't want it to clash (e.g. training on the 20th, and
workshop on 21st).

Colin

On 8 April 2011 18:21, Michael Coates <michael.coates at owasp.org> wrote:
> Just a crazy idea at the moment, but I bet we could do some awesome stuff if we all got into a room together (day prior to conf).
>
>
> Any takers? I can start to formalize the idea.
>
>
> -Michael

From colin.watson at owasp.org  Fri Apr  8 13:54:24 2011
From: colin.watson at owasp.org (Colin Watson)
Date: Fri, 8 Apr 2011 18:54:24 +0100
Subject: [Owasp-appsensor-project] Results for competition: IFSEC Future
 of Security
In-Reply-To: <BANLkTikKUxF=erouCE3zW6DK=w1ht-M4+A@mail.gmail.com>
References: <fde9a05f46333344acf8464538055f10@omnicompete.com>
	<BANLkTik5LufB5OfiDe9pMYuVKaWKjyHyTA@mail.gmail.com>
	<BANLkTikKUxF=erouCE3zW6DK=w1ht-M4+A@mail.gmail.com>
Message-ID: <BANLkTinr=qNu-yyTtM=zPb_BahtUdfRXXA@mail.gmail.com>

Well of course they can choose their own rules, and their own
selection criteria.  It's their competition.   Perhaps I chose the
wrong battleground to fight on.

Whoever the winners in the competition are, I'm sure they will deserve
congratulations.

Colin

From dennis.groves at owasp.org  Fri Apr  8 15:13:21 2011
From: dennis.groves at owasp.org (Dennis Groves)
Date: Fri, 8 Apr 2011 20:13:21 +0100
Subject: [Owasp-appsensor-project] AppSensor Workshop at OWASP USA?
In-Reply-To: <B0CB12C2-917B-4E7A-AD61-AAB978B65FBD@owasp.org>
References: <fde9a05f46333344acf8464538055f10@omnicompete.com>
	<BANLkTik5LufB5OfiDe9pMYuVKaWKjyHyTA@mail.gmail.com>
	<BANLkTikKUxF=erouCE3zW6DK=w1ht-M4+A@mail.gmail.com>
	<B0CB12C2-917B-4E7A-AD61-AAB978B65FBD@owasp.org>
Message-ID: <BANLkTikW2-uLJ2dkxuRHY2t2SWLje-oE=A@mail.gmail.com>

If I am able to get out I should love to have a think tank session on OWASP
AppSensor.
-- 
Dennis Groves, MSc
dennis.groves at owasp.org

 <http://www.owasp.org/>



On Fri, Apr 8, 2011 at 6:21 PM, Michael Coates <michael.coates at owasp.org>wrote:

> Just a crazy idea at the moment, but I bet we could do some awesome stuff
> if we all got into a room together (day prior to conf).
>
>
> Any takers? I can start to formalize the idea.
>
>
> -Michael
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20110408/2ba3d09f/attachment-0001.html 

From ryan.barnett at owasp.org  Tue Apr 12 22:06:03 2011
From: ryan.barnett at owasp.org (Ryan Barnett)
Date: Tue, 12 Apr 2011 22:06:03 -0400
Subject: [Owasp-appsensor-project] Added RP3 Detection Point in ModSecurity
	CRS
Message-ID: <707D9078-1034-441F-8A82-056C977A1876@owasp.org>

FYI - for those of you who didn't see the tweets, I have added new ModSecurity rules to the CRS project that allows for implementation of Content Security Policy -

http://blog.spiderlabs.com/2011/04/modsecurity-advanced-topic-of-the-week-integrating-content-security-policy-csp.html

The alerts generated by the CSP violation report requests are mapped to the AppSensor RP3 Suspicious Client Behavior Detection Point.

I will be interested to hear from users who field test it :)

Ryan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20110412/0f7a95fc/attachment.html 

From ryan.barnett at owasp.org  Thu Apr 14 14:19:51 2011
From: ryan.barnett at owasp.org (Ryan Barnett)
Date: Thu, 14 Apr 2011 14:19:51 -0400
Subject: [Owasp-appsensor-project] Should RE1 and RE2 detection logic be
	switched?
Message-ID: <C9CCB307.1E804%ryan.barnett@owasp.org>

Question for you all ? I am updating the OWASP CRS for more coverage of
AppSensor Detection Points.  I am working through these step by step.  When
reviewing RE1 and RE2 ? it seems to me like the detection logic for these
should be switched.

RE1 should be the initial check to see if a request method submitted is not
a valid one at all per the RFC.  So, if someone sends JUNK or TEST as the
request method, then RE1 would trigger.
RE2 should then be the check to see if the request method submitted is not
one that is expected for the current resource (expecting a POST but
receiving a GET).

The reason why I came to this conclusion is that when implementing these
rules in ModSecurity, if we keep the current ordering and using blocking,
RE2 would never trigger as an unknown HTTP Request method would first
violate RE1.

To summarize ? I think the detection logic of these two are fine but that
the detection point labels should be switched.

-Ryan


-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20110414/ec1a13f2/attachment.html 

From michael.coates at owasp.org  Thu Apr 14 15:00:53 2011
From: michael.coates at owasp.org (Michael Coates)
Date: Thu, 14 Apr 2011 12:00:53 -0700
Subject: [Owasp-appsensor-project] Should RE1 and RE2 detection logic be
	switched?
In-Reply-To: <C9CCB307.1E804%ryan.barnett@owasp.org>
References: <C9CCB307.1E804%ryan.barnett@owasp.org>
Message-ID: <EFB6C8A6-0B8D-4B3D-B71B-2F7CDBBC6739@owasp.org>

Seems fair to me. When I originally created the events I didn't put much thought into the  numbers and any sort of timelines.  Your suggestion makes sense.

Michael Coates
OWASP



On Apr 14, 2011, at 11:19 AM, Ryan Barnett wrote:

> Question for you all ? I am updating the OWASP CRS for more coverage of AppSensor Detection Points.  I am working through these step by step.  When reviewing RE1 and RE2 ? it seems to me like the detection logic for these should be switched.
> 
> RE1 should be the initial check to see if a request method submitted is not a valid one at all per the RFC.  So, if someone sends JUNK or TEST as the request method, then RE1 would trigger.
> RE2 should then be the check to see if the request method submitted is not one that is expected for the current resource (expecting a POST but receiving a GET).
> 
> The reason why I came to this conclusion is that when implementing these rules in ModSecurity, if we keep the current ordering and using blocking, RE2 would never trigger as an unknown HTTP Request method would first violate RE1.
> 
> To summarize ? I think the detection logic of these two are fine but that the detection point labels should be switched.
> 
> -Ryan
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project


From dennis.groves at owasp.org  Thu Apr 14 20:24:37 2011
From: dennis.groves at owasp.org (Dennis Groves)
Date: Fri, 15 Apr 2011 01:24:37 +0100
Subject: [Owasp-appsensor-project] Should RE1 and RE2 detection logic be
	switched?
In-Reply-To: <EFB6C8A6-0B8D-4B3D-B71B-2F7CDBBC6739@owasp.org>
References: <C9CCB307.1E804%ryan.barnett@owasp.org>
	<EFB6C8A6-0B8D-4B3D-B71B-2F7CDBBC6739@owasp.org>
Message-ID: <BANLkTi=wdfbrTArOyLSyhAO_hHVJSe+i6w@mail.gmail.com>

My take is that when for example a request is received the pattern is that
the OWASP AppSensor runs a 'detection' at that point in the code; it thus
does a case statement based on the exception thrown and raises
the appropriate alert or alerts to the analysis engine (in my case a
stochastic analysis engine that statistically profiles exceptions) and then
responds/defendes according to the output of the analysis engine... so I am
not sure why the rules would be 'static' or 'linear' and require any sort of
order.

Does this make sense?

-- 
Dennis Groves, MSc
dennis.groves at owasp.org

 <http://www.owasp.org/>



On Thu, Apr 14, 2011 at 8:00 PM, Michael Coates <michael.coates at owasp.org>wrote:

> Seems fair to me. When I originally created the events I didn't put much
> thought into the  numbers and any sort of timelines.  Your suggestion makes
> sense.
>
> Michael Coates
> OWASP
>
>
>
> On Apr 14, 2011, at 11:19 AM, Ryan Barnett wrote:
>
> > Question for you all ? I am updating the OWASP CRS for more coverage of
> AppSensor Detection Points.  I am working through these step by step.  When
> reviewing RE1 and RE2 ? it seems to me like the detection logic for these
> should be switched.
> >
> > RE1 should be the initial check to see if a request method submitted is
> not a valid one at all per the RFC.  So, if someone sends JUNK or TEST as
> the request method, then RE1 would trigger.
> > RE2 should then be the check to see if the request method submitted is
> not one that is expected for the current resource (expecting a POST but
> receiving a GET).
> >
> > The reason why I came to this conclusion is that when implementing these
> rules in ModSecurity, if we keep the current ordering and using blocking,
> RE2 would never trigger as an unknown HTTP Request method would first
> violate RE1.
> >
> > To summarize ? I think the detection logic of these two are fine but that
> the detection point labels should be switched.
> >
> > -Ryan
> > _______________________________________________
> > Owasp-appsensor-project mailing list
> > Owasp-appsensor-project at lists.owasp.org
> > https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20110415/dabc280a/attachment.html 

From ryan.barnett at owasp.org  Thu Apr 14 20:53:36 2011
From: ryan.barnett at owasp.org (Ryan Barnett)
Date: Thu, 14 Apr 2011 20:53:36 -0400
Subject: [Owasp-appsensor-project] Should RE1 and RE2 detection logic be
	switched?
In-Reply-To: <BANLkTi=wdfbrTArOyLSyhAO_hHVJSe+i6w@mail.gmail.com>
References: <C9CCB307.1E804%ryan.barnett@owasp.org>
	<EFB6C8A6-0B8D-4B3D-B71B-2F7CDBBC6739@owasp.org>
	<BANLkTi=wdfbrTArOyLSyhAO_hHVJSe+i6w@mail.gmail.com>
Message-ID: <5556D540-9254-4E61-99BD-69F41DDCCB19@owasp.org>

With the OWASP ModSecurity CRS users can choose to run the rules in either traditional or anomaly scoring mode - http://blog.spiderlabs.com/2010/11/advanced-topic-of-the-week-traditional-vs-anomaly-scoring-detection-modes.html

If they run it in anomaly scoring mode - then it is similar to what you describe as all rules get a chance to analyze the data and generate alerts. 

If they choose traditional mode however, it acts like an IPS and a matching rule will trigger a block. In this case then the ordering of the rules is important. 

I suppose we could just keep the detection points the way they are and I could just list RE2 before RE1 in the CRS.

Ryan

On Apr 14, 2011, at 8:24 PM, Dennis Groves <dennis.groves at owasp.org> wrote:

> My take is that when for example a request is received the pattern is that the OWASP AppSensor runs a 'detection' at that point in the code; it thus does a case statement based on the exception thrown and raises the appropriate alert or alerts to the analysis engine (in my case a stochastic analysis engine that statistically profiles exceptions) and then responds/defendes according to the output of the analysis engine... so I am not sure why the rules would be 'static' or 'linear' and require any sort of order.
> 
> Does this make sense?
> 
> -- 
> Dennis Groves, MSc
> dennis.groves at owasp.org
> 
> 
> 
> 
> 
> On Thu, Apr 14, 2011 at 8:00 PM, Michael Coates <michael.coates at owasp.org> wrote:
> Seems fair to me. When I originally created the events I didn't put much thought into the  numbers and any sort of timelines.  Your suggestion makes sense.
> 
> Michael Coates
> OWASP
> 
> 
> 
> On Apr 14, 2011, at 11:19 AM, Ryan Barnett wrote:
> 
> > Question for you all ? I am updating the OWASP CRS for more coverage of AppSensor Detection Points.  I am working through these step by step.  When reviewing RE1 and RE2 ? it seems to me like the detection logic for these should be switched.
> >
> > RE1 should be the initial check to see if a request method submitted is not a valid one at all per the RFC.  So, if someone sends JUNK or TEST as the request method, then RE1 would trigger.
> > RE2 should then be the check to see if the request method submitted is not one that is expected for the current resource (expecting a POST but receiving a GET).
> >
> > The reason why I came to this conclusion is that when implementing these rules in ModSecurity, if we keep the current ordering and using blocking, RE2 would never trigger as an unknown HTTP Request method would first violate RE1.
> >
> > To summarize ? I think the detection logic of these two are fine but that the detection point labels should be switched.
> >
> > -Ryan
> > _______________________________________________
> > Owasp-appsensor-project mailing list
> > Owasp-appsensor-project at lists.owasp.org
> > https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
> 
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20110414/b6ca6c8b/attachment.html 

From dennis.groves at owasp.org  Fri Apr 15 06:41:52 2011
From: dennis.groves at owasp.org (Dennis Groves)
Date: Fri, 15 Apr 2011 11:41:52 +0100
Subject: [Owasp-appsensor-project] Should RE1 and RE2 detection logic be
	switched?
In-Reply-To: <5556D540-9254-4E61-99BD-69F41DDCCB19@owasp.org>
References: <C9CCB307.1E804%ryan.barnett@owasp.org>
	<EFB6C8A6-0B8D-4B3D-B71B-2F7CDBBC6739@owasp.org>
	<BANLkTi=wdfbrTArOyLSyhAO_hHVJSe+i6w@mail.gmail.com>
	<5556D540-9254-4E61-99BD-69F41DDCCB19@owasp.org>
Message-ID: <BANLkTinmsnWGRhwEkgbBp4Bt8UVQYp0ksQ@mail.gmail.com>

I suppose of order is important for one mode, that we should very likely
list them in that order so that people whom copy and don't think still gain
the protections prescribed. However, we should also provided a statement
explaining that when running in 'traditional mode' the rule order is
significant.

And since 'Anomaly mode' is agnostic to the order it really doesn't matter.
;-)

-- 
Dennis Groves, MSc
dennis.groves at owasp.org

 <http://www.owasp.org/>



On Fri, Apr 15, 2011 at 1:53 AM, Ryan Barnett <ryan.barnett at owasp.org>wrote:

> With the OWASP ModSecurity CRS users can choose to run the rules in either
> traditional or anomaly scoring mode - <http://blog.spiderlabs.com/2010/11/advanced-topic-of-the-week-traditional-vs-anomaly-scoring-detection-modes.html>
> http://blog.spiderlabs.com/2010/11/advanced-topic-of-the-week-traditional-vs-anomaly-scoring-detection-modes.html
>
> If they run it in anomaly scoring mode - then it is similar to what you
> describe as all rules get a chance to analyze the data and generate alerts.
>
> If they choose traditional mode however, it acts like an IPS and a matching
> rule will trigger a block. In this case then the ordering of the rules is
> important.
>
> I suppose we could just keep the detection points the way they are and I
> could just list RE2 before RE1 in the CRS.
>
> Ryan
>
> On Apr 14, 2011, at 8:24 PM, Dennis Groves <dennis.groves at owasp.org>
> wrote:
>
> My take is that when for example a request is received the pattern is that
> the OWASP AppSensor runs a 'detection' at that point in the code; it thus
> does a case statement based on the exception thrown and raises
> the appropriate alert or alerts to the analysis engine (in my case a
> stochastic analysis engine that statistically profiles exceptions) and then
> responds/defendes according to the output of the analysis engine... so I am
> not sure why the rules would be 'static' or 'linear' and require any sort of
> order.
>
> Does this make sense?
>
> --
> Dennis Groves, MSc
> <dennis.groves at owasp.org>dennis.groves at owasp.org
>
>  <http://www.owasp.org/>
>
>
>
> On Thu, Apr 14, 2011 at 8:00 PM, Michael Coates <<michael.coates at owasp.org>
> michael.coates at owasp.org> wrote:
>
>> Seems fair to me. When I originally created the events I didn't put much
>> thought into the  numbers and any sort of timelines.  Your suggestion makes
>> sense.
>>
>> Michael Coates
>> OWASP
>>
>>
>>
>> On Apr 14, 2011, at 11:19 AM, Ryan Barnett wrote:
>>
>> > Question for you all ? I am updating the OWASP CRS for more coverage of
>> AppSensor Detection Points.  I am working through these step by step.  When
>> reviewing RE1 and RE2 ? it seems to me like the detection logic for these
>> should be switched.
>> >
>> > RE1 should be the initial check to see if a request method submitted is
>> not a valid one at all per the RFC.  So, if someone sends JUNK or TEST as
>> the request method, then RE1 would trigger.
>> > RE2 should then be the check to see if the request method submitted is
>> not one that is expected for the current resource (expecting a POST but
>> receiving a GET).
>> >
>> > The reason why I came to this conclusion is that when implementing these
>> rules in ModSecurity, if we keep the current ordering and using blocking,
>> RE2 would never trigger as an unknown HTTP Request method would first
>> violate RE1.
>> >
>> > To summarize ? I think the detection logic of these two are fine but
>> that the detection point labels should be switched.
>> >
>> > -Ryan
>> > _______________________________________________
>> > Owasp-appsensor-project mailing list
>> > <Owasp-appsensor-project at lists.owasp.org>
>> Owasp-appsensor-project at lists.owasp.org
>> > <https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project>
>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>
>> _______________________________________________
>> Owasp-appsensor-project mailing list
>>  <Owasp-appsensor-project at lists.owasp.org>
>> Owasp-appsensor-project at lists.owasp.org
>>  <https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project>
>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>
>
>
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20110415/19e92998/attachment-0001.html 

From colin.watson at owasp.org  Fri Apr 15 07:57:24 2011
From: colin.watson at owasp.org (Colin Watson)
Date: Fri, 15 Apr 2011 12:57:24 +0100
Subject: [Owasp-appsensor-project] Should RE1 and RE2 detection logic be
	switched?
In-Reply-To: <BANLkTinmsnWGRhwEkgbBp4Bt8UVQYp0ksQ@mail.gmail.com>
References: <C9CCB307.1E804%ryan.barnett@owasp.org>
	<EFB6C8A6-0B8D-4B3D-B71B-2F7CDBBC6739@owasp.org>
	<BANLkTi=wdfbrTArOyLSyhAO_hHVJSe+i6w@mail.gmail.com>
	<5556D540-9254-4E61-99BD-69F41DDCCB19@owasp.org>
	<BANLkTinmsnWGRhwEkgbBp4Bt8UVQYp0ksQ@mail.gmail.com>
Message-ID: <BANLkTi=BgD0WziEgL_fa27+Ma-o4e3=gsA@mail.gmail.com>

I agree with the replies above.  I sort of read RE1 to mean it was a
supported method, but not for this particular entry point (e.g. PUT),
whereas RE2 is just some weird method name (e.g. PLACEORSOMETHING).

But I don't think we should change the naming of RE1 and RE2 because:

- if people have already referenced them, it will cause confusion

- the naming/numbering is not meant to be imply ordering

- you might want to know them all

- other systems/applications/WAFs might just have other detection
points earlier in the chain (e.g. ACE3 - Forced browsing, where the
application's entry points are being enforced, EE2 - unexpected
encoding)

So it may be important for CRS, but it isn't for the concept.  It's an
important issue to think about though.

Colin

On 15 April 2011 11:41, Dennis Groves <dennis.groves at owasp.org> wrote:
>
> I suppose of order is important for one mode, that we should very likely list them in that order so that people whom copy and don't think still gain the protections prescribed. However, we should also provided a statement explaining that when running in 'traditional mode' the rule order is significant.
> And since 'Anomaly?mode' is agnostic to the order it really doesn't matter. ;-)
> --
> Dennis Groves, MSc
> dennis.groves at owasp.org
>
>
>
>
> On Fri, Apr 15, 2011 at 1:53 AM, Ryan Barnett <ryan.barnett at owasp.org> wrote:
>>
>> With the OWASP ModSecurity CRS users can choose to run the rules in either traditional or anomaly scoring mode -?http://blog.spiderlabs.com/2010/11/advanced-topic-of-the-week-traditional-vs-anomaly-scoring-detection-modes.html
>> If they run it in anomaly scoring mode - then it is similar to what you describe as all rules get a chance to analyze the data and generate alerts.
>> If they choose traditional mode however, it acts like an IPS and a matching rule will trigger a block. In this case then the ordering of the rules is important.
>> I suppose we could just keep the detection points the way they are and I could just list RE2 before RE1 in the CRS.
>> Ryan
>> On Apr 14, 2011, at 8:24 PM, Dennis Groves <dennis.groves at owasp.org> wrote:
>>
>> My take is that when for example a request is?received?the pattern is that the OWASP AppSensor runs a 'detection' at that point in the code; it thus does a case statement based on the exception thrown and raises the?appropriate?alert or alerts to the analysis engine (in my case a stochastic analysis engine that?statistically?profiles exceptions) and then responds/defendes according to the output of the analysis engine... so I am not sure why the rules would be 'static' or 'linear' and require any sort of order.
>> Does this make sense?
>> --
>> Dennis Groves, MSc
>> dennis.groves at owasp.org
>>
>>
>>
>>
>> On Thu, Apr 14, 2011 at 8:00 PM, Michael Coates <michael.coates at owasp.org> wrote:
>>>
>>> Seems fair to me. When I originally created the events I didn't put much thought into the ?numbers and any sort of timelines. ?Your suggestion makes sense.
>>>
>>> Michael Coates
>>> OWASP
>>>
>>>
>>>
>>> On Apr 14, 2011, at 11:19 AM, Ryan Barnett wrote:
>>>
>>> > Question for you all ? I am updating the OWASP CRS for more coverage of AppSensor Detection Points. ?I am working through these step by step. ?When reviewing RE1 and RE2 ? it seems to me like the detection logic for these should be switched.
>>> >
>>> > RE1 should be the initial check to see if a request method submitted is not a valid one at all per the RFC. ?So, if someone sends JUNK or TEST as the request method, then RE1 would trigger.
>>> > RE2 should then be the check to see if the request method submitted is not one that is expected for the current resource (expecting a POST but receiving a GET).
>>> >
>>> > The reason why I came to this conclusion is that when implementing these rules in ModSecurity, if we keep the current ordering and using blocking, RE2 would never trigger as an unknown HTTP Request method would first violate RE1.
>>> >
>>> > To summarize ? I think the detection logic of these two are fine but that the detection point labels should be switched.
>>> >
>>> > -Ryan
>>> > _______________________________________________
>>> > Owasp-appsensor-project mailing list
>>> > Owasp-appsensor-project at lists.owasp.org
>>> > https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>>
>>> _______________________________________________
>>> Owasp-appsensor-project mailing list
>>> Owasp-appsensor-project at lists.owasp.org
>>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>
>>
>> _______________________________________________
>> Owasp-appsensor-project mailing list
>> Owasp-appsensor-project at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>
>
>
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>

From ryan.barnett at owasp.org  Fri Apr 15 08:05:57 2011
From: ryan.barnett at owasp.org (Ryan Barnett)
Date: Fri, 15 Apr 2011 08:05:57 -0400
Subject: [Owasp-appsensor-project] Should RE1 and RE2 detection logic be
	switched?
In-Reply-To: <BANLkTi=BgD0WziEgL_fa27+Ma-o4e3=gsA@mail.gmail.com>
References: <C9CCB307.1E804%ryan.barnett@owasp.org>
	<EFB6C8A6-0B8D-4B3D-B71B-2F7CDBBC6739@owasp.org>
	<BANLkTi=wdfbrTArOyLSyhAO_hHVJSe+i6w@mail.gmail.com>
	<5556D540-9254-4E61-99BD-69F41DDCCB19@owasp.org>
	<BANLkTinmsnWGRhwEkgbBp4Bt8UVQYp0ksQ@mail.gmail.com>
	<BANLkTi=BgD0WziEgL_fa27+Ma-o4e3=gsA@mail.gmail.com>
Message-ID: <1D7DDE67-2870-4490-A83D-CF2BD1E966E1@owasp.org>

Agreed. I will just put RE2 before RE1 in the rules file and it should work fine in either mode. 

Thanks guys. 
Ryan

On Apr 15, 2011, at 7:57 AM, Colin Watson <colin.watson at owasp.org> wrote:

> I agree with the replies above.  I sort of read RE1 to mean it was a
> supported method, but not for this particular entry point (e.g. PUT),
> whereas RE2 is just some weird method name (e.g. PLACEORSOMETHING).
> 
> But I don't think we should change the naming of RE1 and RE2 because:
> 
> - if people have already referenced them, it will cause confusion
> 
> - the naming/numbering is not meant to be imply ordering
> 
> - you might want to know them all
> 
> - other systems/applications/WAFs might just have other detection
> points earlier in the chain (e.g. ACE3 - Forced browsing, where the
> application's entry points are being enforced, EE2 - unexpected
> encoding)
> 
> So it may be important for CRS, but it isn't for the concept.  It's an
> important issue to think about though.
> 
> Colin
> 
> On 15 April 2011 11:41, Dennis Groves <dennis.groves at owasp.org> wrote:
>> 
>> I suppose of order is important for one mode, that we should very likely list them in that order so that people whom copy and don't think still gain the protections prescribed. However, we should also provided a statement explaining that when running in 'traditional mode' the rule order is significant.
>> And since 'Anomaly mode' is agnostic to the order it really doesn't matter. ;-)
>> --
>> Dennis Groves, MSc
>> dennis.groves at owasp.org
>> 
>> 
>> 
>> 
>> On Fri, Apr 15, 2011 at 1:53 AM, Ryan Barnett <ryan.barnett at owasp.org> wrote:
>>> 
>>> With the OWASP ModSecurity CRS users can choose to run the rules in either traditional or anomaly scoring mode - http://blog.spiderlabs.com/2010/11/advanced-topic-of-the-week-traditional-vs-anomaly-scoring-detection-modes.html
>>> If they run it in anomaly scoring mode - then it is similar to what you describe as all rules get a chance to analyze the data and generate alerts.
>>> If they choose traditional mode however, it acts like an IPS and a matching rule will trigger a block. In this case then the ordering of the rules is important.
>>> I suppose we could just keep the detection points the way they are and I could just list RE2 before RE1 in the CRS.
>>> Ryan
>>> On Apr 14, 2011, at 8:24 PM, Dennis Groves <dennis.groves at owasp.org> wrote:
>>> 
>>> My take is that when for example a request is received the pattern is that the OWASP AppSensor runs a 'detection' at that point in the code; it thus does a case statement based on the exception thrown and raises the appropriate alert or alerts to the analysis engine (in my case a stochastic analysis engine that statistically profiles exceptions) and then responds/defendes according to the output of the analysis engine... so I am not sure why the rules would be 'static' or 'linear' and require any sort of order.
>>> Does this make sense?
>>> --
>>> Dennis Groves, MSc
>>> dennis.groves at owasp.org
>>> 
>>> 
>>> 
>>> 
>>> On Thu, Apr 14, 2011 at 8:00 PM, Michael Coates <michael.coates at owasp.org> wrote:
>>>> 
>>>> Seems fair to me. When I originally created the events I didn't put much thought into the  numbers and any sort of timelines.  Your suggestion makes sense.
>>>> 
>>>> Michael Coates
>>>> OWASP
>>>> 
>>>> 
>>>> 
>>>> On Apr 14, 2011, at 11:19 AM, Ryan Barnett wrote:
>>>> 
>>>>> Question for you all ? I am updating the OWASP CRS for more coverage of AppSensor Detection Points.  I am working through these step by step.  When reviewing RE1 and RE2 ? it seems to me like the detection logic for these should be switched.
>>>>> 
>>>>> RE1 should be the initial check to see if a request method submitted is not a valid one at all per the RFC.  So, if someone sends JUNK or TEST as the request method, then RE1 would trigger.
>>>>> RE2 should then be the check to see if the request method submitted is not one that is expected for the current resource (expecting a POST but receiving a GET).
>>>>> 
>>>>> The reason why I came to this conclusion is that when implementing these rules in ModSecurity, if we keep the current ordering and using blocking, RE2 would never trigger as an unknown HTTP Request method would first violate RE1.
>>>>> 
>>>>> To summarize ? I think the detection logic of these two are fine but that the detection point labels should be switched.
>>>>> 
>>>>> -Ryan
>>>>> _______________________________________________
>>>>> Owasp-appsensor-project mailing list
>>>>> Owasp-appsensor-project at lists.owasp.org
>>>>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>>> 
>>>> _______________________________________________
>>>> Owasp-appsensor-project mailing list
>>>> Owasp-appsensor-project at lists.owasp.org
>>>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>> 
>>> 
>>> _______________________________________________
>>> Owasp-appsensor-project mailing list
>>> Owasp-appsensor-project at lists.owasp.org
>>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>> 
>> 
>> 
>> _______________________________________________
>> Owasp-appsensor-project mailing list
>> Owasp-appsensor-project at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>> 

