From michael.coates at owasp.org  Wed Mar  2 12:27:52 2011
From: michael.coates at owasp.org (Michael Coates)
Date: Wed, 2 Mar 2011 09:27:52 -0800
Subject: [Owasp-appsensor-project] Counter Terrorism and Specialist
	Security Awards, 19 April 2011, London
In-Reply-To: <AANLkTimLGt0Ajt--c61X78pqxmaZnr0TNni_sqRwm5gJ@mail.gmail.com>
References: <AANLkTimLGt0Ajt--c61X78pqxmaZnr0TNni_sqRwm5gJ@mail.gmail.com>
Message-ID: <1990B434-1D32-49B2-AF5C-37267D885D53@owasp.org>

Great stuff! Thanks for keeping an eye out for these things Colin!

Michael Coates
OWASP



On Feb 24, 2011, at 2:59 AM, Colin Watson wrote:

> Hello
> 
> It's the AppSensor "PR Department" here again... there's an awards
> process coming up:
> 
>   Counter Terrorism and Specialist Security Awards
>   http://www.ctssawards.com/pages/overview.cfm
> 
>   Rules
>   http://www.ctssawards.com/pages/rules.cfm
> 
> I've nominated/voted for "OWASP AppSensor" in the two categories:
> 
>   Perimeter Protection and Intrusion Detection
>   http://www.ctssawards.com/pages/cat4.cfm
> 
>   Cyber Security and Electronic Security
>   http://www.ctssawards.com/pages/cat7.cfm
> 
> and would encourage others to do the same.  You aren't allowed to vote
> for "your own company".  I submitted my votes under my company
> name/address/email.  There doesn't seem to be any hurdle for voting
> (other than providing your name and contact details), and nowhere to
> explain the entry further.  Perhaps the organisers will come back and
> ask?
> 
> Colin
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project


From michael.coates at owasp.org  Wed Mar  2 12:27:52 2011
From: michael.coates at owasp.org (Michael Coates)
Date: Wed, 2 Mar 2011 09:27:52 -0800
Subject: [Owasp-appsensor-project] Counter Terrorism and Specialist
	Security Awards, 19 April 2011, London
In-Reply-To: <AANLkTimLGt0Ajt--c61X78pqxmaZnr0TNni_sqRwm5gJ@mail.gmail.com>
References: <AANLkTimLGt0Ajt--c61X78pqxmaZnr0TNni_sqRwm5gJ@mail.gmail.com>
Message-ID: <1990B434-1D32-49B2-AF5C-37267D885D53@owasp.org>

Great stuff! Thanks for keeping an eye out for these things Colin!

Michael Coates
OWASP



On Feb 24, 2011, at 2:59 AM, Colin Watson wrote:

> Hello
> 
> It's the AppSensor "PR Department" here again... there's an awards
> process coming up:
> 
>   Counter Terrorism and Specialist Security Awards
>   http://www.ctssawards.com/pages/overview.cfm
> 
>   Rules
>   http://www.ctssawards.com/pages/rules.cfm
> 
> I've nominated/voted for "OWASP AppSensor" in the two categories:
> 
>   Perimeter Protection and Intrusion Detection
>   http://www.ctssawards.com/pages/cat4.cfm
> 
>   Cyber Security and Electronic Security
>   http://www.ctssawards.com/pages/cat7.cfm
> 
> and would encourage others to do the same.  You aren't allowed to vote
> for "your own company".  I submitted my votes under my company
> name/address/email.  There doesn't seem to be any hurdle for voting
> (other than providing your name and contact details), and nowhere to
> explain the entry further.  Perhaps the organisers will come back and
> ask?
> 
> Colin
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project


From colin.watson at owasp.org  Wed Mar  2 17:15:16 2011
From: colin.watson at owasp.org (Colin Watson)
Date: Wed, 2 Mar 2011 22:15:16 +0000
Subject: [Owasp-appsensor-project] Counter Terrorism and Specialist
 Security Awards, 19 April 2011, London
In-Reply-To: <1990B434-1D32-49B2-AF5C-37267D885D53@owasp.org>
References: <AANLkTimLGt0Ajt--c61X78pqxmaZnr0TNni_sqRwm5gJ@mail.gmail.com>
	<1990B434-1D32-49B2-AF5C-37267D885D53@owasp.org>
Message-ID: <AANLkTikA2mb-jSuzUpaa44E6JUNTJWZnm_bPD=ZcUadv@mail.gmail.com>

I'm feeling bold, so will send a note to the Leaders list to ask for
wider support.

Colin

On 2 March 2011 17:27, Michael Coates <michael.coates at owasp.org> wrote:
> Great stuff! Thanks for keeping an eye out for these things Colin!
>
> Michael Coates
> OWASP
>
>
>
> On Feb 24, 2011, at 2:59 AM, Colin Watson wrote:
>
>> Hello
>>
>> It's the AppSensor "PR Department" here again... there's an awards
>> process coming up:
>>
>> ? Counter Terrorism and Specialist Security Awards
>> ? http://www.ctssawards.com/pages/overview.cfm
>>
>> ? Rules
>> ? http://www.ctssawards.com/pages/rules.cfm
>>
>> I've nominated/voted for "OWASP AppSensor" in the two categories:
>>
>> ? Perimeter Protection and Intrusion Detection
>> ? http://www.ctssawards.com/pages/cat4.cfm
>>
>> ? Cyber Security and Electronic Security
>> ? http://www.ctssawards.com/pages/cat7.cfm
>>
>> and would encourage others to do the same. ?You aren't allowed to vote
>> for "your own company". ?I submitted my votes under my company
>> name/address/email. ?There doesn't seem to be any hurdle for voting
>> (other than providing your name and contact details), and nowhere to
>> explain the entry further. ?Perhaps the organisers will come back and
>> ask?
>>
>> Colin
>> _______________________________________________
>> Owasp-appsensor-project mailing list
>> Owasp-appsensor-project at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
>

From jtmelton at gmail.com  Wed Mar  2 23:51:50 2011
From: jtmelton at gmail.com (John Melton)
Date: Wed, 2 Mar 2011 23:51:50 -0500
Subject: [Owasp-appsensor-project] World Summit - AppSensor Results
In-Reply-To: <2B483DF8-A7CF-4DBC-84B9-DDD11ECEBBFC@owasp.org>
References: <2B483DF8-A7CF-4DBC-84B9-DDD11ECEBBFC@owasp.org>
Message-ID: <AANLkTi=O=4AvyduQPgHJJFPbt-rmcWxQdpj9CTRCRJL7@mail.gmail.com>

These ideas sound great. Responses inline below.

Also, I asked on this list a while back, and I'll try again as there may be
new folks on, *does anyone have a doc that describes the common event format
(CEF)*? I would like to write something that will log to this format, but I
don't have any tools that read it, or any documentation on how to write it.
This could be a useful log format, as I understand it can be fed into SEIM
tools. Any pointers here would be helpful.  Some of the questions and
comments I've heard seem to point to the fact that supporting various output
formats is a definite positive for this project going forward.

Thanks,
John

On Sun, Feb 27, 2011 at 4:33 PM, Michael Coates <michael.coates at owasp.org>wrote:

> The AppSensor session at the OWASP World Summit was a great success. The
> focus of the discussion was where should AppSensor go next.  We covered all
> of the available items within the AppSensor project (AppSensor.jar w/ESAPI
> plugin, detection points guidance, extensive documentation, live running
> demos defendtheapp.com, etc) and posed the question "What do we need for
> your company to adopt AppSensor within your applications".  There was lots
> of energy in the room and all 50+ seats were filled.  AppSensor is really
> starting to take off and I'm excited at these results.  These ideas
> represent the next areas for the project to tackle in order to obtain wide
> adoption.
>
> Here are the outputs of that discussion as action items for the project.
>  Consider this an invitation for anyone to jump into the AppSensor project
> and lead one of these areas to success (email me and I can give you more
> info and support your efforts)
>
> * Concern over False Positives
> ** Article to discuss why AppSensor false positives won't result in
> negative system performance or adversely impact non-malicious users. Target
> Audience: Product Managers, CSOs
>
> * Where is AppSensor integrated into development
> ** Slides or article to demonstrate process of selecting AppSensor
> detection points during the threat modeling phase. Notes on how to
> communicate these requirements to developers. How to test proper deployment
>
 I have a couple ideas on this, and will get around to doing a better job
documenting that soon I hope, but if anyone else wants to take it or help
out, I'd appreciate it.


> * Is there an AppSensor-like implementation that could be handled by
> operations?
> ** This is not the traditional AppSensor approach (e.g. within the code),
> but we could do further research on aspect oriented implementations or real
> time log analysis for attack monitoring
>
> Interesting - partly related to my CEF question above.


> * Integration with libraries and frameworks
> ** Sub project to submit patches for common frameworks to log obvious
> attack types. The goal is to at least get the logging of attack scenarios in
> place by default. This makes it easier to adopt an AppSensor approach onto
> these libraries or frameworks
> ** Possible first target : Sonar (sonarsource.org) - May need to get more
> info on this idea
>
This is interesting.  I'm curious what the thought is here. If you wanted to
get AppSensor logging in here, you'd include the AppSensor jar and start
going.  However, that doesn't seem to be the idea.  Is it that we're trying
to introduce the concept of logging attacks as opposed to ignoring them?
Also, Sonar (from a brief look) appears to be a code analysis tool. Is the
idea that the logging would show up on some analysis style dashboard?

>
> * Testimonials from companies using AppSensor or AppSensor-like
> capabilities
> ** This wil help raise confidence in the project for potential new adopters
>
> This would be VERY cool - the ESAPI project did something similar that
seemed to work well.

* Software - Code versioning, patching, support ?
> ** This is a common concern for open source software and OWASP code. What
> can we do to help make our code more digestible by a company looking for
> these more stringent development patterns?
>
> This is always an issue w/ open source tools, and won't be fixed by our
project.  Since it's open source, you do have the option to patch it
yourself, but that's not often palatable to many organizations.  There are
times when commercial entities spin off and support projects (like Spring,
MySQL), but generally those are much larger projects.


> * Link in with Fraud systems
> ** The AppSensor project has been contacted by a large bank to help develop
> a strategy for detection of fraud through session hijacking and phishing.
>
This is very cool.  I'd be curious to know more about the request and if
there are any specific requirements.

>
>
>
>
>
> Michael Coates
> OWASP
>
>
>
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20110302/9d76a956/attachment.html 

From michael.coates at owasp.org  Thu Mar  3 00:09:06 2011
From: michael.coates at owasp.org (Michael Coates)
Date: Wed, 2 Mar 2011 21:09:06 -0800
Subject: [Owasp-appsensor-project] World Summit - AppSensor Results
In-Reply-To: <AANLkTi=O=4AvyduQPgHJJFPbt-rmcWxQdpj9CTRCRJL7@mail.gmail.com>
References: <2B483DF8-A7CF-4DBC-84B9-DDD11ECEBBFC@owasp.org>
	<AANLkTi=O=4AvyduQPgHJJFPbt-rmcWxQdpj9CTRCRJL7@mail.gmail.com>
Message-ID: <A6E3C644-96BA-43B5-B045-374D0743A591@owasp.org>

Here is the CEF library that Mozilla wrote. We use it in many of our python apps. Its now available at pypi.org

http://pypi.python.org/pypi/cef/0.1

CEF information can be found here:
www.arcsight.com/collateral/CEFstandards.pdf
http://www.arcsight.com/solutions/solutions-cef/

Unfortunately the full CEF document requires registration with ArcSight. I contacted them in regards to getting an open copy for adoption within AppSensor


Michael Coates
OWASP



On Mar 2, 2011, at 8:51 PM, John Melton wrote:

> These ideas sound great. Responses inline below.
> 
> Also, I asked on this list a while back, and I'll try again as there may be new folks on, does anyone have a doc that describes the common event format (CEF)? I would like to write something that will log to this format, but I don't have any tools that read it, or any documentation on how to write it.  This could be a useful log format, as I understand it can be fed into SEIM tools. Any pointers here would be helpful.  Some of the questions and comments I've heard seem to point to the fact that supporting various output formats is a definite positive for this project going forward.
> 
> Thanks,
> John
> 
> On Sun, Feb 27, 2011 at 4:33 PM, Michael Coates <michael.coates at owasp.org> wrote:
> The AppSensor session at the OWASP World Summit was a great success. The focus of the discussion was where should AppSensor go next.  We covered all of the available items within the AppSensor project (AppSensor.jar w/ESAPI plugin, detection points guidance, extensive documentation, live running demos defendtheapp.com, etc) and posed the question "What do we need for your company to adopt AppSensor within your applications".  There was lots of energy in the room and all 50+ seats were filled.  AppSensor is really starting to take off and I'm excited at these results.  These ideas represent the next areas for the project to tackle in order to obtain wide adoption.
> 
> Here are the outputs of that discussion as action items for the project.  Consider this an invitation for anyone to jump into the AppSensor project and lead one of these areas to success (email me and I can give you more info and support your efforts)
> 
> * Concern over False Positives
> ** Article to discuss why AppSensor false positives won't result in negative system performance or adversely impact non-malicious users. Target Audience: Product Managers, CSOs
> 
> * Where is AppSensor integrated into development
> ** Slides or article to demonstrate process of selecting AppSensor detection points during the threat modeling phase. Notes on how to communicate these requirements to developers. How to test proper deployment
> I have a couple ideas on this, and will get around to doing a better job documenting that soon I hope, but if anyone else wants to take it or help out, I'd appreciate it. 
> 
> 
> * Is there an AppSensor-like implementation that could be handled by operations?
> ** This is not the traditional AppSensor approach (e.g. within the code), but we could do further research on aspect oriented implementations or real time log analysis for attack monitoring
> 
> Interesting - partly related to my CEF question above.
>  
> * Integration with libraries and frameworks
> ** Sub project to submit patches for common frameworks to log obvious attack types. The goal is to at least get the logging of attack scenarios in place by default. This makes it easier to adopt an AppSensor approach onto these libraries or frameworks
> ** Possible first target : Sonar (sonarsource.org) - May need to get more info on this idea
> This is interesting.  I'm curious what the thought is here. If you wanted to get AppSensor logging in here, you'd include the AppSensor jar and start going.  However, that doesn't seem to be the idea.  Is it that we're trying to introduce the concept of logging attacks as opposed to ignoring them?  Also, Sonar (from a brief look) appears to be a code analysis tool. Is the idea that the logging would show up on some analysis style dashboard? 
> 
> * Testimonials from companies using AppSensor or AppSensor-like capabilities
> ** This wil help raise confidence in the project for potential new adopters
> 
> This would be VERY cool - the ESAPI project did something similar that seemed to work well. 
> 
> * Software - Code versioning, patching, support ?
> ** This is a common concern for open source software and OWASP code. What can we do to help make our code more digestible by a company looking for these more stringent development patterns?
> 
> This is always an issue w/ open source tools, and won't be fixed by our project.  Since it's open source, you do have the option to patch it yourself, but that's not often palatable to many organizations.  There are times when commercial entities spin off and support projects (like Spring, MySQL), but generally those are much larger projects.
>  
> * Link in with Fraud systems
> ** The AppSensor project has been contacted by a large bank to help develop a strategy for detection of fraud through session hijacking and phishing.
> This is very cool.  I'd be curious to know more about the request and if there are any specific requirements. 
> 
> 
> 
> 
> 
> Michael Coates
> OWASP
> 
> 
> 
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
> 


From jtmelton at gmail.com  Thu Mar  3 00:13:43 2011
From: jtmelton at gmail.com (John Melton)
Date: Thu, 3 Mar 2011 00:13:43 -0500
Subject: [Owasp-appsensor-project] World Summit - AppSensor Results
In-Reply-To: <A6E3C644-96BA-43B5-B045-374D0743A591@owasp.org>
References: <2B483DF8-A7CF-4DBC-84B9-DDD11ECEBBFC@owasp.org>
	<AANLkTi=O=4AvyduQPgHJJFPbt-rmcWxQdpj9CTRCRJL7@mail.gmail.com>
	<A6E3C644-96BA-43B5-B045-374D0743A591@owasp.org>
Message-ID: <AANLkTikyb9eFXwb0C6sfiWhVSBOj_F9i4_7YcjEokVov@mail.gmail.com>

Michael - thanks much!
John

On Thu, Mar 3, 2011 at 12:09 AM, Michael Coates <michael.coates at owasp.org>wrote:

> Here is the CEF library that Mozilla wrote. We use it in many of our python
> apps. Its now available at pypi.org
>
> http://pypi.python.org/pypi/cef/0.1
>
> CEF information can be found here:
> www.arcsight.com/collateral/CEFstandards.pdf
> http://www.arcsight.com/solutions/solutions-cef/
>
> Unfortunately the full CEF document requires registration with ArcSight. I
> contacted them in regards to getting an open copy for adoption within
> AppSensor
>
>
> Michael Coates
> OWASP
>
>
>
> On Mar 2, 2011, at 8:51 PM, John Melton wrote:
>
> > These ideas sound great. Responses inline below.
> >
> > Also, I asked on this list a while back, and I'll try again as there may
> be new folks on, does anyone have a doc that describes the common event
> format (CEF)? I would like to write something that will log to this format,
> but I don't have any tools that read it, or any documentation on how to
> write it.  This could be a useful log format, as I understand it can be fed
> into SEIM tools. Any pointers here would be helpful.  Some of the questions
> and comments I've heard seem to point to the fact that supporting various
> output formats is a definite positive for this project going forward.
> >
> > Thanks,
> > John
> >
> > On Sun, Feb 27, 2011 at 4:33 PM, Michael Coates <
> michael.coates at owasp.org> wrote:
> > The AppSensor session at the OWASP World Summit was a great success. The
> focus of the discussion was where should AppSensor go next.  We covered all
> of the available items within the AppSensor project (AppSensor.jar w/ESAPI
> plugin, detection points guidance, extensive documentation, live running
> demos defendtheapp.com, etc) and posed the question "What do we need for
> your company to adopt AppSensor within your applications".  There was lots
> of energy in the room and all 50+ seats were filled.  AppSensor is really
> starting to take off and I'm excited at these results.  These ideas
> represent the next areas for the project to tackle in order to obtain wide
> adoption.
> >
> > Here are the outputs of that discussion as action items for the project.
>  Consider this an invitation for anyone to jump into the AppSensor project
> and lead one of these areas to success (email me and I can give you more
> info and support your efforts)
> >
> > * Concern over False Positives
> > ** Article to discuss why AppSensor false positives won't result in
> negative system performance or adversely impact non-malicious users. Target
> Audience: Product Managers, CSOs
> >
> > * Where is AppSensor integrated into development
> > ** Slides or article to demonstrate process of selecting AppSensor
> detection points during the threat modeling phase. Notes on how to
> communicate these requirements to developers. How to test proper deployment
> > I have a couple ideas on this, and will get around to doing a better job
> documenting that soon I hope, but if anyone else wants to take it or help
> out, I'd appreciate it.
> >
> >
> > * Is there an AppSensor-like implementation that could be handled by
> operations?
> > ** This is not the traditional AppSensor approach (e.g. within the code),
> but we could do further research on aspect oriented implementations or real
> time log analysis for attack monitoring
> >
> > Interesting - partly related to my CEF question above.
> >
> > * Integration with libraries and frameworks
> > ** Sub project to submit patches for common frameworks to log obvious
> attack types. The goal is to at least get the logging of attack scenarios in
> place by default. This makes it easier to adopt an AppSensor approach onto
> these libraries or frameworks
> > ** Possible first target : Sonar (sonarsource.org) - May need to get
> more info on this idea
> > This is interesting.  I'm curious what the thought is here. If you wanted
> to get AppSensor logging in here, you'd include the AppSensor jar and start
> going.  However, that doesn't seem to be the idea.  Is it that we're trying
> to introduce the concept of logging attacks as opposed to ignoring them?
>  Also, Sonar (from a brief look) appears to be a code analysis tool. Is the
> idea that the logging would show up on some analysis style dashboard?
> >
> > * Testimonials from companies using AppSensor or AppSensor-like
> capabilities
> > ** This wil help raise confidence in the project for potential new
> adopters
> >
> > This would be VERY cool - the ESAPI project did something similar that
> seemed to work well.
> >
> > * Software - Code versioning, patching, support ?
> > ** This is a common concern for open source software and OWASP code. What
> can we do to help make our code more digestible by a company looking for
> these more stringent development patterns?
> >
> > This is always an issue w/ open source tools, and won't be fixed by our
> project.  Since it's open source, you do have the option to patch it
> yourself, but that's not often palatable to many organizations.  There are
> times when commercial entities spin off and support projects (like Spring,
> MySQL), but generally those are much larger projects.
> >
> > * Link in with Fraud systems
> > ** The AppSensor project has been contacted by a large bank to help
> develop a strategy for detection of fraud through session hijacking and
> phishing.
> > This is very cool.  I'd be curious to know more about the request and if
> there are any specific requirements.
> >
> >
> >
> >
> >
> > Michael Coates
> > OWASP
> >
> >
> >
> > _______________________________________________
> > Owasp-appsensor-project mailing list
> > Owasp-appsensor-project at lists.owasp.org
> > https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
> >
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20110303/e8788e4e/attachment.html 

From colin.watson at owasp.org  Sat Mar  5 05:40:28 2011
From: colin.watson at owasp.org (Colin Watson)
Date: Sat, 5 Mar 2011 10:40:28 +0000
Subject: [Owasp-appsensor-project] World Summit - AppSensor Results
In-Reply-To: <AANLkTi=O=4AvyduQPgHJJFPbt-rmcWxQdpj9CTRCRJL7@mail.gmail.com>
References: <2B483DF8-A7CF-4DBC-84B9-DDD11ECEBBFC@owasp.org>
	<AANLkTi=O=4AvyduQPgHJJFPbt-rmcWxQdpj9CTRCRJL7@mail.gmail.com>
Message-ID: <AANLkTik_4qmwtEZuP0nm3w5P-6k-XmdN+-An=jeK-toY@mail.gmail.com>

John

Regarding logging, I have found it better to set up generic
application logging (into a DB), and then separately look at the
exporting/syndicating a subset of that.

In a logging implementation last year, I created a table for the
security event log (not just attacks and other appsensor events)
called `log_security` and a separate table for larger chunks of data
(e.g. response bodies) if it was useful to record something more
`log_security_details` :

CREATE TABLE IF NOT EXISTS `log_security` (
  `id_log` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `log_timestamp` datetime NOT NULL,
  `severity` tinyint(3) unsigned NOT NULL DEFAULT '7',
  `event_timestamp` datetime NOT NULL,
  `event_type` varchar(25) CHARACTER SET latin1 DEFAULT NULL,
  `action` varchar(25) CHARACTER SET latin1 NOT NULL,
  `object` varchar(25) CHARACTER SET latin1 NOT NULL,
  `result_status` varchar(7) CHARACTER SET latin1 DEFAULT NULL,
  `reason` varchar(255) CHARACTER SET latin1 DEFAULT NULL,
  `http_status_code` smallint(5) unsigned DEFAULT NULL,
  `event_confidence` tinyint(3) unsigned NOT NULL DEFAULT '100',
  `location` varchar(100) DEFAULT NULL,
  `host` varchar(45) CHARACTER SET latin1 NOT NULL,
  `service_name` varchar(25) CHARACTER SET latin1 NOT NULL,
  `service_port` smallint(5) unsigned NOT NULL DEFAULT '80',
  `service_protocol` varchar(10) CHARACTER SET latin1 NOT NULL DEFAULT 'http',
  `http_method` varchar(10) CHARACTER SET latin1 DEFAULT NULL,
  `entry_point` varchar(100) CHARACTER SET latin1 DEFAULT NULL,
  `request_number` int(10) unsigned DEFAULT '0',
  `source` varchar(45) CHARACTER SET latin1 NOT NULL COMMENT 'IP address',
  `user_identity` int(10) unsigned NOT NULL DEFAULT '0' COMMENT
'id_person or 0 for unauthenticated',
  `http_user_agent` varchar(120) CHARACTER SET latin1 DEFAULT NULL,
  `user_fingerprint` varchar(40) CHARACTER SET latin1 DEFAULT NULL,
  `hash` varchar(40) CHARACTER SET latin1 DEFAULT NULL,
  PRIMARY KEY (`id_log`),
  KEY `Index_2` (`severity`),
  KEY `Index_3` (`request_number`),
  KEY `Index_4` (`user_identity`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8;

CREATE TABLE IF NOT EXISTS `log_security_details` (
  `id_log` int(10) unsigned NOT NULL,
  `details` text COLLATE latin1_general_ci NOT NULL,
  PRIMARY KEY (`id_log`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1 COLLATE=latin1_general_ci;

I also needed:

CREATE TABLE IF NOT EXISTS `log_request_counter` (
  `counter` int(10) unsigned NOT NULL DEFAULT '1',
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`counter`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

INSERT INTO `log_request_counter` (`counter`, `modified`) VALUES
(47, '2010-10-27 16:31:44');

I also had another table `log_data`  used to track changes/deletions
of individual database fields, but that isn't relevant here.

In the main log,

- `id_log` is an auto-incrementing ID

- `log_timestamp` is determined when the log entry is written - not
when the event was detected

- `severity` is
      0 (Emergency/Application unavailable for all users)
      1 (Alert/Function unavailable for all users),
      2 (Critical/Function or application unavailable to a single user),
      3 (Error/Other security events not included in codes 0, 1, 2 or 4),
      4 (Warning/A security event but user allowed to continue),
      5 (Notice: normal but significant condition)
      6 (Information/Normal user behaviour)

- `event_timestamp` is the event date/time

-  `event_type` is a broad description e.g. "Input Validation",
"Authentication", "Session Management", "Output Validation"

-  `action` was the original intended purpose of the request e.g. Log
In, Refresh Session ID, Log Out, Request

-  `object` is the affected component or other object (user account,
data resource, file) e.g. URL, Session ID, User Account

- `result_status` is whether the ACTION aimed at the OBJECT was
successful e.g. Success, Fail, Defer

- `reason` is why the status above occurred e.g. User not
authenticated in database check ..., Incorrect credentials

- `http_status_code` is the status code returned to the user (often
200 or 301, need to imagine many log entries here for a single
request)

- `event_confidence` is a percentage 0-100...confidence the event
identified occurred as stated above - often 100% for whitelist input
validation, but maybe less than that for data from a WAF about
possible XSS attack

- `location` is where event was detected - script or component (not the URL)

- `host` e.g. www.example.com

- `service_name` e.g. "Colin's App"

- `service_port` e.g. 443

- `service_protocol` e.g. http

- `http_method` e.g. GET, POST

- `entry_point` a URL e.g. /cw/Bench.php

- `request_number` is a unique integer for every single request
received by the application, and will be shared by a number of ecent
log entries, so they can be correclated with each other i.e. one
rqeuest may have multiple input validation errors

- `source` varchar(45) CHARACTER SET latin1 NOT NULL COMMENT 'IP address',

- `user_identity` might be a user ID, username or perhaps 0 for
unauthenticated',

- `http_user_agent` is HTTP_USER_AGENT

-  `user_fingerprint` is a SHA!1 hash of user agent/request properties
   sha1(substr(trim($_SERVER['REMOTE_ADDR']),0,7).trim($_SERVER['HTTP_USER_AGENT']).trim($_SERVER['HTTP_ACCEPT_ENCODING']).trim($_SERVER['HTTP_ACCEPT_LANGUAGE']));

- `hash` a SHA1 hash of a salt concatenated with the hash of the
immediately previous log entry and the log record above (including
id_log) for integrity checking

the only other thing I had wondered about adding was a field for which
(e.g. type-identifier like RE3-2001) AppSensor detection point fired.
This may be NULL for some entries.  Then perhaps also what responses
ocuured (e.g. a list A,F,G or NULL).  That way it's easier to
monitor/tune AppSensor.  Or possibly those two should be logged in
another DB table..

  id_log
  appsensor_detectionpoint
  appsensor_response (allow NULL)

allowing for more than one record per id_log

Some example log entries are:

INSERT INTO `log_security` (`id_log`, `log_timestamp`, `severity`,
`event_timestamp`, `event_type`, `action`, `object`, `result_status`,
`reason`, `http_status_code`, `event_confidence`, `location`, `host`,
`service_name`, `service_port`, `service_protocol`, `http_method`,
`entry_point`, `request_number`, `source`, `user_identity`,
`http_user_agent`, `user_fingerprint`, `hash`) VALUES ...

(1205, '2010-10-08 08:39:29', 3, '2010-10-08 08:39:29', 'Input
Validation', 'Request', 'URL', 'Fail', 'GET parameter ''dialogID'' is
not permitted', 400, 100, 'includes:parameters-check-allowed.php',
'example.com', 'CW Bench', 80, 'http', 'GET', '/cw/bench.php', 832,
'xxx.xxx.xxx.xxx', 49, 'Mozilla/4.0 (compatible; MSIE 8.0; Windows NT
6.0; Trident/4.0; SLCC1; .NET CLR 2.0.50727; InfoPath.2; .NET CLR
3.0.3072', 'ed69a08f107c700f59c265198228f7968ac57e70',
'26e9a8d4134180283cf04b533cd7de28c1c4545c'),

(1424, '2010-10-08 16:50:30', 3, '2010-10-08 16:50:30', 'Input
Validation', 'Request', 'URL', 'Fail', 'GET parameter
''script>ALERT_1__/script>'' is not permitted', 400, 100,
'includes:parameters-check-allowed.php', 'example.com', 'CW Bench',
80, 'http', 'GET', '/cw/bench.php', 2408, 'xxx.xxx.xxx.xxx', 0,
'Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/534.3
(KHTML, like Gecko) Chrome/6.0.472.63 Safari/534.3',
'98309085b4e63d8a1f3ef898a6f05e1f83affc97',
'ec3dfae274a7330289c7b618a292612a891f7a3e'),

(2014, '2010-10-18 10:12:11', 3, '2010-10-18 10:12:11', 'Session
Management', 'Check Authorised', 'Session ID', 'Fail',
'$_SESSION[''AUTHORIZED''] does not exist', 301, 100,
'includes:check-authorised.php', 'example.com', 'CW Bench', 80,
'http', 'GET', '/cw/Bench.php', 103, 'xxx.xxx.xxx.xxx', 0,
'Mozilla/5.0 (Windows; U; Windows NT 5.1; en-GB; rv:1.9.2.10)
Gecko/20100914 Firefox/3.6.10',
'1e8d88986cc07e586acdd0c39f92728db6df8c06',
'18d2114afb34211390851e6435149f220baedc80'),

(3609, '2010-10-26 18:11:38', 5, '2010-10-26 18:11:38', 'Session
Management', 'Log out', 'User Account', 'Success', '', 301, 100,
'terminate.php', 'example.com', 'CW Bench', 80, 'http', 'POST',
'/cw/terminate.php', 82, 'xxx.xxx.xxx.xxx', 0, 'Mozilla/5.0 (Windows;
U; Windows NT 5.1; en-GB; rv:1.9.2.11) Gecko/20101012 Firefox/3.6.11',
'8c01499deb24a67ac60ae49aef867bcd7c434b28',
'd89617515fadca0366cc74ede58855a9e1733066'),


(3663, '2010-10-27 16:30:17', 5, '2010-10-27 16:30:17',
'Authentication', 'Log In', 'User Account', 'Success', 'Successful log
in', 301, 100, 'gegin.php', 'example.com', 'CW Bench', 80, 'http',
'POST', '/cw/first.php', 34, 'xxx.xxx.xxx.xxx', 46, 'Mozilla/5.0
(Windows; U; Windows NT 5.1; en-GB; rv:1.9.2.11) Gecko/20101012
Firefox/3.6.11 ( .NET CLR 3.5.30729)',
'511ceb082b2e8634cec7e160802eab9d15c185b4',
'ce45be9a7654b9037e1922f9a75318c4182a89cb'),


(3670, '2010-10-27 16:30:34', 3, '2010-10-27 16:30:34', 'Input
Validation', 'Request', 'URL', 'Success', 'Attack - total impact 22
(xss, csrf, sqli, id, lfi, rfe)', 200, 50, 'includes:phpids.php',
'example.com', 'CW Bench', 80, 'http', 'POST',
'/cw/jsonTemplate1.php', 41, '86.162.235.215', 46, 'Mozilla/5.0
(Windows; U; Windows NT 5.1; en-GB; rv:1.9.2.11) Gecko/20101012
Firefox/3.6.11 ( .NET CLR 3.5.30729)',
'511ceb082b2e8634cec7e160802eab9d15c185b4',
'f4052242441f4896e02cf6c1678240c4419eb502'),



An example of a related additional details entry is data from PHPIDS:

INSERT INTO `log_security_details` (`id_log`, `details`) VALUES
(1219, 'Total impact: 56<br/>\nAffected tags: xss, csrf, id, rfe,
lfi<br/>\n<br/>\nVariable: REQUEST.formtitle | Value: XXXXX
<br/>\nImpact: 7 | Tags: xss, csrf, id, rfe, lfi<br/>\nDescription:
Detects unknown attack vectors based on PHPIDS Centrifuge detection |
Tags: xss, csrf, id, rfe, lfi | ID: 67<br/>\n<br/>\nVariable:
REQUEST.formdescription | Value: XXXXX<br/>\nImpact: 7 | Tags: xss,
csrf, id, rfe, lfi<br/>\nDescription: Detects unknown attack vectors
based on PHPIDS Centrifuge detection | Tags: xss, csrf, id, rfe, lfi |
ID: 67<br/>\n<br/>\nVariable: REQUEST.formlevel5 | Value:
XXXXX.<br/>Impact: 7 | Tags: xss, csrf, id, rfe, lfi | ID:
67<br/>\n<br/>Centrifuge detection data<br/>  Threshold: 3.49<br/>
Ratio: 2.2857142857143<br/><br/>\n'),



On 3 March 2011 04:51, John Melton <jtmelton at gmail.com> wrote:
> These ideas sound great. Responses inline below.
>
> Also, I asked on this list a while back, and I'll try again as there may be
> new folks on, does anyone have a doc that describes the common event format
> (CEF)? I would like to write something that will log to this format, but I
> don't have any tools that read it, or any documentation on how to write it.
> This could be a useful log format, as I understand it can be fed into SEIM
> tools. Any pointers here would be helpful.? Some of the questions and
> comments I've heard seem to point to the fact that supporting various output
> formats is a definite positive for this project going forward.
>
> Thanks,
> John

From jtmelton at gmail.com  Sat Mar  5 22:51:34 2011
From: jtmelton at gmail.com (John Melton)
Date: Sat, 5 Mar 2011 22:51:34 -0500
Subject: [Owasp-appsensor-project] World Summit - AppSensor Results
In-Reply-To: <AANLkTik_4qmwtEZuP0nm3w5P-6k-XmdN+-An=jeK-toY@mail.gmail.com>
References: <2B483DF8-A7CF-4DBC-84B9-DDD11ECEBBFC@owasp.org>
	<AANLkTi=O=4AvyduQPgHJJFPbt-rmcWxQdpj9CTRCRJL7@mail.gmail.com>
	<AANLkTik_4qmwtEZuP0nm3w5P-6k-XmdN+-An=jeK-toY@mail.gmail.com>
Message-ID: <AANLkTinvCuGN+8DSyyT7OFvruHUPC-CuPnNeEF7R0Nr4@mail.gmail.com>

Colin,
Wow - a lot to digest, but fantastic ideas and detail :>.  I'm definitely
going to look into this more closely, but wanted to get a response out
quickly.  My short response would be yes and no (I love that response :>).
Basically, I would agree 98 % of apps probably write to a DB, and I also
agree that a mechanism like this would be the most logical in my opinion,
but not everyone does everything the same way.
I'm ruminating on the idea a bit more, but I'm thinking of refactoring the
"logging" to be a bit more simple, at least logically.  I'd like to get it
to the point where we have the intrusion object self-contained with all the
necessary data (several data points you have below are missing in the
current implementation) and that gets passed to some output/response
mechanism.  From there we should have a collection of handlers.  These
handlers logically look the same (follow something like the command pattern)
and get passed an intrusion.  We'll have a standard DB style handler, maybe
a set for different DB's, and a log handler, and a CEF handler, etc.  Since
we're building a "framework", we have to make it easy enough for folks to
plug in their system, or at least see how it should plug in.
I've not coded much on appsensor lately, and am looking back now to try to
analyze (with fresher eyes) some weak spots that can be worked a little
better. I'll try to keep everyone posted as I make any progress.
As always, if anyone on the list wants to jump into the java piece of the
project, ping me and I'll try to get you setup.
Thanks,
John

On Sat, Mar 5, 2011 at 5:40 AM, Colin Watson <colin.watson at owasp.org> wrote:

> John
>
> Regarding logging, I have found it better to set up generic
> application logging (into a DB), and then separately look at the
> exporting/syndicating a subset of that.
>
> In a logging implementation last year, I created a table for the
> security event log (not just attacks and other appsensor events)
> called `log_security` and a separate table for larger chunks of data
> (e.g. response bodies) if it was useful to record something more
> `log_security_details` :
>
> CREATE TABLE IF NOT EXISTS `log_security` (
>  `id_log` int(10) unsigned NOT NULL AUTO_INCREMENT,
>  `log_timestamp` datetime NOT NULL,
>  `severity` tinyint(3) unsigned NOT NULL DEFAULT '7',
>  `event_timestamp` datetime NOT NULL,
>  `event_type` varchar(25) CHARACTER SET latin1 DEFAULT NULL,
>  `action` varchar(25) CHARACTER SET latin1 NOT NULL,
>  `object` varchar(25) CHARACTER SET latin1 NOT NULL,
>  `result_status` varchar(7) CHARACTER SET latin1 DEFAULT NULL,
>  `reason` varchar(255) CHARACTER SET latin1 DEFAULT NULL,
>  `http_status_code` smallint(5) unsigned DEFAULT NULL,
>  `event_confidence` tinyint(3) unsigned NOT NULL DEFAULT '100',
>  `location` varchar(100) DEFAULT NULL,
>  `host` varchar(45) CHARACTER SET latin1 NOT NULL,
>  `service_name` varchar(25) CHARACTER SET latin1 NOT NULL,
>  `service_port` smallint(5) unsigned NOT NULL DEFAULT '80',
>  `service_protocol` varchar(10) CHARACTER SET latin1 NOT NULL DEFAULT
> 'http',
>  `http_method` varchar(10) CHARACTER SET latin1 DEFAULT NULL,
>  `entry_point` varchar(100) CHARACTER SET latin1 DEFAULT NULL,
>  `request_number` int(10) unsigned DEFAULT '0',
>  `source` varchar(45) CHARACTER SET latin1 NOT NULL COMMENT 'IP address',
>  `user_identity` int(10) unsigned NOT NULL DEFAULT '0' COMMENT
> 'id_person or 0 for unauthenticated',
>  `http_user_agent` varchar(120) CHARACTER SET latin1 DEFAULT NULL,
>  `user_fingerprint` varchar(40) CHARACTER SET latin1 DEFAULT NULL,
>  `hash` varchar(40) CHARACTER SET latin1 DEFAULT NULL,
>  PRIMARY KEY (`id_log`),
>  KEY `Index_2` (`severity`),
>  KEY `Index_3` (`request_number`),
>  KEY `Index_4` (`user_identity`)
> ) ENGINE=InnoDB  DEFAULT CHARSET=utf8;
>
> CREATE TABLE IF NOT EXISTS `log_security_details` (
>  `id_log` int(10) unsigned NOT NULL,
>  `details` text COLLATE latin1_general_ci NOT NULL,
>  PRIMARY KEY (`id_log`)
> ) ENGINE=MyISAM DEFAULT CHARSET=latin1 COLLATE=latin1_general_ci;
>
> I also needed:
>
> CREATE TABLE IF NOT EXISTS `log_request_counter` (
>  `counter` int(10) unsigned NOT NULL DEFAULT '1',
>  `modified` datetime DEFAULT NULL,
>  PRIMARY KEY (`counter`)
> ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
>
> INSERT INTO `log_request_counter` (`counter`, `modified`) VALUES
> (47, '2010-10-27 16:31:44');
>
> I also had another table `log_data`  used to track changes/deletions
> of individual database fields, but that isn't relevant here.
>
> In the main log,
>
> - `id_log` is an auto-incrementing ID
>
> - `log_timestamp` is determined when the log entry is written - not
> when the event was detected
>
> - `severity` is
>      0 (Emergency/Application unavailable for all users)
>      1 (Alert/Function unavailable for all users),
>      2 (Critical/Function or application unavailable to a single user),
>      3 (Error/Other security events not included in codes 0, 1, 2 or 4),
>      4 (Warning/A security event but user allowed to continue),
>      5 (Notice: normal but significant condition)
>      6 (Information/Normal user behaviour)
>
> - `event_timestamp` is the event date/time
>
> -  `event_type` is a broad description e.g. "Input Validation",
> "Authentication", "Session Management", "Output Validation"
>
> -  `action` was the original intended purpose of the request e.g. Log
> In, Refresh Session ID, Log Out, Request
>
> -  `object` is the affected component or other object (user account,
> data resource, file) e.g. URL, Session ID, User Account
>
> - `result_status` is whether the ACTION aimed at the OBJECT was
> successful e.g. Success, Fail, Defer
>
> - `reason` is why the status above occurred e.g. User not
> authenticated in database check ..., Incorrect credentials
>
> - `http_status_code` is the status code returned to the user (often
> 200 or 301, need to imagine many log entries here for a single
> request)
>
> - `event_confidence` is a percentage 0-100...confidence the event
> identified occurred as stated above - often 100% for whitelist input
> validation, but maybe less than that for data from a WAF about
> possible XSS attack
>
> - `location` is where event was detected - script or component (not the
> URL)
>
> - `host` e.g. www.example.com
>
> - `service_name` e.g. "Colin's App"
>
> - `service_port` e.g. 443
>
> - `service_protocol` e.g. http
>
> - `http_method` e.g. GET, POST
>
> - `entry_point` a URL e.g. /cw/Bench.php
>
> - `request_number` is a unique integer for every single request
> received by the application, and will be shared by a number of ecent
> log entries, so they can be correclated with each other i.e. one
> rqeuest may have multiple input validation errors
>
> - `source` varchar(45) CHARACTER SET latin1 NOT NULL COMMENT 'IP address',
>
> - `user_identity` might be a user ID, username or perhaps 0 for
> unauthenticated',
>
> - `http_user_agent` is HTTP_USER_AGENT
>
> -  `user_fingerprint` is a SHA!1 hash of user agent/request properties
>
> sha1(substr(trim($_SERVER['REMOTE_ADDR']),0,7).trim($_SERVER['HTTP_USER_AGENT']).trim($_SERVER['HTTP_ACCEPT_ENCODING']).trim($_SERVER['HTTP_ACCEPT_LANGUAGE']));
>
> - `hash` a SHA1 hash of a salt concatenated with the hash of the
> immediately previous log entry and the log record above (including
> id_log) for integrity checking
>
> the only other thing I had wondered about adding was a field for which
> (e.g. type-identifier like RE3-2001) AppSensor detection point fired.
> This may be NULL for some entries.  Then perhaps also what responses
> ocuured (e.g. a list A,F,G or NULL).  That way it's easier to
> monitor/tune AppSensor.  Or possibly those two should be logged in
> another DB table..
>
>  id_log
>  appsensor_detectionpoint
>  appsensor_response (allow NULL)
>
> allowing for more than one record per id_log
>
> Some example log entries are:
>
> INSERT INTO `log_security` (`id_log`, `log_timestamp`, `severity`,
> `event_timestamp`, `event_type`, `action`, `object`, `result_status`,
> `reason`, `http_status_code`, `event_confidence`, `location`, `host`,
> `service_name`, `service_port`, `service_protocol`, `http_method`,
> `entry_point`, `request_number`, `source`, `user_identity`,
> `http_user_agent`, `user_fingerprint`, `hash`) VALUES ...
>
> (1205, '2010-10-08 08:39:29', 3, '2010-10-08 08:39:29', 'Input
> Validation', 'Request', 'URL', 'Fail', 'GET parameter ''dialogID'' is
> not permitted', 400, 100, 'includes:parameters-check-allowed.php',
> 'example.com', 'CW Bench', 80, 'http', 'GET', '/cw/bench.php', 832,
> 'xxx.xxx.xxx.xxx', 49, 'Mozilla/4.0 (compatible; MSIE 8.0; Windows NT
> 6.0; Trident/4.0; SLCC1; .NET CLR 2.0.50727; InfoPath.2; .NET CLR
> 3.0.3072', 'ed69a08f107c700f59c265198228f7968ac57e70',
> '26e9a8d4134180283cf04b533cd7de28c1c4545c'),
>
> (1424, '2010-10-08 16:50:30', 3, '2010-10-08 16:50:30', 'Input
> Validation', 'Request', 'URL', 'Fail', 'GET parameter
> ''script>ALERT_1__/script>'' is not permitted', 400, 100,
> 'includes:parameters-check-allowed.php', 'example.com', 'CW Bench',
> 80, 'http', 'GET', '/cw/bench.php', 2408, 'xxx.xxx.xxx.xxx', 0,
> 'Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/534.3
> (KHTML, like Gecko) Chrome/6.0.472.63 Safari/534.3',
> '98309085b4e63d8a1f3ef898a6f05e1f83affc97',
> 'ec3dfae274a7330289c7b618a292612a891f7a3e'),
>
> (2014, '2010-10-18 10:12:11', 3, '2010-10-18 10:12:11', 'Session
> Management', 'Check Authorised', 'Session ID', 'Fail',
> '$_SESSION[''AUTHORIZED''] does not exist', 301, 100,
> 'includes:check-authorised.php', 'example.com', 'CW Bench', 80,
> 'http', 'GET', '/cw/Bench.php', 103, 'xxx.xxx.xxx.xxx', 0,
> 'Mozilla/5.0 (Windows; U; Windows NT 5.1; en-GB; rv:1.9.2.10)
> Gecko/20100914 Firefox/3.6.10',
> '1e8d88986cc07e586acdd0c39f92728db6df8c06',
> '18d2114afb34211390851e6435149f220baedc80'),
>
> (3609, '2010-10-26 18:11:38', 5, '2010-10-26 18:11:38', 'Session
> Management', 'Log out', 'User Account', 'Success', '', 301, 100,
> 'terminate.php', 'example.com', 'CW Bench', 80, 'http', 'POST',
> '/cw/terminate.php', 82, 'xxx.xxx.xxx.xxx', 0, 'Mozilla/5.0 (Windows;
> U; Windows NT 5.1; en-GB; rv:1.9.2.11) Gecko/20101012 Firefox/3.6.11',
> '8c01499deb24a67ac60ae49aef867bcd7c434b28',
> 'd89617515fadca0366cc74ede58855a9e1733066'),
>
>
> (3663, '2010-10-27 16:30:17', 5, '2010-10-27 16:30:17',
> 'Authentication', 'Log In', 'User Account', 'Success', 'Successful log
> in', 301, 100, 'gegin.php', 'example.com', 'CW Bench', 80, 'http',
> 'POST', '/cw/first.php', 34, 'xxx.xxx.xxx.xxx', 46, 'Mozilla/5.0
> (Windows; U; Windows NT 5.1; en-GB; rv:1.9.2.11) Gecko/20101012
> Firefox/3.6.11 ( .NET CLR 3.5.30729)',
> '511ceb082b2e8634cec7e160802eab9d15c185b4',
> 'ce45be9a7654b9037e1922f9a75318c4182a89cb'),
>
>
> (3670, '2010-10-27 16:30:34', 3, '2010-10-27 16:30:34', 'Input
> Validation', 'Request', 'URL', 'Success', 'Attack - total impact 22
> (xss, csrf, sqli, id, lfi, rfe)', 200, 50, 'includes:phpids.php',
> 'example.com', 'CW Bench', 80, 'http', 'POST',
> '/cw/jsonTemplate1.php', 41, '86.162.235.215', 46, 'Mozilla/5.0
> (Windows; U; Windows NT 5.1; en-GB; rv:1.9.2.11) Gecko/20101012
> Firefox/3.6.11 ( .NET CLR 3.5.30729)',
> '511ceb082b2e8634cec7e160802eab9d15c185b4',
> 'f4052242441f4896e02cf6c1678240c4419eb502'),
>
>
>
> An example of a related additional details entry is data from PHPIDS:
>
> INSERT INTO `log_security_details` (`id_log`, `details`) VALUES
> (1219, 'Total impact: 56<br/>\nAffected tags: xss, csrf, id, rfe,
> lfi<br/>\n<br/>\nVariable: REQUEST.formtitle | Value: XXXXX
> <br/>\nImpact: 7 | Tags: xss, csrf, id, rfe, lfi<br/>\nDescription:
> Detects unknown attack vectors based on PHPIDS Centrifuge detection |
> Tags: xss, csrf, id, rfe, lfi | ID: 67<br/>\n<br/>\nVariable:
> REQUEST.formdescription | Value: XXXXX<br/>\nImpact: 7 | Tags: xss,
> csrf, id, rfe, lfi<br/>\nDescription: Detects unknown attack vectors
> based on PHPIDS Centrifuge detection | Tags: xss, csrf, id, rfe, lfi |
> ID: 67<br/>\n<br/>\nVariable: REQUEST.formlevel5 | Value:
> XXXXX.<br/>Impact: 7 | Tags: xss, csrf, id, rfe, lfi | ID:
> 67<br/>\n<br/>Centrifuge detection data<br/>  Threshold: 3.49<br/>
> Ratio: 2.2857142857143<br/><br/>\n'),
>
>
>
> On 3 March 2011 04:51, John Melton <jtmelton at gmail.com> wrote:
> > These ideas sound great. Responses inline below.
> >
> > Also, I asked on this list a while back, and I'll try again as there may
> be
> > new folks on, does anyone have a doc that describes the common event
> format
> > (CEF)? I would like to write something that will log to this format, but
> I
> > don't have any tools that read it, or any documentation on how to write
> it.
> > This could be a useful log format, as I understand it can be fed into
> SEIM
> > tools. Any pointers here would be helpful.  Some of the questions and
> > comments I've heard seem to point to the fact that supporting various
> output
> > formats is a definite positive for this project going forward.
> >
> > Thanks,
> > John
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20110305/5bf5fe13/attachment-0001.html 

From colin.watson at owasp.org  Sun Mar  6 12:14:15 2011
From: colin.watson at owasp.org (Colin Watson)
Date: Sun, 6 Mar 2011 17:14:15 +0000
Subject: [Owasp-appsensor-project] World Summit - AppSensor Results
In-Reply-To: <AANLkTinvCuGN+8DSyyT7OFvruHUPC-CuPnNeEF7R0Nr4@mail.gmail.com>
References: <2B483DF8-A7CF-4DBC-84B9-DDD11ECEBBFC@owasp.org>
	<AANLkTi=O=4AvyduQPgHJJFPbt-rmcWxQdpj9CTRCRJL7@mail.gmail.com>
	<AANLkTik_4qmwtEZuP0nm3w5P-6k-XmdN+-An=jeK-toY@mail.gmail.com>
	<AANLkTinvCuGN+8DSyyT7OFvruHUPC-CuPnNeEF7R0Nr4@mail.gmail.com>
Message-ID: <AANLkTike=9_a=3QpQM-+3g-XuF1Wa=Z1ixVb-hUBuKDX@mail.gmail.com>

John

Yes, sorry I perhaps wasn't quite answering your original question,
but I thought I should share where I had got to with logging ideas
last year.  The ESAPI security event logging was the original
inspiration, but I found I wanted more structured details.

The other sources of information I looked at regarding application logging were:

   How to Do Application Logging Right,  Anton Chuvakin and Gunnar Peterson
   http://arctecgroup.net/pdf/howtoapplogging.pdf

   OWASP Logging Project
   http://www.owasp.org/index.php/Category:OWASP_Logging_Project

   NIST SP 800-92
   http://csrc.nist.gov/publications/nistpubs/800-92/SP800-92.pdf

You'll see ideas drawn from all of those.

Your description of different handlers sounds good.  I know not
everyone will want or require the same level of logging, but it would
be nice to have a wide range of options built in, even if we allow
NULL for most fields.

The logs will be important for the user and system trend detection
points, hence the ideas of recording a unique request number, the
particular URL, the particular module/function, the target, the user's
identity and the results.

Happy rumination!

Colin

On 6 March 2011 03:51, John Melton <jtmelton at gmail.com> wrote:
> Colin,
> Wow - a lot to digest, but fantastic ideas and detail :>.? I'm definitely
> going to look into this more closely, but wanted to get a response out
> quickly.? My short response would be yes and no (I love that response :>).
> Basically, I would agree 98 % of apps probably write to a DB, and I also
> agree that a mechanism like this would be the most logical in my opinion,
> but not everyone does everything the same way.
> I'm ruminating on the idea a bit more, but I'm thinking of refactoring the
> "logging" to be a bit more simple, at least logically.? I'd like to get it
> to the point where we have the intrusion object self-contained with all the
> necessary data (several data points you have below are missing in the
> current implementation) and that gets passed to some output/response
> mechanism.? From there we should have a collection of handlers.? These
> handlers logically look the same (follow something like the command pattern)
> and get passed an intrusion.? We'll have a standard DB style handler, maybe
> a set for different DB's, and a log handler, and a CEF handler, etc.? Since
> we're building a "framework", we have to make it easy enough for folks to
> plug in their system, or at least see how it should plug in.
> I've not coded much on appsensor lately, and am looking back now to try to
> analyze (with fresher eyes) some weak spots that can be worked a little
> better. I'll try to keep everyone posted as I make any progress.
> As always, if anyone on the list wants to jump into the java piece of the
> project, ping me and I'll try to get you setup.
> Thanks,
> John

From christian.heinrich at owasp.org  Sun Mar  6 22:30:10 2011
From: christian.heinrich at owasp.org (Christian Heinrich)
Date: Mon, 7 Mar 2011 14:30:10 +1100
Subject: [Owasp-appsensor-project] CERT/CC - "Network Monitoring for
	Web-Based Threats" released
Message-ID: <AANLkTimZT1zvefYaS5D-87BXsji4mQ==QHZeznXuH8Fu@mail.gmail.com>

Michael,

I am not sure if
https://www.cert.org/blogs/certcc/2011/02/network_monitoring_for_web-bas.html
has been discussed - I couldn't find it in the mailing list archives.

To quote the above blog post "The report draws on related work such as
OWASP but comes from a different point of view. While OWASP is focused
on developing web applications securely, this report focuses more on
situations where you don't have that control, but you need to protect
servers and clients from web-based threats."


-- 
Regards,
Christian Heinrich
http://www.owasp.org/index.php/user:cmlh

From michael.coates at owasp.org  Mon Mar  7 23:44:10 2011
From: michael.coates at owasp.org (Michael Coates)
Date: Mon, 7 Mar 2011 20:44:10 -0800
Subject: [Owasp-appsensor-project] CERT/CC - "Network Monitoring for
	Web-Based Threats" released
In-Reply-To: <AANLkTimZT1zvefYaS5D-87BXsji4mQ==QHZeznXuH8Fu@mail.gmail.com>
References: <AANLkTimZT1zvefYaS5D-87BXsji4mQ==QHZeznXuH8Fu@mail.gmail.com>
Message-ID: <4C097AA1-DE75-4FF7-B227-3C8212B022E3@owasp.org>

An interesting document.  It steps through the an attacker's methodology for attacking an application, closely following the OWASP Web Application Penetration Testing Guide, and provides details to understand the attack.  This is followed by a section of  "Detection/Prevention Methods". At first I thought this would be similar to the AppSensor project, but upon further reading it seems to be more of a lockdown guide. For example, make sure to not leak information through error codes.  

Its a probably a good read (I just skimmed it). We may be able to glean a few more detection points that we might have missed.


Michael Coates
OWASP
http://michael-coates.blogspot.com



On Mar 6, 2011, at 7:30 PM, Christian Heinrich wrote:

> Michael,
> 
> I am not sure if
> https://www.cert.org/blogs/certcc/2011/02/network_monitoring_for_web-bas.html
> has been discussed - I couldn't find it in the mailing list archives.
> 
> To quote the above blog post "The report draws on related work such as
> OWASP but comes from a different point of view. While OWASP is focused
> on developing web applications securely, this report focuses more on
> situations where you don't have that control, but you need to protect
> servers and clients from web-based threats."
> 
> 
> -- 
> Regards,
> Christian Heinrich
> http://www.owasp.org/index.php/user:cmlh
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project


From colin.watson at owasp.org  Tue Mar  8 07:51:50 2011
From: colin.watson at owasp.org (Colin Watson)
Date: Tue, 8 Mar 2011 12:51:50 +0000
Subject: [Owasp-appsensor-project] World Summit - AppSensor Results
In-Reply-To: <AANLkTike=9_a=3QpQM-+3g-XuF1Wa=Z1ixVb-hUBuKDX@mail.gmail.com>
References: <2B483DF8-A7CF-4DBC-84B9-DDD11ECEBBFC@owasp.org>
	<AANLkTi=O=4AvyduQPgHJJFPbt-rmcWxQdpj9CTRCRJL7@mail.gmail.com>
	<AANLkTik_4qmwtEZuP0nm3w5P-6k-XmdN+-An=jeK-toY@mail.gmail.com>
	<AANLkTinvCuGN+8DSyyT7OFvruHUPC-CuPnNeEF7R0Nr4@mail.gmail.com>
	<AANLkTike=9_a=3QpQM-+3g-XuF1Wa=Z1ixVb-hUBuKDX@mail.gmail.com>
Message-ID: <AANLkTi=4xhuuqpZ7mFqDvvmtiUn5pkDSVyE4DSte4-Hp@mail.gmail.com>

John

Some stuff about cloud logging here:

https://www.infosecisland.com/blogview/12361-On-Cloud-Logging-Standards-and-Unique-IDs.html

...in the unlikely event you have run out of things to read!

Colin

From colin.watson at owasp.org  Mon Mar 14 14:30:48 2011
From: colin.watson at owasp.org (Colin Watson)
Date: Mon, 14 Mar 2011 18:30:48 +0000
Subject: [Owasp-appsensor-project] NIST SP 800-137 Initial Public Draft "IS
	Continuous Monitoring..."
Message-ID: <AANLkTi=vKGY-smdiurD4VMFectxzEQwoGSpdqUZNGcrN@mail.gmail.com>

Hi

NIST SP 800-137 concerning "Information Security Continuous Monitoring
for Federal Information Systems and Organizations"

   http://csrc.nist.gov/publications/PubsDrafts.html#800-137

is inviting comments (until 15th March!).  I read this over the
weekend, and feel it seems to neglect actual real time (referring to
"near real-time" monitoring) and doesn't say very much about
application monitoring at all.  Ordinarily I would do this type of
reply via the Global Industry Committee, but I think the subject is
much more aligned with AppSensor than most other OWASP activities.
Therefore I would like to submit some comments "on behalf of the OWASP
AppSensor project team", and will send the following tomorrow unless I
hear otherwise.  I'm not expecting anyone to read the NIST document,
or parts of it, but would like a sanity check on what I have written.

Colin

================

Introduction
-----------------

The following four comments are submitted on behalf of the OWASP
AppSensor project team, following our own consultation process.

Response
--------------

a)  Page 10 refers to "real-time or near realtime security-related
information", but elsewhere (e.g. pages 1, 2, 6, 7, 13, 14, 29, etc)
the phrase "near real-time" is used instead.  The guidance should
explicity include actual realtime monitoring at each reference to
"near real-time", so that it is not excluded from the guidance.

b)  In "3.2 Role of Automation in Continuous Monitoring", human
analysis will not necessarily be required for the interpretation of
findings in application-layer intrusion detection and response,
because the actions are undertaken in real-time within the timeframe
of the user request and software response.  Human analysis will have
been required to assess, define and implement the policies in advance
instead.  Thus in some situations the steps shown in Figure 3-1 on
page 20 (Continuous Monitoring Process) may be one less, when
"Analyse/Report" and "Respond" are collapsed into a single item.  This
concept also relies on some overlap between the illustrative tiers in
Figure 2-1 on page 8 (Organization-wide Continuous Monitoring) i.e.
the software application combines information from Tier 3 (information
systems) and Tier 2 (mission/business) giving a very low false
positive attack detection rate.

c) The list and descriptions of the eleven security automation domains
In Appendix D (pages D-2 and D-3) does not seem to adequately cover,
or allow for, application-layer intrusion detection and response.
Neither "Event & Incident Management" (section D.1.2) nor "Network
Management" (section D.1.6) describe what is possible when building
intrusion detection & response into the software code itself.  In this
there is full knowledge of the business logic, user session, user
role, user permissions, input data formats, etc, and proactive
defensive measures can be undertaken in real-time.  It is vastly
different to the IDPS described (in D.1.2).  We therefore propose a
twelfth domain of "Application Management".

**** OWASP can provide suggested draft text for this proposed domain
if required, linking the reduction in operational risk to the security
controls in NIST SP 800-53 ****

d) In D.3 Automation and Data Sources", the bulleted list of "examples
of security automation activities" (page D-11), we would suggest
adding a fifth item "Building in application-layer intrusion detection
and response" since it is a relatively new concept, may not be
considered due to lack of awareness and thus the potential benefits
left unexploited.

About the OWASP AppSensor project
---------------------------------------------------------

This response is submitted on behalf of the OWASP AppSensor project
team.  The AppSensor project defines a conceptual framework,
methodology and example code that offers prescriptive guidance to
implement intrusion detection and automated response into software
applications. The concept has been piloted and is in use defending
real-world applications.

Further information:
? AppSensor project
  http://www.owasp.org/index.php/OWASP_AppSensor_Project
? Detection points
  http://www.owasp.org/index.php/AppSensor_DetectionPoints
? Response actions
  http://www.owasp.org/index.php/AppSensor_ResponseActions

About OWASP
---------------------

The Open Web Application Security Project (OWASP) is a worldwide free
and open community focused on improving the security of application
software. Our mission is to make application security "visible," so
that people and organizations can make informed decisions about
application security risks. Everyone is free to participate in OWASP
and all of our materials are available under a free and open software
license. The OWASP Foundation is a U.S. recognized 501(c)(3)
not-for-profit
charitable organization, that ensures the ongoing availability and
support for our work
at OWASP.

Further information:
? OWASP Foundation
  http://www.owasp.org/index.php/OWASP_Foundation
? About The Open Web Application Security Project
  http://www.owasp.org/index.php/About_OWASP


================

From colin.watson at owasp.org  Mon Mar 14 16:57:04 2011
From: colin.watson at owasp.org (Colin Watson)
Date: Mon, 14 Mar 2011 20:57:04 +0000
Subject: [Owasp-appsensor-project] NIST SP 800-137 Initial Public Draft
	"IS Continuous Monitoring..."
In-Reply-To: <AANLkTi=vKGY-smdiurD4VMFectxzEQwoGSpdqUZNGcrN@mail.gmail.com>
References: <AANLkTi=vKGY-smdiurD4VMFectxzEQwoGSpdqUZNGcrN@mail.gmail.com>
Message-ID: <AANLkTi=RWe504PnFOCoJkYpNMSJBKa3Pv+EBm-5_Lmef@mail.gmail.com>

I've had two direct replies saying "yes" so far... but one other thought:

I refer to this as "application-layer intrusion detection and
response".  I wonder if we should try to differentiate it more from
IDPS (intrusion detection and prevention systems).  Perhaps just
"application attack detection and response", and weave the phrases
"attack aware" and "proactive defense" into the text somewhere?

Colin



On 14 March 2011 18:30, Colin Watson <colin.watson at owasp.org> wrote:
> Hi
>
> NIST SP 800-137 concerning "Information Security Continuous Monitoring
> for Federal Information Systems and Organizations"
>
> ? http://csrc.nist.gov/publications/PubsDrafts.html#800-137
>
> is inviting comments (until 15th March!). ?I read this over the
> weekend, and feel it seems to neglect actual real time (referring to
> "near real-time" monitoring) and doesn't say very much about
> application monitoring at all. ?Ordinarily I would do this type of
> reply via the Global Industry Committee, but I think the subject is
> much more aligned with AppSensor than most other OWASP activities.
> Therefore I would like to submit some comments "on behalf of the OWASP
> AppSensor project team", and will send the following tomorrow unless I
> hear otherwise. ?I'm not expecting anyone to read the NIST document,
> or parts of it, but would like a sanity check on what I have written.
>
> Colin
>
> ================
>
> Introduction
> -----------------
>
> The following four comments are submitted on behalf of the OWASP
> AppSensor project team, following our own consultation process.
>
> Response
> --------------
>
> a) ?Page 10 refers to "real-time or near realtime security-related
> information", but elsewhere (e.g. pages 1, 2, 6, 7, 13, 14, 29, etc)
> the phrase "near real-time" is used instead. ?The guidance should
> explicity include actual realtime monitoring at each reference to
> "near real-time", so that it is not excluded from the guidance.
>
> b) ?In "3.2 Role of Automation in Continuous Monitoring", human
> analysis will not necessarily be required for the interpretation of
> findings in application-layer intrusion detection and response,
> because the actions are undertaken in real-time within the timeframe
> of the user request and software response. ?Human analysis will have
> been required to assess, define and implement the policies in advance
> instead. ?Thus in some situations the steps shown in Figure 3-1 on
> page 20 (Continuous Monitoring Process) may be one less, when
> "Analyse/Report" and "Respond" are collapsed into a single item. ?This
> concept also relies on some overlap between the illustrative tiers in
> Figure 2-1 on page 8 (Organization-wide Continuous Monitoring) i.e.
> the software application combines information from Tier 3 (information
> systems) and Tier 2 (mission/business) giving a very low false
> positive attack detection rate.
>
> c) The list and descriptions of the eleven security automation domains
> In Appendix D (pages D-2 and D-3) does not seem to adequately cover,
> or allow for, application-layer intrusion detection and response.
> Neither "Event & Incident Management" (section D.1.2) nor "Network
> Management" (section D.1.6) describe what is possible when building
> intrusion detection & response into the software code itself. ?In this
> there is full knowledge of the business logic, user session, user
> role, user permissions, input data formats, etc, and proactive
> defensive measures can be undertaken in real-time. ?It is vastly
> different to the IDPS described (in D.1.2). ?We therefore propose a
> twelfth domain of "Application Management".
>
> **** OWASP can provide suggested draft text for this proposed domain
> if required, linking the reduction in operational risk to the security
> controls in NIST SP 800-53 ****
>
> d) In D.3 Automation and Data Sources", the bulleted list of "examples
> of security automation activities" (page D-11), we would suggest
> adding a fifth item "Building in application-layer intrusion detection
> and response" since it is a relatively new concept, may not be
> considered due to lack of awareness and thus the potential benefits
> left unexploited.
>
> About the OWASP AppSensor project
> ---------------------------------------------------------
>
> This response is submitted on behalf of the OWASP AppSensor project
> team. ?The AppSensor project defines a conceptual framework,
> methodology and example code that offers prescriptive guidance to
> implement intrusion detection and automated response into software
> applications. The concept has been piloted and is in use defending
> real-world applications.
>
> Further information:
> ? AppSensor project
> ?http://www.owasp.org/index.php/OWASP_AppSensor_Project
> ? Detection points
> ?http://www.owasp.org/index.php/AppSensor_DetectionPoints
> ? Response actions
> ?http://www.owasp.org/index.php/AppSensor_ResponseActions
>
> About OWASP
> ---------------------
>
> The Open Web Application Security Project (OWASP) is a worldwide free
> and open community focused on improving the security of application
> software. Our mission is to make application security "visible," so
> that people and organizations can make informed decisions about
> application security risks. Everyone is free to participate in OWASP
> and all of our materials are available under a free and open software
> license. The OWASP Foundation is a U.S. recognized 501(c)(3)
> not-for-profit
> charitable organization, that ensures the ongoing availability and
> support for our work
> at OWASP.
>
> Further information:
> ? OWASP Foundation
> ?http://www.owasp.org/index.php/OWASP_Foundation
> ? About The Open Web Application Security Project
> ?http://www.owasp.org/index.php/About_OWASP
>
>
> ================
>

From kevin.w.wall at gmail.com  Mon Mar 14 14:44:35 2011
From: kevin.w.wall at gmail.com (Kevin W. Wall)
Date: Mon, 14 Mar 2011 14:44:35 -0400
Subject: [Owasp-appsensor-project] NIST SP 800-137 Initial Public Draft
 "IS Continuous Monitoring..."
In-Reply-To: <AANLkTi=RWe504PnFOCoJkYpNMSJBKa3Pv+EBm-5_Lmef@mail.gmail.com>
References: <AANLkTi=vKGY-smdiurD4VMFectxzEQwoGSpdqUZNGcrN@mail.gmail.com>
	<AANLkTi=RWe504PnFOCoJkYpNMSJBKa3Pv+EBm-5_Lmef@mail.gmail.com>
Message-ID: <4D7E6213.7030106@gmail.com>

On 03/14/2011 04:57 PM, Colin Watson wrote:
> I've had two direct replies saying "yes" so far... but one other thought:
> 
> I refer to this as "application-layer intrusion detection and
> response".  I wonder if we should try to differentiate it more from
> IDPS (intrusion detection and prevention systems).  Perhaps just
> "application attack detection and response", and weave the phrases
> "attack aware" and "proactive defense" into the text somewhere?

Colin,

FWIW, I refer to something like this as "application *specific*" rather
than "application *layer*". To me, the latter implies a generic
"layer 7" (on the ISO OSI stack) IDPS. AppSensor is *specific* to
an application. For instance, I can have multiple war/ear files (i.e.,
multiple apps) deployed on a single JavaEE app server and AppSensor
might only be on some.

Not sure if that his helpful or not, but thought I'd at least toss it
out there and see what the rest of you thought.

-kevin
-- 
Kevin W. Wall
"The most likely way for the world to be destroyed, most experts agree,
is by accident. That's where we come in; we're computer professionals.
We cause accidents."        -- Nathaniel Borenstein, co-creator of MIME

From dennis.groves at gmail.com  Mon Mar 14 19:28:45 2011
From: dennis.groves at gmail.com (Dennis Groves)
Date: Mon, 14 Mar 2011 23:28:45 +0000
Subject: [Owasp-appsensor-project] NIST SP 800-137 Initial Public Draft
 "IS Continuous Monitoring..."
In-Reply-To: <AANLkTikx1kXwnpLRh=STHXpTmXVogLq8-7Y27bXGaLaB@mail.gmail.com>
References: <AANLkTi=vKGY-smdiurD4VMFectxzEQwoGSpdqUZNGcrN@mail.gmail.com>
	<AANLkTi=RWe504PnFOCoJkYpNMSJBKa3Pv+EBm-5_Lmef@mail.gmail.com>
	<AANLkTikx1kXwnpLRh=STHXpTmXVogLq8-7Y27bXGaLaB@mail.gmail.com>
Message-ID: <AANLkTikTyDfq_97-+1t_iX3LturoyvuXDXB02YthTpg8@mail.gmail.com>

On Mon, Mar 14, 2011 at 10:40 PM, Dennis Groves <dennis.groves at gmail.com>wrote:

Interesting, because I think of AppSensor as a framework for an Application
> to defend itself against the unknown attacks - when the 'sensors' are feed
> to a statistical anomaly detection system; since this then allows one to
> detect and respond to attacks that are otherwise unanticipated.
>
> I don't think of it as application-layer intrusion detection as this is ISO
> 7942-2 language and is very 'OSI model' type of language.
>
> I personally think the correct idea is along the lines of 'defensive
> application development' which combined with say 'rugged software
> development' and we start to have a 'development defense in depth patterns'
> that rival anything that anybody has yet published - it is about getting the
> word out.
>
> I think it is a good idea to stay away from the marketing terms because
> that will only cloud this beautiful idea in the already negative
> connotations and response the security community and market has already had
> to those terms.
>
> --
> Dennis Groves, MSc
>
>
> On Mon, Mar 14, 2011 at 8:57 PM, Colin Watson <colin.watson at owasp.org>wrote:
>
>> I've had two direct replies saying "yes" so far... but one other thought:
>>
>> I refer to this as "application-layer intrusion detection and
>> response".  I wonder if we should try to differentiate it more from
>> IDPS (intrusion detection and prevention systems).  Perhaps just
>> "application attack detection and response", and weave the phrases
>> "attack aware" and "proactive defense" into the text somewhere?
>>
>> Colin
>>
>>
>>
>> On 14 March 2011 18:30, Colin Watson <colin.watson at owasp.org> wrote:
>> > Hi
>> >
>> > NIST SP 800-137 concerning "Information Security Continuous Monitoring
>> > for Federal Information Systems and Organizations"
>> >
>> >   http://csrc.nist.gov/publications/PubsDrafts.html#800-137
>> >
>> > is inviting comments (until 15th March!).  I read this over the
>> > weekend, and feel it seems to neglect actual real time (referring to
>> > "near real-time" monitoring) and doesn't say very much about
>> > application monitoring at all.  Ordinarily I would do this type of
>> > reply via the Global Industry Committee, but I think the subject is
>> > much more aligned with AppSensor than most other OWASP activities.
>> > Therefore I would like to submit some comments "on behalf of the OWASP
>> > AppSensor project team", and will send the following tomorrow unless I
>> > hear otherwise.  I'm not expecting anyone to read the NIST document,
>> > or parts of it, but would like a sanity check on what I have written.
>> >
>> > Colin
>> >
>> > ================
>> >
>> > Introduction
>> > -----------------
>> >
>> > The following four comments are submitted on behalf of the OWASP
>> > AppSensor project team, following our own consultation process.
>> >
>> > Response
>> > --------------
>> >
>> > a)  Page 10 refers to "real-time or near realtime security-related
>> > information", but elsewhere (e.g. pages 1, 2, 6, 7, 13, 14, 29, etc)
>> > the phrase "near real-time" is used instead.  The guidance should
>> > explicity include actual realtime monitoring at each reference to
>> > "near real-time", so that it is not excluded from the guidance.
>> >
>> > b)  In "3.2 Role of Automation in Continuous Monitoring", human
>> > analysis will not necessarily be required for the interpretation of
>> > findings in application-layer intrusion detection and response,
>> > because the actions are undertaken in real-time within the timeframe
>> > of the user request and software response.  Human analysis will have
>> > been required to assess, define and implement the policies in advance
>> > instead.  Thus in some situations the steps shown in Figure 3-1 on
>> > page 20 (Continuous Monitoring Process) may be one less, when
>> > "Analyse/Report" and "Respond" are collapsed into a single item.  This
>> > concept also relies on some overlap between the illustrative tiers in
>> > Figure 2-1 on page 8 (Organization-wide Continuous Monitoring) i.e.
>> > the software application combines information from Tier 3 (information
>> > systems) and Tier 2 (mission/business) giving a very low false
>> > positive attack detection rate.
>> >
>> > c) The list and descriptions of the eleven security automation domains
>> > In Appendix D (pages D-2 and D-3) does not seem to adequately cover,
>> > or allow for, application-layer intrusion detection and response.
>> > Neither "Event & Incident Management" (section D.1.2) nor "Network
>> > Management" (section D.1.6) describe what is possible when building
>> > intrusion detection & response into the software code itself.  In this
>> > there is full knowledge of the business logic, user session, user
>> > role, user permissions, input data formats, etc, and proactive
>> > defensive measures can be undertaken in real-time.  It is vastly
>> > different to the IDPS described (in D.1.2).  We therefore propose a
>> > twelfth domain of "Application Management".
>> >
>> > **** OWASP can provide suggested draft text for this proposed domain
>> > if required, linking the reduction in operational risk to the security
>> > controls in NIST SP 800-53 ****
>> >
>> > d) In D.3 Automation and Data Sources", the bulleted list of "examples
>> > of security automation activities" (page D-11), we would suggest
>> > adding a fifth item "Building in application-layer intrusion detection
>> > and response" since it is a relatively new concept, may not be
>> > considered due to lack of awareness and thus the potential benefits
>> > left unexploited.
>> >
>> > About the OWASP AppSensor project
>> > ---------------------------------------------------------
>> >
>> > This response is submitted on behalf of the OWASP AppSensor project
>> > team.  The AppSensor project defines a conceptual framework,
>> > methodology and example code that offers prescriptive guidance to
>> > implement intrusion detection and automated response into software
>> > applications. The concept has been piloted and is in use defending
>> > real-world applications.
>> >
>> > Further information:
>> > ? AppSensor project
>> >  http://www.owasp.org/index.php/OWASP_AppSensor_Project
>> > ? Detection points
>> >  http://www.owasp.org/index.php/AppSensor_DetectionPoints
>> > ? Response actions
>> >  http://www.owasp.org/index.php/AppSensor_ResponseActions
>> >
>> > About OWASP
>> > ---------------------
>> >
>> > The Open Web Application Security Project (OWASP) is a worldwide free
>> > and open community focused on improving the security of application
>> > software. Our mission is to make application security "visible," so
>> > that people and organizations can make informed decisions about
>> > application security risks. Everyone is free to participate in OWASP
>> > and all of our materials are available under a free and open software
>> > license. The OWASP Foundation is a U.S. recognized 501(c)(3)
>> > not-for-profit
>> > charitable organization, that ensures the ongoing availability and
>> > support for our work
>> > at OWASP.
>> >
>> > Further information:
>> > ? OWASP Foundation
>> >  http://www.owasp.org/index.php/OWASP_Foundation
>> > ? About The Open Web Application Security Project
>> >  http://www.owasp.org/index.php/About_OWASP
>> >
>> >
>> > ================
>> >
>> _______________________________________________
>> Owasp-appsensor-project mailing list
>> Owasp-appsensor-project at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20110314/9bde3406/attachment-0001.html 

From colin.watson at owasp.org  Tue Mar 15 18:34:16 2011
From: colin.watson at owasp.org (Colin Watson)
Date: Tue, 15 Mar 2011 22:34:16 +0000
Subject: [Owasp-appsensor-project] NIST SP 800-137 Initial Public Draft
 "IS Continuous Monitoring..."
In-Reply-To: <AANLkTinCsYgvNtGvBtROntwvWuHfW5qYSC1eEMsA0C02@mail.gmail.com>
References: <AANLkTi=vKGY-smdiurD4VMFectxzEQwoGSpdqUZNGcrN@mail.gmail.com>
	<AANLkTi=RWe504PnFOCoJkYpNMSJBKa3Pv+EBm-5_Lmef@mail.gmail.com>
	<AANLkTikx1kXwnpLRh=STHXpTmXVogLq8-7Y27bXGaLaB@mail.gmail.com>
	<AANLkTikTyDfq_97-+1t_iX3LturoyvuXDXB02YthTpg8@mail.gmail.com>
	<AANLkTinCsYgvNtGvBtROntwvWuHfW5qYSC1eEMsA0C02@mail.gmail.com>
Message-ID: <AANLkTikRTJN73AqicmwFmK+jUBtY2Cb9R4916y1GmSJL@mail.gmail.com>

My message to the list this morning (below) has been caught in the
mailing lists' file size limits.  Therefore I've uploaded the final
response to the wiki:

  http://www.owasp.org/images/8/8e/Owasp-appsensor-nist-sp800-137-response.pdf

Regards

Colin

On 15 March 2011 10:08, Colin Watson <colin.watson at owasp.org> wrote:
> Dennis, Kevin and John
>
> Thank you for your feedback. ?I think your suggestions are great, and
> have tried to incorporate them all into the response. ?It really is
> much better now. ?The words "intrusion" and "prevention" no longer
> appear either.
>
> I apologise for the short notice on this.
>
> I have submitted the response by email, and attach it to this email
> for future reference.
>
> Regards
>
> Colin
>

From christian.heinrich at owasp.org  Tue Mar 15 20:26:01 2011
From: christian.heinrich at owasp.org (Christian Heinrich)
Date: Wed, 16 Mar 2011 11:26:01 +1100
Subject: [Owasp-appsensor-project] NIST SP 800-137 Initial Public Draft
 "IS Continuous Monitoring..."
In-Reply-To: <AANLkTi=vKGY-smdiurD4VMFectxzEQwoGSpdqUZNGcrN@mail.gmail.com>
References: <AANLkTi=vKGY-smdiurD4VMFectxzEQwoGSpdqUZNGcrN@mail.gmail.com>
Message-ID: <AANLkTimY1cAjbfEyEoqg-JDA9PEUoUob8NzxRNQjyw26@mail.gmail.com>

Colin

On Tue, Mar 15, 2011 at 5:30 AM, Colin Watson <colin.watson at owasp.org> wrote:
> a) ?Page 10 refers to "real-time or near realtime security-related
> information", but elsewhere (e.g. pages 1, 2, 6, 7, 13, 14, 29, etc)
> the phrase "near real-time" is used instead. ?The guidance should
> explicity include actual realtime monitoring at each reference to
> "near real-time", so that it is not excluded from the guidance.

"near real-time" is the correct term as the technology has to
establish context which could occur after the event and also an issue
might have been identified below the Application Layer.

FYI - I presented an NIDS/NIPS evasion API at RUXCON in 2005 and also
lead the Snort User Group for Australia and New Zealand.

-- 
Regards,
Christian Heinrich
http://www.owasp.org/index.php/user:cmlh

From colin.watson at owasp.org  Tue Mar 22 12:47:09 2011
From: colin.watson at owasp.org (Colin Watson)
Date: Tue, 22 Mar 2011 16:47:09 +0000
Subject: [Owasp-appsensor-project] CrossTalk article?
In-Reply-To: <AANLkTi=oy4-Ha9hpXkhe=C4wVw-WdmZGaqq+GFyLLGJL@mail.gmail.com>
References: <AANLkTimcPkf90hqaHHv6E-D30d34ugoW7XmqH9LvNKkx@mail.gmail.com>
	<AANLkTin8wr_TtNcQYRtTE6L8hOkAaWNuJxziQ9Ud_9_Z@mail.gmail.com>
	<AANLkTi=oy4-Ha9hpXkhe=C4wVw-WdmZGaqq+GFyLLGJL@mail.gmail.com>
Message-ID: <AANLkTi=Y2rCYG0J_iT8cPx8BA+gmq5bSaHdd81sR0Gqq@mail.gmail.com>

(resend to list due to file attachment problem)

I have written up a draft document.  It needs a lot more editing to
get the ideas across and to make it flow, but rather than sit on it, I
thought I would share it now.  If anyone wants to edit it, with track
changes on, please feel free to do so and send it back.  Don't worry
about formatting.  I can collate changes.

Author guidelines are here:

 http://www.crosstalkonline.org/submission-guidelines/

Table 3 is rather long, but the CrossTalk editors can decide on how
much space they want to provide.

John and Michael - I've extracted some bio details from elsewhere in
the expectation you might be co-authors.

Everyone else - please feel free to contribute, and let me know if you
want to be a co-author.

The file is here as a PDF:

   http://www.owasp.org/index.php/File:Owasp-appsensor-crosstalk-0_4.pdf

I have an OO text file which the OWASP wiki won't upload, and is
marginally too large to send to this list - just ask if you want me to
send directly.

Colin



On 16 February 2011 17:39, John Melton <jtmelton at gmail.com> wrote:
> +1 I'll help wherever I can.
> John
>
> On Wed, Feb 16, 2011 at 11:49 AM, Michael Coates <michael.coates at owasp.org>
> wrote:
>>
>> I'd be happy to help as needed. However if someone else wants to get more
>> involved with appsensor please also join in.
>>
>> Michael
>>
>> On Feb 16, 2011 7:53 AM, "Colin Watson" <colin.watson at owasp.org> wrote:
>> > Hi
>> >
>> > I hesitate to suggest something else to do, but I had an email from
>> > the US DHS Software Assurance (SwA) Community about CrossTalk, the
>> > Journal of Defense Software Engineering. They have an upcoming issue
>> > which I thought might be worth writing an AppSensor article for:
>> >
>> > -------------------------
>> >
>> > The September/October 2011 theme is "Protecting Against Predatory
>> > Practices"
>> >
>> > Articles due 08 April 2011
>> >
>> > Wireless network sniffing and probing, denial of service, forged
>> > de-authentications, and phishing are some of the more well-known
>> > predatory practices the DoD has come to expect?but new, larger, and
>> > more orchestrated attacks such as ?ghost networks? have recently come
>> > to the attention of anti-cyberterrorist experts. CrossTalk is
>> > exploring the most recent dangers our community faces and
>> > methodologies used to protect information against cyber espionage.
>> > Articles will explore the latest threats, security measures, software
>> > security automation, and even social networking dangers.
>> >
>> > Crosstalk magazine: http://www.crosstalkonline.org/
>> > Issue themes: http://www.crosstalkonline.org/theme-calendar/
>> > Author guidelines: http://www.crosstalkonline.org/submission-guidelines/
>> >
>> > -------------------------
>> >
>> > I'm happy to do some of the effort, but can anyone else help and act
>> > as senior/co-authors in the next month?
>> >
>> > Colin
>> > _______________________________________________
>> > Owasp-appsensor-project mailing list
>> > Owasp-appsensor-project at lists.owasp.org
>> > https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>
>> _______________________________________________
>> Owasp-appsensor-project mailing list
>> Owasp-appsensor-project at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>
>
>

From michael.coates at owasp.org  Tue Mar 22 13:47:23 2011
From: michael.coates at owasp.org (Michael Coates)
Date: Tue, 22 Mar 2011 10:47:23 -0700
Subject: [Owasp-appsensor-project] CrossTalk article?
In-Reply-To: <AANLkTi=Y2rCYG0J_iT8cPx8BA+gmq5bSaHdd81sR0Gqq@mail.gmail.com>
References: <AANLkTimcPkf90hqaHHv6E-D30d34ugoW7XmqH9LvNKkx@mail.gmail.com>
	<AANLkTin8wr_TtNcQYRtTE6L8hOkAaWNuJxziQ9Ud_9_Z@mail.gmail.com>
	<AANLkTi=oy4-Ha9hpXkhe=C4wVw-WdmZGaqq+GFyLLGJL@mail.gmail.com>
	<AANLkTi=Y2rCYG0J_iT8cPx8BA+gmq5bSaHdd81sR0Gqq@mail.gmail.com>
Message-ID: <44D5D6C1-3497-48DE-9F64-F6F33DE585C9@owasp.org>

Reading now and working on some comments.

Michael Coates
OWASP



On Mar 22, 2011, at 9:47 AM, Colin Watson wrote:

> (resend to list due to file attachment problem)
> 
> I have written up a draft document.  It needs a lot more editing to
> get the ideas across and to make it flow, but rather than sit on it, I
> thought I would share it now.  If anyone wants to edit it, with track
> changes on, please feel free to do so and send it back.  Don't worry
> about formatting.  I can collate changes.
> 
> Author guidelines are here:
> 
> http://www.crosstalkonline.org/submission-guidelines/
> 
> Table 3 is rather long, but the CrossTalk editors can decide on how
> much space they want to provide.
> 
> John and Michael - I've extracted some bio details from elsewhere in
> the expectation you might be co-authors.
> 
> Everyone else - please feel free to contribute, and let me know if you
> want to be a co-author.
> 
> The file is here as a PDF:
> 
>   http://www.owasp.org/index.php/File:Owasp-appsensor-crosstalk-0_4.pdf
> 
> I have an OO text file which the OWASP wiki won't upload, and is
> marginally too large to send to this list - just ask if you want me to
> send directly.
> 
> Colin
> 
> 
> 
> On 16 February 2011 17:39, John Melton <jtmelton at gmail.com> wrote:
>> +1 I'll help wherever I can.
>> John
>> 
>> On Wed, Feb 16, 2011 at 11:49 AM, Michael Coates <michael.coates at owasp.org>
>> wrote:
>>> 
>>> I'd be happy to help as needed. However if someone else wants to get more
>>> involved with appsensor please also join in.
>>> 
>>> Michael
>>> 
>>> On Feb 16, 2011 7:53 AM, "Colin Watson" <colin.watson at owasp.org> wrote:
>>>> Hi
>>>> 
>>>> I hesitate to suggest something else to do, but I had an email from
>>>> the US DHS Software Assurance (SwA) Community about CrossTalk, the
>>>> Journal of Defense Software Engineering. They have an upcoming issue
>>>> which I thought might be worth writing an AppSensor article for:
>>>> 
>>>> -------------------------
>>>> 
>>>> The September/October 2011 theme is "Protecting Against Predatory
>>>> Practices"
>>>> 
>>>> Articles due 08 April 2011
>>>> 
>>>> Wireless network sniffing and probing, denial of service, forged
>>>> de-authentications, and phishing are some of the more well-known
>>>> predatory practices the DoD has come to expect?but new, larger, and
>>>> more orchestrated attacks such as ?ghost networks? have recently come
>>>> to the attention of anti-cyberterrorist experts. CrossTalk is
>>>> exploring the most recent dangers our community faces and
>>>> methodologies used to protect information against cyber espionage.
>>>> Articles will explore the latest threats, security measures, software
>>>> security automation, and even social networking dangers.
>>>> 
>>>> Crosstalk magazine: http://www.crosstalkonline.org/
>>>> Issue themes: http://www.crosstalkonline.org/theme-calendar/
>>>> Author guidelines: http://www.crosstalkonline.org/submission-guidelines/
>>>> 
>>>> -------------------------
>>>> 
>>>> I'm happy to do some of the effort, but can anyone else help and act
>>>> as senior/co-authors in the next month?
>>>> 
>>>> Colin
>>>> _______________________________________________
>>>> Owasp-appsensor-project mailing list
>>>> Owasp-appsensor-project at lists.owasp.org
>>>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>> 
>>> _______________________________________________
>>> Owasp-appsensor-project mailing list
>>> Owasp-appsensor-project at lists.owasp.org
>>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>> 
>> 
>> 
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project


From michael.coates at owasp.org  Tue Mar 22 14:32:45 2011
From: michael.coates at owasp.org (Michael Coates)
Date: Tue, 22 Mar 2011 11:32:45 -0700
Subject: [Owasp-appsensor-project] CrossTalk article?
In-Reply-To: <AANLkTi=Y2rCYG0J_iT8cPx8BA+gmq5bSaHdd81sR0Gqq@mail.gmail.com>
References: <AANLkTimcPkf90hqaHHv6E-D30d34ugoW7XmqH9LvNKkx@mail.gmail.com>
	<AANLkTin8wr_TtNcQYRtTE6L8hOkAaWNuJxziQ9Ud_9_Z@mail.gmail.com>
	<AANLkTi=oy4-Ha9hpXkhe=C4wVw-WdmZGaqq+GFyLLGJL@mail.gmail.com>
	<AANLkTi=Y2rCYG0J_iT8cPx8BA+gmq5bSaHdd81sR0Gqq@mail.gmail.com>
Message-ID: <B97526D6-BFDB-4068-B9A2-6E7C368BB8EF@owasp.org>

Looking good. Initial comments (revisions enabled) in the doc.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: owasp-appsensor-crosstalk-0_4.odt
Type: application/vnd.oasis.opendocument.text
Size: 26413 bytes
Desc: not available
Url : https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20110322/2d49789c/attachment-0001.bin 
-------------- next part --------------


Michael Coates
OWASP



On Mar 22, 2011, at 9:47 AM, Colin Watson wrote:

> (resend to list due to file attachment problem)
> 
> I have written up a draft document.  It needs a lot more editing to
> get the ideas across and to make it flow, but rather than sit on it, I
> thought I would share it now.  If anyone wants to edit it, with track
> changes on, please feel free to do so and send it back.  Don't worry
> about formatting.  I can collate changes.
> 
> Author guidelines are here:
> 
> http://www.crosstalkonline.org/submission-guidelines/
> 
> Table 3 is rather long, but the CrossTalk editors can decide on how
> much space they want to provide.
> 
> John and Michael - I've extracted some bio details from elsewhere in
> the expectation you might be co-authors.
> 
> Everyone else - please feel free to contribute, and let me know if you
> want to be a co-author.
> 
> The file is here as a PDF:
> 
>   http://www.owasp.org/index.php/File:Owasp-appsensor-crosstalk-0_4.pdf
> 
> I have an OO text file which the OWASP wiki won't upload, and is
> marginally too large to send to this list - just ask if you want me to
> send directly.
> 
> Colin
> 
> 
> 
> On 16 February 2011 17:39, John Melton <jtmelton at gmail.com> wrote:
>> +1 I'll help wherever I can.
>> John
>> 
>> On Wed, Feb 16, 2011 at 11:49 AM, Michael Coates <michael.coates at owasp.org>
>> wrote:
>>> 
>>> I'd be happy to help as needed. However if someone else wants to get more
>>> involved with appsensor please also join in.
>>> 
>>> Michael
>>> 
>>> On Feb 16, 2011 7:53 AM, "Colin Watson" <colin.watson at owasp.org> wrote:
>>>> Hi
>>>> 
>>>> I hesitate to suggest something else to do, but I had an email from
>>>> the US DHS Software Assurance (SwA) Community about CrossTalk, the
>>>> Journal of Defense Software Engineering. They have an upcoming issue
>>>> which I thought might be worth writing an AppSensor article for:
>>>> 
>>>> -------------------------
>>>> 
>>>> The September/October 2011 theme is "Protecting Against Predatory
>>>> Practices"
>>>> 
>>>> Articles due 08 April 2011
>>>> 
>>>> Wireless network sniffing and probing, denial of service, forged
>>>> de-authentications, and phishing are some of the more well-known
>>>> predatory practices the DoD has come to expect?but new, larger, and
>>>> more orchestrated attacks such as ?ghost networks? have recently come
>>>> to the attention of anti-cyberterrorist experts. CrossTalk is
>>>> exploring the most recent dangers our community faces and
>>>> methodologies used to protect information against cyber espionage.
>>>> Articles will explore the latest threats, security measures, software
>>>> security automation, and even social networking dangers.
>>>> 
>>>> Crosstalk magazine: http://www.crosstalkonline.org/
>>>> Issue themes: http://www.crosstalkonline.org/theme-calendar/
>>>> Author guidelines: http://www.crosstalkonline.org/submission-guidelines/
>>>> 
>>>> -------------------------
>>>> 
>>>> I'm happy to do some of the effort, but can anyone else help and act
>>>> as senior/co-authors in the next month?
>>>> 
>>>> Colin
>>>> _______________________________________________
>>>> Owasp-appsensor-project mailing list
>>>> Owasp-appsensor-project at lists.owasp.org
>>>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>> 
>>> _______________________________________________
>>> Owasp-appsensor-project mailing list
>>> Owasp-appsensor-project at lists.owasp.org
>>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>> 
>> 
>> 
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project


From colin.watson at owasp.org  Wed Mar 23 09:27:19 2011
From: colin.watson at owasp.org (Colin Watson)
Date: Wed, 23 Mar 2011 13:27:19 +0000
Subject: [Owasp-appsensor-project] CrossTalk article?
In-Reply-To: <AANLkTinpagdf5xsfgzByOMqXCrFv3LzMFZ=pOJiEp-s4@mail.gmail.com>
References: <AANLkTimcPkf90hqaHHv6E-D30d34ugoW7XmqH9LvNKkx@mail.gmail.com>
	<AANLkTin8wr_TtNcQYRtTE6L8hOkAaWNuJxziQ9Ud_9_Z@mail.gmail.com>
	<AANLkTi=oy4-Ha9hpXkhe=C4wVw-WdmZGaqq+GFyLLGJL@mail.gmail.com>
	<AANLkTi=Y2rCYG0J_iT8cPx8BA+gmq5bSaHdd81sR0Gqq@mail.gmail.com>
	<B97526D6-BFDB-4068-B9A2-6E7C368BB8EF@owasp.org>
	<AANLkTinpagdf5xsfgzByOMqXCrFv3LzMFZ=pOJiEp-s4@mail.gmail.com>
Message-ID: <AANLkTim3h6FwcoXJCrvRKO2zY74qxrwjV=FQibf_-w-s@mail.gmail.com>

Dennis

Thank you very much for these comments.

1.  Do you have a full reference for 7492-2?

2.  I have tried to incorporate your comments on "traditional
measures" into the next draft (to follow shortly).  the words
"traditional" is used many times to different current practices, and I
wonder if "conventional" or "current" would be better?

3.  The point about stochastic systems is very important, but I have
added to the section on "Cross Integration" for now.

4.  I have added your last two points (sensitivity and benefit) into
the unwritten "Conclusions" until we see how it all fits together.

Would you like to be listed as a co-author.... we'd need some short
biography and contact details for you.  Actyually we need photos of
everyone too (300 DPI .jpg or .tiff).

Regards

Colin


On 22 March 2011 20:37, Dennis Groves <dennis.groves at gmail.com> wrote:
>
> My comments are in this email:
>
> In the section: Traditional Defensive Measures
>
> Traditional measures are network layer 3-4 controls; OWASP has been promoting the measures you speak of for the last 9 years - however these measures are not even normative yet - and as such; can hardly be classified as 'traditional.' ?A glance at the
>
> March 1991 ? OSI/IEC 7492-2 shows the following:
>
>
> In 1991, the second and less famous of the 'ISO/IEC' OSI documents tells us the application must provide all the security services known at that time. This is enlightening, because what the OWASP AppSensor builds on this concept and says that the application must also defend itself as well as provide all of its own security services.
>
> Further, TLS only provides data origin authentication - but not trust, and connection confidentiality. Therefore, it is not a complete solution to the services required for a secure application - but it is the most widely known and the easiest to deploy. Rather than talk through the above list; I will just say in short that in addition to confidentiality and?availability, minimum security standards dictate some kind of data integrity, along with authentication and authorization.
>
> In the section:?Normal vs. Malicious Behavior
> I would add a discussion about feeding the OWASP AppSensor output into stochastic systems (eg Actimize for example) for statistical analysis - in this way you can also identify user error from malicious behavior. For example something that happens very?infrequently that causes an exception to be thrown may actually be down to human error, such as a typo, or other?anomaly,?where as hundreds of the same event happening at once may indicate a malicious behavior since - hundreds of people are very unlikely to be making the very same error at the very same time. Additionally, this even further reduces false?positives since stochastic methods 'tune' the system for outliers.
> In the section:?Evasion and Unknown Attacks
> While OWASP AppSensor defines 42 AppSensors, monitoring every exception that can be thrown (eg every parameter failure for example) ?with stochastic methods really ramps the?sensitivity?to unknown attacks... and makes OWASP AppSensor the single most important pattern against unknown attacks to date.
> In the section:?Conclusions
> Restate the key benefits of OWASP AppSensor, and defense against the?unknown attacks?is a giant benefit that can not be had anywhere else at any price.
> Cheers,
> Dennis
> --
> Dennis Groves, MSc // 07917 711890 //?dennis.groves at gmail.com
>
> "Think it, Ink it, Do it, Review it"

From dennis.groves at gmail.com  Wed Mar 23 10:10:21 2011
From: dennis.groves at gmail.com (Dennis Groves)
Date: Wed, 23 Mar 2011 14:10:21 +0000
Subject: [Owasp-appsensor-project] CrossTalk article?
In-Reply-To: <AANLkTim3h6FwcoXJCrvRKO2zY74qxrwjV=FQibf_-w-s@mail.gmail.com>
References: <AANLkTimcPkf90hqaHHv6E-D30d34ugoW7XmqH9LvNKkx@mail.gmail.com>
	<AANLkTin8wr_TtNcQYRtTE6L8hOkAaWNuJxziQ9Ud_9_Z@mail.gmail.com>
	<AANLkTi=oy4-Ha9hpXkhe=C4wVw-WdmZGaqq+GFyLLGJL@mail.gmail.com>
	<AANLkTi=Y2rCYG0J_iT8cPx8BA+gmq5bSaHdd81sR0Gqq@mail.gmail.com>
	<B97526D6-BFDB-4068-B9A2-6E7C368BB8EF@owasp.org>
	<AANLkTinpagdf5xsfgzByOMqXCrFv3LzMFZ=pOJiEp-s4@mail.gmail.com>
	<AANLkTim3h6FwcoXJCrvRKO2zY74qxrwjV=FQibf_-w-s@mail.gmail.com>
Message-ID: <AANLkTik44=dtytCX+Lb_jag=w8kdSEFfyssQowYptbwS@mail.gmail.com>

>
> On Wed, Mar 23, 2011 at 1:27 PM, Colin Watson <colin.watson at owasp.org>wrote:
> Dennis
>
> Thank you very much for these comments.
>
> 1.  Do you have a full reference for 7492-2?
>

My bad - that is a standard for tooth extraction. We are actually interested
in ISO 7498<http://standards.iso.org/ittf/PubliclyAvailableStandards/s020269_ISO_IEC_7498-1_1994%28E%29.zip>-2.
As I get older these standards numbers get fuzzy on me. :-\


> 2.  I have tried to incorporate your comments on "traditional
> measures" into the next draft (to follow shortly).  the words
> "traditional" is used many times to different current practices, and I
> wonder if "conventional" or "current" would be better?
>

 I really like the term current best practices - but that is *so* consultant
speak I want to puke. ;-)
conventional is good... I wonder if we can pick a set of words that tie back
to the owasp guide?

3.  The point about stochastic systems is very important, but I have
> added to the section on "Cross Integration" for now.
>

Sweet. ;-)

4.  I have added your last two points (sensitivity and benefit) into
> the unwritten "Conclusions" until we see how it all fits together.
>

Brilliant.


> Would you like to be listed as a co-author.... we'd need some short
> biography and contact details for you.  Actyually we need photos of
> everyone too (300 DPI .jpg or .tiff).
>

Wow, I would be thrilled! I'll ping you some bio over...



> Regards
>
> Colin
>


--
Dennis Groves, MSc
dennis.groves at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20110323/7fd58237/attachment.html 

From colin.watson at owasp.org  Wed Mar 23 10:17:53 2011
From: colin.watson at owasp.org (Colin Watson)
Date: Wed, 23 Mar 2011 14:17:53 +0000
Subject: [Owasp-appsensor-project] CrossTalk article?
In-Reply-To: <AANLkTinCRcOr4Egrp6LevAibUdgkedDpfRo1_03pDwQ_@mail.gmail.com>
References: <AANLkTimcPkf90hqaHHv6E-D30d34ugoW7XmqH9LvNKkx@mail.gmail.com>
	<AANLkTin8wr_TtNcQYRtTE6L8hOkAaWNuJxziQ9Ud_9_Z@mail.gmail.com>
	<AANLkTi=oy4-Ha9hpXkhe=C4wVw-WdmZGaqq+GFyLLGJL@mail.gmail.com>
	<AANLkTi=Y2rCYG0J_iT8cPx8BA+gmq5bSaHdd81sR0Gqq@mail.gmail.com>
	<B97526D6-BFDB-4068-B9A2-6E7C368BB8EF@owasp.org>
	<AANLkTinCRcOr4Egrp6LevAibUdgkedDpfRo1_03pDwQ_@mail.gmail.com>
Message-ID: <AANLkTi=TZVicx5Wfjqr9Bn9XUuFHPEdWEx0DaxRWn-hO@mail.gmail.com>

I have incorporated almost all of Michael and John's edits (leaving
other comments and anything else with track changes still on), added
some more content and did some further minor editing.  I have also
pasted in changes inspired by Dennis' reply, and these are shown with
a green background to make it clearer where they came from.

If anyone has anything to add just now, please do so, but then
tomorrow I'll tidy up the edits further so that it is easier to read,
and re-issue another draft.  We can then probably get down to the
ordering of information, and working up the concluding sections?

The PDF version is at:

  http://www.owasp.org/index.php/File:Owasp-appsensor-crosstalk-0_4.pdf

I'll send the source file to Michael, John and Dennis directly, and to
anyone else who asks.

Colin


On 23 March 2011 03:49, John Melton <jtmelton at gmail.com> wrote:
> My additions.
>
> On Tue, Mar 22, 2011 at 2:32 PM, Michael Coates <michael.coates at owasp.org>
> wrote:
>>
>> Looking good. Initial comments (revisions enabled) in the doc.
>>
>>
>>
>>
>> Michael Coates
>> OWASP
>>
>>
>>
>> On Mar 22, 2011, at 9:47 AM, Colin Watson wrote:
>>
>> > (resend to list due to file attachment problem)
>> >
>> > I have written up a draft document. ?It needs a lot more editing to
>> > get the ideas across and to make it flow, but rather than sit on it, I
>> > thought I would share it now. ?If anyone wants to edit it, with track
>> > changes on, please feel free to do so and send it back. ?Don't worry
>> > about formatting. ?I can collate changes.
>> >
>> > Author guidelines are here:
>> >
>> > http://www.crosstalkonline.org/submission-guidelines/
>> >
>> > Table 3 is rather long, but the CrossTalk editors can decide on how
>> > much space they want to provide.
>> >
>> > John and Michael - I've extracted some bio details from elsewhere in
>> > the expectation you might be co-authors.
>> >
>> > Everyone else - please feel free to contribute, and let me know if you
>> > want to be a co-author.
>> >
>> > The file is here as a PDF:
>> >
>> > ? http://www.owasp.org/index.php/File:Owasp-appsensor-crosstalk-0_4.pdf
>> >
>> > I have an OO text file which the OWASP wiki won't upload, and is
>> > marginally too large to send to this list - just ask if you want me to
>> > send directly.
>> >
>> > Colin
>> >
>> >
>> >
>> > On 16 February 2011 17:39, John Melton <jtmelton at gmail.com> wrote:
>> >> +1 I'll help wherever I can.
>> >> John
>> >>
>> >> On Wed, Feb 16, 2011 at 11:49 AM, Michael Coates
>> >> <michael.coates at owasp.org>
>> >> wrote:
>> >>>
>> >>> I'd be happy to help as needed. However if someone else wants to get
>> >>> more
>> >>> involved with appsensor please also join in.
>> >>>
>> >>> Michael
>> >>>
>> >>> On Feb 16, 2011 7:53 AM, "Colin Watson" <colin.watson at owasp.org>
>> >>> wrote:
>> >>>> Hi
>> >>>>
>> >>>> I hesitate to suggest something else to do, but I had an email from
>> >>>> the US DHS Software Assurance (SwA) Community about CrossTalk, the
>> >>>> Journal of Defense Software Engineering. They have an upcoming issue
>> >>>> which I thought might be worth writing an AppSensor article for:
>> >>>>
>> >>>> -------------------------
>> >>>>
>> >>>> The September/October 2011 theme is "Protecting Against Predatory
>> >>>> Practices"
>> >>>>
>> >>>> Articles due 08 April 2011
>> >>>>
>> >>>> Wireless network sniffing and probing, denial of service, forged
>> >>>> de-authentications, and phishing are some of the more well-known
>> >>>> predatory practices the DoD has come to expect?but new, larger, and
>> >>>> more orchestrated attacks such as ?ghost networks? have recently come
>> >>>> to the attention of anti-cyberterrorist experts. CrossTalk is
>> >>>> exploring the most recent dangers our community faces and
>> >>>> methodologies used to protect information against cyber espionage.
>> >>>> Articles will explore the latest threats, security measures, software
>> >>>> security automation, and even social networking dangers.
>> >>>>
>> >>>> Crosstalk magazine: http://www.crosstalkonline.org/
>> >>>> Issue themes: http://www.crosstalkonline.org/theme-calendar/
>> >>>> Author guidelines:
>> >>>> http://www.crosstalkonline.org/submission-guidelines/
>> >>>>
>> >>>> -------------------------
>> >>>>
>> >>>> I'm happy to do some of the effort, but can anyone else help and act
>> >>>> as senior/co-authors in the next month?
>> >>>>
>> >>>> Colin
>> >>>> _______________________________________________
>> >>>> Owasp-appsensor-project mailing list
>> >>>> Owasp-appsensor-project at lists.owasp.org
>> >>>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>> >>>
>> >>> _______________________________________________
>> >>> Owasp-appsensor-project mailing list
>> >>> Owasp-appsensor-project at lists.owasp.org
>> >>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>> >>>
>> >>
>> >>
>> > _______________________________________________
>> > Owasp-appsensor-project mailing list
>> > Owasp-appsensor-project at lists.owasp.org
>> > https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>
>>
>> _______________________________________________
>> Owasp-appsensor-project mailing list
>> Owasp-appsensor-project at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>
>
>

