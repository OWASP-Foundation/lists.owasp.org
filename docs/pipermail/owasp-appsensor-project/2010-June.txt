From michael.coates at owasp.org  Wed Jun  2 12:00:48 2010
From: michael.coates at owasp.org (Michael Coates)
Date: Wed, 02 Jun 2010 09:00:48 -0700
Subject: [Owasp-appsensor-project] Two Upcoming AppSensor Presentations
Message-ID: <4C068030.9020504@owasp.org>

Want to learn more about AppSensor? Check out these upcoming presentations:


Thursday, June 3, Online Presentation - 9am Pacific
Presented by Michael Coates
http://michael-coates.blogspot.com/2010/06/online-presentation-thursday-automated.html


Wednesday, June 16th, Northumbria University in Newcastle, UK
Presented by Colin Watson
http://www.clerkendweller.com/2010/5/28/Application-Security-in-North-East-England




-- 
Michael Coates
OWASP

-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20100602/5d434b2d/attachment.html 

From michael.coates at owasp.org  Wed Jun  2 14:14:41 2010
From: michael.coates at owasp.org (Michael Coates)
Date: Wed, 02 Jun 2010 11:14:41 -0700
Subject: [Owasp-appsensor-project] AppSensor Demo Site looking for a home
Message-ID: <4C069F91.8050306@owasp.org>

The appsensor demo code is looking for a new home.  The ready to use WAR 
file is a basic social networking site that demonstrates appsenor in 
action. I'm looking for anyone willing to host this website on their 
server.  I already on the domain name and would just redirect to the new 
location.

A few points of interest:
1. The site does not contain any known vulnerabilities. AppSensor 
detects attempted attacks on the application logic, but there is nothing 
that can be exploited
2. The expected traffic is low.  There are a few links on the OWASP 
appsensor page, but that's about it.
3. The URL is http://DefendTheApp.com (clearly it doesn't work right now)
4. You can see a video of the demo app here: 
http://www.youtube.com/watch?v=8ItfuwvLxRk

If you are interested, please let me know. I can either work with you to 
get things setup or you can provide me login credentials (whatever you 
prefer).


Thanks!

-- 
Michael Coates
OWASP


From colin.watson at owasp.org  Wed Jun  9 06:55:22 2010
From: colin.watson at owasp.org (Colin Watson)
Date: Wed, 9 Jun 2010 11:55:22 +0100
Subject: [Owasp-appsensor-project] Additional Detection Points - Intro
Message-ID: <AANLkTil9lJHTEjjDaEsJ5zzG6FjCn5waU7u9duJNXwSl@mail.gmail.com>

Hi folks

I'm just going through the email archives, and several handwritten
notes to myself, to check what additional detection points were raised
and whether they exist in AppSensor v1.1 beta.

For any that don't exist (maybe with good reason!), I'm going to email
the list - one email/subject per detection point - so I can gather
further views before editing anything on the wiki.

Hope that's okay,

Colin

From colin.watson at owasp.org  Wed Jun  9 10:16:02 2010
From: colin.watson at owasp.org (Colin Watson)
Date: Wed, 9 Jun 2010 15:16:02 +0100
Subject: [Owasp-appsensor-project] Additional Detection Points - Violation
	of Implemented Black Lists
Message-ID: <AANLkTikF4xKQ8sZwKmrrh7GkLRaXmN0rQVfrxq9CVmV2@mail.gmail.com>

Suggestion to add a new detection point.  Has this already been ruled
out?  Should it be added?  Is the description/categorization suitable?

Source
-----------------------------------
Item 4 in
[Owasp-appsensor-project] AppSensor- a few ideas, Fri Sep 18 10:30:31 EDT 2009
https://lists.owasp.org/pipermail/owasp-appsensor-project/2009-September/000005.html

Description
-----------------------------------
The application receives user-supplied data that violates an
established black list validation (e.g. URL in comment filed that is
found in Google Safe Browsing Database).

Suggested categorization
-----------------------------------
IE3 Violation of Implemented Black Lists

From colin.watson at owasp.org  Wed Jun  9 10:18:27 2010
From: colin.watson at owasp.org (Colin Watson)
Date: Wed, 9 Jun 2010 15:18:27 +0100
Subject: [Owasp-appsensor-project] Additional Detection Points - Violation
	of Input Data Integrity
Message-ID: <AANLkTimwfr00aj6Lrxsc3sgLUIZAWHrJt7IffygM6NW0@mail.gmail.com>

Suggestion to add a new detection point.  Has this already been ruled
out?  Should it be added?  Is the description/categorization suitable?

Source
-----------------------------------
[Owasp-appsensor-project] AppSensor Feedback/Ideas, Sat Nov 21 11:02:45 EST 2009
https://lists.owasp.org/pipermail/owasp-appsensor-project/2009-November/000007.html

Description
-----------------------------------
The application receives HTTP header or body parameter (argument?)
values which have been tampered with when no change should have
occurred (e.g. modification of hidden fields, alteration of select
list values).

Suggested categorization
-----------------------------------
IE4 Violation of Input Data Integrity

*** Is this different enough to ACE1 and ACE2 - it is more general
than direct object access ? ***

From colin.watson at owasp.org  Wed Jun  9 10:19:57 2010
From: colin.watson at owasp.org (Colin Watson)
Date: Wed, 9 Jun 2010 15:19:57 +0100
Subject: [Owasp-appsensor-project] Additional Detection Points - Utilization
	of Common User Names
Message-ID: <AANLkTikP0WQZg8VUEt_qtiQUrgTO-8eIIY4TkqE0Ynhm@mail.gmail.com>

Suggestion to add a new detection point.  Has this already been ruled
out?  Should it be added?  Is the description/categorization suitable?

Source
-----------------------------------
[Owasp-appsensor-project] AppSensor Feedback/Ideas, Sat Nov 21 11:02:45 EST 2009
https://lists.owasp.org/pipermail/owasp-appsensor-project/2009-November/000007.html

Description
-----------------------------------
Common dictionary user names (e.g. "administrator", "admin" or "test")
are used to attempt to log into the application.  This may enhance the
seriousness of AE1 Use of Multiple Usernames.

Suggested categorization
-----------------------------------
AE12 Utilization of Common User Names

*** Or could just be an instance of proposed IE3 Violation of
Implemented Black Lists ? ***

From colin.watson at owasp.org  Wed Jun  9 10:20:58 2010
From: colin.watson at owasp.org (Colin Watson)
Date: Wed, 9 Jun 2010 15:20:58 +0100
Subject: [Owasp-appsensor-project] Additional Detection Points - Additional
	or Missing Parameters
Message-ID: <AANLkTinZ2SNTgPuJ2lkXVIgqVocYxW9bo670I4Wsazwd@mail.gmail.com>

Suggestion to add a new detection point.  Has this already been ruled
out?  Should it be added?  Is the description/categorization suitable?

Source
-----------------------------------
Just another idea, but based on WAF white listing concepts

Description
-----------------------------------
A required header or body parameter is missing, or additional
unexpected parameters are received with the request.

Suggested categorization
-----------------------------------
RE5 Additional or Missing Parameters

From colin.watson at owasp.org  Wed Jun  9 10:27:28 2010
From: colin.watson at owasp.org (Colin Watson)
Date: Wed, 9 Jun 2010 15:27:28 +0100
Subject: [Owasp-appsensor-project] Additional Detection Points - Violation
	of Security Log Integrity
Message-ID: <AANLkTilfSKmy5oOSoK0-FMlKcxpoJxFh-qOeMEXEOVau@mail.gmail.com>

Suggestion to add a new detection point.  Has this already been ruled
out?  Should it be added?  Is the description/categorization suitable?

Source
-----------------------------------
Just another idea - this one requires some thought by developers of
how to prevent and detect changes to logs (file, database, etc).

Description
-----------------------------------
Security or audit log tampering detected.

Suggested categorization
-----------------------------------
Create a new category called "Integrity" in Signature Based Events
IN1 Violation of Security Log Integrity

*** Might want to put proposed additional detection point IE4 in this
category as well, instead of in Input? ***

From colin.watson at owasp.org  Wed Jun  9 10:28:34 2010
From: colin.watson at owasp.org (Colin Watson)
Date: Wed, 9 Jun 2010 15:28:34 +0100
Subject: [Owasp-appsensor-project] Additional Detection Points - Suspicious
	User IP Address
Message-ID: <AANLkTinMLekk__zrmQpM00dNnQqL6a-y1xFAA71S2zRw@mail.gmail.com>

Suggestion to add a new detection point.  Has this already been ruled
out?  Should it be added?  Is the description/categorization suitable?

Source
-----------------------------------
Items 1 & 2 in
[Owasp-appsensor-project] AppSensor- a few ideas, Fri Sep 18 10:30:31 EDT 2009
https://lists.owasp.org/pipermail/owasp-appsensor-project/2009-September/000005.html

Description
-----------------------------------
The user is identified as using an IP address associated with a
blacklist (e.g. internal blacklist, list of Tor nodes e.g.
https://torstat.xenobite.eu/ and HTTP blacklist e.g.
http://www.projecthoneypot.org/httpbl.php and Dshield
http://www.dshield.org and spammers e.g. Spamhaus
http://www.spamhaus.org/ and known botnets e.g.
http://www.shadowserver.org/wiki/).  "Suspicious" may also depend upon
the type of user e.g. users in the "CMS manager" role should be using
an internal network IP address, public users could be from anywhere,
customers should only be accessing the application from a particular
geographical region, search engine robots  should be from a limited
range of IP addresses.

Suggested categorization
-----------------------------------
Create a new category called "Reputation" in Behavioral Based Events
RP1 Suspicious User IP Address

*** NB this new proposed category has some more detection points (to
follow) which could be used to alter/tune the thresholds and actions
of AppSensor rather than having their own actions? ***

From colin.watson at owasp.org  Wed Jun  9 10:29:16 2010
From: colin.watson at owasp.org (Colin Watson)
Date: Wed, 9 Jun 2010 15:29:16 +0100
Subject: [Owasp-appsensor-project] Additional Detection Points - Suspicious
	External User Behavior
Message-ID: <AANLkTinpI4r3Pfv9XJ3I3f6lsn2DTkE2mzA5RU7dPktF@mail.gmail.com>

Suggestion to add a new detection point.  Has this already been ruled
out?  Should it be added?  Is the description/categorization suitable?

Source
-----------------------------------
[Owasp-appsensor-project] AppSensor Feedback/Ideas, Sat Nov 21 13:32:39 EST 2009
https://lists.owasp.org/pipermail/owasp-appsensor-project/2009-November/000008.html

Description
-----------------------------------
External (to the application) devices and systems (e.g. host and
network IDS, file integrity monitoring, disk usage monitoring,
anti-malware service, IPS, network firewall, web application firewall,
web server logging, XML gateway, database firewall, SIEM) have
detected anomalous behavior by the user (e.g. session or IP address).

Suggested categorization
-----------------------------------
In the suggested new category "Reputation" (see RP1 Suspicious User IP Address)
RP2 Suspicious External User Behavior

From colin.watson at owasp.org  Wed Jun  9 10:29:53 2010
From: colin.watson at owasp.org (Colin Watson)
Date: Wed, 9 Jun 2010 15:29:53 +0100
Subject: [Owasp-appsensor-project] Additional Detection Points - Suspicious
	Client-Side Behavior
Message-ID: <AANLkTimItMt6y5y0YV6UaqcOeCdR5LI3juW9K-eLPFM6@mail.gmail.com>

Suggestion to add a new detection point.  Has this already been ruled
out?  Should it be added?  Is the description/categorization suitable?

Source
-----------------------------------
[Owasp-appsensor-project] AppSensor Feedback/Ideas, Sat Nov 21 13:32:39 EST 2009
https://lists.owasp.org/pipermail/owasp-appsensor-project/2009-November/000008.html

Description
-----------------------------------
The application receives a report of client-side policy exceptions
(e.g. Firefox Content Security Policy violation report
https://wiki.mozilla.org/Security/CSP/Specification#Violation_Report_Syntax).

Suggested categorization
-----------------------------------
In the suggested new category "Reputation" (see RP1 Suspicious User IP Address)
RP3 Suspicious Client-Side Behavior

From jtmelton at gmail.com  Wed Jun  9 10:29:55 2010
From: jtmelton at gmail.com (John Melton)
Date: Wed, 9 Jun 2010 10:29:55 -0400
Subject: [Owasp-appsensor-project] Additional Detection Points -
	Violation of Security Log Integrity
In-Reply-To: <AANLkTilfSKmy5oOSoK0-FMlKcxpoJxFh-qOeMEXEOVau@mail.gmail.com>
References: <AANLkTilfSKmy5oOSoK0-FMlKcxpoJxFh-qOeMEXEOVau@mail.gmail.com>
Message-ID: <AANLkTikdNronmWZv4FlVdeXZHW6mPshWiqyP_0aSWNyW@mail.gmail.com>

is this presumably to catch log forging attempts?

On Wed, Jun 9, 2010 at 10:27 AM, Colin Watson <colin.watson at owasp.org> wrote:
> Suggestion to add a new detection point. ?Has this already been ruled
> out? ?Should it be added? ?Is the description/categorization suitable?
>
> Source
> -----------------------------------
> Just another idea - this one requires some thought by developers of
> how to prevent and detect changes to logs (file, database, etc).
>
> Description
> -----------------------------------
> Security or audit log tampering detected.
>
> Suggested categorization
> -----------------------------------
> Create a new category called "Integrity" in Signature Based Events
> IN1 Violation of Security Log Integrity
>
> *** Might want to put proposed additional detection point IE4 in this
> category as well, instead of in Input? ***
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>

From colin.watson at owasp.org  Wed Jun  9 10:30:57 2010
From: colin.watson at owasp.org (Colin Watson)
Date: Wed, 9 Jun 2010 15:30:57 +0100
Subject: [Owasp-appsensor-project] Additional Detection Points - Change To
	Application's Rating By A Third Party
Message-ID: <AANLkTimC4EWQfuWqBrGNAN2Cu8Qo80jBogzej-3vG2NP@mail.gmail.com>

Suggestion to add a new detection point.  Has this already been ruled
out?  Should it be added?  Is the description/categorization suitable?

Source
-----------------------------------
Just another idea

Description
-----------------------------------
The reputation (classification, score, etc) of the application (or its
servers) is changed by free or subscribed third party remote
monitoring/testing services (e.g. malware detection, phishing site
detection, uptime monitoring, reputation monitoring, spam and botnet
lists, SSL configuration testing, HTML, CSS, RSS and XML validators,
vulnerability scanners, penetration testing, DNS address, etc).  For
example, syntax errors are found in an application's user comments RSS
feed which may have been caused by incorrect output encoding.

Suggested categorization
-----------------------------------
In the suggested new category "Reputation" (see RP1 Suspicious User IP Address)
RP4 Change To Application's Rating By A Third Party

From colin.watson at owasp.org  Wed Jun  9 10:32:02 2010
From: colin.watson at owasp.org (Colin Watson)
Date: Wed, 9 Jun 2010 15:32:02 +0100
Subject: [Owasp-appsensor-project] Additional Detection Points - Change to
	Environment Threat Level
Message-ID: <AANLkTilW4VdQ5G8bngrFONAm4IgmYAlrSrxJemNpxu41@mail.gmail.com>

Suggestion to add a new detection point.  Has this already been ruled
out?  Should it be added?  Is the description/categorization suitable?

Source
-----------------------------------
Just another idea, but based on discussions about creating an Internet
Threat Exposure (ITE) index by the UK Cybersecurity KTN in 2008.

Description
-----------------------------------
The general threat level (e.g. general risk of attack from the
Internet, or specific targetted attacks against an organisation) is
elevated.  This could also be used to change response sensitivity due
to short-term effects such as application upgrades/patching.  This
input could be used to alter thresholds for AppSensor responses.

Suggested categorization
-----------------------------------
In the suggested new category "Reputation" (see RP1 Suspicious User IP Address)
RP5 Change to Environment Threat Level

From colin.watson at owasp.org  Wed Jun  9 10:34:13 2010
From: colin.watson at owasp.org (Colin Watson)
Date: Wed, 9 Jun 2010 15:34:13 +0100
Subject: [Owasp-appsensor-project] Additional Detection Points - Detect
	Client Information
Message-ID: <AANLkTinM7JkW5EXet3UpgpzTAQi6uLCqbidv8aFSgek1@mail.gmail.com>

Suggestion to add a new detection point.  Has this already been ruled
out?  Should it be added?  Is the description/categorization suitable?

Source
-----------------------------------
Just another idea - this one could be the most controversial since it
might be seen as an active attack on the user.  The idea is
information gathering rather than electronic counter measures.  After
all, logging a user out also affects them.

Description
-----------------------------------
At a certain threshold, deploy additional sensor(s) onto the client
such as. a Java applet to return the client's IP address,  JavaScript
to collect additional data about the user's environment (e.g.
Panopticlick http://panopticlick.eff.org/), or JavaScript to detect
local network information.  These actions must be consistent with the
application's terms of use, privacy notice and organizational
mandates.

Suggested categorization
-----------------------------------
In the suggested new category "Reputation" (see RP1 Suspicious User IP Address)
RP6 Detect Client Information

*** This may instead be an AppSensor response action, even thought it
is deploying a new sensor ? ****

From colin.watson at owasp.org  Wed Jun  9 10:34:53 2010
From: colin.watson at owasp.org (Colin Watson)
Date: Wed, 9 Jun 2010 15:34:53 +0100
Subject: [Owasp-appsensor-project] Change to Detection Points - ACE3 Force
	Browsing Attempts
Message-ID: <AANLkTiktouvygH87CEVYJDSParkbfZaUcz4z4BF48BS6@mail.gmail.com>

Suggestion to CHANGE an existing detection point.  Has this already
been ruled out?  Should it be changed?

Source
-----------------------------------
Just another idea

Description
-----------------------------------
Request for non-existent resources should include all content types,
not just pages.  It is also useful to record this for unauthenticated
users where the data may still be identified with a session or IP
address.

1. Leave name unchanged (i.e. keep as "Force Browsing Attempts")

2. Change description to "Authenticated or unauthenticated user sends
a request for a non-existent resource (e.g. page, directory listing,
image, file, etc), or a resource that is not authorized for that user"

From colin.watson at owasp.org  Wed Jun  9 10:35:05 2010
From: colin.watson at owasp.org (Colin Watson)
Date: Wed, 9 Jun 2010 15:35:05 +0100
Subject: [Owasp-appsensor-project] Change to Detection Points - SE5 Source
	IP Address Changes During Session
Message-ID: <AANLkTin_zH5Qa4ueioJw875afDWJ14DNwKM0PMS3rYKd@mail.gmail.com>

Suggestion to CHANGE an existing detection point.  Has this already
been ruled out?  Should it be changed?

Source
-----------------------------------
[Owasp-appsensor-project] AppSensor- a few ideas, Fri Sep 18 10:30:31 EDT 2009
https://lists.owasp.org/pipermail/owasp-appsensor-project/2009-September/000005.html

Description
-----------------------------------
Rather than a single IP Address, make the sensor specification broader
to also allow ASN check instead.

1. Leave name unchanged (i.e. keep as "Source IP Address Changes
During Session")

2. Change description to "Valid requests, containing valid session
credentials, are received from multiple source IP addresses or source
IP address ranges or source Autonomous System Number (ASN)"

Reference http://www.apnic.net/services/services-apnic-provides/helpdesk/faqs/asn-faqs

From colin.watson at owasp.org  Wed Jun  9 10:35:17 2010
From: colin.watson at owasp.org (Colin Watson)
Date: Wed, 9 Jun 2010 15:35:17 +0100
Subject: [Owasp-appsensor-project] Change to Detection Points - SE6 Change
	Of User Agent Mid Session
Message-ID: <AANLkTimMTqaLX1l_bPxi9atoRpx8ur2sJXXx1l0b2kKU@mail.gmail.com>

Suggestion to CHANGE an existing detection point.  Has this already
been ruled out?  Should it be changed?

Source
-----------------------------------
Just another idea

Description
-----------------------------------
Other headers such as Accept-Encoding and Accept-Language can be used
to help detect a session being used by someone else.  It could relate
to public resources too (i.e. unauthenticated users).

1. Leave name unchanged (i.e. keep as "Change Of User Agent Mid Session")

2. Change first sentence of description to "The header User-Agent or
Accept-Encoding or Accept-Language change during an authenticated
session."

3. Removed the word "authenticated" from above sentence?

*** Or split this idea out into a new sensor e.g. SE7? ***

From colin.watson at owasp.org  Wed Jun  9 10:39:56 2010
From: colin.watson at owasp.org (Colin Watson)
Date: Wed, 9 Jun 2010 15:39:56 +0100
Subject: [Owasp-appsensor-project] Additional Detection Points -
	Violation of Security Log Integrity
In-Reply-To: <AANLkTikdNronmWZv4FlVdeXZHW6mPshWiqyP_0aSWNyW@mail.gmail.com>
References: <AANLkTilfSKmy5oOSoK0-FMlKcxpoJxFh-qOeMEXEOVau@mail.gmail.com>
	<AANLkTikdNronmWZv4FlVdeXZHW6mPshWiqyP_0aSWNyW@mail.gmail.com>
Message-ID: <AANLkTiny3-KiQOp7dts4gK4nnKLZImKT6UEExL9fPlhc@mail.gmail.com>

John

On 9 June 2010 15:29, John Melton <jtmelton at gmail.com> wrote:
> is this presumably to catch log forging attempts?

Yes preventing insertion of entries and corruption of the log, but
also prevention of record deletion and detection of changes to log
entries.  AppSensor will rely on the accuracy of "log" data to make
decisions when thresholds are reached, and therefore I thought
protecting this source data is important - a bit of self-protection.

Colin

From jtmelton at gmail.com  Wed Jun  9 21:51:29 2010
From: jtmelton at gmail.com (John Melton)
Date: Wed, 9 Jun 2010 21:51:29 -0400
Subject: [Owasp-appsensor-project] Additional Detection Points -
	Violation of Implemented Black Lists
In-Reply-To: <AANLkTikF4xKQ8sZwKmrrh7GkLRaXmN0rQVfrxq9CVmV2@mail.gmail.com>
References: <AANLkTikF4xKQ8sZwKmrrh7GkLRaXmN0rQVfrxq9CVmV2@mail.gmail.com>
Message-ID: <AANLkTini73iQPL3V_OyddOtuO69I-_70GFCUzUglqdut@mail.gmail.com>

+1 for me

On Wed, Jun 9, 2010 at 10:16 AM, Colin Watson <colin.watson at owasp.org> wrote:
> Suggestion to add a new detection point. ?Has this already been ruled
> out? ?Should it be added? ?Is the description/categorization suitable?
>
> Source
> -----------------------------------
> Item 4 in
> [Owasp-appsensor-project] AppSensor- a few ideas, Fri Sep 18 10:30:31 EDT 2009
> https://lists.owasp.org/pipermail/owasp-appsensor-project/2009-September/000005.html
>
> Description
> -----------------------------------
> The application receives user-supplied data that violates an
> established black list validation (e.g. URL in comment filed that is
> found in Google Safe Browsing Database).
>
> Suggested categorization
> -----------------------------------
> IE3 Violation of Implemented Black Lists
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>

From jtmelton at gmail.com  Wed Jun  9 21:52:10 2010
From: jtmelton at gmail.com (John Melton)
Date: Wed, 9 Jun 2010 21:52:10 -0400
Subject: [Owasp-appsensor-project] Additional Detection Points -
	Violation of Security Log Integrity
In-Reply-To: <AANLkTiny3-KiQOp7dts4gK4nnKLZImKT6UEExL9fPlhc@mail.gmail.com>
References: <AANLkTilfSKmy5oOSoK0-FMlKcxpoJxFh-qOeMEXEOVau@mail.gmail.com> 
	<AANLkTikdNronmWZv4FlVdeXZHW6mPshWiqyP_0aSWNyW@mail.gmail.com> 
	<AANLkTiny3-KiQOp7dts4gK4nnKLZImKT6UEExL9fPlhc@mail.gmail.com>
Message-ID: <AANLkTinRFXo8bBzjwNAcPTmix86OV6herVuedIrZw-ZO@mail.gmail.com>

+1 for me

On Wed, Jun 9, 2010 at 10:39 AM, Colin Watson <colin.watson at owasp.org> wrote:
> John
>
> On 9 June 2010 15:29, John Melton <jtmelton at gmail.com> wrote:
>> is this presumably to catch log forging attempts?
>
> Yes preventing insertion of entries and corruption of the log, but
> also prevention of record deletion and detection of changes to log
> entries. ?AppSensor will rely on the accuracy of "log" data to make
> decisions when thresholds are reached, and therefore I thought
> protecting this source data is important - a bit of self-protection.
>
> Colin
>

From jtmelton at gmail.com  Wed Jun  9 21:56:59 2010
From: jtmelton at gmail.com (John Melton)
Date: Wed, 9 Jun 2010 21:56:59 -0400
Subject: [Owasp-appsensor-project] Additional Detection Points -
	Violation of Input Data Integrity
In-Reply-To: <AANLkTimwfr00aj6Lrxsc3sgLUIZAWHrJt7IffygM6NW0@mail.gmail.com>
References: <AANLkTimwfr00aj6Lrxsc3sgLUIZAWHrJt7IffygM6NW0@mail.gmail.com>
Message-ID: <AANLkTilNSAYQX22hIUtD4a27xdE9Q_qAQdLnmbfDXo0o@mail.gmail.com>

for this one, I don't think it's unique enough based on the
description ... get/post is already covered.  If you're talking about
creating "honeypot" parms as mentioned in the source file, then I'd
say sure, but not with the description as written.  Also, http header
manipulation might be unique enough, since cookies and get/post parms
are already covered.

On Wed, Jun 9, 2010 at 10:18 AM, Colin Watson <colin.watson at owasp.org> wrote:
> Suggestion to add a new detection point. ?Has this already been ruled
> out? ?Should it be added? ?Is the description/categorization suitable?
>
> Source
> -----------------------------------
> [Owasp-appsensor-project] AppSensor Feedback/Ideas, Sat Nov 21 11:02:45 EST 2009
> https://lists.owasp.org/pipermail/owasp-appsensor-project/2009-November/000007.html
>
> Description
> -----------------------------------
> The application receives HTTP header or body parameter (argument?)
> values which have been tampered with when no change should have
> occurred (e.g. modification of hidden fields, alteration of select
> list values).
>
> Suggested categorization
> -----------------------------------
> IE4 Violation of Input Data Integrity
>
> *** Is this different enough to ACE1 and ACE2 - it is more general
> than direct object access ? ***
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>

From jtmelton at gmail.com  Wed Jun  9 22:01:30 2010
From: jtmelton at gmail.com (John Melton)
Date: Wed, 9 Jun 2010 22:01:30 -0400
Subject: [Owasp-appsensor-project] Additional Detection Points -
	Utilization of Common User Names
In-Reply-To: <AANLkTikP0WQZg8VUEt_qtiQUrgTO-8eIIY4TkqE0Ynhm@mail.gmail.com>
References: <AANLkTikP0WQZg8VUEt_qtiQUrgTO-8eIIY4TkqE0Ynhm@mail.gmail.com>
Message-ID: <AANLkTimerLCBBsc4c6-V0_KE5kaM7QVDmRnKylP-35-q@mail.gmail.com>

I vote +1 for this .. while I see it could be part of IE3, I think it should
probably be called out separately

On Wed, Jun 9, 2010 at 10:19 AM, Colin Watson <colin.watson at owasp.org>wrote:

> Suggestion to add a new detection point.  Has this already been ruled
> out?  Should it be added?  Is the description/categorization suitable?
>
> Source
> -----------------------------------
> [Owasp-appsensor-project] AppSensor Feedback/Ideas, Sat Nov 21 11:02:45 EST
> 2009
>
> https://lists.owasp.org/pipermail/owasp-appsensor-project/2009-November/000007.html
>
> Description
> -----------------------------------
> Common dictionary user names (e.g. "administrator", "admin" or "test")
> are used to attempt to log into the application.  This may enhance the
> seriousness of AE1 Use of Multiple Usernames.
>
> Suggested categorization
> -----------------------------------
> AE12 Utilization of Common User Names
>
> *** Or could just be an instance of proposed IE3 Violation of
> Implemented Black Lists ? ***
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20100609/90d081d4/attachment.html 

From jtmelton at gmail.com  Wed Jun  9 22:02:57 2010
From: jtmelton at gmail.com (John Melton)
Date: Wed, 9 Jun 2010 22:02:57 -0400
Subject: [Owasp-appsensor-project] Additional Detection Points -
	Additional or Missing Parameters
In-Reply-To: <AANLkTinZ2SNTgPuJ2lkXVIgqVocYxW9bo670I4Wsazwd@mail.gmail.com>
References: <AANLkTinZ2SNTgPuJ2lkXVIgqVocYxW9bo670I4Wsazwd@mail.gmail.com>
Message-ID: <AANLkTimyF-_C6mYHsfvQFg-nVSLn-L3GZJ3FKPD_f3Nz@mail.gmail.com>

+1 for this, and a specific instance here would be http parameter pollution
(hpp)

On Wed, Jun 9, 2010 at 10:20 AM, Colin Watson <colin.watson at owasp.org>wrote:

> Suggestion to add a new detection point.  Has this already been ruled
> out?  Should it be added?  Is the description/categorization suitable?
>
> Source
> -----------------------------------
> Just another idea, but based on WAF white listing concepts
>
> Description
> -----------------------------------
> A required header or body parameter is missing, or additional
> unexpected parameters are received with the request.
>
> Suggested categorization
> -----------------------------------
> RE5 Additional or Missing Parameters
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20100609/228b345e/attachment.html 

From jtmelton at gmail.com  Wed Jun  9 22:04:31 2010
From: jtmelton at gmail.com (John Melton)
Date: Wed, 9 Jun 2010 22:04:31 -0400
Subject: [Owasp-appsensor-project] Additional Detection Points -
	Suspicious User IP Address
In-Reply-To: <AANLkTinMLekk__zrmQpM00dNnQqL6a-y1xFAA71S2zRw@mail.gmail.com>
References: <AANLkTinMLekk__zrmQpM00dNnQqL6a-y1xFAA71S2zRw@mail.gmail.com>
Message-ID: <AANLkTimttAkXHOKHyg_fUCim9r1amabZhOKq3Cvvs5YV@mail.gmail.com>

+1 for this issue, as for your point about reputational issues " could be
used to alter/tune the thresholds and actions of AppSensor rather than
having their own actions? " - I'd be curious to hear that fleshed out a bit
more

On Wed, Jun 9, 2010 at 10:28 AM, Colin Watson <colin.watson at owasp.org>wrote:

> Suggestion to add a new detection point.  Has this already been ruled
> out?  Should it be added?  Is the description/categorization suitable?
>
> Source
> -----------------------------------
> Items 1 & 2 in
> [Owasp-appsensor-project] AppSensor- a few ideas, Fri Sep 18 10:30:31 EDT
> 2009
>
> https://lists.owasp.org/pipermail/owasp-appsensor-project/2009-September/000005.html
>
> Description
> -----------------------------------
> The user is identified as using an IP address associated with a
> blacklist (e.g. internal blacklist, list of Tor nodes e.g.
> https://torstat.xenobite.eu/ and HTTP blacklist e.g.
> http://www.projecthoneypot.org/httpbl.php and Dshield
> http://www.dshield.org and spammers e.g. Spamhaus
> http://www.spamhaus.org/ and known botnets e.g.
> http://www.shadowserver.org/wiki/).  "Suspicious" may also depend upon
> the type of user e.g. users in the "CMS manager" role should be using
> an internal network IP address, public users could be from anywhere,
> customers should only be accessing the application from a particular
> geographical region, search engine robots  should be from a limited
> range of IP addresses.
>
> Suggested categorization
> -----------------------------------
> Create a new category called "Reputation" in Behavioral Based Events
> RP1 Suspicious User IP Address
>
> *** NB this new proposed category has some more detection points (to
> follow) which could be used to alter/tune the thresholds and actions
> of AppSensor rather than having their own actions? ***
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20100609/e5f72ca0/attachment-0001.html 

From jtmelton at gmail.com  Wed Jun  9 22:09:42 2010
From: jtmelton at gmail.com (John Melton)
Date: Wed, 9 Jun 2010 22:09:42 -0400
Subject: [Owasp-appsensor-project] Additional Detection Points -
	Suspicious External User Behavior
In-Reply-To: <AANLkTinpI4r3Pfv9XJ3I3f6lsn2DTkE2mzA5RU7dPktF@mail.gmail.com>
References: <AANLkTinpI4r3Pfv9XJ3I3f6lsn2DTkE2mzA5RU7dPktF@mail.gmail.com>
Message-ID: <AANLkTinDfy4Fj2K-Etx9iTTWcv7LDILiUfdgkbWsdBOG@mail.gmail.com>

Not sure I'm on board with this one ... someone else can correct me if I'm
wrong, but this actually doesn't fit in the "application" doing detection.
By definition, something outside the app is doing the detection and is
feeding that info to the app.  I think these are worthwhile sensors that can
produce data that an application could use to make decisions, but as for it
being considered app detection, I don't generally see these as falling into
that category.  I may be convinced otherwise however :>.

On Wed, Jun 9, 2010 at 10:29 AM, Colin Watson <colin.watson at owasp.org>wrote:

> Suggestion to add a new detection point.  Has this already been ruled
> out?  Should it be added?  Is the description/categorization suitable?
>
> Source
> -----------------------------------
> [Owasp-appsensor-project] AppSensor Feedback/Ideas, Sat Nov 21 13:32:39 EST
> 2009
> https://lists.owasp.org/pipermail/owasp-appsensor-project
> On Wed, Jun 9, 2010 at 10:29 AM, Colin Watson <colin.watson at owasp.org>wrote:
> Suggestion to add a new detection point.  Has this already been ruled
> out?  Should it be added?  Is the description/categorization suitable?
> /2009-November/000008.html<https://lists.owasp.org/pipermail/owasp-appsensor-project/2009-November/000008.html>
>
> Description
> -----------------------------------
> External (to the application) devices and systems (e.g. host and
> network IDS, file integrity monitoring, disk usage monitoring,
> anti-malware service, IPS, network firewall, web application firewall,
> web server logging, XML gateway, database firewall, SIEM) have
> detected anomalous behavior by the user (e.g. session or IP address).
>
> Suggested categorization
> -----------------------------------
> In the suggested new category "Reputation" (see RP1 Suspicious User IP
> Address)
> RP2 Suspicious External User Behavior
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20100609/86e36909/attachment.html 

From jtmelton at gmail.com  Wed Jun  9 22:12:03 2010
From: jtmelton at gmail.com (John Melton)
Date: Wed, 9 Jun 2010 22:12:03 -0400
Subject: [Owasp-appsensor-project] Additional Detection Points -
	Suspicious Client-Side Behavior
In-Reply-To: <AANLkTimItMt6y5y0YV6UaqcOeCdR5LI3juW9K-eLPFM6@mail.gmail.com>
References: <AANLkTimItMt6y5y0YV6UaqcOeCdR5LI3juW9K-eLPFM6@mail.gmail.com>
Message-ID: <AANLkTimWlfh8riqMyXVxR47_Tf9t-PN_oTt0C0viqa6Q@mail.gmail.com>

I'll say +1 for this generally b/c I think it could provide helpful info,
but would like to know more about if there is anything other than CSP that
fits here ...

On Wed, Jun 9, 2010 at 10:29 AM, Colin Watson <colin.watson at owasp.org>wrote:

> Suggestion to add a new detection point.  Has this already been ruled
> out?  Should it be added?  Is the description/categorization suitable?
>
> Source
> -----------------------------------
> [Owasp-appsensor-project] AppSensor Feedback/Ideas, Sat Nov 21 13:32:39 EST
> 2009
>
> https://lists.owasp.org/pipermail/owasp-appsensor-project/2009-November/000008.html
>
> Description
> -----------------------------------
> The application receives a report of client-side policy exceptions
> (e.g. Firefox Content Security Policy violation report
> https://wiki.mozilla.org/Security/CSP/Specification#Violation_Report_Syntax
> ).
>
> Suggested categorization
> -----------------------------------
> In the suggested new category "Reputation" (see RP1 Suspicious User IP
> Address)
> RP3 Suspicious Client-Side Behavior
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20100609/66bd6f95/attachment.html 

From jtmelton at gmail.com  Wed Jun  9 22:13:58 2010
From: jtmelton at gmail.com (John Melton)
Date: Wed, 9 Jun 2010 22:13:58 -0400
Subject: [Owasp-appsensor-project] Additional Detection Points - Change
	To Application's Rating By A Third Party
In-Reply-To: <AANLkTimC4EWQfuWqBrGNAN2Cu8Qo80jBogzej-3vG2NP@mail.gmail.com>
References: <AANLkTimC4EWQfuWqBrGNAN2Cu8Qo80jBogzej-3vG2NP@mail.gmail.com>
Message-ID: <AANLkTinIVYYUwTTQzNnFGDSH-6bFPbACNiSdJJWAcR2J@mail.gmail.com>

think this is a good idea, but again, don't think it falls under application
intrusion detection - a 3rd party is doing the detection, then there may be
a mechanism to use that data to make decisions.  These ideas are good enough
to certainly be used, but I don't understand their classification as part of
a app intr det. system.

On Wed, Jun 9, 2010 at 10:30 AM, Colin Watson <colin.watson at owasp.org>wrote:

> Suggestion to add a new detection point.  Has this already been ruled
> out?  Should it be added?  Is the description/categorization suitable?
>
> Source
> -----------------------------------
> Just another idea
>
> Description
> -----------------------------------
> The reputation (classification, score, etc) of the application (or its
> servers) is changed by free or subscribed third party remote
> monitoring/testing services (e.g. malware detection, phishing site
> detection, uptime monitoring, reputation monitoring, spam and botnet
> lists, SSL configuration testing, HTML, CSS, RSS and XML validators,
> vulnerability scanners, penetration testing, DNS address, etc).  For
> example, syntax errors are found in an application's user comments RSS
> feed which may have been caused by incorrect output encoding.
>
> Suggested categorization
> -----------------------------------
> In the suggested new category "Reputation" (see RP1 Suspicious User IP
> Address)
> RP4 Change To Application's Rating By A Third Party
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20100609/c729e454/attachment.html 

From jtmelton at gmail.com  Wed Jun  9 22:15:51 2010
From: jtmelton at gmail.com (John Melton)
Date: Wed, 9 Jun 2010 22:15:51 -0400
Subject: [Owasp-appsensor-project] Additional Detection Points - Change
	to Environment Threat Level
In-Reply-To: <AANLkTilW4VdQ5G8bngrFONAm4IgmYAlrSrxJemNpxu41@mail.gmail.com>
References: <AANLkTilW4VdQ5G8bngrFONAm4IgmYAlrSrxJemNpxu41@mail.gmail.com>
Message-ID: <AANLkTimx-9K-AZ3hLM9Ks6yPBMejeazpwkO_U_7axjZa@mail.gmail.com>

I say no here for now ... I think this could be incredibly useful, but as
there's currently no concept of a tiered response level in appsensor, I
don't think this should be included until that concept exists.

On Wed, Jun 9, 2010 at 10:32 AM, Colin Watson <colin.watson at owasp.org>wrote:

> Suggestion to add a new detection point.  Has this already been ruled
> out?  Should it be added?  Is the description/categorization suitable?
>
> Source
> -----------------------------------
> Just another idea, but based on discussions about creating an Internet
> Threat Exposure (ITE) index by the UK Cybersecurity KTN in 2008.
>
> Description
> -----------------------------------
> The general threat level (e.g. general risk of attack from the
> Internet, or specific targetted attacks against an organisation) is
> elevated.  This could also be used to change response sensitivity due
> to short-term effects such as application upgrades/patching.  This
> input could be used to alter thresholds for AppSensor responses.
>
> Suggested categorization
> -----------------------------------
> In the suggested new category "Reputation" (see RP1 Suspicious User IP
> Address)
> RP5 Change to Environment Threat Level
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20100609/e2d9706e/attachment.html 

From jtmelton at gmail.com  Wed Jun  9 22:18:28 2010
From: jtmelton at gmail.com (John Melton)
Date: Wed, 9 Jun 2010 22:18:28 -0400
Subject: [Owasp-appsensor-project] Additional Detection Points - Detect
	Client Information
In-Reply-To: <AANLkTinM7JkW5EXet3UpgpzTAQi6uLCqbidv8aFSgek1@mail.gmail.com>
References: <AANLkTinM7JkW5EXet3UpgpzTAQi6uLCqbidv8aFSgek1@mail.gmail.com>
Message-ID: <AANLkTincCJ6c-2v3qtZdDDyX6eTmi4XgKlHWGfsN1OOd@mail.gmail.com>

I'm against this as a detection point.  It actually sounds like a response
action in our lingo.  This is about what do *I* do if I've decided that the
user has passed my threshold, not what did the *user* do to pass my
threshold.  Don't think this fits the detection point category.

On Wed, Jun 9, 2010 at 10:34 AM, Colin Watson <colin.watson at owasp.org>wrote:

> Suggestion to add a new detection point.  Has this already been ruled
> out?  Should it be added?  Is the description/categorization suitable?
>
> Source
> -----------------------------------
> Just another idea - this one could be the most controversial since it
> might be seen as an active attack on the user.  The idea is
> information gathering rather than electronic counter measures.  After
> all, logging a user out also affects them.
>
> Description
> -----------------------------------
> At a certain threshold, deploy additional sensor(s) onto the client
> such as. a Java applet to return the client's IP address,  JavaScript
> to collect additional data about the user's environment (e.g.
> Panopticlick http://panopticlick.eff.org/), or JavaScript to detect
> local network information.  These actions must be consistent with the
> application's terms of use, privacy notice and organizational
> mandates.
>
> Suggested categorization
> -----------------------------------
> In the suggested new category "Reputation" (see RP1 Suspicious User IP
> Address)
> RP6 Detect Client Information
>
> *** This may instead be an AppSensor response action, even thought it
> is deploying a new sensor ? ****
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20100609/9f307e4d/attachment-0001.html 

From jtmelton at gmail.com  Wed Jun  9 22:19:12 2010
From: jtmelton at gmail.com (John Melton)
Date: Wed, 9 Jun 2010 22:19:12 -0400
Subject: [Owasp-appsensor-project] Change to Detection Points - ACE3
	Force Browsing Attempts
In-Reply-To: <AANLkTiktouvygH87CEVYJDSParkbfZaUcz4z4BF48BS6@mail.gmail.com>
References: <AANLkTiktouvygH87CEVYJDSParkbfZaUcz4z4BF48BS6@mail.gmail.com>
Message-ID: <AANLkTimky1jIdCGhzB6_tH06F_0s5WmZ229bG-C71ezn@mail.gmail.com>

+1 for me

On Wed, Jun 9, 2010 at 10:34 AM, Colin Watson <colin.watson at owasp.org>wrote:

> Suggestion to CHANGE an existing detection point.  Has this already
> been ruled out?  Should it be changed?
>
> Source
> -----------------------------------
> Just another idea
>
> Description
> -----------------------------------
> Request for non-existent resources should include all content types,
> not just pages.  It is also useful to record this for unauthenticated
> users where the data may still be identified with a session or IP
> address.
>
> 1. Leave name unchanged (i.e. keep as "Force Browsing Attempts")
>
> 2. Change description to "Authenticated or unauthenticated user sends
> a request for a non-existent resource (e.g. page, directory listing,
> image, file, etc), or a resource that is not authorized for that user"
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20100609/3726a37f/attachment.html 

From jtmelton at gmail.com  Wed Jun  9 22:21:04 2010
From: jtmelton at gmail.com (John Melton)
Date: Wed, 9 Jun 2010 22:21:04 -0400
Subject: [Owasp-appsensor-project] Change to Detection Points - SE6
	Change Of User Agent Mid Session
In-Reply-To: <AANLkTimMTqaLX1l_bPxi9atoRpx8ur2sJXXx1l0b2kKU@mail.gmail.com>
References: <AANLkTimMTqaLX1l_bPxi9atoRpx8ur2sJXXx1l0b2kKU@mail.gmail.com>
Message-ID: <AANLkTind5zndgYj_2caW_2eZ0-biQC8Kkw6qvc6w5T1V@mail.gmail.com>

I vote for splitting out into a new issue, since the name does denote the
user agent changing, which most people associate w/ that one header, for
better or worse.

On Wed, Jun 9, 2010 at 10:35 AM, Colin Watson <colin.watson at owasp.org>wrote:

> Suggestion to CHANGE an existing detection point.  Has this already
> been ruled out?  Should it be changed?
>
> Source
> -----------------------------------
> Just another idea
>
> Description
> -----------------------------------
> Other headers such as Accept-Encoding and Accept-Language can be used
> to help detect a session being used by someone else.  It could relate
> to public resources too (i.e. unauthenticated users).
>
> 1. Leave name unchanged (i.e. keep as "Change Of User Agent Mid Session")
>
> 2. Change first sentence of description to "The header User-Agent or
> Accept-Encoding or Accept-Language change during an authenticated
> session."
>
> 3. Removed the word "authenticated" from above sentence?
>
> *** Or split this idea out into a new sensor e.g. SE7? ***
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20100609/a781abe8/attachment.html 

From jtmelton at gmail.com  Wed Jun  9 22:24:55 2010
From: jtmelton at gmail.com (John Melton)
Date: Wed, 9 Jun 2010 22:24:55 -0400
Subject: [Owasp-appsensor-project] Change to Detection Points - SE5
	Source IP Address Changes During Session
In-Reply-To: <AANLkTin_zH5Qa4ueioJw875afDWJ14DNwKM0PMS3rYKd@mail.gmail.com>
References: <AANLkTin_zH5Qa4ueioJw875afDWJ14DNwKM0PMS3rYKd@mail.gmail.com>
Message-ID: <AANLkTilzhUXX3O9Z8Epncax6U8DF0EfQ-luA3e8a7KpW@mail.gmail.com>

just need a bit more info here - is the intention to allow a user to switch
IPs as long as it's in the same range and / or ASN and be considered ok?

On Wed, Jun 9, 2010 at 10:35 AM, Colin Watson <colin.watson at owasp.org>wrote:

> Suggestion to CHANGE an existing detection point.  Has this already
> been ruled out?  Should it be changed?
>
> Source
> -----------------------------------
> [Owasp-appsensor-project] AppSensor- a few ideas, Fri Sep 18 10:30:31 EDT
> 2009
>
> https://lists.owasp.org/pipermail/owasp-appsensor-project/2009-September/000005.html
>
> Description
> -----------------------------------
> Rather than a single IP Address, make the sensor specification broader
> to also allow ASN check instead.
>
> 1. Leave name unchanged (i.e. keep as "Source IP Address Changes
> During Session")
>
> 2. Change description to "Valid requests, containing valid session
> credentials, are received from multiple source IP addresses or source
> IP address ranges or source Autonomous System Number (ASN)"
>
> Reference
> http://www.apnic.net/services/services-apnic-provides/helpdesk/faqs/asn-faqs
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20100609/0546af3c/attachment.html 

From kevin.w.wall at gmail.com  Thu Jun 10 00:45:32 2010
From: kevin.w.wall at gmail.com (Kevin W. Wall)
Date: Thu, 10 Jun 2010 00:45:32 -0400
Subject: [Owasp-appsensor-project] Additional Detection Points
 -	Suspicious External User Behavior
In-Reply-To: <AANLkTinDfy4Fj2K-Etx9iTTWcv7LDILiUfdgkbWsdBOG@mail.gmail.com>
References: <AANLkTinpI4r3Pfv9XJ3I3f6lsn2DTkE2mzA5RU7dPktF@mail.gmail.com>
	<AANLkTinDfy4Fj2K-Etx9iTTWcv7LDILiUfdgkbWsdBOG@mail.gmail.com>
Message-ID: <4C106DEC.6080907@gmail.com>

While it is possible for an application to do its own sort of self-detection /
navel gazing (e.g., monitor its memory usage, # of threads, # of socket
connections, etc.) or monitor its own integrity (e.g., a static initializer
in a signed jar verifies the signature [not too hard to do] to see if the
jar has been tampered with since being signed), I agree with John that
typically these things are done by *external* monitoring rather than by
the application themselves.

I suppose the benefit of doing it in some reusable code components (e.g., a jar,
a web service, etc.) is that is doesn't require any external set up. For
instance, if ESAPI for Java were to deliver a signed jar, how many developers
would actually take the time to verify the jar using 'jarsigner -verify' as
simple as this is. My bet...not too many. So in some cases, it might be useful
to have the "application" (or one of its components) do this sort of built-in
detection. (Disclaimer: I was planning something like this for a future version
of ESAPI.)

Just my $.02,
-kevin

John Melton wrote:
> Not sure I'm on board with this one ... someone else can correct me if I'm
> wrong, but this actually doesn't fit in the "application" doing detection.
> By definition, something outside the app is doing the detection and is
> feeding that info to the app.  I think these are worthwhile sensors that can
> produce data that an application could use to make decisions, but as for it
> being considered app detection, I don't generally see these as falling into
> that category.  I may be convinced otherwise however :>.
> 
> On Wed, Jun 9, 2010 at 10:29 AM, Colin Watson <colin.watson at owasp.org>wrote:
> 
>> Suggestion to add a new detection point.  Has this already been ruled
>> out?  Should it be added?  Is the description/categorization suitable?
>>
>> Source
>> -----------------------------------
>> [Owasp-appsensor-project] AppSensor Feedback/Ideas, Sat Nov 21 13:32:39 EST
>> 2009
>> https://lists.owasp.org/pipermail/owasp-appsensor-project
>> On Wed, Jun 9, 2010 at 10:29 AM, Colin Watson <colin.watson at owasp.org>wrote:
>> Suggestion to add a new detection point.  Has this already been ruled
>> out?  Should it be added?  Is the description/categorization suitable?
>> /2009-November/000008.html<https://lists.owasp.org/pipermail/owasp-appsensor-project/2009-November/000008.html>
>>
>> Description
>> -----------------------------------
>> External (to the application) devices and systems (e.g. host and
>> network IDS, file integrity monitoring, disk usage monitoring,
>> anti-malware service, IPS, network firewall, web application firewall,
>> web server logging, XML gateway, database firewall, SIEM) have
>> detected anomalous behavior by the user (e.g. session or IP address).
>>
>> Suggested categorization
>> -----------------------------------
>> In the suggested new category "Reputation" (see RP1 Suspicious User IP
>> Address)
>> RP2 Suspicious External User Behavior
-- 
Kevin W. Wall
"The most likely way for the world to be destroyed, most experts agree,
is by accident. That's where we come in; we're computer professionals.
We cause accidents."        -- Nathaniel Borenstein, co-creator of MIME

From colin.watson at owasp.org  Thu Jun 10 03:38:11 2010
From: colin.watson at owasp.org (Colin Watson)
Date: Thu, 10 Jun 2010 08:38:11 +0100
Subject: [Owasp-appsensor-project] Change to Detection Points - SE5
	Source IP Address Changes During Session
In-Reply-To: <AANLkTilzhUXX3O9Z8Epncax6U8DF0EfQ-luA3e8a7KpW@mail.gmail.com>
References: <AANLkTin_zH5Qa4ueioJw875afDWJ14DNwKM0PMS3rYKd@mail.gmail.com>
	<AANLkTilzhUXX3O9Z8Epncax6U8DF0EfQ-luA3e8a7KpW@mail.gmail.com>
Message-ID: <AANLkTikAeQFi7u4eayr1aE5pezM9cTFZnLd46PASEyBq@mail.gmail.com>

John

Thank you for getting the discussion going and your good questions.

> just need a bit more info here - is the intention to allow a user to switch
> IPs as long as it's in the same range and / or ASN and be considered ok?

I'm not sure how "prescriptive" the controls are meant to be.  If
developers roll their own code, they could perhaps choose any one of
these three to suit their application.  For example, if it was an
intranet, a fixed IP might be reasonable.  An online shop may want to
be a bit more flexible to cater for users whose IP addresses change
during their session by use of a proxy.

Do we need to consider X-Forwarded-For here too?

Colin

From colin.watson at owasp.org  Thu Jun 10 03:41:48 2010
From: colin.watson at owasp.org (Colin Watson)
Date: Thu, 10 Jun 2010 08:41:48 +0100
Subject: [Owasp-appsensor-project] Change to Detection Points - SE6
	Change Of User Agent Mid Session
In-Reply-To: <AANLkTind5zndgYj_2caW_2eZ0-biQC8Kkw6qvc6w5T1V@mail.gmail.com>
References: <AANLkTimMTqaLX1l_bPxi9atoRpx8ur2sJXXx1l0b2kKU@mail.gmail.com>
	<AANLkTind5zndgYj_2caW_2eZ0-biQC8Kkw6qvc6w5T1V@mail.gmail.com>
Message-ID: <AANLkTikBz_ymsHCvBeB_99XNUl9946LZUMdZsF5so7bd@mail.gmail.com>

John

> I vote for splitting out into a new issue, since the name does denote the
> user agent changing, which most people associate w/ that one header, for
> better or worse.

Yes, the name perhaps restricts the change.  It's just that its quite
like very similar code could be used to record/check this e.g. a
single hash of a concatenation of the three headers stored with
against the session.

Maybe SE6 could say "optionally also include...." if we are allowing
the detection points to be less prescriptive?

Colin

From colin.watson at owasp.org  Thu Jun 10 03:59:18 2010
From: colin.watson at owasp.org (Colin Watson)
Date: Thu, 10 Jun 2010 08:59:18 +0100
Subject: [Owasp-appsensor-project] Additional Detection Points -
	Violation of Security Log Integrity
In-Reply-To: <AANLkTilz0RO_FTukzdlWxwjxII_O5p1Ezbfl0M3Y_3LO@mail.gmail.com>
References: <AANLkTilfSKmy5oOSoK0-FMlKcxpoJxFh-qOeMEXEOVau@mail.gmail.com>
	<AANLkTikdNronmWZv4FlVdeXZHW6mPshWiqyP_0aSWNyW@mail.gmail.com>
	<AANLkTiny3-KiQOp7dts4gK4nnKLZImKT6UEExL9fPlhc@mail.gmail.com>
	<AANLkTinRFXo8bBzjwNAcPTmix86OV6herVuedIrZw-ZO@mail.gmail.com>
	<AANLkTin11MLJN2PqZoiblYXzqW246wLiT77r0FdgIT0n@mail.gmail.com>
	<AANLkTilz0RO_FTukzdlWxwjxII_O5p1Ezbfl0M3Y_3LO@mail.gmail.com>
Message-ID: <AANLkTikBeTrg_QDqyGm0TjRQDmARBfZfg7KVOCgKIXfG@mail.gmail.com>

Giri

> Any real world examples for this case?

Some possibilities:

1.  special characters embedded in logged data cause the data to
overwrite a previous log entry
2.  direct access to a logging database (e.g. SQLi, direct connect to
management interface, compromised host, access by DBA) allows someone
to delete some previous records
3.  as above, but a record modified (e.g. a user ID changed)
4.  as above, but fake entries added
5.  a file log is deleted (e.g. using command injection or by direct
server access)

Remember "attackers" might be insiders too.

By giving a unique ID, time-stamping and building in integrity checks
of each record (e.g. a message digest) and its relationship with the
previous record (another message digest?) allow additions, deletions
and alterations to be identified.

See also:

a) NIST SP 800-92 Guide to Security Log Management,
http://csrc.nist.gov/publications/nistpubs/800-92/SP800-92.pdf

b) Tamper Detection in Audit Logs,
http://www.cs.toronto.edu/vldb04/protected/eProceedings/contents/pdf/RS13P1.PDF

c) Forensic Tamper Detection in SQL Server,
http://www.sqlsecurity.com/images/tamper/tamperdetection.htm

Colin

On 10 June 2010 03:51, John Melton <jtmelton at gmail.com> wrote:
> Giri,
> Take a peek at
> http://code.google.com/p/owasp-esapi-java/source/browse/trunk/src/main/java/org/owasp/esapi/reference/Log4JLogFactory.java
> which does replacing of CR and LF characters to prevent log forging as a
> simple common example.
> John
>
> On Wed, Jun 9, 2010 at 10:42 PM, giri vara prasad nambari
> <girinambari at gmail.com> wrote:
>>
>> Hi Jhon/Colin,
>>
>> Any real world examples for this case?
>>
>> Thank you,
>> Giri
>>
>> On Wed, Jun 9, 2010 at 9:52 PM, John Melton <jtmelton at gmail.com> wrote:
>>>
>>> +1 for me
>>>
>>> On Wed, Jun 9, 2010 at 10:39 AM, Colin Watson <colin.watson at owasp.org>
>>> wrote:
>>> > John
>>> >
>>> > On 9 June 2010 15:29, John Melton <jtmelton at gmail.com> wrote:
>>> >> is this presumably to catch log forging attempts?
>>> >
>>> > Yes preventing insertion of entries and corruption of the log, but
>>> > also prevention of record deletion and detection of changes to log
>>> > entries. ?AppSensor will rely on the accuracy of "log" data to make
>>> > decisions when thresholds are reached, and therefore I thought
>>> > protecting this source data is important - a bit of self-protection.
>>> >
>>> > Colin
>>> >
>>> _______________________________________________
>>> Owasp-appsensor-project mailing list
>>> Owasp-appsensor-project at lists.owasp.org
>>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>
>>
>>
>> --
>> Giri
>> Sun Certified Java Prorgammer
>
>

From colin.watson at owasp.org  Thu Jun 10 04:10:55 2010
From: colin.watson at owasp.org (Colin Watson)
Date: Thu, 10 Jun 2010 09:10:55 +0100
Subject: [Owasp-appsensor-project] Additional Detection Points -
	Suspicious User IP Address
In-Reply-To: <AANLkTimttAkXHOKHyg_fUCim9r1amabZhOKq3Cvvs5YV@mail.gmail.com>
References: <AANLkTinMLekk__zrmQpM00dNnQqL6a-y1xFAA71S2zRw@mail.gmail.com>
	<AANLkTimttAkXHOKHyg_fUCim9r1amabZhOKq3Cvvs5YV@mail.gmail.com>
Message-ID: <AANLkTikt1PE2IaUS1K6Wn7Y1KFVhGfZjNNOCESJDFUh5@mail.gmail.com>

John

> +1 for this issue, as for your point about reputational issues " could be
> used to alter/tune the thresholds and actions of AppSensor rather than
> having their own actions? " - I'd be curious to hear that fleshed out a bit
> more

Well this might depend on whether we have anything else in the
proposed Reputational category!

But my thoughts were we could either:

a) treat it like any other detection point contributing to the count
of suspicious events (although some might be attack events if say an
intranet application receives requests from an external network)

b) use the reputational detectors to alter the threshold levels and
associated response actions i.e. thresholds based on role

So in the latter case, if the authenticated user is accessing the
application from an expected IP address (the customer's HQ), AppSensor
might be a little more generous before logging the user out or locking
their account, than if the authenticated user is on the road and using
a previously unknown public IP (which might be an attack with stolen
credentials).  If the user is the application itself (say a scheduled
task called over HTTP by itself/localhost), then the thresholds should
be much tighter.

Colin

From colin.watson at owasp.org  Thu Jun 10 04:12:24 2010
From: colin.watson at owasp.org (Colin Watson)
Date: Thu, 10 Jun 2010 09:12:24 +0100
Subject: [Owasp-appsensor-project] Additional Detection Points -
	Additional or Missing Parameters
In-Reply-To: <AANLkTimyF-_C6mYHsfvQFg-nVSLn-L3GZJ3FKPD_f3Nz@mail.gmail.com>
References: <AANLkTinZ2SNTgPuJ2lkXVIgqVocYxW9bo670I4Wsazwd@mail.gmail.com>
	<AANLkTimyF-_C6mYHsfvQFg-nVSLn-L3GZJ3FKPD_f3Nz@mail.gmail.com>
Message-ID: <AANLkTimsge81IFxk7uYWABrTrWQD9I_Ybd7S0MEa1gFu@mail.gmail.com>

John

Yes, adding the word "duplicated" in the description would be a good idea.

Colin

On 10 June 2010 03:02, John Melton <jtmelton at gmail.com> wrote:
> +1 for this, and a specific instance here would be http parameter pollution
> (hpp)

From colin.watson at owasp.org  Thu Jun 10 04:17:10 2010
From: colin.watson at owasp.org (Colin Watson)
Date: Thu, 10 Jun 2010 09:17:10 +0100
Subject: [Owasp-appsensor-project] Additional Detection Points -
	Violation of Input Data Integrity
In-Reply-To: <AANLkTilNSAYQX22hIUtD4a27xdE9Q_qAQdLnmbfDXo0o@mail.gmail.com>
References: <AANLkTimwfr00aj6Lrxsc3sgLUIZAWHrJt7IffygM6NW0@mail.gmail.com>
	<AANLkTilNSAYQX22hIUtD4a27xdE9Q_qAQdLnmbfDXo0o@mail.gmail.com>
Message-ID: <AANLkTilLMw4pt2eah9nOvWJkERs5ZcjFdPx4nIga1mJI@mail.gmail.com>

John

ACE1 and ACE2 mention "... for Direct Object Access Attempts"
explicitly, but I was thinking that tampering with data is a wider
subject.  It might just be some plain text or a date that doesn't
reference an object, but it's still important to preserve the
integrity of that.

Colin

On 10 June 2010 02:56, John Melton <jtmelton at gmail.com> wrote:
> for this one, I don't think it's unique enough based on the
> description ... get/post is already covered. ?If you're talking about
> creating "honeypot" parms as mentioned in the source file, then I'd
> say sure, but not with the description as written. ?Also, http header
> manipulation might be unique enough, since cookies and get/post parms
> are already covered.
>

From colin.watson at owasp.org  Thu Jun 10 04:53:17 2010
From: colin.watson at owasp.org (Colin Watson)
Date: Thu, 10 Jun 2010 09:53:17 +0100
Subject: [Owasp-appsensor-project] Additional Detection Points -
	Suspicious External User Behavior
In-Reply-To: <4C106DEC.6080907@gmail.com>
References: <AANLkTinpI4r3Pfv9XJ3I3f6lsn2DTkE2mzA5RU7dPktF@mail.gmail.com>
	<AANLkTinDfy4Fj2K-Etx9iTTWcv7LDILiUfdgkbWsdBOG@mail.gmail.com>
	<4C106DEC.6080907@gmail.com>
Message-ID: <AANLkTinxOs5vuVekXgGmIvxi56TbUkdrKjEKgoMbAUHr@mail.gmail.com>

John and Kevin

I like "navel gazing" as a description!  I was thinking these were
external sensory feeds rather than the application itself doing the
sensing, and that would be rather different to the existing detection
points as you say.  But we do configure applications to run in each
environment, and therefore I wondered if there might be useful data
elsewhere that would help the application determine its response (e.g.
affect the thresholds).

I tried to make this detection point's description as broad as
possible, but that may not have helped.    It might be that some of
the existing sensors are more efficient if the data is collected
elsewhere (e.g. HTTP protocol analysis), or in some cases the data may
not be available directly to the application (e.g. missing static
content requests, but which the web server knows about).

But my first use-case would be to get data from a WAF.  For example,
ModSecurity can add an HTTP header with its transaction anomaly score
(X-WAF-Score).  This type of data is available from other WAFs too.
The response can then be determined by the application based on trends
and its other sensor data rather than the relatively crude WAF
response options.

The idea of more self-checks is interesting though.  I have previously
added code to ensure that dev/test/live applications settings couldn't
conflict with whether the site was on the public domain vs an internal
IP.  Code integrity... that would be interesting.

I wonder if we need an Appendix with experimental sensor ideas?  These
are good suggestions, and it would be a pity to lose the information.

Colin

On 10 June 2010 05:45, Kevin W. Wall <kevin.w.wall at gmail.com> wrote:
> While it is possible for an application to do its own sort of self-detection /
> navel gazing (e.g., monitor its memory usage, # of threads, # of socket
> connections, etc.) or monitor its own integrity (e.g., a static initializer
> in a signed jar verifies the signature [not too hard to do] to see if the
> jar has been tampered with since being signed), I agree with John that
> typically these things are done by *external* monitoring rather than by
> the application themselves.
>
> I suppose the benefit of doing it in some reusable code components (e.g., a jar,
> a web service, etc.) is that is doesn't require any external set up. For
> instance, if ESAPI for Java were to deliver a signed jar, how many developers
> would actually take the time to verify the jar using 'jarsigner -verify' as
> simple as this is. My bet...not too many. So in some cases, it might be useful
> to have the "application" (or one of its components) do this sort of built-in
> detection. (Disclaimer: I was planning something like this for a future version
> of ESAPI.)
>
> Just my $.02,
> -kevin
>
> John Melton wrote:
>> Not sure I'm on board with this one ... someone else can correct me if I'm
>> wrong, but this actually doesn't fit in the "application" doing detection.
>> By definition, something outside the app is doing the detection and is
>> feeding that info to the app. ?I think these are worthwhile sensors that can
>> produce data that an application could use to make decisions, but as for it
>> being considered app detection, I don't generally see these as falling into
>> that category. ?I may be convinced otherwise however :>.
>>
>> On Wed, Jun 9, 2010 at 10:29 AM, Colin Watson <colin.watson at owasp.org>wrote:
>>
>>> Suggestion to add a new detection point. ?Has this already been ruled
>>> out? ?Should it be added? ?Is the description/categorization suitable?
>>>
>>> Source
>>> -----------------------------------
>>> [Owasp-appsensor-project] AppSensor Feedback/Ideas, Sat Nov 21 13:32:39 EST
>>> 2009
>>> https://lists.owasp.org/pipermail/owasp-appsensor-project
>>> On Wed, Jun 9, 2010 at 10:29 AM, Colin Watson <colin.watson at owasp.org>wrote:
>>> Suggestion to add a new detection point. ?Has this already been ruled
>>> out? ?Should it be added? ?Is the description/categorization suitable?
>>> /2009-November/000008.html<https://lists.owasp.org/pipermail/owasp-appsensor-project/2009-November/000008.html>
>>>
>>> Description
>>> -----------------------------------
>>> External (to the application) devices and systems (e.g. host and
>>> network IDS, file integrity monitoring, disk usage monitoring,
>>> anti-malware service, IPS, network firewall, web application firewall,
>>> web server logging, XML gateway, database firewall, SIEM) have
>>> detected anomalous behavior by the user (e.g. session or IP address).
>>>
>>> Suggested categorization
>>> -----------------------------------
>>> In the suggested new category "Reputation" (see RP1 Suspicious User IP
>>> Address)
>>> RP2 Suspicious External User Behavior
> --
> Kevin W. Wall
> "The most likely way for the world to be destroyed, most experts agree,
> is by accident. That's where we come in; we're computer professionals.
> We cause accidents." ? ? ? ?-- Nathaniel Borenstein, co-creator of MIME
>

From colin.watson at owasp.org  Thu Jun 10 04:55:54 2010
From: colin.watson at owasp.org (Colin Watson)
Date: Thu, 10 Jun 2010 09:55:54 +0100
Subject: [Owasp-appsensor-project] Additional Detection Points - Change
	To Application's Rating By A Third Party
In-Reply-To: <AANLkTinIVYYUwTTQzNnFGDSH-6bFPbACNiSdJJWAcR2J@mail.gmail.com>
References: <AANLkTimC4EWQfuWqBrGNAN2Cu8Qo80jBogzej-3vG2NP@mail.gmail.com>
	<AANLkTinIVYYUwTTQzNnFGDSH-6bFPbACNiSdJJWAcR2J@mail.gmail.com>
Message-ID: <AANLkTilUT8krRf4WhGR3MMoR_GGOhEDgp4kTBZ3FHc6j@mail.gmail.com>

John

Perhaps the best example I can think of is:

  "Google reports you have malware on your web pages"

Unless you subscribe to Google Webmaster Tools, you might not know
about this problem.

Colin

On 10 June 2010 03:13, John Melton <jtmelton at gmail.com> wrote:
> think this is a good idea, but again, don't think it falls under application
> intrusion detection - a 3rd party is doing the detection, then there may be
> a mechanism to use that data to make decisions.? These ideas are good enough
> to certainly be used, but I don't understand their classification as part of
> a app intr det. system.
>
> On Wed, Jun 9, 2010 at 10:30 AM, Colin Watson <colin.watson at owasp.org>
> wrote:
>>
>> Suggestion to add a new detection point. ?Has this already been ruled
>> out? ?Should it be added? ?Is the description/categorization suitable?
>>
>> Source
>> -----------------------------------
>> Just another idea
>>
>> Description
>> -----------------------------------
>> The reputation (classification, score, etc) of the application (or its
>> servers) is changed by free or subscribed third party remote
>> monitoring/testing services (e.g. malware detection, phishing site
>> detection, uptime monitoring, reputation monitoring, spam and botnet
>> lists, SSL configuration testing, HTML, CSS, RSS and XML validators,
>> vulnerability scanners, penetration testing, DNS address, etc). ?For
>> example, syntax errors are found in an application's user comments RSS
>> feed which may have been caused by incorrect output encoding.
>>
>> Suggested categorization
>> -----------------------------------
>> In the suggested new category "Reputation" (see RP1 Suspicious User IP
>> Address)
>> RP4 Change To Application's Rating By A Third Party
>> _______________________________________________
>> Owasp-appsensor-project mailing list
>> Owasp-appsensor-project at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
>

From jtmelton at gmail.com  Thu Jun 10 09:05:41 2010
From: jtmelton at gmail.com (John Melton)
Date: Thu, 10 Jun 2010 09:05:41 -0400
Subject: [Owasp-appsensor-project] Additional Detection Points -
	Violation of Input Data Integrity
In-Reply-To: <AANLkTilLMw4pt2eah9nOvWJkERs5ZcjFdPx4nIga1mJI@mail.gmail.com>
References: <AANLkTimwfr00aj6Lrxsc3sgLUIZAWHrJt7IffygM6NW0@mail.gmail.com> 
	<AANLkTilNSAYQX22hIUtD4a27xdE9Q_qAQdLnmbfDXo0o@mail.gmail.com> 
	<AANLkTilLMw4pt2eah9nOvWJkERs5ZcjFdPx4nIga1mJI@mail.gmail.com>
Message-ID: <AANLkTinc3v2lvi2-mojDoWK-yWiVco3xxUYyvJo3UpUM@mail.gmail.com>

agreed ... that sounds good then.

On Thu, Jun 10, 2010 at 4:17 AM, Colin Watson <colin.watson at owasp.org>wrote:

> John
>
> ACE1 and ACE2 mention "... for Direct Object Access Attempts"
> explicitly, but I was thinking that tampering with data is a wider
> subject.  It might just be some plain text or a date that doesn't
> reference an object, but it's still important to preserve the
> integrity of that.
>
> Colin
>
> On 10 June 2010 02:56, John Melton <jtmelton at gmail.com> wrote:
> > for this one, I don't think it's unique enough based on the
> > description ... get/post is already covered.  If you're talking about
> > creating "honeypot" parms as mentioned in the source file, then I'd
> > say sure, but not with the description as written.  Also, http header
> > manipulation might be unique enough, since cookies and get/post parms
> > are already covered.
> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20100610/0aaca89e/attachment-0001.html 

From michael.coates at owasp.org  Thu Jun 10 17:13:31 2010
From: michael.coates at owasp.org (Michael Coates)
Date: Thu, 10 Jun 2010 14:13:31 -0700
Subject: [Owasp-appsensor-project] Additional Detection Points -
 Utilization of Common User Names
In-Reply-To: <AANLkTimerLCBBsc4c6-V0_KE5kaM7QVDmRnKylP-35-q@mail.gmail.com>
References: <AANLkTikP0WQZg8VUEt_qtiQUrgTO-8eIIY4TkqE0Ynhm@mail.gmail.com>
	<AANLkTimerLCBBsc4c6-V0_KE5kaM7QVDmRnKylP-35-q@mail.gmail.com>
Message-ID: <4C11557B.9070902@owasp.org>

I agree this should be a separate detection point. Looks like AE12 is 
the next spot.  It would make sense to be near AE1, but I don't won't to 
rearrange any number assignements since they are already referenced by 
others (modsecurity). So we will just continue to iterate.

Colin: can you add these directly to : 
http://www.owasp.org/index.php/AppSensor_DetectionPoints

You'll have to copy and paste the wiki formatting from the previous 
detection point, but it shouldn't be too bad I hope.

Michael Coates
OWASP


On 6/9/10 7:01 PM, John Melton wrote:
> I vote +1 for this .. while I see it could be part of IE3, I think it 
> should probably be called out separately
>
> On Wed, Jun 9, 2010 at 10:19 AM, Colin Watson <colin.watson at owasp.org 
> <mailto:colin.watson at owasp.org>> wrote:
>
>     Suggestion to add a new detection point.  Has this already been ruled
>     out?  Should it be added?  Is the description/categorization suitable?
>
>     Source
>     -----------------------------------
>     [Owasp-appsensor-project] AppSensor Feedback/Ideas, Sat Nov 21
>     11:02:45 EST 2009
>     https://lists.owasp.org/pipermail/owasp-appsensor-project/2009-November/000007.html
>
>     Description
>     -----------------------------------
>     Common dictionary user names (e.g. "administrator", "admin" or "test")
>     are used to attempt to log into the application.  This may enhance the
>     seriousness of AE1 Use of Multiple Usernames.
>
>     Suggested categorization
>     -----------------------------------
>     AE12 Utilization of Common User Names
>
>     *** Or could just be an instance of proposed IE3 Violation of
>     Implemented Black Lists ? ***
>     _______________________________________________
>     Owasp-appsensor-project mailing list
>     Owasp-appsensor-project at lists.owasp.org
>     <mailto:Owasp-appsensor-project at lists.owasp.org>
>     https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
>
>
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>    
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20100610/3ed7cf09/attachment.html 

From michael.coates at owasp.org  Thu Jun 10 18:59:08 2010
From: michael.coates at owasp.org (Michael Coates)
Date: Thu, 10 Jun 2010 15:59:08 -0700
Subject: [Owasp-appsensor-project] Additional Detection Points -
 Additional or Missing Parameters
In-Reply-To: <AANLkTimyF-_C6mYHsfvQFg-nVSLn-L3GZJ3FKPD_f3Nz@mail.gmail.com>
References: <AANLkTinZ2SNTgPuJ2lkXVIgqVocYxW9bo670I4Wsazwd@mail.gmail.com>
	<AANLkTimyF-_C6mYHsfvQFg-nVSLn-L3GZJ3FKPD_f3Nz@mail.gmail.com>
Message-ID: <4C116E3C.5090600@owasp.org>

I could have sworn that unexpected headers was on the list. I remember 
testing it in my old demo app.  Oh well, its not at that link so we 
should add it.

I would divide this into two detection points. One for missing an 
expected header and one for receiving an unexpected header.  The later 
is actually very tricky as I found because all sorts of proxies will 
attach weird x-something headers.  We should mention that in the 
comments for that detection point.

Michael Coates
OWASP


On 6/9/10 7:02 PM, John Melton wrote:
> +1 for this, and a specific instance here would be http parameter 
> pollution (hpp)
>
> On Wed, Jun 9, 2010 at 10:20 AM, Colin Watson <colin.watson at owasp.org 
> <mailto:colin.watson at owasp.org>> wrote:
>
>     Suggestion to add a new detection point.  Has this already been ruled
>     out?  Should it be added?  Is the description/categorization suitable?
>
>     Source
>     -----------------------------------
>     Just another idea, but based on WAF white listing concepts
>
>     Description
>     -----------------------------------
>     A required header or body parameter is missing, or additional
>     unexpected parameters are received with the request.
>
>     Suggested categorization
>     -----------------------------------
>     RE5 Additional or Missing Parameters
>     _______________________________________________
>     Owasp-appsensor-project mailing list
>     Owasp-appsensor-project at lists.owasp.org
>     <mailto:Owasp-appsensor-project at lists.owasp.org>
>     https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
>
>
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>    
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20100610/dae57ab7/attachment.html 

From michael.coates at owasp.org  Thu Jun 10 19:04:50 2010
From: michael.coates at owasp.org (Michael Coates)
Date: Thu, 10 Jun 2010 16:04:50 -0700
Subject: [Owasp-appsensor-project] Additional Detection Points -
 Suspicious External User Behavior
In-Reply-To: <AANLkTinDfy4Fj2K-Etx9iTTWcv7LDILiUfdgkbWsdBOG@mail.gmail.com>
References: <AANLkTinpI4r3Pfv9XJ3I3f6lsn2DTkE2mzA5RU7dPktF@mail.gmail.com>
	<AANLkTinDfy4Fj2K-Etx9iTTWcv7LDILiUfdgkbWsdBOG@mail.gmail.com>
Message-ID: <4C116F92.6080404@owasp.org>

I think this is a neat idea, being able to integrate multiple monitoring 
points. I think its worth listing as a detection point in our 
documentation, but we should include some text on our concerns.

My main concern is that the power of appsensor is built on its accuracy 
and low false positive rate.  Other products typically do not take that 
same approach and have large quantities of false positives.  So any 
information from another product should only be used to possible make 
AppSensor perform more logging or be more sensitive for a particular 
user.  Ultimately this is always an organizations decision based on 
their response policy in AppSensor, but I think this guidance would be 
important here.

Michael Coates
OWASP


On 6/9/10 7:09 PM, John Melton wrote:
> Not sure I'm on board with this one ... someone else can correct me if 
> I'm wrong, but this actually doesn't fit in the "application" doing 
> detection.  By definition, something outside the app is doing the 
> detection and is feeding that info to the app.  I think these are 
> worthwhile sensors that can produce data that an application could use 
> to make decisions, but as for it being considered app detection, I 
> don't generally see these as falling into that category.  I may be 
> convinced otherwise however :>.
>
> On Wed, Jun 9, 2010 at 10:29 AM, Colin Watson <colin.watson at owasp.org 
> <mailto:colin.watson at owasp.org>> wrote:
>
>     Suggestion to add a new detection point.  Has this already been ruled
>     out?  Should it be added?  Is the description/categorization suitable?
>
>     Source
>     -----------------------------------
>     [Owasp-appsensor-project] AppSensor Feedback/Ideas, Sat Nov 21
>     13:32:39 EST 2009
>     https://lists.owasp.org/pipermail/owasp-appsensor-project
>     On Wed, Jun 9, 2010 at 10:29 AM, Colin Watson
>     <colin.watson at owasp.org> wrote:
>     Suggestion to add a new detection point.  Has this already been ruled
>     out?  Should it be added?  Is the description/categorization suitable?
>     /2009-November/000008.html
>     <https://lists.owasp.org/pipermail/owasp-appsensor-project/2009-November/000008.html>
>
>     Description
>     -----------------------------------
>     External (to the application) devices and systems (e.g. host and
>     network IDS, file integrity monitoring, disk usage monitoring,
>     anti-malware service, IPS, network firewall, web application firewall,
>     web server logging, XML gateway, database firewall, SIEM) have
>     detected anomalous behavior by the user (e.g. session or IP address).
>
>     Suggested categorization
>     -----------------------------------
>     In the suggested new category "Reputation" (see RP1 Suspicious
>     User IP Address)
>     RP2 Suspicious External User Behavior
>     _______________________________________________
>     Owasp-appsensor-project mailing list
>     Owasp-appsensor-project at lists.owasp.org
>     <mailto:Owasp-appsensor-project at lists.owasp.org>
>     https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
>
>
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>    
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20100610/8cba4497/attachment.html 

From michael.coates at owasp.org  Thu Jun 10 19:09:47 2010
From: michael.coates at owasp.org (Michael Coates)
Date: Thu, 10 Jun 2010 16:09:47 -0700
Subject: [Owasp-appsensor-project] Additional Detection Points - Change
 To Application's Rating By A Third Party
In-Reply-To: <AANLkTinIVYYUwTTQzNnFGDSH-6bFPbACNiSdJJWAcR2J@mail.gmail.com>
References: <AANLkTimC4EWQfuWqBrGNAN2Cu8Qo80jBogzej-3vG2NP@mail.gmail.com>
	<AANLkTinIVYYUwTTQzNnFGDSH-6bFPbACNiSdJJWAcR2J@mail.gmail.com>
Message-ID: <4C1170BB.6040905@owasp.org>

I'm not sure I completely understand this one.  How would SSL 
configuration testing be tied to a malicious user?  For your specific 
example of RSS feeds, it may be tough to reliably determine if this was 
a user initiated malicious action or just a software bug.

Michael Coates
OWASP


On 6/9/10 7:13 PM, John Melton wrote:
> think this is a good idea, but again, don't think it falls under 
> application intrusion detection - a 3rd party is doing the detection, 
> then there may be a mechanism to use that data to make decisions.  
> These ideas are good enough to certainly be used, but I don't 
> understand their classification as part of a app intr det. system.
>
> On Wed, Jun 9, 2010 at 10:30 AM, Colin Watson <colin.watson at owasp.org 
> <mailto:colin.watson at owasp.org>> wrote:
>
>     Suggestion to add a new detection point.  Has this already been ruled
>     out?  Should it be added?  Is the description/categorization suitable?
>
>     Source
>     -----------------------------------
>     Just another idea
>
>     Description
>     -----------------------------------
>     The reputation (classification, score, etc) of the application (or its
>     servers) is changed by free or subscribed third party remote
>     monitoring/testing services (e.g. malware detection, phishing site
>     detection, uptime monitoring, reputation monitoring, spam and botnet
>     lists, SSL configuration testing, HTML, CSS, RSS and XML validators,
>     vulnerability scanners, penetration testing, DNS address, etc).  For
>     example, syntax errors are found in an application's user comments RSS
>     feed which may have been caused by incorrect output encoding.
>
>     Suggested categorization
>     -----------------------------------
>     In the suggested new category "Reputation" (see RP1 Suspicious
>     User IP Address)
>     RP4 Change To Application's Rating By A Third Party
>     _______________________________________________
>     Owasp-appsensor-project mailing list
>     Owasp-appsensor-project at lists.owasp.org
>     <mailto:Owasp-appsensor-project at lists.owasp.org>
>     https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
>
>
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>    
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20100610/59312598/attachment-0001.html 

From michael.coates at owasp.org  Thu Jun 10 19:12:52 2010
From: michael.coates at owasp.org (Michael Coates)
Date: Thu, 10 Jun 2010 16:12:52 -0700
Subject: [Owasp-appsensor-project] Additional Detection Points - Change
 to Environment Threat Level
In-Reply-To: <AANLkTimx-9K-AZ3hLM9Ks6yPBMejeazpwkO_U_7axjZa@mail.gmail.com>
References: <AANLkTilW4VdQ5G8bngrFONAm4IgmYAlrSrxJemNpxu41@mail.gmail.com>
	<AANLkTimx-9K-AZ3hLM9Ks6yPBMejeazpwkO_U_7axjZa@mail.gmail.com>
Message-ID: <4C117174.6070501@owasp.org>

John has a good point that we aren't ready to implement this into the 
code, but we can still list it as a detection point in the wiki.  Our 
AppSensor information project provides someone with all the knowledge to 
roll their own AppSensor. The AppSensor code that we are developing is 
one implementation in Java with ESAPI integration. So although we may 
not support this detection point in our code, its still a good idea for 
someone else to consider.

Michael Coates
OWASP


On 6/9/10 7:15 PM, John Melton wrote:
> I say no here for now ... I think this could be incredibly useful, but 
> as there's currently no concept of a tiered response level in 
> appsensor, I don't think this should be included until that concept 
> exists.
>
> On Wed, Jun 9, 2010 at 10:32 AM, Colin Watson <colin.watson at owasp.org 
> <mailto:colin.watson at owasp.org>> wrote:
>
>     Suggestion to add a new detection point.  Has this already been ruled
>     out?  Should it be added?  Is the description/categorization suitable?
>
>     Source
>     -----------------------------------
>     Just another idea, but based on discussions about creating an Internet
>     Threat Exposure (ITE) index by the UK Cybersecurity KTN in 2008.
>
>     Description
>     -----------------------------------
>     The general threat level (e.g. general risk of attack from the
>     Internet, or specific targetted attacks against an organisation) is
>     elevated.  This could also be used to change response sensitivity due
>     to short-term effects such as application upgrades/patching.  This
>     input could be used to alter thresholds for AppSensor responses.
>
>     Suggested categorization
>     -----------------------------------
>     In the suggested new category "Reputation" (see RP1 Suspicious
>     User IP Address)
>     RP5 Change to Environment Threat Level
>     _______________________________________________
>     Owasp-appsensor-project mailing list
>     Owasp-appsensor-project at lists.owasp.org
>     <mailto:Owasp-appsensor-project at lists.owasp.org>
>     https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
>
>
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>    
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20100610/643ab5b6/attachment.html 

From michael.coates at owasp.org  Thu Jun 10 19:13:51 2010
From: michael.coates at owasp.org (Michael Coates)
Date: Thu, 10 Jun 2010 16:13:51 -0700
Subject: [Owasp-appsensor-project] Additional Detection Points - Detect
 Client Information
In-Reply-To: <AANLkTincCJ6c-2v3qtZdDDyX6eTmi4XgKlHWGfsN1OOd@mail.gmail.com>
References: <AANLkTinM7JkW5EXet3UpgpzTAQi6uLCqbidv8aFSgek1@mail.gmail.com>
	<AANLkTincCJ6c-2v3qtZdDDyX6eTmi4XgKlHWGfsN1OOd@mail.gmail.com>
Message-ID: <4C1171AF.4010702@owasp.org>

Agreed. This is a response action not a detection point. (But it is a 
good idea for a response action)

Michael Coates
OWASP


On 6/9/10 7:18 PM, John Melton wrote:
> I'm against this as a detection point.  It actually sounds like a 
> response action in our lingo.  This is about what do *I* do if I've 
> decided that the user has passed my threshold, not what did the *user* 
> do to pass my threshold.  Don't think this fits the detection point 
> category.
>
> On Wed, Jun 9, 2010 at 10:34 AM, Colin Watson <colin.watson at owasp.org 
> <mailto:colin.watson at owasp.org>> wrote:
>
>     Suggestion to add a new detection point.  Has this already been ruled
>     out?  Should it be added?  Is the description/categorization suitable?
>
>     Source
>     -----------------------------------
>     Just another idea - this one could be the most controversial since it
>     might be seen as an active attack on the user.  The idea is
>     information gathering rather than electronic counter measures.  After
>     all, logging a user out also affects them.
>
>     Description
>     -----------------------------------
>     At a certain threshold, deploy additional sensor(s) onto the client
>     such as. a Java applet to return the client's IP address,  JavaScript
>     to collect additional data about the user's environment (e.g.
>     Panopticlick http://panopticlick.eff.org/), or JavaScript to detect
>     local network information.  These actions must be consistent with the
>     application's terms of use, privacy notice and organizational
>     mandates.
>
>     Suggested categorization
>     -----------------------------------
>     In the suggested new category "Reputation" (see RP1 Suspicious
>     User IP Address)
>     RP6 Detect Client Information
>
>     *** This may instead be an AppSensor response action, even thought it
>     is deploying a new sensor ? ****
>     _______________________________________________
>     Owasp-appsensor-project mailing list
>     Owasp-appsensor-project at lists.owasp.org
>     <mailto:Owasp-appsensor-project at lists.owasp.org>
>     https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
>
>
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>    
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20100610/f44a3001/attachment.html 

From michael.coates at owasp.org  Thu Jun 10 19:17:17 2010
From: michael.coates at owasp.org (Michael Coates)
Date: Thu, 10 Jun 2010 16:17:17 -0700
Subject: [Owasp-appsensor-project] Change to Detection Points - SE6
 Change Of User Agent Mid Session
In-Reply-To: <AANLkTind5zndgYj_2caW_2eZ0-biQC8Kkw6qvc6w5T1V@mail.gmail.com>
References: <AANLkTimMTqaLX1l_bPxi9atoRpx8ur2sJXXx1l0b2kKU@mail.gmail.com>
	<AANLkTind5zndgYj_2caW_2eZ0-biQC8Kkw6qvc6w5T1V@mail.gmail.com>
Message-ID: <4C11727D.4050600@owasp.org>

I think I'd rather go with Colin's change suggestion. I don't really 
want 2 or 3 detection points all trying to capture the same idea and 
only differing by the header value they are discussing.  We can help 
educate people here at the same time :)

Michael Coates
OWASP


On 6/9/10 7:21 PM, John Melton wrote:
> I vote for splitting out into a new issue, since the name does denote 
> the user agent changing, which most people associate w/ that one 
> header, for better or worse.
>
> On Wed, Jun 9, 2010 at 10:35 AM, Colin Watson <colin.watson at owasp.org 
> <mailto:colin.watson at owasp.org>> wrote:
>
>     Suggestion to CHANGE an existing detection point.  Has this already
>     been ruled out?  Should it be changed?
>
>     Source
>     -----------------------------------
>     Just another idea
>
>     Description
>     -----------------------------------
>     Other headers such as Accept-Encoding and Accept-Language can be used
>     to help detect a session being used by someone else.  It could relate
>     to public resources too (i.e. unauthenticated users).
>
>     1. Leave name unchanged (i.e. keep as "Change Of User Agent Mid
>     Session")
>
>     2. Change first sentence of description to "The header User-Agent or
>     Accept-Encoding or Accept-Language change during an authenticated
>     session."
>
>     3. Removed the word "authenticated" from above sentence?
>
>     *** Or split this idea out into a new sensor e.g. SE7? ***
>     _______________________________________________
>     Owasp-appsensor-project mailing list
>     Owasp-appsensor-project at lists.owasp.org
>     <mailto:Owasp-appsensor-project at lists.owasp.org>
>     https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
>
>
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>    
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20100610/8a10442f/attachment.html 

From michael.coates at owasp.org  Thu Jun 10 19:19:20 2010
From: michael.coates at owasp.org (Michael Coates)
Date: Thu, 10 Jun 2010 16:19:20 -0700
Subject: [Owasp-appsensor-project] Change to Detection Points - SE5
 Source IP Address Changes During Session
In-Reply-To: <AANLkTilzhUXX3O9Z8Epncax6U8DF0EfQ-luA3e8a7KpW@mail.gmail.com>
References: <AANLkTin_zH5Qa4ueioJw875afDWJ14DNwKM0PMS3rYKd@mail.gmail.com>
	<AANLkTilzhUXX3O9Z8Epncax6U8DF0EfQ-luA3e8a7KpW@mail.gmail.com>
Message-ID: <4C1172F8.8080103@owasp.org>

I agree this should be broader. Its quite possible an IP address would 
change during normal use. I think its better to look at a scenario that 
shouldn't happen e.g. user's ip changes from US to Europe.  We just need 
to find that best way to describe that.

Michael Coates
OWASP


On 6/9/10 7:24 PM, John Melton wrote:
> just need a bit more info here - is the intention to allow a user to 
> switch IPs as long as it's in the same range and / or ASN and be 
> considered ok?
>
> On Wed, Jun 9, 2010 at 10:35 AM, Colin Watson <colin.watson at owasp.org 
> <mailto:colin.watson at owasp.org>> wrote:
>
>     Suggestion to CHANGE an existing detection point.  Has this already
>     been ruled out?  Should it be changed?
>
>     Source
>     -----------------------------------
>     [Owasp-appsensor-project] AppSensor- a few ideas, Fri Sep 18
>     10:30:31 EDT 2009
>     https://lists.owasp.org/pipermail/owasp-appsensor-project/2009-September/000005.html
>
>     Description
>     -----------------------------------
>     Rather than a single IP Address, make the sensor specification broader
>     to also allow ASN check instead.
>
>     1. Leave name unchanged (i.e. keep as "Source IP Address Changes
>     During Session")
>
>     2. Change description to "Valid requests, containing valid session
>     credentials, are received from multiple source IP addresses or source
>     IP address ranges or source Autonomous System Number (ASN)"
>
>     Reference
>     http://www.apnic.net/services/services-apnic-provides/helpdesk/faqs/asn-faqs
>     _______________________________________________
>     Owasp-appsensor-project mailing list
>     Owasp-appsensor-project at lists.owasp.org
>     <mailto:Owasp-appsensor-project at lists.owasp.org>
>     https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
>
>
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>    
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20100610/6a887703/attachment-0001.html 

From colin.watson at owasp.org  Fri Jun 11 04:35:13 2010
From: colin.watson at owasp.org (Colin Watson)
Date: Fri, 11 Jun 2010 09:35:13 +0100
Subject: [Owasp-appsensor-project] Change to Detection Points - SE5
	Source IP Address Changes During Session
In-Reply-To: <4C1172F8.8080103@owasp.org>
References: <AANLkTin_zH5Qa4ueioJw875afDWJ14DNwKM0PMS3rYKd@mail.gmail.com>
	<AANLkTilzhUXX3O9Z8Epncax6U8DF0EfQ-luA3e8a7KpW@mail.gmail.com>
	<4C1172F8.8080103@owasp.org>
Message-ID: <AANLkTimImHJkvw6LBO7TJYz6vPbOHbEfCjPe7jDjlM4Q@mail.gmail.com>

Noted.

Colin

On 11 June 2010 00:19, Michael Coates <michael.coates at owasp.org> wrote:
> I agree this should be broader. Its quite possible an IP address would
> change during normal use. I think its better to look at a scenario that
> shouldn't happen e.g. user's ip changes from US to Europe.? We just need to
> find that best way to describe that.
>
> Michael Coates
> OWASP
>
> On 6/9/10 7:24 PM, John Melton wrote:
>
> just need a bit more info here - is the intention to allow a user to switch
> IPs as long as it's in the same range and / or ASN and be considered ok?
>
> On Wed, Jun 9, 2010 at 10:35 AM, Colin Watson <colin.watson at owasp.org>
> wrote:
>>
>> Suggestion to CHANGE an existing detection point. ?Has this already
>> been ruled out? ?Should it be changed?
>>
>> Source
>> -----------------------------------
>> [Owasp-appsensor-project] AppSensor- a few ideas, Fri Sep 18 10:30:31 EDT
>> 2009
>>
>> https://lists.owasp.org/pipermail/owasp-appsensor-project/2009-September/000005.html
>>
>> Description
>> -----------------------------------
>> Rather than a single IP Address, make the sensor specification broader
>> to also allow ASN check instead.
>>
>> 1. Leave name unchanged (i.e. keep as "Source IP Address Changes
>> During Session")
>>
>> 2. Change description to "Valid requests, containing valid session
>> credentials, are received from multiple source IP addresses or source
>> IP address ranges or source Autonomous System Number (ASN)"
>>
>> Reference
>> http://www.apnic.net/services/services-apnic-provides/helpdesk/faqs/asn-faqs
>> _______________________________________________
>> Owasp-appsensor-project mailing list
>> Owasp-appsensor-project at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
>
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>

From colin.watson at owasp.org  Fri Jun 11 04:36:19 2010
From: colin.watson at owasp.org (Colin Watson)
Date: Fri, 11 Jun 2010 09:36:19 +0100
Subject: [Owasp-appsensor-project] Additional Detection Points - Detect
	Client Information
In-Reply-To: <4C1171AF.4010702@owasp.org>
References: <AANLkTinM7JkW5EXet3UpgpzTAQi6uLCqbidv8aFSgek1@mail.gmail.com>
	<AANLkTincCJ6c-2v3qtZdDDyX6eTmi4XgKlHWGfsN1OOd@mail.gmail.com>
	<4C1171AF.4010702@owasp.org>
Message-ID: <AANLkTikVeiaPU6DONAduYYsq5XQa1M20qzJbinNINr4D@mail.gmail.com>

Michael and John

I agree - not a new detector then.  I'll make some scribblings about
alternative response actions.

Colin

On 11 June 2010 00:13, Michael Coates <michael.coates at owasp.org> wrote:
> Agreed. This is a response action not a detection point. (But it is a good
> idea for a response action)
>
> Michael Coates
> OWASP
>
> On 6/9/10 7:18 PM, John Melton wrote:
>
> I'm against this as a detection point.? It actually sounds like a response
> action in our lingo.? This is about what do *I* do if I've decided that the
> user has passed my threshold, not what did the *user* do to pass my
> threshold.? Don't think this fits the detection point category.
>
> On Wed, Jun 9, 2010 at 10:34 AM, Colin Watson <colin.watson at owasp.org>
> wrote:
>>
>> Suggestion to add a new detection point. ?Has this already been ruled
>> out? ?Should it be added? ?Is the description/categorization suitable?
>>
>> Source
>> -----------------------------------
>> Just another idea - this one could be the most controversial since it
>> might be seen as an active attack on the user. ?The idea is
>> information gathering rather than electronic counter measures. ?After
>> all, logging a user out also affects them.
>>
>> Description
>> -----------------------------------
>> At a certain threshold, deploy additional sensor(s) onto the client
>> such as. a Java applet to return the client's IP address, ?JavaScript
>> to collect additional data about the user's environment (e.g.
>> Panopticlick http://panopticlick.eff.org/), or JavaScript to detect
>> local network information. ?These actions must be consistent with the
>> application's terms of use, privacy notice and organizational
>> mandates.
>>
>> Suggested categorization
>> -----------------------------------
>> In the suggested new category "Reputation" (see RP1 Suspicious User IP
>> Address)
>> RP6 Detect Client Information
>>
>> *** This may instead be an AppSensor response action, even thought it
>> is deploying a new sensor ? ****
>> _______________________________________________
>> Owasp-appsensor-project mailing list
>> Owasp-appsensor-project at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
>
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>

From colin.watson at owasp.org  Fri Jun 11 04:37:29 2010
From: colin.watson at owasp.org (Colin Watson)
Date: Fri, 11 Jun 2010 09:37:29 +0100
Subject: [Owasp-appsensor-project] Additional Detection Points -
	Utilization of Common User Names
In-Reply-To: <4C11557B.9070902@owasp.org>
References: <AANLkTikP0WQZg8VUEt_qtiQUrgTO-8eIIY4TkqE0Ynhm@mail.gmail.com>
	<AANLkTimerLCBBsc4c6-V0_KE5kaM7QVDmRnKylP-35-q@mail.gmail.com>
	<4C11557B.9070902@owasp.org>
Message-ID: <AANLkTikLUex_HhUf6fIlI7lfBnskwCF578LXDX100PX6@mail.gmail.com>

Michael

OK, I'll begin adding the agreed ones to the wiki where other people
can then edit and improve them too.

Colin

On 10 June 2010 22:13, Michael Coates <michael.coates at owasp.org> wrote:
> I agree this should be a separate detection point. Looks like AE12 is the
> next spot.? It would make sense to be near AE1, but I don't won't to
> rearrange any number assignements since they are already referenced by
> others (modsecurity). So we will just continue to iterate.
>
> Colin: can you add these directly to :
> http://www.owasp.org/index.php/AppSensor_DetectionPoints
>
> You'll have to copy and paste the wiki formatting from the previous
> detection point, but it shouldn't be too bad I hope.
>
> Michael Coates
> OWASP
>
> On 6/9/10 7:01 PM, John Melton wrote:
>
> I vote +1 for this .. while I see it could be part of IE3, I think it should
> probably be called out separately
>
> On Wed, Jun 9, 2010 at 10:19 AM, Colin Watson <colin.watson at owasp.org>
> wrote:
>>
>> Suggestion to add a new detection point. ?Has this already been ruled
>> out? ?Should it be added? ?Is the description/categorization suitable?
>>
>> Source
>> -----------------------------------
>> [Owasp-appsensor-project] AppSensor Feedback/Ideas, Sat Nov 21 11:02:45
>> EST 2009
>>
>> https://lists.owasp.org/pipermail/owasp-appsensor-project/2009-November/000007.html
>>
>> Description
>> -----------------------------------
>> Common dictionary user names (e.g. "administrator", "admin" or "test")
>> are used to attempt to log into the application. ?This may enhance the
>> seriousness of AE1 Use of Multiple Usernames.
>>
>> Suggested categorization
>> -----------------------------------
>> AE12 Utilization of Common User Names
>>
>> *** Or could just be an instance of proposed IE3 Violation of
>> Implemented Black Lists ? ***
>> _______________________________________________
>> Owasp-appsensor-project mailing list
>> Owasp-appsensor-project at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
>
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>

From colin.watson at owasp.org  Fri Jun 11 04:39:37 2010
From: colin.watson at owasp.org (Colin Watson)
Date: Fri, 11 Jun 2010 09:39:37 +0100
Subject: [Owasp-appsensor-project] Additional Detection Points -
	Additional or Missing Parameters
In-Reply-To: <4C116E3C.5090600@owasp.org>
References: <AANLkTinZ2SNTgPuJ2lkXVIgqVocYxW9bo670I4Wsazwd@mail.gmail.com>
	<AANLkTimyF-_C6mYHsfvQFg-nVSLn-L3GZJ3FKPD_f3Nz@mail.gmail.com>
	<4C116E3C.5090600@owasp.org>
Message-ID: <AANLkTikIM2qnVbl0cpQ5KMyoEYiGiKQFvL_YvU1C5xyE@mail.gmail.com>

Michael

Two detection points (one for missing and one for extra/duplicated)
but covering both headers and other parameters?  Or is that 4
detection points?

Colin


On 10 June 2010 23:59, Michael Coates <michael.coates at owasp.org> wrote:
> I could have sworn that unexpected headers was on the list. I remember
> testing it in my old demo app.? Oh well, its not at that link so we should
> add it.
>
> I would divide this into two detection points. One for missing an expected
> header and one for receiving an unexpected header.? The later is actually
> very tricky as I found because all sorts of proxies will attach weird
> x-something headers.? We should mention that in the comments for that
> detection point.
>
> Michael Coates
> OWASP
>
> On 6/9/10 7:02 PM, John Melton wrote:
>
> +1 for this, and a specific instance here would be http parameter pollution
> (hpp)
>
> On Wed, Jun 9, 2010 at 10:20 AM, Colin Watson <colin.watson at owasp.org>
> wrote:
>>
>> Suggestion to add a new detection point. ?Has this already been ruled
>> out? ?Should it be added? ?Is the description/categorization suitable?
>>
>> Source
>> -----------------------------------
>> Just another idea, but based on WAF white listing concepts
>>
>> Description
>> -----------------------------------
>> A required header or body parameter is missing, or additional
>> unexpected parameters are received with the request.
>>
>> Suggested categorization
>> -----------------------------------
>> RE5 Additional or Missing Parameters
>> _______________________________________________
>> Owasp-appsensor-project mailing list
>> Owasp-appsensor-project at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
>
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>

From colin.watson at owasp.org  Fri Jun 11 04:43:26 2010
From: colin.watson at owasp.org (Colin Watson)
Date: Fri, 11 Jun 2010 09:43:26 +0100
Subject: [Owasp-appsensor-project] Additional Detection Points - Change
	To Application's Rating By A Third Party
In-Reply-To: <4C1170BB.6040905@owasp.org>
References: <AANLkTimC4EWQfuWqBrGNAN2Cu8Qo80jBogzej-3vG2NP@mail.gmail.com>
	<AANLkTinIVYYUwTTQzNnFGDSH-6bFPbACNiSdJJWAcR2J@mail.gmail.com>
	<4C1170BB.6040905@owasp.org>
Message-ID: <AANLkTinPZndcIMXS-i_jAXY1YdkRP-1_qh4tdJauC9WS@mail.gmail.com>

Michael

I agree we probably can't tie these types of events to a particular
user and therefore, they are not perhaps suitable for AppSensor.

There might be another project coming along (called
ConfigurationSensor?) that includes this and Kevin's navel-gazing
ideas.

Colin

On 11 June 2010 00:09, Michael Coates <michael.coates at owasp.org> wrote:
> I'm not sure I completely understand this one.? How would SSL configuration
> testing be tied to a malicious user?? For your specific example of RSS
> feeds, it may be tough to reliably determine if this was a user initiated
> malicious action or just a software bug.
>
> Michael Coates
> OWASP
>
> On 6/9/10 7:13 PM, John Melton wrote:
>
> think this is a good idea, but again, don't think it falls under application
> intrusion detection - a 3rd party is doing the detection, then there may be
> a mechanism to use that data to make decisions.? These ideas are good enough
> to certainly be used, but I don't understand their classification as part of
> a app intr det. system.
>
> On Wed, Jun 9, 2010 at 10:30 AM, Colin Watson <colin.watson at owasp.org>
> wrote:
>>
>> Suggestion to add a new detection point. ?Has this already been ruled
>> out? ?Should it be added? ?Is the description/categorization suitable?
>>
>> Source
>> -----------------------------------
>> Just another idea
>>
>> Description
>> -----------------------------------
>> The reputation (classification, score, etc) of the application (or its
>> servers) is changed by free or subscribed third party remote
>> monitoring/testing services (e.g. malware detection, phishing site
>> detection, uptime monitoring, reputation monitoring, spam and botnet
>> lists, SSL configuration testing, HTML, CSS, RSS and XML validators,
>> vulnerability scanners, penetration testing, DNS address, etc). ?For
>> example, syntax errors are found in an application's user comments RSS
>> feed which may have been caused by incorrect output encoding.
>>
>> Suggested categorization
>> -----------------------------------
>> In the suggested new category "Reputation" (see RP1 Suspicious User IP
>> Address)
>> RP4 Change To Application's Rating By A Third Party
>> _______________________________________________
>> Owasp-appsensor-project mailing list
>> Owasp-appsensor-project at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
>
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>

From colin.watson at owasp.org  Fri Jun 11 04:44:07 2010
From: colin.watson at owasp.org (Colin Watson)
Date: Fri, 11 Jun 2010 09:44:07 +0100
Subject: [Owasp-appsensor-project] Additional Detection Points - Change
	to Environment Threat Level
In-Reply-To: <4C117174.6070501@owasp.org>
References: <AANLkTilW4VdQ5G8bngrFONAm4IgmYAlrSrxJemNpxu41@mail.gmail.com>
	<AANLkTimx-9K-AZ3hLM9Ks6yPBMejeazpwkO_U_7axjZa@mail.gmail.com>
	<4C117174.6070501@owasp.org>
Message-ID: <AANLkTimJOn9Qk-Vkb4BgOJJSFQ75eUrUUvZ8HeFjwXgl@mail.gmail.com>

Noted.

Colin

On 11 June 2010 00:12, Michael Coates <michael.coates at owasp.org> wrote:
> John has a good point that we aren't ready to implement this into the code,
> but we can still list it as a detection point in the wiki.? Our AppSensor
> information project provides someone with all the knowledge to roll their
> own AppSensor. The AppSensor code that we are developing is one
> implementation in Java with ESAPI integration. So although we may not
> support this detection point in our code, its still a good idea for someone
> else to consider.
>
> Michael Coates
> OWASP
>
> On 6/9/10 7:15 PM, John Melton wrote:
>
> I say no here for now ... I think this could be incredibly useful, but as
> there's currently no concept of a tiered response level in appsensor, I
> don't think this should be included until that concept exists.
>
> On Wed, Jun 9, 2010 at 10:32 AM, Colin Watson <colin.watson at owasp.org>
> wrote:
>>
>> Suggestion to add a new detection point. ?Has this already been ruled
>> out? ?Should it be added? ?Is the description/categorization suitable?
>>
>> Source
>> -----------------------------------
>> Just another idea, but based on discussions about creating an Internet
>> Threat Exposure (ITE) index by the UK Cybersecurity KTN in 2008.
>>
>> Description
>> -----------------------------------
>> The general threat level (e.g. general risk of attack from the
>> Internet, or specific targetted attacks against an organisation) is
>> elevated. ?This could also be used to change response sensitivity due
>> to short-term effects such as application upgrades/patching. ?This
>> input could be used to alter thresholds for AppSensor responses.
>>
>> Suggested categorization
>> -----------------------------------
>> In the suggested new category "Reputation" (see RP1 Suspicious User IP
>> Address)
>> RP5 Change to Environment Threat Level
>> _______________________________________________
>> Owasp-appsensor-project mailing list
>> Owasp-appsensor-project at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
>
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>

From colin.watson at owasp.org  Fri Jun 11 04:44:35 2010
From: colin.watson at owasp.org (Colin Watson)
Date: Fri, 11 Jun 2010 09:44:35 +0100
Subject: [Owasp-appsensor-project] Change to Detection Points - SE6
	Change Of User Agent Mid Session
In-Reply-To: <4C11727D.4050600@owasp.org>
References: <AANLkTimMTqaLX1l_bPxi9atoRpx8ur2sJXXx1l0b2kKU@mail.gmail.com>
	<AANLkTind5zndgYj_2caW_2eZ0-biQC8Kkw6qvc6w5T1V@mail.gmail.com>
	<4C11727D.4050600@owasp.org>
Message-ID: <AANLkTins8qg7SIGxT8vvkIaEolbona9eB6vr0OAjsnAG@mail.gmail.com>

Noted.

Colin

On 11 June 2010 00:17, Michael Coates <michael.coates at owasp.org> wrote:
> I think I'd rather go with Colin's change suggestion. I don't really want 2
> or 3 detection points all trying to capture the same idea and only differing
> by the header value they are discussing.? We can help educate people here at
> the same time :)
>
> Michael Coates
> OWASP
>
> On 6/9/10 7:21 PM, John Melton wrote:
>
> I vote for splitting out into a new issue, since the name does denote the
> user agent changing, which most people associate w/ that one header, for
> better or worse.
>
> On Wed, Jun 9, 2010 at 10:35 AM, Colin Watson <colin.watson at owasp.org>
> wrote:
>>
>> Suggestion to CHANGE an existing detection point. ?Has this already
>> been ruled out? ?Should it be changed?
>>
>> Source
>> -----------------------------------
>> Just another idea
>>
>> Description
>> -----------------------------------
>> Other headers such as Accept-Encoding and Accept-Language can be used
>> to help detect a session being used by someone else. ?It could relate
>> to public resources too (i.e. unauthenticated users).
>>
>> 1. Leave name unchanged (i.e. keep as "Change Of User Agent Mid Session")
>>
>> 2. Change first sentence of description to "The header User-Agent or
>> Accept-Encoding or Accept-Language change during an authenticated
>> session."
>>
>> 3. Removed the word "authenticated" from above sentence?
>>
>> *** Or split this idea out into a new sensor e.g. SE7? ***
>> _______________________________________________
>> Owasp-appsensor-project mailing list
>> Owasp-appsensor-project at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
>
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>

From colin.watson at owasp.org  Fri Jun 11 04:47:05 2010
From: colin.watson at owasp.org (Colin Watson)
Date: Fri, 11 Jun 2010 09:47:05 +0100
Subject: [Owasp-appsensor-project] Additional Detection Points -
	Suspicious External User Behavior
In-Reply-To: <4C116F92.6080404@owasp.org>
References: <AANLkTinpI4r3Pfv9XJ3I3f6lsn2DTkE2mzA5RU7dPktF@mail.gmail.com>
	<AANLkTinDfy4Fj2K-Etx9iTTWcv7LDILiUfdgkbWsdBOG@mail.gmail.com>
	<4C116F92.6080404@owasp.org>
Message-ID: <AANLkTikfZPi81aUu4WO2uH-DneF22rUymBVkspDuIvfw@mail.gmail.com>

Michael and John

Okay I will add it but with as much explanation as possible.  I think
the concern about increasing the false positive rate is important...
and possibly leads into some more discussion about response actions.

Colin

On 11 June 2010 00:04, Michael Coates <michael.coates at owasp.org> wrote:
> I think this is a neat idea, being able to integrate multiple monitoring
> points. I think its worth listing as a detection point in our documentation,
> but we should include some text on our concerns.
>
> My main concern is that the power of appsensor is built on its accuracy and
> low false positive rate.? Other products typically do not take that same
> approach and have large quantities of false positives.? So any information
> from another product should only be used to possible make AppSensor perform
> more logging or be more sensitive for a particular user.? Ultimately this is
> always an organizations decision based on their response policy in
> AppSensor, but I think this guidance would be important here.
>
> Michael Coates
> OWASP
>
> On 6/9/10 7:09 PM, John Melton wrote:
>
> Not sure I'm on board with this one ... someone else can correct me if I'm
> wrong, but this actually doesn't fit in the "application" doing detection.
> By definition, something outside the app is doing the detection and is
> feeding that info to the app.? I think these are worthwhile sensors that can
> produce data that an application could use to make decisions, but as for it
> being considered app detection, I don't generally see these as falling into
> that category.? I may be convinced otherwise however :>.
>
> On Wed, Jun 9, 2010 at 10:29 AM, Colin Watson <colin.watson at owasp.org>
> wrote:
>>
>> Suggestion to add a new detection point. ?Has this already been ruled
>> out? ?Should it be added? ?Is the description/categorization suitable?
>>
>> Source
>> -----------------------------------
>> [Owasp-appsensor-project] AppSensor Feedback/Ideas, Sat Nov 21 13:32:39
>> EST 2009
>> https://lists.owasp.org/pipermail/owasp-appsensor-project
>> On Wed, Jun 9, 2010 at 10:29 AM, Colin Watson <colin.watson at owasp.org>
>> wrote:
>> Suggestion to add a new detection point. ?Has this already been ruled
>> out? ?Should it be added? ?Is the description/categorization suitable?
>> /2009-November/000008.html
>>
>> Description
>> -----------------------------------
>> External (to the application) devices and systems (e.g. host and
>> network IDS, file integrity monitoring, disk usage monitoring,
>> anti-malware service, IPS, network firewall, web application firewall,
>> web server logging, XML gateway, database firewall, SIEM) have
>> detected anomalous behavior by the user (e.g. session or IP address).
>>
>> Suggested categorization
>> -----------------------------------
>> In the suggested new category "Reputation" (see RP1 Suspicious User IP
>> Address)
>> RP2 Suspicious External User Behavior
>> _______________________________________________
>> Owasp-appsensor-project mailing list
>> Owasp-appsensor-project at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
>
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>

From michael.coates at owasp.org  Fri Jun 11 12:06:25 2010
From: michael.coates at owasp.org (Michael Coates)
Date: Fri, 11 Jun 2010 09:06:25 -0700
Subject: [Owasp-appsensor-project] Additional Detection Points -
 Additional or Missing Parameters
In-Reply-To: <AANLkTikIM2qnVbl0cpQ5KMyoEYiGiKQFvL_YvU1C5xyE@mail.gmail.com>
References: <AANLkTinZ2SNTgPuJ2lkXVIgqVocYxW9bo670I4Wsazwd@mail.gmail.com>	<AANLkTimyF-_C6mYHsfvQFg-nVSLn-L3GZJ3FKPD_f3Nz@mail.gmail.com>	<4C116E3C.5090600@owasp.org>
	<AANLkTikIM2qnVbl0cpQ5KMyoEYiGiKQFvL_YvU1C5xyE@mail.gmail.com>
Message-ID: <4C125F01.6060609@owasp.org>

I would go with 2 - one for missing and one for extra.

Michael Coates
OWASP


On 6/11/10 1:39 AM, Colin Watson wrote:
> Michael
>
> Two detection points (one for missing and one for extra/duplicated)
> but covering both headers and other parameters?  Or is that 4
> detection points?
>
> Colin
>
>
> On 10 June 2010 23:59, Michael Coates<michael.coates at owasp.org>  wrote:
>    
>> I could have sworn that unexpected headers was on the list. I remember
>> testing it in my old demo app.  Oh well, its not at that link so we should
>> add it.
>>
>> I would divide this into two detection points. One for missing an expected
>> header and one for receiving an unexpected header.  The later is actually
>> very tricky as I found because all sorts of proxies will attach weird
>> x-something headers.  We should mention that in the comments for that
>> detection point.
>>
>> Michael Coates
>> OWASP
>>
>> On 6/9/10 7:02 PM, John Melton wrote:
>>
>> +1 for this, and a specific instance here would be http parameter pollution
>> (hpp)
>>
>> On Wed, Jun 9, 2010 at 10:20 AM, Colin Watson<colin.watson at owasp.org>
>> wrote:
>>      
>>> Suggestion to add a new detection point.  Has this already been ruled
>>> out?  Should it be added?  Is the description/categorization suitable?
>>>
>>> Source
>>> -----------------------------------
>>> Just another idea, but based on WAF white listing concepts
>>>
>>> Description
>>> -----------------------------------
>>> A required header or body parameter is missing, or additional
>>> unexpected parameters are received with the request.
>>>
>>> Suggested categorization
>>> -----------------------------------
>>> RE5 Additional or Missing Parameters
>>> _______________________________________________
>>> Owasp-appsensor-project mailing list
>>> Owasp-appsensor-project at lists.owasp.org
>>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>>        
>>
>> _______________________________________________
>> Owasp-appsensor-project mailing list
>> Owasp-appsensor-project at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>
>>      

From rcbarnett at gmail.com  Fri Jun 11 16:47:48 2010
From: rcbarnett at gmail.com (Ryan Barnett)
Date: Fri, 11 Jun 2010 16:47:48 -0400
Subject: [Owasp-appsensor-project] Change to Detection Points - SE5
	Source IP Address Changes During Session
In-Reply-To: <AANLkTikAeQFi7u4eayr1aE5pezM9cTFZnLd46PASEyBq@mail.gmail.com>
References: <AANLkTin_zH5Qa4ueioJw875afDWJ14DNwKM0PMS3rYKd@mail.gmail.com>
	<AANLkTilzhUXX3O9Z8Epncax6U8DF0EfQ-luA3e8a7KpW@mail.gmail.com>
	<AANLkTikAeQFi7u4eayr1aE5pezM9cTFZnLd46PASEyBq@mail.gmail.com>
Message-ID: <201006111647.49261.rcbarnett@gmail.com>

We need to make sure that it is clear as to what the purpose/goal is for each detection 
point.  There are a number of new detection items that Colin sent (this one, change in 
User-Agent string, etc...) whose real goal is to try and alert when we think that there 
may be an indication of some sort of Session Hijacking attack occurring.  Flagging changes 
to IP (network block) or User-Agent value is easy to do however it also may be prone to 
false positives and negatives.  We actually have just added this type of Session Hijacking 
detection to the latest ModSecurity CRS v2.0.7.  

Perhaps there should be a parent category for Fraud Detection?

--
Ryan C. Barnett
WASC Web Hacking Incident Database Project Leader
WASC Distributed Open Proxy Honeypot Project Leader
OWASP ModSecurity Core Rule Set Project Leader
Tactical Web Application Security
http://tacticalwebappsec.blogspot.com

On Thursday 10 June 2010 03:38:11 Colin Watson wrote:
> John
> 
> Thank you for getting the discussion going and your good questions.
> 
> > just need a bit more info here - is the intention to allow a user to
> > switch IPs as long as it's in the same range and / or ASN and be
> > considered ok?
> 
> I'm not sure how "prescriptive" the controls are meant to be.  If
> developers roll their own code, they could perhaps choose any one of
> these three to suit their application.  For example, if it was an
> intranet, a fixed IP might be reasonable.  An online shop may want to
> be a bit more flexible to cater for users whose IP addresses change
> during their session by use of a proxy.
> 
> Do we need to consider X-Forwarded-For here too?
> 
> Colin
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project

From rcbarnett at gmail.com  Fri Jun 11 17:07:44 2010
From: rcbarnett at gmail.com (Ryan Barnett)
Date: Fri, 11 Jun 2010 17:07:44 -0400
Subject: [Owasp-appsensor-project] Additional Detection Points - Detect
	Client Information
In-Reply-To: <AANLkTikVeiaPU6DONAduYYsq5XQa1M20qzJbinNINr4D@mail.gmail.com>
References: <AANLkTinM7JkW5EXet3UpgpzTAQi6uLCqbidv8aFSgek1@mail.gmail.com>
	<4C1171AF.4010702@owasp.org>
	<AANLkTikVeiaPU6DONAduYYsq5XQa1M20qzJbinNINr4D@mail.gmail.com>
Message-ID: <201006111707.44931.rcbarnett@gmail.com>

Also related to the previous email that I just sent about Fraud Detection/Session 
Hijacking and what is presented here.  I think that this concept could be used also as a 
detection point by sending javascript that will do browser fingerprinting and send back a 
HASH to tracking (think a CSRF token but that the hash is based on some browser data).  

Check out the Javascript Browser Fingerprinting demo   - 
http://www.businessinfo.co.uk/labs/probe/probe.php

This seems to be perhaps another (better?) solution for identifying session hijacking 
without having to rely upon IP address.

--
Ryan C. Barnett
WASC Web Hacking Incident Database Project Leader
WASC Distributed Open Proxy Honeypot Project Leader
OWASP ModSecurity Core Rule Set Project Leader
Tactical Web Application Security
http://tacticalwebappsec.blogspot.com

On Friday 11 June 2010 04:36:19 Colin Watson wrote:
> Michael and John
> 
> I agree - not a new detector then.  I'll make some scribblings about
> alternative response actions.
> 
> Colin
> 
> On 11 June 2010 00:13, Michael Coates <michael.coates at owasp.org> wrote:
> > Agreed. This is a response action not a detection point. (But it is a
> > good idea for a response action)
> > 
> > Michael Coates
> > OWASP
> > 
> > On 6/9/10 7:18 PM, John Melton wrote:
> > 
> > I'm against this as a detection point.  It actually sounds like a
> > response action in our lingo.  This is about what do *I* do if I've
> > decided that the user has passed my threshold, not what did the *user*
> > do to pass my threshold.  Don't think this fits the detection point
> > category.
> > 
> > On Wed, Jun 9, 2010 at 10:34 AM, Colin Watson <colin.watson at owasp.org>
> > 
> > wrote:
> >> Suggestion to add a new detection point.  Has this already been ruled
> >> out?  Should it be added?  Is the description/categorization suitable?
> >> 
> >> Source
> >> -----------------------------------
> >> Just another idea - this one could be the most controversial since it
> >> might be seen as an active attack on the user.  The idea is
> >> information gathering rather than electronic counter measures.  After
> >> all, logging a user out also affects them.
> >> 
> >> Description
> >> -----------------------------------
> >> At a certain threshold, deploy additional sensor(s) onto the client
> >> such as. a Java applet to return the client's IP address,  JavaScript
> >> to collect additional data about the user's environment (e.g.
> >> Panopticlick http://panopticlick.eff.org/), or JavaScript to detect
> >> local network information.  These actions must be consistent with the
> >> application's terms of use, privacy notice and organizational
> >> mandates.
> >> 
> >> Suggested categorization
> >> -----------------------------------
> >> In the suggested new category "Reputation" (see RP1 Suspicious User IP
> >> Address)
> >> RP6 Detect Client Information
> >> 
> >> *** This may instead be an AppSensor response action, even thought it
> >> is deploying a new sensor ? ****
> >> _______________________________________________
> >> Owasp-appsensor-project mailing list
> >> Owasp-appsensor-project at lists.owasp.org
> >> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
> > 
> > _______________________________________________
> > Owasp-appsensor-project mailing list
> > Owasp-appsensor-project at lists.owasp.org
> > https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
> 
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20100611/e06c623c/attachment-0001.html 

From jtmelton at gmail.com  Wed Jun 16 13:52:59 2010
From: jtmelton at gmail.com (John Melton)
Date: Wed, 16 Jun 2010 13:52:59 -0400
Subject: [Owasp-appsensor-project] Interesting article - sounds like
	appsensor
Message-ID: <AANLkTimcMx70bqKBzfcaUkSdudJjq1QJ9gucBngPlxFI@mail.gmail.com>

http://searchsecurity.techtarget.com/news/article/0,289142,sid14_gci1515052,00.html
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20100616/119f1ade/attachment.html 

From michael.coates at owasp.org  Wed Jun 16 14:15:10 2010
From: michael.coates at owasp.org (Michael Coates)
Date: Wed, 16 Jun 2010 11:15:10 -0700
Subject: [Owasp-appsensor-project] Interesting article - sounds like
	appsensor
In-Reply-To: <AANLkTimcMx70bqKBzfcaUkSdudJjq1QJ9gucBngPlxFI@mail.gmail.com>
References: <AANLkTimcMx70bqKBzfcaUkSdudJjq1QJ9gucBngPlxFI@mail.gmail.com>
Message-ID: <4C1914AE.4090904@owasp.org>

Actually it does.  I'd like to introduce the AppSensor project to Dave 
Aitel.  Does anyone know him and would be willing to pass along this 
info or introduce us?

Michael Coates
OWASP


On 6/16/10 10:52 AM, John Melton wrote:
> http://searchsecurity.techtarget.com/news/article/0,289142,sid14_gci1515052,00.html 
>
>
>
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>    
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20100616/c6a1c504/attachment.html 

From colin.watson at owasp.org  Wed Jun 16 17:49:52 2010
From: colin.watson at owasp.org (Colin Watson)
Date: Wed, 16 Jun 2010 22:49:52 +0100
Subject: [Owasp-appsensor-project] Interesting article - sounds like
	appsensor
In-Reply-To: <4C1914AE.4090904@owasp.org>
References: <AANLkTimcMx70bqKBzfcaUkSdudJjq1QJ9gucBngPlxFI@mail.gmail.com>
	<4C1914AE.4090904@owasp.org>
Message-ID: <AANLkTimFvQLoajKa_iMVYeDh8dIK6cDUaVZEfIfNKqOu@mail.gmail.com>

No don't know him.

The AppSensor talk at OWASP Leeds/North in Newcastle, UK went down
very well this evening.  Lots of interest.  One guy already using mini
honeypots in their apps (checking for modification to otherwise
useless hidden fields).

Colin

On 16 June 2010 19:15, Michael Coates <michael.coates at owasp.org> wrote:
> Actually it does.? I'd like to introduce the AppSensor project to Dave
> Aitel.? Does anyone know him and would be willing to pass along this info or
> introduce us?
>
> Michael Coates
> OWASP

From Simon.Bennetts at sage.com  Thu Jun 17 03:17:22 2010
From: Simon.Bennetts at sage.com (Bennetts, Simon)
Date: Thu, 17 Jun 2010 03:17:22 -0400
Subject: [Owasp-appsensor-project] Interesting article - sounds
	like	appsensor
In-Reply-To: <AANLkTimFvQLoajKa_iMVYeDh8dIK6cDUaVZEfIfNKqOu@mail.gmail.com>
References: <AANLkTimcMx70bqKBzfcaUkSdudJjq1QJ9gucBngPlxFI@mail.gmail.com>
	<4C1914AE.4090904@owasp.org>,
	<AANLkTimFvQLoajKa_iMVYeDh8dIK6cDUaVZEfIfNKqOu@mail.gmail.com>
Message-ID: <D5DF6222EE076B40B9FEDFD49101B66B01D104E66D@NAMAIL01.gs.adinternal.com>

Re the 'mini honeypots': that would be me then :)

Been lurking on this list for a while, but not had a chance to contribute anything.

Looking at the list of detection points I'd like to propose another one.
As I mentioned in the Newcastle talk I put hidden fields in some forms which look like potential vulnerabilities.
For example you could have "admin" set to "false".
Of course these sort of fields are really 'hacker traps' - they can never be changed by any normal user actions.
If they are changed then its a very good indication that someone is trying to attack your app.

I realise that you could class these in the existing ACE* set, but personally I think its work having a specific new point, if only to promote the idea of putting such 'traps' in for hackers.

And thanks for the talks Conlin, both very interesting.

Cheers,

Simon

________________________________________
From: owasp-appsensor-project-bounces at lists.owasp.org [owasp-appsensor-project-bounces at lists.owasp.org] On Behalf Of Colin Watson [colin.watson at owasp.org]
Sent: 16 June 2010 17:49
To: Michael Coates
Cc: owasp-appsensor-project
Subject: Re: [Owasp-appsensor-project] Interesting article - sounds like        appsensor

No don't know him.

The AppSensor talk at OWASP Leeds/North in Newcastle, UK went down
very well this evening.  Lots of interest.  One guy already using mini
honeypots in their apps (checking for modification to otherwise
useless hidden fields).

Colin

On 16 June 2010 19:15, Michael Coates <michael.coates at owasp.org> wrote:
> Actually it does.  I'd like to introduce the AppSensor project to Dave
> Aitel.  Does anyone know him and would be willing to pass along this info or
> introduce us?
>
> Michael Coates
> OWASP
_______________________________________________
Owasp-appsensor-project mailing list
Owasp-appsensor-project at lists.owasp.org
https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
If you've received this email by mistake, we're sorry for bothering you. It may contain information that's confidential, so please delete it without sharing it. And if you let us know, we can try to stop it from happening again. Thank you. 

We may monitor any emails sent or received by us, or on our behalf. If we do, this will be in line with relevant law and our own policies.

Sage (UK) Limited. Registered in England at North Park, Newcastle upon Tyne, NE13 9AA. Registered number 1045967.

From colin.watson at owasp.org  Thu Jun 17 03:27:52 2010
From: colin.watson at owasp.org (Colin Watson)
Date: Thu, 17 Jun 2010 08:27:52 +0100
Subject: [Owasp-appsensor-project] Interesting article - sounds like
	appsensor
In-Reply-To: <D5DF6222EE076B40B9FEDFD49101B66B01D104E66D@NAMAIL01.gs.adinternal.com>
References: <AANLkTimcMx70bqKBzfcaUkSdudJjq1QJ9gucBngPlxFI@mail.gmail.com>
	<4C1914AE.4090904@owasp.org>
	<AANLkTimFvQLoajKa_iMVYeDh8dIK6cDUaVZEfIfNKqOu@mail.gmail.com>
	<D5DF6222EE076B40B9FEDFD49101B66B01D104E66D@NAMAIL01.gs.adinternal.com>
Message-ID: <AANLkTilx3oWQinpIkZHo2tBM8sF0VlMRbx-dHntFut2s@mail.gmail.com>

Hello Simon!

Sorry I didn't have time to speak further at the end (we'll have to
get a pub lined up next time).

Do you think this proposed new detector:

   https://lists.owasp.org/pipermail/owasp-appsensor-project/2010-June/000048.html

might cover what's needed, or perhaps when we add the text, give this
as a good example?

Colin

On 17 June 2010 08:17, Bennetts, Simon <Simon.Bennetts at sage.com> wrote:
> Re the 'mini honeypots': that would be me then :)
>
> Been lurking on this list for a while, but not had a chance to contribute anything.
>
> Looking at the list of detection points I'd like to propose another one.
> As I mentioned in the Newcastle talk I put hidden fields in some forms which look like potential vulnerabilities.
> For example you could have "admin" set to "false".
> Of course these sort of fields are really 'hacker traps' - they can never be changed by any normal user actions.
> If they are changed then its a very good indication that someone is trying to attack your app.
>
> I realise that you could class these in the existing ACE* set, but personally I think its work having a specific new point, if only to promote the idea of putting such 'traps' in for hackers.
>
> And thanks for the talks Conlin, both very interesting.
>
> Cheers,
>
> Simon
>
> ________________________________________
> From: owasp-appsensor-project-bounces at lists.owasp.org [owasp-appsensor-project-bounces at lists.owasp.org] On Behalf Of Colin Watson [colin.watson at owasp.org]
> Sent: 16 June 2010 17:49
> To: Michael Coates
> Cc: owasp-appsensor-project
> Subject: Re: [Owasp-appsensor-project] Interesting article - sounds like ? ? ? ?appsensor
>
> No don't know him.
>
> The AppSensor talk at OWASP Leeds/North in Newcastle, UK went down
> very well this evening. ?Lots of interest. ?One guy already using mini
> honeypots in their apps (checking for modification to otherwise
> useless hidden fields).
>
> Colin
>
> On 16 June 2010 19:15, Michael Coates <michael.coates at owasp.org> wrote:
>> Actually it does. ?I'd like to introduce the AppSensor project to Dave
>> Aitel. ?Does anyone know him and would be willing to pass along this info or
>> introduce us?
>>
>> Michael Coates
>> OWASP
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
> If you've received this email by mistake, we're sorry for bothering you. It may contain information that's confidential, so please delete it without sharing it. And if you let us know, we can try to stop it from happening again. Thank you.
>
> We may monitor any emails sent or received by us, or on our behalf. If we do, this will be in line with relevant law and our own policies.
>
> Sage (UK) Limited. Registered in England at North Park, Newcastle upon Tyne, NE13 9AA. Registered number 1045967.
>

From Simon.Bennetts at sage.com  Thu Jun 17 03:40:18 2010
From: Simon.Bennetts at sage.com (Bennetts, Simon)
Date: Thu, 17 Jun 2010 03:40:18 -0400
Subject: [Owasp-appsensor-project] Interesting article - sounds like
 appsensor
In-Reply-To: <AANLkTilx3oWQinpIkZHo2tBM8sF0VlMRbx-dHntFut2s@mail.gmail.com>
References: <AANLkTimcMx70bqKBzfcaUkSdudJjq1QJ9gucBngPlxFI@mail.gmail.com>
	<4C1914AE.4090904@owasp.org>
	<AANLkTimFvQLoajKa_iMVYeDh8dIK6cDUaVZEfIfNKqOu@mail.gmail.com>
	<D5DF6222EE076B40B9FEDFD49101B66B01D104E66D@NAMAIL01.gs.adinternal.com>,
	<AANLkTilx3oWQinpIkZHo2tBM8sF0VlMRbx-dHntFut2s@mail.gmail.com>
Message-ID: <D5DF6222EE076B40B9FEDFD49101B66B01D104E66F@NAMAIL01.gs.adinternal.com>

I think that would cover it, with some extra text.
It might well be worth adding some 'standard' url attacks that people try, such as adding "debug=1" or "admin=true".
If you never use those url params then again you know its very likely to be an attack.

And a beer after the next meeting sounds like a good plan:)

Cheers,

Simon

________________________________________
From: Colin Watson [colin.watson at owasp.org]
Sent: 17 June 2010 03:27
To: owasp-appsensor-project
Cc: Bennetts, Simon
Subject: Re: [Owasp-appsensor-project] Interesting article - sounds like        appsensor

Hello Simon!

Sorry I didn't have time to speak further at the end (we'll have to
get a pub lined up next time).

Do you think this proposed new detector:

   https://lists.owasp.org/pipermail/owasp-appsensor-project/2010-June/000048.html

might cover what's needed, or perhaps when we add the text, give this
as a good example?

Colin

On 17 June 2010 08:17, Bennetts, Simon <Simon.Bennetts at sage.com> wrote:
> Re the 'mini honeypots': that would be me then :)
>
> Been lurking on this list for a while, but not had a chance to contribute anything.
>
> Looking at the list of detection points I'd like to propose another one.
> As I mentioned in the Newcastle talk I put hidden fields in some forms which look like potential vulnerabilities.
> For example you could have "admin" set to "false".
> Of course these sort of fields are really 'hacker traps' - they can never be changed by any normal user actions.
> If they are changed then its a very good indication that someone is trying to attack your app.
>
> I realise that you could class these in the existing ACE* set, but personally I think its work having a specific new point, if only to promote the idea of putting such 'traps' in for hackers.
>
> And thanks for the talks Conlin, both very interesting.
>
> Cheers,
>
> Simon
>
> ________________________________________
> From: owasp-appsensor-project-bounces at lists.owasp.org [owasp-appsensor-project-bounces at lists.owasp.org] On Behalf Of Colin Watson [colin.watson at owasp.org]
> Sent: 16 June 2010 17:49
> To: Michael Coates
> Cc: owasp-appsensor-project
> Subject: Re: [Owasp-appsensor-project] Interesting article - sounds like        appsensor
>
> No don't know him.
>
> The AppSensor talk at OWASP Leeds/North in Newcastle, UK went down
> very well this evening.  Lots of interest.  One guy already using mini
> honeypots in their apps (checking for modification to otherwise
> useless hidden fields).
>
> Colin
>
> On 16 June 2010 19:15, Michael Coates <michael.coates at owasp.org> wrote:
>> Actually it does.  I'd like to introduce the AppSensor project to Dave
>> Aitel.  Does anyone know him and would be willing to pass along this info or
>> introduce us?
>>
>> Michael Coates
>> OWASP
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
> If you've received this email by mistake, we're sorry for bothering you. It may contain information that's confidential, so please delete it without sharing it. And if you let us know, we can try to stop it from happening again. Thank you.
>
> We may monitor any emails sent or received by us, or on our behalf. If we do, this will be in line with relevant law and our own policies.
>
> Sage (UK) Limited. Registered in England at North Park, Newcastle upon Tyne, NE13 9AA. Registered number 1045967.
>
If you've received this email by mistake, we're sorry for bothering you. It may contain information that's confidential, so please delete it without sharing it. And if you let us know, we can try to stop it from happening again. Thank you. 

We may monitor any emails sent or received by us, or on our behalf. If we do, this will be in line with relevant law and our own policies.

Sage (UK) Limited. Registered in England at North Park, Newcastle upon Tyne, NE13 9AA. Registered number 1045967.

From rcbarnett at gmail.com  Thu Jun 17 08:27:18 2010
From: rcbarnett at gmail.com (Ryan Barnett)
Date: Thu, 17 Jun 2010 08:27:18 -0400
Subject: [Owasp-appsensor-project]
 =?iso-8859-1?q?Interesting_article_-_so?=
 =?iso-8859-1?q?unds_like=09appsensor?=
In-Reply-To: <D5DF6222EE076B40B9FEDFD49101B66B01D104E66D@NAMAIL01.gs.adinternal.com>
References: <AANLkTimcMx70bqKBzfcaUkSdudJjq1QJ9gucBngPlxFI@mail.gmail.com>
	<AANLkTimFvQLoajKa_iMVYeDh8dIK6cDUaVZEfIfNKqOu@mail.gmail.com>
	<D5DF6222EE076B40B9FEDFD49101B66B01D104E66D@NAMAIL01.gs.adinternal.com>
Message-ID: <201006170827.18543.rcbarnett@gmail.com>

Some other hacker-traps (honeytokens) for web apps - 
http://blogs.sans.org/appsecstreetfighter/2009/06/04/my-top-6-honeytokens/

--
Ryan C. Barnett
WASC Web Hacking Incident Database Project Leader
WASC Distributed Open Proxy Honeypot Project Leader
OWASP ModSecurity Core Rule Set Project Leader
Tactical Web Application Security
http://tacticalwebappsec.blogspot.com

On Thursday 17 June 2010 03:17:22 Bennetts, Simon wrote:
> Re the 'mini honeypots': that would be me then :)
> 
> Been lurking on this list for a while, but not had a chance to contribute
> anything.
> 
> Looking at the list of detection points I'd like to propose another one.
> As I mentioned in the Newcastle talk I put hidden fields in some forms
> which look like potential vulnerabilities. For example you could have
> "admin" set to "false".
> Of course these sort of fields are really 'hacker traps' - they can never
> be changed by any normal user actions. If they are changed then its a very
> good indication that someone is trying to attack your app.
> 
> I realise that you could class these in the existing ACE* set, but
> personally I think its work having a specific new point, if only to
> promote the idea of putting such 'traps' in for hackers.
> 
> And thanks for the talks Conlin, both very interesting.
> 
> Cheers,
> 
> Simon
> 
> ________________________________________
> From: owasp-appsensor-project-bounces at lists.owasp.org
> [owasp-appsensor-project-bounces at lists.owasp.org] On Behalf Of Colin
> Watson [colin.watson at owasp.org] Sent: 16 June 2010 17:49
> To: Michael Coates
> Cc: owasp-appsensor-project
> Subject: Re: [Owasp-appsensor-project] Interesting article - sounds like   
>     appsensor
> 
> No don't know him.
> 
> The AppSensor talk at OWASP Leeds/North in Newcastle, UK went down
> very well this evening.  Lots of interest.  One guy already using mini
> honeypots in their apps (checking for modification to otherwise
> useless hidden fields).
> 
> Colin
> 
> On 16 June 2010 19:15, Michael Coates <michael.coates at owasp.org> wrote:
> > Actually it does.  I'd like to introduce the AppSensor project to Dave
> > Aitel.  Does anyone know him and would be willing to pass along this info
> > or introduce us?
> > 
> > Michael Coates
> > OWASP
> 
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
> If you've received this email by mistake, we're sorry for bothering you. It
> may contain information that's confidential, so please delete it without
> sharing it. And if you let us know, we can try to stop it from happening
> again. Thank you.
> 
> We may monitor any emails sent or received by us, or on our behalf. If we
> do, this will be in line with relevant law and our own policies.
> 
> Sage (UK) Limited. Registered in England at North Park, Newcastle upon
> Tyne, NE13 9AA. Registered number 1045967.
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20100617/8b96a5a7/attachment.html 

From michael.coates at owasp.org  Mon Jun 21 12:44:24 2010
From: michael.coates at owasp.org (Michael Coates)
Date: Mon, 21 Jun 2010 09:44:24 -0700
Subject: [Owasp-appsensor-project] AppSensor & ESAPI Integration
Message-ID: <4C1F96E8.3010809@owasp.org>

ESAPI Team,

The AppSensor team has been working hard over the last several months to 
create an AppSensor jar that is ready for ESAPI integration.

AppSensor is a project to enable detailed attack intrusion and response 
within application by integrating "detection points" into the 
application itself (think detecting all access control failures, 
malicious input, unexpected commands and more and then correlating that 
against the logged in user and logging out/locking the attacker). That's 
just the basics, more info on AppSensor here: 
http://www.owasp.org/index.php/Category:OWASP_AppSensor_Project

Here are the instructions for easily updating an existing ESAPI 
application to use AppSensor. I encourage those interested to take a 
quick read and respond with any comments.

http://www.owasp.org/index.php/AppSensor_GettingStarted

What's next:
1. We'd like to use the Getting Started guide as an initial strategy for 
users to begin leveraging AppSensor in their ESAPI apps. We're looking 
for interested parties to begin using AppSensor within ESAPI and provide 
their feedback.
2. It would also be great for the ESAPI config to contain the 
configuration line for AppSensor and a link to the getting started page.

#Use OWASP AppSensor for enhanced application intrusion detection and response
#See http://www.owasp.org/index.php/AppSensor_GettingStarted for necessary JAR and configuration
#ESAPI.IntrusionDetector=org.owasp.appsensor.intrusiondetection.AppSensorIntrusionDetector


Thoughts and feedback please.

-- 
Michael Coates
OWASP

-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20100621/592f3cb2/attachment.html 

From michael.coates at owasp.org  Mon Jun 21 12:54:54 2010
From: michael.coates at owasp.org (Michael Coates)
Date: Mon, 21 Jun 2010 09:54:54 -0700
Subject: [Owasp-appsensor-project] Interesting article - sounds
	like	appsensor
In-Reply-To: <D5DF6222EE076B40B9FEDFD49101B66B01D104E66D@NAMAIL01.gs.adinternal.com>
References: <AANLkTimcMx70bqKBzfcaUkSdudJjq1QJ9gucBngPlxFI@mail.gmail.com>	<4C1914AE.4090904@owasp.org>,
	<AANLkTimFvQLoajKa_iMVYeDh8dIK6cDUaVZEfIfNKqOu@mail.gmail.com>
	<D5DF6222EE076B40B9FEDFD49101B66B01D104E66D@NAMAIL01.gs.adinternal.com>
Message-ID: <4C1F995E.7010703@owasp.org>

I think this is a good idea. I'm looking for name suggestions for the 
category name. I like having two words so we can abbreviate down to two 
letters. These items will be listed in our detection point document, but 
not initially supported in the AppSensor code

HoneyTrap
HackerTrap


HT1 - Modification of honey trap hidden field
Description: A non-functional hidden field is added to the application 
with the specific purpose of detecting a potentially malicious. This 
detection point will fire anytime the honey trap hidden field is modified.
Example: A hidden field is used with the title "admin" and is set to 
"false". If the application ever receives a value other than "false" 
then the detection point should fire.

HT2 - More from here 
http://blogs.sans.org/appsecstreetfighter/2009/06/04/my-top-6-honeytokens/ 
(thanks ryan)

Thoughts?

Michael Coates
OWASP


On 6/17/10 12:17 AM, Bennetts, Simon wrote:
> Re the 'mini honeypots': that would be me then :)
>
> Been lurking on this list for a while, but not had a chance to contribute anything.
>
> Looking at the list of detection points I'd like to propose another one.
> As I mentioned in the Newcastle talk I put hidden fields in some forms which look like potential vulnerabilities.
> For example you could have "admin" set to "false".
> Of course these sort of fields are really 'hacker traps' - they can never be changed by any normal user actions.
> If they are changed then its a very good indication that someone is trying to attack your app.
>
> I realise that you could class these in the existing ACE* set, but personally I think its work having a specific new point, if only to promote the idea of putting such 'traps' in for hackers.
>
> And thanks for the talks Conlin, both very interesting.
>
> Cheers,
>
> Simon
>
> ________________________________________
> From: owasp-appsensor-project-bounces at lists.owasp.org [owasp-appsensor-project-bounces at lists.owasp.org] On Behalf Of Colin Watson [colin.watson at owasp.org]
> Sent: 16 June 2010 17:49
> To: Michael Coates
> Cc: owasp-appsensor-project
> Subject: Re: [Owasp-appsensor-project] Interesting article - sounds like        appsensor
>
> No don't know him.
>
> The AppSensor talk at OWASP Leeds/North in Newcastle, UK went down
> very well this evening.  Lots of interest.  One guy already using mini
> honeypots in their apps (checking for modification to otherwise
> useless hidden fields).
>
> Colin
>
> On 16 June 2010 19:15, Michael Coates<michael.coates at owasp.org>  wrote:
>    
>> Actually it does.  I'd like to introduce the AppSensor project to Dave
>> Aitel.  Does anyone know him and would be willing to pass along this info or
>> introduce us?
>>
>> Michael Coates
>> OWASP
>>      
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
> If you've received this email by mistake, we're sorry for bothering you. It may contain information that's confidential, so please delete it without sharing it. And if you let us know, we can try to stop it from happening again. Thank you.
>
> We may monitor any emails sent or received by us, or on our behalf. If we do, this will be in line with relevant law and our own policies.
>
> Sage (UK) Limited. Registered in England at North Park, Newcastle upon Tyne, NE13 9AA. Registered number 1045967.
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>    

From kevin.w.wall at gmail.com  Tue Jun 22 08:02:13 2010
From: kevin.w.wall at gmail.com (Kevin W. Wall)
Date: Tue, 22 Jun 2010 08:02:13 -0400
Subject: [Owasp-appsensor-project] [Esapi-dev] AppSensor & ESAPI
	Integration
In-Reply-To: <4C1F96E8.3010809@owasp.org>
References: <4C1F96E8.3010809@owasp.org>
Message-ID: <4C20A645.203@gmail.com>

Michael,

Michael Coates wrote:
> ESAPI Team,
>
> The AppSensor team has been working hard over the last several months to
> create an AppSensor jar that is ready for ESAPI integration.
>
> AppSensor is a project to enable detailed attack intrusion and response
> within application by integrating "detection points" into the
> application itself (think detecting all access control failures,
> malicious input, unexpected commands and more and then correlating that
> against the logged in user and logging out/locking the attacker). That's
> just the basics, more info on AppSensor here:
> http://www.owasp.org/index.php/Category:OWASP_AppSensor_Project
>
> Here are the instructions for easily updating an existing ESAPI
> application to use AppSensor. I encourage those interested to take a
> quick read and respond with any comments.
>
> http://www.owasp.org/index.php/AppSensor_GettingStarted
>
> What's next:
> 1. We'd like to use the Getting Started guide as an initial strategy for
> users to begin leveraging AppSensor in their ESAPI apps. We're looking
> for interested parties to begin using AppSensor within ESAPI and provide
> their feedback.
> 2. It would also be great for the ESAPI config to contain the
> configuration line for AppSensor and a link to the getting started page.
>
> #Use OWASP AppSensor for enhanced application intrusion detection and
> response
> #See http://www.owasp.org/index.php/AppSensor_GettingStarted for
> necessary JAR and configuration
>
#ESAPI.IntrusionDetector=org.owasp.appsensor.intrusiondetection.AppSensorIntrusionDetector
>
> Thoughts and feedback please.

I've been following the AppSensor work for awhile now, but there has always
been a few points of confusion as it related to ESAPI and I suspect that other
ESAPI developers may have the same questions. Since I've really not dug into
AppSensor and done anything hands-on, my questions may be a bit naive, but
I'll hope you'll bare with my ignorance.

Anyhow, as you are no doubt aware, ESAPI also has a Web Application Firewall
(WAF) as one of its features. Do you see AppSensor as *replacing* this
built-in WAF or as augmenting it? If the former, what are the advantages of
using AppSensor rather than ESAPI's WAF feature? If it is to augment it, could
you explain how it does this because it would seem to me that there is a lot
of overlapping functionality. Is there some difference in _intent_?
Or is ESAPI's WAF simply a JavaEE Servlet Filter that invokes a more
rudimentary intrusion detector (DefaultIntrusionDetector) and
AppSensor is simply a more advanced version of an intrusion detector?

My second question is about the intrusion detection properties built into ESAPI.
Your Getting Started wiki page mentions replacing
ESAPI.IntrusionDetector=org.owasp.esapi.reference.DefaultIntrusionDetector
with
ESAPI.IntrusionDetector=org.owasp.appsensor.intrusiondetection.AppSensorIntrusionDetector

but there are also these other properties (see below). Do these properties also
control AppSensor or does it have it's own config file?

E.g., from the latest ESAPI.properties:

#===========================================================================
# ESAPI Intrusion Detection
#
# Each event has a base to which .count, .interval, and .action are added
# The IntrusionException will fire if we receive "count" events within
"interval" seconds
# The IntrusionDetector is configurable to take the following actions: log,
logout, and disable
#  (multiple actions separated by commas are allowed e.g.
event.test.actions=log,disable
#
# Custom Events
# Names must start with "event." as the base
# Use IntrusionDetector.addEvent( "test" ) in your code to trigger "event.test" here
# You can also disable intrusion detection completely by changing
# the following parameter to true
#
IntrusionDetector.Disable=false
#
IntrusionDetector.event.test.count=2
IntrusionDetector.event.test.interval=10
IntrusionDetector.event.test.actions=disable,log

# Exception Events
# All EnterpriseSecurityExceptions are registered automatically
# Call IntrusionDetector.getInstance().addException(e) for Exceptions that do
not extend EnterpriseSecurityException
# Use the fully qualified classname of the exception as the base

# any intrusion is an attack
IntrusionDetector.org.owasp.esapi.errors.IntrusionException.count=1
IntrusionDetector.org.owasp.esapi.errors.IntrusionException.interval=1
IntrusionDetector.org.owasp.esapi.errors.IntrusionException.actions=log,disable,logout

# for test purposes
# CHECKME: Shouldn't there be something in the property name itself that designates
#		   that these are for testing???
IntrusionDetector.org.owasp.esapi.errors.IntegrityException.count=10
IntrusionDetector.org.owasp.esapi.errors.IntegrityException.interval=5
IntrusionDetector.org.owasp.esapi.errors.IntegrityException.actions=log,disable,logout

# rapid validation errors indicate scans or attacks in progress
# org.owasp.esapi.errors.ValidationException.count=10
# org.owasp.esapi.errors.ValidationException.interval=10
# org.owasp.esapi.errors.ValidationException.actions=log,logout

# sessions jumping between hosts indicates session hijacking
IntrusionDetector.org.owasp.esapi.errors.AuthenticationHostException.count=2
IntrusionDetector.org.owasp.esapi.errors.AuthenticationHostException.interval=10
IntrusionDetector.org.owasp.esapi.errors.AuthenticationHostException.actions=log,logout


#===========================================================================


Finally, a last question. It seems to me that some intrusion attempts can best
be detected from deep within ESAPI where the relevant context is available. A
good example of this is if someone were to be attempting a known ciphertext
attack on ESAPI's crypto, such as the Padded Oracle attack described by Rizzo
and Duong. In such cases, is adding explicit intrusion detection points required
or is it sufficient to just through some exception derived from ESAPI's
EnterpriseSecurityException class? In the case of crypto at least, there are
different things that can go wrong, but you need to be very careful not to
reveal what went long as that can leak information to an attacker leading to
a successful attack. (Such is the case with the Padded Oracle attack.)

Thanks,
-kevin
-- 
Kevin W. Wall
"The most likely way for the world to be destroyed, most experts agree,
is by accident. That's where we come in; we're computer professionals.
We cause accidents."        -- Nathaniel Borenstein, co-creator of MIME

From colin.watson at owasp.org  Tue Jun 22 09:04:14 2010
From: colin.watson at owasp.org (Colin Watson)
Date: Tue, 22 Jun 2010 14:04:14 +0100
Subject: [Owasp-appsensor-project] Interesting article - sounds like
	appsensor
In-Reply-To: <201006170827.18543.rcbarnett@gmail.com>
References: <AANLkTimcMx70bqKBzfcaUkSdudJjq1QJ9gucBngPlxFI@mail.gmail.com>
	<AANLkTimFvQLoajKa_iMVYeDh8dIK6cDUaVZEfIfNKqOu@mail.gmail.com>
	<D5DF6222EE076B40B9FEDFD49101B66B01D104E66D@NAMAIL01.gs.adinternal.com>
	<201006170827.18543.rcbarnett@gmail.com>
Message-ID: <AANLkTikLwFY0utAPd2vhCIO08e-tr6jm3e95XBFANRjR@mail.gmail.com>

Ryan

> Some other hacker-traps (honeytokens) for web apps -
> http://blogs.sans.org/appsecstreetfighter/2009/06/04/my-top-6-honeytokens/

A good list there.

But NOFOLLOW in item 4 is incorrect.  NOFOLLOW does not mean "do not
follow the link", it is an anti comment spam attribute meaning "do not
transfer page rank".  Real search engine spiders may follow the link
too (robots.txt might be better here).  I'll add a comment to the SANS
page....

Colin

From colin.watson at owasp.org  Tue Jun 22 09:30:19 2010
From: colin.watson at owasp.org (Colin Watson)
Date: Tue, 22 Jun 2010 14:30:19 +0100
Subject: [Owasp-appsensor-project] Interesting article - sounds like
	appsensor
In-Reply-To: <4C1F995E.7010703@owasp.org>
References: <AANLkTimcMx70bqKBzfcaUkSdudJjq1QJ9gucBngPlxFI@mail.gmail.com>
	<4C1914AE.4090904@owasp.org>
	<AANLkTimFvQLoajKa_iMVYeDh8dIK6cDUaVZEfIfNKqOu@mail.gmail.com>
	<D5DF6222EE076B40B9FEDFD49101B66B01D104E66D@NAMAIL01.gs.adinternal.com>
	<4C1F995E.7010703@owasp.org>
Message-ID: <AANLkTinp1kbBrCsiljU9jF61Xaa5JFtERFgalaVhl0Oi@mail.gmail.com>

Michael, Simon and Ryan

Perhaps a separate category (HT) is best - these relate to detectors
at points where normal application use would never reach.

I wonder if the proposed HT1 is just one example of a more general
case?  Something not required by the application, but MODIFIED by the
user.  HT2 might then be something different like a resource not
used/needed by the application, but VISITED by the user?  Then perhaps
HT3 to cover things like fake passwords in comment tags used elsewhere
(bait), or is that just another example of HT2?

The items then fall into these:

HT1 - Modification of honey trap data
Simon's example plus SANS items 3 and 6

HT2 - Visit to honey trap resource
SANS items 2 and 4

HT3 - Honey trap bait(data?) used
SANS item 5

I'm not sure if SANS item 1 fits in here at all.

Colin


On 21 June 2010 17:54, Michael Coates <michael.coates at owasp.org> wrote:
> I think this is a good idea. I'm looking for name suggestions for the
> category name. I like having two words so we can abbreviate down to two
> letters. These items will be listed in our detection point document, but not
> initially supported in the AppSensor code
>
> HoneyTrap
> HackerTrap
>
>
> HT1 - Modification of honey trap hidden field
> Description: A non-functional hidden field is added to the application with
> the specific purpose of detecting a potentially malicious. This detection
> point will fire anytime the honey trap hidden field is modified.
> Example: A hidden field is used with the title "admin" and is set to
> "false". If the application ever receives a value other than "false" then
> the detection point should fire.
>
> HT2 - More from here
> http://blogs.sans.org/appsecstreetfighter/2009/06/04/my-top-6-honeytokens/
> (thanks ryan)
>
> Thoughts?
>
> Michael Coates
> OWASP
>
>
> On 6/17/10 12:17 AM, Bennetts, Simon wrote:
>>
>> Re the 'mini honeypots': that would be me then :)
>>
>> Been lurking on this list for a while, but not had a chance to contribute
>> anything.
>>
>> Looking at the list of detection points I'd like to propose another one.
>> As I mentioned in the Newcastle talk I put hidden fields in some forms
>> which look like potential vulnerabilities.
>> For example you could have "admin" set to "false".
>> Of course these sort of fields are really 'hacker traps' - they can never
>> be changed by any normal user actions.
>> If they are changed then its a very good indication that someone is trying
>> to attack your app.
>>
>> I realise that you could class these in the existing ACE* set, but
>> personally I think its work having a specific new point, if only to promote
>> the idea of putting such 'traps' in for hackers.
>>
>> And thanks for the talks Conlin, both very interesting.
>>
>> Cheers,
>>
>> Simon
>>
>> ________________________________________
>> From: owasp-appsensor-project-bounces at lists.owasp.org
>> [owasp-appsensor-project-bounces at lists.owasp.org] On Behalf Of Colin Watson
>> [colin.watson at owasp.org]
>> Sent: 16 June 2010 17:49
>> To: Michael Coates
>> Cc: owasp-appsensor-project
>> Subject: Re: [Owasp-appsensor-project] Interesting article - sounds like
>> ? ? ?appsensor
>>
>> No don't know him.
>>
>> The AppSensor talk at OWASP Leeds/North in Newcastle, UK went down
>> very well this evening. ?Lots of interest. ?One guy already using mini
>> honeypots in their apps (checking for modification to otherwise
>> useless hidden fields).
>>
>> Colin
>>
>> On 16 June 2010 19:15, Michael Coates<michael.coates at owasp.org> ?wrote:
>>
>>>
>>> Actually it does. ?I'd like to introduce the AppSensor project to Dave
>>> Aitel. ?Does anyone know him and would be willing to pass along this info
>>> or
>>> introduce us?
>>>
>>> Michael Coates
>>> OWASP
>>>
>>
>> _______________________________________________
>> Owasp-appsensor-project mailing list
>> Owasp-appsensor-project at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>> If you've received this email by mistake, we're sorry for bothering you.
>> It may contain information that's confidential, so please delete it without
>> sharing it. And if you let us know, we can try to stop it from happening
>> again. Thank you.
>>
>> We may monitor any emails sent or received by us, or on our behalf. If we
>> do, this will be in line with relevant law and our own policies.
>>
>> Sage (UK) Limited. Registered in England at North Park, Newcastle upon
>> Tyne, NE13 9AA. Registered number 1045967.
>> _______________________________________________
>> Owasp-appsensor-project mailing list
>> Owasp-appsensor-project at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>
>

From colin.watson at owasp.org  Tue Jun 22 11:12:54 2010
From: colin.watson at owasp.org (Colin Watson)
Date: Tue, 22 Jun 2010 16:12:54 +0100
Subject: [Owasp-appsensor-project] Change to Detection Points - SE5
	Source IP Address Changes During Session
In-Reply-To: <201006111647.49261.rcbarnett@gmail.com>
References: <AANLkTin_zH5Qa4ueioJw875afDWJ14DNwKM0PMS3rYKd@mail.gmail.com>
	<AANLkTilzhUXX3O9Z8Epncax6U8DF0EfQ-luA3e8a7KpW@mail.gmail.com>
	<AANLkTikAeQFi7u4eayr1aE5pezM9cTFZnLd46PASEyBq@mail.gmail.com>
	<201006111647.49261.rcbarnett@gmail.com>
Message-ID: <AANLkTinHFsz6tEjZ6206TRHiwsUHx-duoUUUx-HtL8yF@mail.gmail.com>

Ryan's "purpose/goal" is a good point.  I will revist my suggestions.

> Perhaps there should be a parent category for Fraud Detection?

Maybe we could cross-reference the existing and proposed detection
points against categories like "fraud detection", but what should
those categories be?  I thought about the WASC Threat Classification
of attacks and weaknesses, but that doesn't seem to be the right
level.  Any other suggestions?

Colin

On 11 June 2010 21:47, Ryan Barnett <rcbarnett at gmail.com> wrote:
> We need to make sure that it is clear as to what the purpose/goal is for each detection
> point. ?There are a number of new detection items that Colin sent (this one, change in
> User-Agent string, etc...) whose real goal is to try and alert when we think that there
> may be an indication of some sort of Session Hijacking attack occurring. ?Flagging changes
> to IP (network block) or User-Agent value is easy to do however it also may be prone to
> false positives and negatives. ?We actually have just added this type of Session Hijacking
> detection to the latest ModSecurity CRS v2.0.7.
>
> Perhaps there should be a parent category for Fraud Detection?
>
> --
> Ryan C. Barnett
> WASC Web Hacking Incident Database Project Leader
> WASC Distributed Open Proxy Honeypot Project Leader
> OWASP ModSecurity Core Rule Set Project Leader
> Tactical Web Application Security
> http://tacticalwebappsec.blogspot.com

From michael.coates at owasp.org  Tue Jun 22 13:59:21 2010
From: michael.coates at owasp.org (Michael Coates)
Date: Tue, 22 Jun 2010 10:59:21 -0700
Subject: [Owasp-appsensor-project] [Esapi-dev] AppSensor & ESAPI
	Integration
In-Reply-To: <B9A412898630124ABE8350F4EBD32E8401394074@mymail.aspectsecurity.com>
References: <4C1F96E8.3010809@owasp.org> <4C20A645.203@gmail.com>
	<B9A412898630124ABE8350F4EBD32E8401394074@mymail.aspectsecurity.com>
Message-ID: <4C20F9F9.9010900@owasp.org>

Kevin,

Thanks for your questions.  My responses are below. By all means, keep 
the questions coming. We can use these questions to help build an FAQ to 
help others that are new to AppSensor.

Michael Coates
OWASP


On 6/22/10 5:48 AM, Jeff Williams wrote:
>
> Here's my understanding, but I'd really like to get Michael's 
> interpretation too.
>
> Do you see AppSensor as *replacing* this built-in WAF or as augmenting 
> it? If the former, what are the advantages of using AppSensor rather 
> than ESAPI's WAF feature? If it is to augment it, could you explain 
> how it does this because it would seem to me that there is a lot of 
> overlapping functionality. Is there some difference in _intent_? Or is 
> ESAPI's WAF simply a JavaEE Servlet Filter that invokes a more 
> rudimentary intrusion detector (DefaultIntrusionDetector) and 
> AppSensor is simply a more advanced version of an intrusion detector?
>
> Although there is a bit of overlap in the input validation area, there 
> **is** a difference in intent and capability. To me, the primary WAF 
> use case is to block attacks with **known** signatures (virtual 
> patch). Of course it can do positive HTTP validation and other things 
> as well. The IntrusionDetector, on the other hand can detect 
> **unknown** attacks using much more general heuristics and contextual 
> information from the entire application, not just the request and 
> response.
>
AppSensor can be seen as an enhanced alternative to ESAPI's intrusion 
detector. AppSensor is not a replacement for the ESAPI WAF, nor is 
AppSensor a WAF at all.  AppSensor works by deep integration into the 
application to identify custom application attacks that could not be 
detected by a WAF. A prime example is an access control violation via 
direct object tampering

www.site.com?account=1234
www.site.com?account=1235

An attacker attempting to exploit weak access control policies may 
enumerate the direct object references to hopefully gain access to 
another account's data. A good app will throw access control denied 
errors on each attempt. AppSensor is positioned within the application 
so that an AppSensor specific exception could also be created in this 
situation.  This allows AppSensor to record the malicious event against 
the specific user. Once a defined threshold is reached, AppSensor logs 
out the user (or locks them, emails someone, whatever).  This is the 
idea of AppSensor; placing detection points within the app to see attack 
activity that is specific and targeted to a unique app and then tie 
these actions back to the logged in user. These attacks are typically 
otherwise invisible to a WAF with no application specific knowledge and 
the WAF often lacks the ability to take action against the malicious 
user. All the detection points are listed here: 
http://www.owasp.org/index.php/AppSensor_DetectionPoints
>
> It seems to me that some intrusion attempts can best be detected from 
> deep within ESAPI where the relevant context is available. A good 
> example of this is if someone were to be attempting a known ciphertext 
> attack on ESAPI's crypto, such as the Padded Oracle attack described 
> by Rizzo and Duong. In such cases, is adding explicit intrusion 
> detection points required or is it sufficient to just through some 
> exception derived from ESAPI's EnterpriseSecurityException class?
>
> This is exactly the contract that the IntrusionDetector (AppSensor) is 
> intended to fulfill. The IntrusionDetector implementation is notified 
> of  all EnterpriseSecurityExceptions. The job of the detector is to 
> identify attacks in that stream of events and respond to them in 
> realtime. This type of attack could never be identified by the WAF.
>
>  --Jeff
>

Yep. This is the idea.  Within the application cypto's code you would 
perform sort of check for the padded oracle attack. If you detected this 
attack then you would add one more line to create the appsensor 
exception.  At this point you could choose to also add a message to be 
displayed to the user, or just leave that blank.  After this, the 
AppSensor code would take over to again record the attack event against 
the particular user and take responsive action if necessary.

Pseudo Code
if (oracle padded attack){

new AppSensorException("ECE1", "(optional user msg) Sorry user, you are bad", "(system log message) Attacker is attempting an Oracle Padded Attack);

}
>
> My second question is about the intrusion detection properties built 
> into ESAPI.
>
> Your Getting Started wiki page mentions replacing
>
> ESAPI.IntrusionDetector=org.owasp.esapi.reference.DefaultIntrusionDetector
>
> with
>
> ESAPI.IntrusionDetector=org.owasp.appsensor.intrusiondetection.AppSensorIntrusionDetector
>
> but there are also these other properties (see below). Do these 
> properties also
>
> control AppSensor or does it have it's own config file?
>

Good catch. We need to add a little more info here.  After setting the 
intrusion detector to AppSensorIntrusionDetector then the user needs to 
customize the appsensor.properties document. This is basically an 
enhanced version of the ESAPI Intrusion Detection properties file.  So 
essentially the portion of the ESAPI.properties file that you've 
mentioned below is no longer used by ESAPI (or AppSensor).
>
> E.g., from the latest ESAPI.properties:
>
> #===========================================================================
>
> # ESAPI Intrusion Detection
>
> #
>
> # Each event has a base to which .count, .interval, and .action are added
>
> # The IntrusionException will fire if we receive "count" events within
>
> "interval" seconds
>
> # The IntrusionDetector is configurable to take the following actions: 
> log,
>
> logout, and disable
>
> #  (multiple actions separated by commas are allowed e.g.
>
> event.test.actions=log,disable
>
> #
>
> # Custom Events
>
> # Names must start with "event." as the base
>
> # Use IntrusionDetector.addEvent( "test" ) in your code to trigger 
> "event.test" here
>
> # You can also disable intrusion detection completely by changing
>
> # the following parameter to true
>
> #
>
> IntrusionDetector.Disable=false
>
> #
>
> IntrusionDetector.event.test.count=2
>
> IntrusionDetector.event.test.interval=10
>
> IntrusionDetector.event.test.actions=disable,log
>
> # Exception Events
>
> # All EnterpriseSecurityExceptions are registered automatically
>
> # Call IntrusionDetector.getInstance().addException(e) for Exceptions 
> that do
>
> not extend EnterpriseSecurityException
>
> # Use the fully qualified classname of the exception as the base
>
> # any intrusion is an attack
>
> IntrusionDetector.org.owasp.esapi.errors.IntrusionException.count=1
>
> IntrusionDetector.org.owasp.esapi.errors.IntrusionException.interval=1
>
> IntrusionDetector.org.owasp.esapi.errors.IntrusionException.actions=log,disable,logout
>
> # for test purposes
>
> # CHECKME: Shouldn't there be something in the property name itself 
> that designates
>
> #              that these are for testing???
>
> IntrusionDetector.org.owasp.esapi.errors.IntegrityException.count=10
>
> IntrusionDetector.org.owasp.esapi.errors.IntegrityException.interval=5
>
> IntrusionDetector.org.owasp.esapi.errors.IntegrityException.actions=log,disable,logout
>
> # rapid validation errors indicate scans or attacks in progress
>
> # org.owasp.esapi.errors.ValidationException.count=10
>
> # org.owasp.esapi.errors.ValidationException.interval=10
>
> # org.owasp.esapi.errors.ValidationException.actions=log,logout
>
> # sessions jumping between hosts indicates session hijacking
>
> IntrusionDetector.org.owasp.esapi.errors.AuthenticationHostException.count=2
>
> IntrusionDetector.org.owasp.esapi.errors.AuthenticationHostException.interval=10
>
> IntrusionDetector.org.owasp.esapi.errors.AuthenticationHostException.actions=log,logout
>
> #===========================================================================
>
> Finally, a last question. It seems to me that some intrusion attempts 
> can best
>
> be detected from deep within ESAPI where the relevant context is 
> available. A
>
> good example of this is if someone were to be attempting a known 
> ciphertext
>
> attack on ESAPI's crypto, such as the Padded Oracle attack described 
> by Rizzo
>
> and Duong. In such cases, is adding explicit intrusion detection 
> points required
>
> or is it sufficient to just through some exception derived from ESAPI's
>
> EnterpriseSecurityException class? In the case of crypto at least, 
> there are
>
> different things that can go wrong, but you need to be very careful not to
>
> reveal what went long as that can leak information to an attacker 
> leading to
>
> a successful attack. (Such is the case with the Padded Oracle attack.)
>
> Thanks,
>
> -kevin
>
> -- 
>
> Kevin W. Wall
>
> "The most likely way for the world to be destroyed, most experts agree,
>
> is by accident. That's where we come in; we're computer professionals.
>
> We cause accidents."        -- Nathaniel Borenstein, co-creator of MIME
>
> _______________________________________________
>
> Esapi-dev mailing list
>
> Esapi-dev at lists.owasp.org
>
> https://lists.owasp.org/mailman/listinfo/esapi-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20100622/b18af123/attachment.html 

From jtmelton at gmail.com  Tue Jun 22 22:09:25 2010
From: jtmelton at gmail.com (John Melton)
Date: Tue, 22 Jun 2010 22:09:25 -0400
Subject: [Owasp-appsensor-project] [Esapi-dev] AppSensor & ESAPI
	Integration
In-Reply-To: <4C20F9F9.9010900@owasp.org>
References: <4C1F96E8.3010809@owasp.org> <4C20A645.203@gmail.com> 
	<B9A412898630124ABE8350F4EBD32E8401394074@mymail.aspectsecurity.com> 
	<4C20F9F9.9010900@owasp.org>
Message-ID: <AANLkTincNesmxeJnNnQkxatjyE_hRTJA54ubn4pHPR-i@mail.gmail.com>

Just wanted to point out 2 additional items.
- In reference to the config section from the ESAPI.properties file,
AppSensor uses a class that reads in the ESAPI.properties file as well as
the appsensor.properties file, and treats them as a merged list.  Therefore,
technically, the config for the threshold information could be in either
file.
- The other point to note here is that AppSensor does use the same config
format as the reference intrusion detector at the moment, and includes the
same response actions (as well as some additional options).  This means that
if you've already configured thresholds for the various exception types,
that data will continue to be used in the same way if you switch to using
AppSensor.
Thanks,
John

On Tue, Jun 22, 2010 at 1:59 PM, Michael Coates <michael.coates at owasp.org>wrote:

>  Kevin,
>
> Thanks for your questions.  My responses are below. By all means, keep the
> questions coming. We can use these questions to help build an FAQ to help
> others that are new to AppSensor.
>
> Michael Coates
> OWASP
>
>
> On 6/22/10 5:48 AM, Jeff Williams wrote:
>
>  Here's my understanding, but I'd really like to get Michael's
> interpretation too.
>
>
>
> Do you see AppSensor as *replacing* this built-in WAF or as augmenting it?
> If the former, what are the advantages of using AppSensor rather than
> ESAPI's WAF feature? If it is to augment it, could you explain how it does
> this because it would seem to me that there is a lot of overlapping
> functionality. Is there some difference in _intent_? Or is ESAPI's WAF
> simply a JavaEE Servlet Filter that invokes a more rudimentary intrusion
> detector (DefaultIntrusionDetector) and AppSensor is simply a more advanced
> version of an intrusion detector?
>
>
>
> Although there is a bit of overlap in the input validation area, there **
> is** a difference in intent and capability. To me, the primary WAF use
> case is to block attacks with **known** signatures (virtual patch). Of
> course it can do positive HTTP validation and other things as well. The
> IntrusionDetector, on the other hand can detect **unknown** attacks using
> much more general heuristics and contextual information from the entire
> application, not just the request and response.
>
> AppSensor can be seen as an enhanced alternative to ESAPI's intrusion
> detector. AppSensor is not a replacement for the ESAPI WAF, nor is AppSensor
> a WAF at all.  AppSensor works by deep integration into the application to
> identify custom application attacks that could not be detected by a WAF. A
> prime example is an access control violation via direct object tampering
>
> www.site.com?account=1234
> www.site.com?account=1235
>
> An attacker attempting to exploit weak access control policies may
> enumerate the direct object references to hopefully gain access to another
> account's data. A good app will throw access control denied errors on each
> attempt. AppSensor is positioned within the application so that an AppSensor
> specific exception could also be created in this situation.  This allows
> AppSensor to record the malicious event against the specific user. Once a
> defined threshold is reached, AppSensor logs out the user (or locks them,
> emails someone, whatever).  This is the idea of AppSensor; placing detection
> points within the app to see attack activity that is specific and targeted
> to a unique app and then tie these actions back to the logged in user. These
> attacks are typically otherwise invisible to a WAF with no application
> specific knowledge and the WAF often lacks the ability to take action
> against the malicious user. All the detection points are listed here:
> http://www.owasp.org/index.php/AppSensor_DetectionPoints
>
>
>
> It seems to me that some intrusion attempts can best be detected from deep
> within ESAPI where the relevant context is available. A good example of this
> is if someone were to be attempting a known ciphertext attack on ESAPI's
> crypto, such as the Padded Oracle attack described by Rizzo and Duong. In
> such cases, is adding explicit intrusion detection points required or is it
> sufficient to just through some exception derived from ESAPI's
> EnterpriseSecurityException class?
>
>
>
> This is exactly the contract that the IntrusionDetector (AppSensor) is
> intended to fulfill. The IntrusionDetector implementation is notified of
> all EnterpriseSecurityExceptions. The job of the detector is to identify
> attacks in that stream of events and respond to them in realtime. This type
> of attack could never be identified by the WAF.
>
>  --Jeff
>
>
> Yep. This is the idea.  Within the application cypto's code you would
> perform sort of check for the padded oracle attack. If you detected this
> attack then you would add one more line to create the appsensor exception.
> At this point you could choose to also add a message to be displayed to the
> user, or just leave that blank.  After this, the AppSensor code would take
> over to again record the attack event against the particular user and take
> responsive action if necessary.
>
> Pseudo Code
> if (oracle padded attack){
>
> new AppSensorException("ECE1", "(optional user msg) Sorry user, you are bad", "(system log message) Attacker is attempting an Oracle Padded Attack);
>
> }
>
>
>
> My second question is about the intrusion detection properties built into
> ESAPI.
>
> Your Getting Started wiki page mentions replacing
>
> ESAPI.IntrusionDetector=org.owasp.esapi.reference.DefaultIntrusionDetector
>
> with
>
>
> ESAPI.IntrusionDetector=org.owasp.appsensor.intrusiondetection.AppSensorIntrusionDetector
>
>
>
> but there are also these other properties (see below). Do these properties
> also
>
> control AppSensor or does it have it's own config file?
>
>
> Good catch. We need to add a little more info here.  After setting the
> intrusion detector to AppSensorIntrusionDetector then the user needs to
> customize the appsensor.properties document. This is basically an enhanced
> version of the ESAPI Intrusion Detection properties file.  So essentially
> the portion of the ESAPI.properties file that you've mentioned below is no
> longer used by ESAPI (or AppSensor).
>
>
>
> E.g., from the latest ESAPI.properties:
>
>
>
>
> #===========================================================================
>
> # ESAPI Intrusion Detection
>
> #
>
> # Each event has a base to which .count, .interval, and .action are added
>
> # The IntrusionException will fire if we receive "count" events within
>
> "interval" seconds
>
> # The IntrusionDetector is configurable to take the following actions: log,
>
> logout, and disable
>
> #  (multiple actions separated by commas are allowed e.g.
>
> event.test.actions=log,disable
>
> #
>
> # Custom Events
>
> # Names must start with "event." as the base
>
> # Use IntrusionDetector.addEvent( "test" ) in your code to trigger
> "event.test" here
>
> # You can also disable intrusion detection completely by changing
>
> # the following parameter to true
>
> #
>
> IntrusionDetector.Disable=false
>
> #
>
> IntrusionDetector.event.test.count=2
>
> IntrusionDetector.event.test.interval=10
>
> IntrusionDetector.event.test.actions=disable,log
>
>
>
> # Exception Events
>
> # All EnterpriseSecurityExceptions are registered automatically
>
> # Call IntrusionDetector.getInstance().addException(e) for Exceptions that
> do
>
> not extend EnterpriseSecurityException
>
> # Use the fully qualified classname of the exception as the base
>
>
>
> # any intrusion is an attack
>
> IntrusionDetector.org.owasp.esapi.errors.IntrusionException.count=1
>
> IntrusionDetector.org.owasp.esapi.errors.IntrusionException.interval=1
>
>
> IntrusionDetector.org.owasp.esapi.errors.IntrusionException.actions=log,disable,logout
>
>
>
> # for test purposes
>
> # CHECKME: Shouldn't there be something in the property name itself that
> designates
>
> #              that these are for testing???
>
> IntrusionDetector.org.owasp.esapi.errors.IntegrityException.count=10
>
> IntrusionDetector.org.owasp.esapi.errors.IntegrityException.interval=5
>
>
> IntrusionDetector.org.owasp.esapi.errors.IntegrityException.actions=log,disable,logout
>
>
>
> # rapid validation errors indicate scans or attacks in progress
>
> # org.owasp.esapi.errors.ValidationException.count=10
>
> # org.owasp.esapi.errors.ValidationException.interval=10
>
> # org.owasp.esapi.errors.ValidationException.actions=log,logout
>
>
>
> # sessions jumping between hosts indicates session hijacking
>
>
> IntrusionDetector.org.owasp.esapi.errors.AuthenticationHostException.count=2
>
>
> IntrusionDetector.org.owasp.esapi.errors.AuthenticationHostException.interval=10
>
>
> IntrusionDetector.org.owasp.esapi.errors.AuthenticationHostException.actions=log,logout
>
>
>
>
>
>
> #===========================================================================
>
>
>
>
>
> Finally, a last question. It seems to me that some intrusion attempts can
> best
>
> be detected from deep within ESAPI where the relevant context is available.
> A
>
> good example of this is if someone were to be attempting a known ciphertext
>
> attack on ESAPI's crypto, such as the Padded Oracle attack described by
> Rizzo
>
> and Duong. In such cases, is adding explicit intrusion detection points
> required
>
> or is it sufficient to just through some exception derived from ESAPI's
>
> EnterpriseSecurityException class? In the case of crypto at least, there
> are
>
> different things that can go wrong, but you need to be very careful not to
>
> reveal what went long as that can leak information to an attacker leading
> to
>
> a successful attack. (Such is the case with the Padded Oracle attack.)
>
>
>
> Thanks,
>
> -kevin
>
> --
>
> Kevin W. Wall
>
> "The most likely way for the world to be destroyed, most experts agree,
>
> is by accident. That's where we come in; we're computer professionals.
>
> We cause accidents."        -- Nathaniel Borenstein, co-creator of MIME
>
> _______________________________________________
>
> Esapi-dev mailing list
>
> Esapi-dev at lists.owasp.org
>
> https://lists.owasp.org/mailman/listinfo/esapi-dev
>
>
> _______________________________________________
> Esapi-dev mailing list
> Esapi-dev at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/esapi-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20100622/a5506610/attachment-0001.html 

