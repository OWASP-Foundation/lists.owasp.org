From jim.manico at owasp.org  Mon Nov  1 04:59:23 2010
From: jim.manico at owasp.org (Jim Manico)
Date: Mon, 01 Nov 2010 14:29:23 +0530
Subject: [Owasp-appsensor-project] Fwd: AppSensor & ESAPI
In-Reply-To: <AANLkTi=Vs5DuKZMJEPxv2vjJetiUq+2Breb06mSBe-io@mail.gmail.com>
References: <4CCDA61A.3070707@owasp.org>
	<AANLkTi=Vs5DuKZMJEPxv2vjJetiUq+2Breb06mSBe-io@mail.gmail.com>
Message-ID: <4CCE816B.6040603@owasp.org>

John,

Do you have a moment let us know exactly what part of AppSensor, ESAPI uses?

It's its a pain to review all this, kick it back to me and I'll dig.

Thanks John,
Jim
> Kevin,
> Hi, Glad you are considering AppSensor.  I attempted answers inline - 
> if you have further questions, let me know.
> Thanks,
> John
>
> On Sun, Oct 31, 2010 at 1:23 PM, Michael Coates 
> <michael.coates at owasp.org <mailto:michael.coates at owasp.org>> wrote:
>
>     Forwarding to AppSensor mailing list.  I think John will have the
>     most current info for several of these questions.
>
>     But, we do need to get the appsensor.jar as a feature download. 
>     We don't want people to build from scratch if they don't want to.
>
>     -------- Original Message --------
>     Subject: 	AppSensor & ESAPI
>     Date: 	Sun, 31 Oct 2010 09:37:31 -0400
>     From: 	Kevin W. Wall <kevin.w.wall at gmail.com>
>     <mailto:kevin.w.wall at gmail.com>
>     Organization: 	Qwest IT - Application Security Team
>     To: 	Michael Coates <michael.coates at owasp.org>
>     <mailto:michael.coates at owasp.org>
>
>
>
>     Michael,
>
>     I just watched your AppSec USA 2010 video presentation about AppSensor&  ESAPI
>     yesterday. (Thanks for the credit as contributor BTW. Totally unexpected.)
>
>     In it, you mentioned that it was planned to have appsensor.jar bundled with
>     ESAPI as of ESAPI 2.0rc8. Since I don't see it in ESAPI even in 2.0rc10,
>     I'm guessing that there was a delay for some reason.
>
> I copied Jim on this email b/c he was discussing this with us.  I 
> personally am not sure what's required on the ESAPI side to get 
> AppSensor bundled. I can say AppSensor depends on ESAPI in some of 
> it's code (ESAPI is a maven dependency of AppSensor).  I would be 
> happy to do whatever I can to get it included in the bundle.  Jim, any 
> thoughts?
>
>     So then I go to look for the AppSensor tutorial and the AppSensor jar file
>     at the AppSensor Google Code site and I don't find either. (The tutorial is
>     under '/' of the trunk under the svn/trunk though, so I did get it.) But
>     surprisingly (to me, at least) was the fact that I could not find appsensor.jar
>     anywhere under the featured or previous Downloads. (Do you expect people to
>     build it from scratch?)
>
> Right now, there are 3 ways to get the jar, and I agree this should be 
> reorganized ... we all admit documentation is our next hurdle.  The 
> first is to build from scratch as you mentioned, unpalatable to most.  
> The second is to grab the jar from the link on 
> http://www.owasp.org/index.php/AppSensor_Developer_Guide.  The third 
> is to add it as a maven dependency - AppSensor is in Maven central 
> (same as ESAPI as of 2.0RC10.  We really do need to move towards 
> producing a deliverable similar to ESAPI that is a zip w/ the 
> jar/dependencies/javadoc/config files, etc. in a zip or something like 
> that, but we're not there yet.
>
>     Anyway, the reason that I am bringing this up is that I am about ready to
>     start working on the ESAPI crypto for the 2.1 branch and I see many places
>     where I'd like to wire-in AppSensor detection points into either JavaEncryptor
>     or perhaps even EncryptionException. If AppSensor was truly bundled as part of
>     ESAPI that would be fairly easy to do. OTOH, if it is not, I may need to
>     rethink this because I don't want to create yet another dependency on an
>     external class library. (ESAPI already has something like 30+ jars that it
>     is dependent upon.)
>
> Glad you're thinking of going this way, again, I'd need to talk to Jim 
> about bundling.
>
>     Lastly, from your AppSec USA 2010 video, I recall you stating that that the
>     way that AppSensor would be enabled in ESAPI would be to set
>
>     ESAPI.IntrusionDetector=org.owasp.appsensor.intrusiondetection.AppSensorIntrusionDetector
>
>     in the ESAPI.properties file. However, I also vaguely recall discussion
>     as to how that property should not be used as that would disable
>     ESAPI's built-in WAF and I thought that I remember Jeff Williams arguing that
>     AppSensor and the ESAPI WAF were _complimentary_ rather than _competing_
>     technologies so therefore they should use different properties in ESAPI.
>     Anyway, I am not sure that this has been resolved or not, so would appreciate
>     an update in this area as well.
>
> This will probably have to be cleared up with Jeff and/or Jim.  I 
> haven't seen anything in the intrusion detector code that says 
> anything about the WAF, but I could be wrong.  I agree with Jeff's 
> core point, but if that configuration is true, then I think the 
> current setup is confusing.  The WAF should have separate 
> configuration.  I wouldn't necessarily hook the WAF into the intrusion 
> detection config, since some folks would want to use one or the other.
> Also wanted to point out that in addition to changing that 1-line 
> config, you do need to add the appsensor.properties file (goes in the 
> same folder as the esapi.properties), and make sure the config is 
> right there.  That config file is in svn.
>
>     Thanks,
>     -kevin
>     P.S.- If you wish to reply to the OWASP-AppSensor-Project mailing list, that's
>            fine as I subscribe to that. Just wasn't sure if this was to appropriate
>            to ask this there as I'm not sure if that's a developers list or a users
>            list.
>     -- 
>     Kevin W. Wall
>     "The most likely way for the world to be destroyed, most experts agree,
>     is by accident. That's where we come in; we're computer professionals.
>     We cause accidents."        -- Nathaniel Borenstein, co-creator of MIME
>
>
>     _______________________________________________
>     Owasp-appsensor-project mailing list
>     Owasp-appsensor-project at lists.owasp.org
>     <mailto:Owasp-appsensor-project at lists.owasp.org>
>     https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20101101/a56773cf/attachment-0001.html 

From rcbarnett at gmail.com  Mon Nov  1 11:20:00 2010
From: rcbarnett at gmail.com (Ryan Barnett)
Date: Mon, 01 Nov 2010 11:20:00 -0400
Subject: [Owasp-appsensor-project] GeoIP Data
Message-ID: <C8F452E0.16A9F%rcbarnett@gmail.com>

Hello everyone,
Not sure if this is a new detection point or perhaps an update to an
existing one ? tracking GeoIP data during a Session.  See my recent blog
post on using this data -
http://blog.modsecurity.org/2010/10/detecting-malice-with-modsecurity-geoloc
ation-data.html

The concept is similar to the current Session Exception -
http://www.owasp.org/index.php/AppSensor_DetectionPoints#SE5:_Source_IP_Addr
ess_Changes_During_Session

While this is somewhat similar to Source IP Changes During Session ? it is a
bit more lenient as you could track by City/State/Country.

Perhaps a title change to ? Source Location Changes During Session.  This
would allow for either GeoIP or IP Address data to be evaluated.

-Ryan



-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20101101/afe1ea21/attachment.html 

From jtmelton at gmail.com  Mon Nov  1 12:49:46 2010
From: jtmelton at gmail.com (John Melton)
Date: Mon, 1 Nov 2010 12:49:46 -0400
Subject: [Owasp-appsensor-project] GeoIP Data
In-Reply-To: <C8F452E0.16A9F%rcbarnett@gmail.com>
References: <Act52D/FkgPuZ0luAUWwP5dJaZ4mBg==>
	<C8F452E0.16A9F%rcbarnett@gmail.com>
Message-ID: <AANLkTinDz1+RFHhO8J7o0tGEK+=Ln2VwJ8pE3F1tE3+N@mail.gmail.com>

Ryan,
I like this idea, particularly changing the detection point to source
location changes during session.  This makes the detection point generic
enough to be malleable over time, and can be defined at the
organizational/project level as many of the detection points will be.
Excellent article by the way - really have enjoyed reading your detailed
posts in your recent series' - very helpful.
Thanks,
John

On Mon, Nov 1, 2010 at 11:20 AM, Ryan Barnett <rcbarnett at gmail.com> wrote:

>  Hello everyone,
> Not sure if this is a new detection point or perhaps an update to an
> existing one ? tracking GeoIP data during a Session.  See my recent blog
> post on using this data -
> http://blog.modsecurity.org/2010/10/detecting-malice-with-modsecurity-geolocation-data.html
>
> The concept is similar to the current Session Exception -
> http://www.owasp.org/index.php/AppSensor_DetectionPoints#SE5:_Source_IP_Address_Changes_During_Session
>
> While this is somewhat similar to Source IP Changes During Session ? it is
> a bit more lenient as you could track by City/State/Country.
>
> Perhaps a title change to ? *Source Location Changes During Session*.
>  This would allow for either GeoIP or IP Address data to be evaluated.
>
> -Ryan
>
>
>
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20101101/94d428aa/attachment.html 

From jtmelton at gmail.com  Mon Nov  1 13:08:32 2010
From: jtmelton at gmail.com (John Melton)
Date: Mon, 1 Nov 2010 13:08:32 -0400
Subject: [Owasp-appsensor-project] Fwd: AppSensor & ESAPI
In-Reply-To: <4CCE6520.6000305@owasp.org>
References: <4CCDA61A.3070707@owasp.org>
	<AANLkTi=Vs5DuKZMJEPxv2vjJetiUq+2Breb06mSBe-io@mail.gmail.com>
	<4CCE6520.6000305@owasp.org>
Message-ID: <AANLkTikd+8WU39PwnHVgONEqUsNFogMAdPJwAd80PEXE@mail.gmail.com>

Jim,
Not sure I agree with #1 - not sure why we need to stop using ESAPI.  I'm
not sure how maven deals w/ circular dependencies, but ESAPI's interaction
w/ appsensor for the most part would be through the intrusion detector
mechanism ... ESAPI.intrusionDetector().addException(this), which is already
implemented in the EnterpriseSecurityException constructor and maybe 1 or 2
other exceptions.  I admit, though, I'm not sure how maven deals w/ the
dependencies so that could certainly be an issue - any maven experts can you
chime in?

We do use a few of the esapi classes.
- IntrusionDetector interface
- SecurityConfiguration class
- I think we might use the StringUtilities in a place or 2, but we could
remove these if need be
- use the logger through an adapter
- use the authenticator through an adapter.

We've planned ahead for integration w/ ESAPI or w/ other frameworks.  In the
current incarnation of AppSensor, we do depend on ESAPI, but you don't have
to *use* ESAPI.  You can use a different mechanism for all the controls that
ESAPI would normally cover, but if you use AppSensor, we're still gonna use
some ESAPI code behind the scenes.  Having said that, our only
implementations for certain pieces are written for ESAPI integration
(logger/authenticator), but an app could easily implement their own.

I'm also curious about what "ESAPI can build a AppSensor implementation"
means from your perspective?  Are you saying ...
1. use our code, and implement your own detection points and threshold
configurations
2. implement your own ground-up code/detection/response engine, as well as
the detection points and threshold configs -or-
3. something else
?

Thanks,
John

On Mon, Nov 1, 2010 at 2:58 AM, Jim Manico <jim.manico at owasp.org> wrote:

>  I'd like to include AppSensor as the default intrusion detector for ESAPI
> via maven integration. It's way more powerful that our WAF. But the two do
> not complete, they are complimentary.
>
> I think we also want AppSensor to use the ESAPI logging methodology if we
> choose. This is difficult, and a little out of my league. (Circular
> dependency injection?).
>
> So I think...
>
> 1) AppSensor first stops using ESAPI...
> 2) AppSensor provides a pluggable logging mechanism so we can still force
> it to use ESAPI logging...
> 3) THEN ESAPI can build a AppSensor implementation and include it in the
> project
>
> Does this make sense? Any thoughts Chris/August - I know you both have a
> lot more experience with this kind of integration.
>
> - Jim
>
>
>
>  Kevin,
> Hi, Glad you are considering AppSensor.  I attempted answers inline - if
> you have further questions, let me know.
> Thanks,
> John
>
> On Sun, Oct 31, 2010 at 1:23 PM, Michael Coates <michael.coates at owasp.org>wrote:
>
>  Forwarding to AppSensor mailing list.  I think John will have the most
> current info for several of these questions.
>
> But, we do need to get the appsensor.jar as a feature download.  We don't
> want people to build from scratch if they don't want to.
>
> -------- Original Message --------  Subject: AppSensor & ESAPI  Date: Sun,
> 31 Oct 2010 09:37:31 -0400  From: Kevin W. Wall <kevin.w.wall at gmail.com><kevin.w.wall at gmail.com>  Organization:
> Qwest IT - Application Security Team  To: Michael Coates
> <michael.coates at owasp.org> <michael.coates at owasp.org>
>
> Michael,
>
> I just watched your AppSec USA 2010 video presentation about AppSensor & ESAPI
> yesterday. (Thanks for the credit as contributor BTW. Totally unexpected.)
>
> In it, you mentioned that it was planned to have appsensor.jar bundled with
> ESAPI as of ESAPI 2.0rc8. Since I don't see it in ESAPI even in 2.0rc10,
> I'm guessing that there was a delay for some reason.
>
>  I copied Jim on this email b/c he was discussing this with us.  I
> personally am not sure what's required on the ESAPI side to get AppSensor
> bundled. I can say AppSensor depends on ESAPI in some of it's code (ESAPI is
> a maven dependency of AppSensor).  I would be happy to do whatever I can to
> get it included in the bundle.  Jim, any thoughts?
>
>  So then I go to look for the AppSensor tutorial and the AppSensor jar file
> at the AppSensor Google Code site and I don't find either. (The tutorial is
> under '/' of the trunk under the svn/trunk though, so I did get it.) But
> surprisingly (to me, at least) was the fact that I could not find appsensor.jar
> anywhere under the featured or previous Downloads. (Do you expect people to
> build it from scratch?)
>
>  Right now, there are 3 ways to get the jar, and I agree this should be
> reorganized ... we all admit documentation is our next hurdle.  The first is
> to build from scratch as you mentioned, unpalatable to most.  The second is
> to grab the jar from the link on
> http://www.owasp.org/index.php/AppSensor_Developer_Guide.  The third is to
> add it as a maven dependency - AppSensor is in Maven central (same as ESAPI
> as of 2.0RC10.  We really do need to move towards producing a deliverable
> similar to ESAPI that is a zip w/ the jar/dependencies/javadoc/config files,
> etc. in a zip or something like that, but we're not there yet.
>
>  Anyway, the reason that I am bringing this up is that I am about ready to
> start working on the ESAPI crypto for the 2.1 branch and I see many places
> where I'd like to wire-in AppSensor detection points into either JavaEncryptor
> or perhaps even EncryptionException. If AppSensor was truly bundled as part of
> ESAPI that would be fairly easy to do. OTOH, if it is not, I may need to
> rethink this because I don't want to create yet another dependency on an
> external class library. (ESAPI already has something like 30+ jars that it
> is dependent upon.)
>
>  Glad you're thinking of going this way, again, I'd need to talk to Jim
> about bundling.
>
>  Lastly, from your AppSec USA 2010 video, I recall you stating that that the
> way that AppSensor would be enabled in ESAPI would be to set
>
> ESAPI.IntrusionDetector=org.owasp.appsensor.intrusiondetection.AppSensorIntrusionDetector
>
> in the ESAPI.properties file. However, I also vaguely recall discussion
> as to how that property should not be used as that would disable
> ESAPI's built-in WAF and I thought that I remember Jeff Williams arguing that
> AppSensor and the ESAPI WAF were _complimentary_ rather than _competing_
> technologies so therefore they should use different properties in ESAPI.
> Anyway, I am not sure that this has been resolved or not, so would appreciate
> an update in this area as well.
>
>  This will probably have to be cleared up with Jeff and/or Jim.  I haven't
> seen anything in the intrusion detector code that says anything about the
> WAF, but I could be wrong.  I agree with Jeff's core point, but if that
> configuration is true, then I think the current setup is confusing.  The WAF
> should have separate configuration.  I wouldn't necessarily hook the WAF
> into the intrusion detection config, since some folks would want to use one
> or the other.
> Also wanted to point out that in addition to changing that 1-line config,
> you do need to add the appsensor.properties file (goes in the same folder as
> the esapi.properties), and make sure the config is right there.  That config
> file is in svn.
>
>  Thanks,
> -kevin
> P.S.- If you wish to reply to the OWASP-AppSensor-Project mailing list, that's
>       fine as I subscribe to that. Just wasn't sure if this was to appropriate
>       to ask this there as I'm not sure if that's a developers list or a users
>       list.
> --
> Kevin W. Wall
> "The most likely way for the world to be destroyed, most experts agree,
> is by accident. That's where we come in; we're computer professionals.
> We cause accidents."        -- Nathaniel Borenstein, co-creator of MIME
>
>
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20101101/9e4681aa/attachment-0001.html 

From rcbarnett at gmail.com  Mon Nov  1 14:47:32 2010
From: rcbarnett at gmail.com (Ryan Barnett)
Date: Mon, 01 Nov 2010 14:47:32 -0400
Subject: [Owasp-appsensor-project] New Unexpected Type/Quantity Detection
	Points
Message-ID: <C8F48384.16AD2%rcbarnett@gmail.com>

I suggest that we add a new Detection Point in the RequestException category
similar to the following AuthenticationException ones -

* 2.2.4?AE4: Unexpected Quantity of Characters in Username
<http://www.owasp.org/index.php/AppSensor_DetectionPoints#AE4:_Unexpected_Qu
antity_of_Characters_in_Username>
* 2.2.5?AE5: Unexpected Quantity of Characters in Password
<http://www.owasp.org/index.php/AppSensor_DetectionPoints#AE5:_Unexpected_Qu
antity_of_Characters_in_Password>
* 2.2.6?AE6: Unexpected Type of Character in Username
<http://www.owasp.org/index.php/AppSensor_DetectionPoints#AE6:_Unexpected_Ty
pe_of_Character_in_Username>
* 2.2.7?AE7: Unexpected Type of Character in Password
<http://www.owasp.org/index.php/AppSensor_DetectionPoints#AE7:_Unexpected_Ty
pe_of_Character_in_Password>

Instead of only focusing in on username/password parameters, the detection
should be something like -

* 2.1.7 RE7: Unexpected Quantity of Characters in Parameter
* 2.1.8?RE8: Unexpected Type of Characters in Parameter

BTW ? I am working on these types of application profiling/learning
detection points for additions to the ModSecurity CRS.

-Ryan

-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20101101/7d9c6e4f/attachment.html 

From jim.manico at owasp.org  Mon Nov  1 20:57:18 2010
From: jim.manico at owasp.org (Jim Manico)
Date: Tue, 02 Nov 2010 06:27:18 +0530
Subject: [Owasp-appsensor-project] Fwd: AppSensor & ESAPI
In-Reply-To: <1043295925-1288658616-cardhu_decombobulator_blackberry.rim.net-642151923-@bda649.bisx.prod.on.blackberry>
References: <4CCDA61A.3070707@owasp.org>
	<AANLkTi=Vs5DuKZMJEPxv2vjJetiUq+2Breb06mSBe-io@mail.gmail.com><4CCE6520.6000305@owasp.org><AANLkTikd+8WU39PwnHVgONEqUsNFogMAdPJwAd80PEXE@mail.gmail.com>
	<1043295925-1288658616-cardhu_decombobulator_blackberry.rim.net-642151923-@bda649.bisx.prod.on.blackberry>
Message-ID: <4CCF61EE.40503@owasp.org>


John and August,

My goal is to make it easy for ESAPI users to enable AppSensor as an 
IntrusionDetection option when using ESAPI. I'm open to any possibility 
to make that happen....

 > Or do you mean to simply make it the default intrusion detector in 
ESAPI.properties? In that case you risk adding a whole bunch of new 
dependencies -I thought we were trying to keep those down...

Well, maybe not default -  but an /option /as the ESAPI intrusion 
detector. AppSensor is absolutely perfect for ESAPI intrusion detection 
- but we have a circular dependency issue...

So let me just ask, you all know how ESAPI's IntrusionDetector works - 
how tough is it going to be to make AppSensor an option, or are we 
already very close to being there? It sounds like you have done much of 
the work already (*use the logger through an adapter *use the 
authenticator through an adapter) so I'm hoping this might be a lot 
simpler than I think it will be....

And I'm sorry I'm a bit distracted and on vacation - I'll dig into the 
code much deeper starting this Monday.

- Jim




> Jim are you talking about pulling the AppSensor codebase directly 
> within ESAPI? In that case you would definitely want to use the same 
> log factory as configured in ESAPI.properties.
>
> Or do you mean to simply make it the default intrusion detector in 
> ESAPI.properties? In that case you risk adding a whole bunch of new 
> dependencies -I thought we were trying to keep those down...
>
> -August
>
> Sent via BlackBerry by AT&T
>
> *From: * John Melton <jtmelton at gmail.com>
> *Date: *Mon, 1 Nov 2010 13:08:32 -0400
> *To: *Jim Manico<jim.manico at owasp.org>
> *Cc: *Michael Coates<michael.coates at owasp.org>; Kevin W. 
> Wall<kevin.w.wall at gmail.com>; 
> owasp-appsensor-project<owasp-appsensor-project at lists.owasp.org>; 
> August Detlefsen<augustd at codemagi.com>; Chris 
> Schmidt<chrisisbeef at gmail.com>; 
> Jeff.Williams at aspectsecurity.com<jeff.williams at aspectsecurity.com>
> *Subject: *Re: [Owasp-appsensor-project] Fwd: AppSensor & ESAPI
>
> Jim,
> Not sure I agree with #1 - not sure why we need to stop using ESAPI.  
> I'm not sure how maven deals w/ circular dependencies, but ESAPI's 
> interaction w/ appsensor for the most part would be through the 
> intrusion detector mechanism ... 
> ESAPI.intrusionDetector().addException(this), which is already 
> implemented in the EnterpriseSecurityException constructor and maybe 1 
> or 2 other exceptions.  I admit, though, I'm not sure how maven deals 
> w/ the dependencies so that could certainly be an issue - any maven 
> experts can you chime in?
>
> We do use a few of the esapi classes.
> - IntrusionDetector interface
> - SecurityConfiguration class
> - I think we might use the StringUtilities in a place or 2, but we 
> could remove these if need be
> - use the logger through an adapter
> - use the authenticator through an adapter.
>
> We've planned ahead for integration w/ ESAPI or w/ other frameworks.  
> In the current incarnation of AppSensor, we do depend on ESAPI, but 
> you don't have to *use* ESAPI.  You can use a different mechanism for 
> all the controls that ESAPI would normally cover, but if you use 
> AppSensor, we're still gonna use some ESAPI code behind the scenes.  
> Having said that, our only implementations for certain pieces are 
> written for ESAPI integration (logger/authenticator), but an app could 
> easily implement their own.
>
> I'm also curious about what "ESAPI can build a AppSensor 
> implementation" means from your perspective?  Are you saying ...
> 1. use our code, and implement your own detection points and threshold 
> configurations
> 2. implement your own ground-up code/detection/response engine, as 
> well as the detection points and threshold configs -or-
> 3. something else
> ?
>
> Thanks,
> John
>
> On Mon, Nov 1, 2010 at 2:58 AM, Jim Manico <jim.manico at owasp.org 
> <mailto:jim.manico at owasp.org>> wrote:
>
>     I'd like to include AppSensor as the default intrusion detector
>     for ESAPI via maven integration. It's way more powerful that our
>     WAF. But the two do not complete, they are complimentary.
>
>     I think we also want AppSensor to use the ESAPI logging
>     methodology if we choose. This is difficult, and a little out of
>     my league. (Circular dependency injection?).
>
>     So I think...
>
>     1) AppSensor first stops using ESAPI...
>     2) AppSensor provides a pluggable logging mechanism so we can
>     still force it to use ESAPI logging...
>     3) THEN ESAPI can build a AppSensor implementation and include it
>     in the project
>
>     Does this make sense? Any thoughts Chris/August - I know you both
>     have a lot more experience with this kind of integration.
>
>     - Jim
>
>
>
>>     Kevin,
>>     Hi, Glad you are considering AppSensor.  I attempted answers
>>     inline - if you have further questions, let me know.
>>     Thanks,
>>     John
>>
>>     On Sun, Oct 31, 2010 at 1:23 PM, Michael Coates
>>     <michael.coates at owasp.org <mailto:michael.coates at owasp.org>> wrote:
>>
>>         Forwarding to AppSensor mailing list.  I think John will have
>>         the most current info for several of these questions.
>>
>>         But, we do need to get the appsensor.jar as a feature
>>         download.  We don't want people to build from scratch if they
>>         don't want to.
>>
>>         -------- Original Message --------
>>         Subject: 	AppSensor & ESAPI
>>         Date: 	Sun, 31 Oct 2010 09:37:31 -0400
>>         From: 	Kevin W. Wall <kevin.w.wall at gmail.com>
>>         <mailto:kevin.w.wall at gmail.com>
>>         Organization: 	Qwest IT - Application Security Team
>>         To: 	Michael Coates <michael.coates at owasp.org>
>>         <mailto:michael.coates at owasp.org>
>>
>>
>>
>>         Michael,
>>
>>         I just watched your AppSec USA 2010 video presentation about AppSensor&  ESAPI
>>         yesterday. (Thanks for the credit as contributor BTW. Totally unexpected.)
>>
>>         In it, you mentioned that it was planned to have appsensor.jar bundled with
>>         ESAPI as of ESAPI 2.0rc8. Since I don't see it in ESAPI even in 2.0rc10,
>>         I'm guessing that there was a delay for some reason.
>>
>>     I copied Jim on this email b/c he was discussing this with us.  I
>>     personally am not sure what's required on the ESAPI side to get
>>     AppSensor bundled. I can say AppSensor depends on ESAPI in some
>>     of it's code (ESAPI is a maven dependency of AppSensor).  I would
>>     be happy to do whatever I can to get it included in the bundle. 
>>     Jim, any thoughts?
>>
>>         So then I go to look for the AppSensor tutorial and the AppSensor jar file
>>         at the AppSensor Google Code site and I don't find either. (The tutorial is
>>         under '/' of the trunk under the svn/trunk though, so I did get it.) But
>>         surprisingly (to me, at least) was the fact that I could not find appsensor.jar
>>         anywhere under the featured or previous Downloads. (Do you expect people to
>>         build it from scratch?)
>>
>>     Right now, there are 3 ways to get the jar, and I agree this
>>     should be reorganized ... we all admit documentation is our next
>>     hurdle.  The first is to build from scratch as you mentioned,
>>     unpalatable to most.  The second is to grab the jar from the link
>>     on http://www.owasp.org/index.php/AppSensor_Developer_Guide.  The
>>     third is to add it as a maven dependency - AppSensor is in Maven
>>     central (same as ESAPI as of 2.0RC10.  We really do need to move
>>     towards producing a deliverable similar to ESAPI that is a zip w/
>>     the jar/dependencies/javadoc/config files, etc. in a zip or
>>     something like that, but we're not there yet.
>>
>>         Anyway, the reason that I am bringing this up is that I am about ready to
>>         start working on the ESAPI crypto for the 2.1 branch and I see many places
>>         where I'd like to wire-in AppSensor detection points into either JavaEncryptor
>>         or perhaps even EncryptionException. If AppSensor was truly bundled as part of
>>         ESAPI that would be fairly easy to do. OTOH, if it is not, I may need to
>>         rethink this because I don't want to create yet another dependency on an
>>         external class library. (ESAPI already has something like 30+ jars that it
>>         is dependent upon.)
>>
>>     Glad you're thinking of going this way, again, I'd need to talk
>>     to Jim about bundling.
>>
>>         Lastly, from your AppSec USA 2010 video, I recall you stating that that the
>>         way that AppSensor would be enabled in ESAPI would be to set
>>
>>         ESAPI.IntrusionDetector=org.owasp.appsensor.intrusiondetection.AppSensorIntrusionDetector
>>
>>         in the ESAPI.properties file. However, I also vaguely recall discussion
>>         as to how that property should not be used as that would disable
>>         ESAPI's built-in WAF and I thought that I remember Jeff Williams arguing that
>>         AppSensor and the ESAPI WAF were_complimentary_ rather than_competing_
>>         technologies so therefore they should use different properties in ESAPI.
>>         Anyway, I am not sure that this has been resolved or not, so would appreciate
>>         an update in this area as well.
>>
>>     This will probably have to be cleared up with Jeff and/or Jim.  I
>>     haven't seen anything in the intrusion detector code that says
>>     anything about the WAF, but I could be wrong.  I agree with
>>     Jeff's core point, but if that configuration is true, then I
>>     think the current setup is confusing.  The WAF should have
>>     separate configuration.  I wouldn't necessarily hook the WAF into
>>     the intrusion detection config, since some folks would want to
>>     use one or the other.
>>     Also wanted to point out that in addition to changing that 1-line
>>     config, you do need to add the appsensor.properties file (goes in
>>     the same folder as the esapi.properties), and make sure the
>>     config is right there.  That config file is in svn.
>>
>>         Thanks,
>>         -kevin
>>         P.S.- If you wish to reply to the OWASP-AppSensor-Project mailing list, that's
>>                fine as I subscribe to that. Just wasn't sure if this was to appropriate
>>                to ask this there as I'm not sure if that's a developers list or a users
>>                list.
>>         -- 
>>         Kevin W. Wall
>>         "The most likely way for the world to be destroyed, most experts agree,
>>         is by accident. That's where we come in; we're computer professionals.
>>         We cause accidents."        -- Nathaniel Borenstein, co-creator of MIME
>>
>>
>>         _______________________________________________
>>         Owasp-appsensor-project mailing list
>>         Owasp-appsensor-project at lists.owasp.org
>>         <mailto:Owasp-appsensor-project at lists.owasp.org>
>>         https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>
>>
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20101102/2502b6b6/attachment-0001.html 

From jtmelton at gmail.com  Mon Nov  1 22:31:15 2010
From: jtmelton at gmail.com (John Melton)
Date: Mon, 1 Nov 2010 22:31:15 -0400
Subject: [Owasp-appsensor-project] Fwd: AppSensor & ESAPI
In-Reply-To: <4CCF61EE.40503@owasp.org>
References: <4CCDA61A.3070707@owasp.org>
	<AANLkTi=Vs5DuKZMJEPxv2vjJetiUq+2Breb06mSBe-io@mail.gmail.com>
	<4CCE6520.6000305@owasp.org>
	<AANLkTikd+8WU39PwnHVgONEqUsNFogMAdPJwAd80PEXE@mail.gmail.com>
	<1043295925-1288658616-cardhu_decombobulator_blackberry.rim.net-642151923-@bda649.bisx.prod.on.blackberry>
	<4CCF61EE.40503@owasp.org>
Message-ID: <AANLkTimL5Nm00L0bde5Qeq3T6xt+iE_PDCV3EivTqsSk@mail.gmail.com>

Jim,
>From my perspective, it should be pretty easy.  If you had a webapp w/ esapi
and wanted to add appsensor, here are the steps as of the current release.
1. get appsensor jar and add to project
2. modify esapi.properties file to point to appsensor intrusion detector
instead of default
3. add appsensor.properties file
... and ...
4. modify your code and/or the properties files to add new detection points
and their associated threshold configurations (this step is optional,
technically)

If you want to add appsensor to a project that's not using esapi, you'd have
a couple extra steps, but it's still possible.
Thanks,
John

On Mon, Nov 1, 2010 at 8:57 PM, Jim Manico <jim.manico at owasp.org> wrote:

>
> John and August,
>
> My goal is to make it easy for ESAPI users to enable AppSensor as an
> IntrusionDetection option when using ESAPI. I'm open to any possibility to
> make that happen....
>
>
> > Or do you mean to simply make it the default intrusion detector in
> ESAPI.properties? In that case you risk adding a whole bunch of new
> dependencies -I thought we were trying to keep those down...
>
> Well, maybe not default -  but an *option *as the ESAPI intrusion
> detector. AppSensor is absolutely perfect for ESAPI intrusion detection -
> but we have a circular dependency issue...
>
> So let me just ask, you all know how ESAPI's IntrusionDetector works - how
> tough is it going to be to make AppSensor an option, or are we already very
> close to being there? It sounds like you have done much of the work already
> (*use the logger through an adapter *use the authenticator through an
> adapter) so I'm hoping this might be a lot simpler than I think it will
> be....
>
> And I'm sorry I'm a bit distracted and on vacation - I'll dig into the code
> much deeper starting this Monday.
>
> - Jim
>
>
>
>
>
>  Jim are you talking about pulling the AppSensor codebase directly within
> ESAPI? In that case you would definitely want to use the same log factory as
> configured in ESAPI.properties.
>
> Or do you mean to simply make it the default intrusion detector in
> ESAPI.properties? In that case you risk adding a whole bunch of new
> dependencies -I thought we were trying to keep those down...
>
> -August
>
> Sent via BlackBerry by AT&T
> *From: * John Melton <jtmelton at gmail.com> <jtmelton at gmail.com>
> *Date: *Mon, 1 Nov 2010 13:08:32 -0400
> *To: *Jim Manico<jim.manico at owasp.org> <jim.manico at owasp.org>
> *Cc: *Michael Coates<michael.coates at owasp.org> <michael.coates at owasp.org>;
> Kevin W. Wall<kevin.w.wall at gmail.com> <kevin.w.wall at gmail.com>;
> owasp-appsensor-project<owasp-appsensor-project at lists.owasp.org><owasp-appsensor-project at lists.owasp.org>;
> August Detlefsen<augustd at codemagi.com> <augustd at codemagi.com>; Chris
> Schmidt<chrisisbeef at gmail.com> <chrisisbeef at gmail.com>;
> Jeff.Williams at aspectsecurity.com<jeff.williams at aspectsecurity.com><jeff.williams at aspectsecurity.com>
> *Subject: *Re: [Owasp-appsensor-project] Fwd: AppSensor & ESAPI
>
>  Jim,
> Not sure I agree with #1 - not sure why we need to stop using ESAPI.  I'm
> not sure how maven deals w/ circular dependencies, but ESAPI's interaction
> w/ appsensor for the most part would be through the intrusion detector
> mechanism ... ESAPI.intrusionDetector().addException(this), which is already
> implemented in the EnterpriseSecurityException constructor and maybe 1 or 2
> other exceptions.  I admit, though, I'm not sure how maven deals w/ the
> dependencies so that could certainly be an issue - any maven experts can you
> chime in?
>
> We do use a few of the esapi classes.
> - IntrusionDetector interface
> - SecurityConfiguration class
> - I think we might use the StringUtilities in a place or 2, but we could
> remove these if need be
> - use the logger through an adapter
> - use the authenticator through an adapter.
>
> We've planned ahead for integration w/ ESAPI or w/ other frameworks.  In
> the current incarnation of AppSensor, we do depend on ESAPI, but you don't
> have to *use* ESAPI.  You can use a different mechanism for all the
> controls that ESAPI would normally cover, but if you use AppSensor, we're
> still gonna use some ESAPI code behind the scenes.  Having said that, our
> only implementations for certain pieces are written for ESAPI integration
> (logger/authenticator), but an app could easily implement their own.
>
> I'm also curious about what "ESAPI can build a AppSensor implementation"
> means from your perspective?  Are you saying ...
> 1. use our code, and implement your own detection points and threshold
> configurations
> 2. implement your own ground-up code/detection/response engine, as well as
> the detection points and threshold configs -or-
> 3. something else
> ?
>
> Thanks,
> John
>
> On Mon, Nov 1, 2010 at 2:58 AM, Jim Manico <jim.manico at owasp.org> wrote:
>
>  I'd like to include AppSensor as the default intrusion detector for ESAPI
> via maven integration. It's way more powerful that our WAF. But the two do
> not complete, they are complimentary.
>
> I think we also want AppSensor to use the ESAPI logging methodology if we
> choose. This is difficult, and a little out of my league. (Circular
> dependency injection?).
>
> So I think...
>
> 1) AppSensor first stops using ESAPI...
> 2) AppSensor provides a pluggable logging mechanism so we can still force
> it to use ESAPI logging...
> 3) THEN ESAPI can build a AppSensor implementation and include it in the
> project
>
> Does this make sense? Any thoughts Chris/August - I know you both have a
> lot more experience with this kind of integration.
>
> - Jim
>
>
>
>  Kevin,
> Hi, Glad you are considering AppSensor.  I attempted answers inline - if
> you have further questions, let me know.
> Thanks,
> John
>
> On Sun, Oct 31, 2010 at 1:23 PM, Michael Coates <michael.coates at owasp.org>wrote:
>
>  Forwarding to AppSensor mailing list.  I think John will have the most
> current info for several of these questions.
>
> But, we do need to get the appsensor.jar as a feature download.  We don't
> want people to build from scratch if they don't want to.
>
> -------- Original Message --------  Subject: AppSensor & ESAPI  Date: Sun,
> 31 Oct 2010 09:37:31 -0400  From: Kevin W. Wall <kevin.w.wall at gmail.com><kevin.w.wall at gmail.com>  Organization:
> Qwest IT - Application Security Team  To: Michael Coates
> <michael.coates at owasp.org> <michael.coates at owasp.org>
>
> Michael,
>
> I just watched your AppSec USA 2010 video presentation about AppSensor & ESAPI
> yesterday. (Thanks for the credit as contributor BTW. Totally unexpected.)
>
> In it, you mentioned that it was planned to have appsensor.jar bundled with
> ESAPI as of ESAPI 2.0rc8. Since I don't see it in ESAPI even in 2.0rc10,
> I'm guessing that there was a delay for some reason.
>
>  I copied Jim on this email b/c he was discussing this with us.  I
> personally am not sure what's required on the ESAPI side to get AppSensor
> bundled. I can say AppSensor depends on ESAPI in some of it's code (ESAPI is
> a maven dependency of AppSensor).  I would be happy to do whatever I can to
> get it included in the bundle.  Jim, any thoughts?
>
>  So then I go to look for the AppSensor tutorial and the AppSensor jar file
> at the AppSensor Google Code site and I don't find either. (The tutorial is
> under '/' of the trunk under the svn/trunk though, so I did get it.) But
> surprisingly (to me, at least) was the fact that I could not find appsensor.jar
> anywhere under the featured or previous Downloads. (Do you expect people to
> build it from scratch?)
>
>  Right now, there are 3 ways to get the jar, and I agree this should be
> reorganized ... we all admit documentation is our next hurdle.  The first is
> to build from scratch as you mentioned, unpalatable to most.  The second is
> to grab the jar from the link on
> http://www.owasp.org/index.php/AppSensor_Developer_Guide.  The third is to
> add it as a maven dependency - AppSensor is in Maven central (same as ESAPI
> as of 2.0RC10.  We really do need to move towards producing a deliverable
> similar to ESAPI that is a zip w/ the jar/dependencies/javadoc/config files,
> etc. in a zip or something like that, but we're not there yet.
>
>  Anyway, the reason that I am bringing this up is that I am about ready to
> start working on the ESAPI crypto for the 2.1 branch and I see many places
> where I'd like to wire-in AppSensor detection points into either JavaEncryptor
> or perhaps even EncryptionException. If AppSensor was truly bundled as part of
> ESAPI that would be fairly easy to do. OTOH, if it is not, I may need to
> rethink this because I don't want to create yet another dependency on an
> external class library. (ESAPI already has something like 30+ jars that it
> is dependent upon.)
>
>  Glad you're thinking of going this way, again, I'd need to talk to Jim
> about bundling.
>
>  Lastly, from your AppSec USA 2010 video, I recall you stating that that the
> way that AppSensor would be enabled in ESAPI would be to set
>
> ESAPI.IntrusionDetector=org.owasp.appsensor.intrusiondetection.AppSensorIntrusionDetector
>
> in the ESAPI.properties file. However, I also vaguely recall discussion
> as to how that property should not be used as that would disable
> ESAPI's built-in WAF and I thought that I remember Jeff Williams arguing that
> AppSensor and the ESAPI WAF were_complimentary_ rather than_competing_
> technologies so therefore they should use different properties in ESAPI.
> Anyway, I am not sure that this has been resolved or not, so would appreciate
> an update in this area as well.
>
>  This will probably have to be cleared up with Jeff and/or Jim.  I haven't
> seen anything in the intrusion detector code that says anything about the
> WAF, but I could be wrong.  I agree with Jeff's core point, but if that
> configuration is true, then I think the current setup is confusing.  The WAF
> should have separate configuration.  I wouldn't necessarily hook the WAF
> into the intrusion detection config, since some folks would want to use one
> or the other.
> Also wanted to point out that in addition to changing that 1-line config,
> you do need to add the appsensor.properties file (goes in the same folder as
> the esapi.properties), and make sure the config is right there.  That config
> file is in svn.
>
>  Thanks,
> -kevin
> P.S.- If you wish to reply to the OWASP-AppSensor-Project mailing list, that's
>       fine as I subscribe to that. Just wasn't sure if this was to appropriate
>       to ask this there as I'm not sure if that's a developers list or a users
>       list.
> --
> Kevin W. Wall
> "The most likely way for the world to be destroyed, most experts agree,
> is by accident. That's where we come in; we're computer professionals.
> We cause accidents."        -- Nathaniel Borenstein, co-creator of MIME
>
>
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
>
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20101101/602fe105/attachment-0001.html 

From jim.manico at owasp.org  Mon Nov  1 23:05:53 2010
From: jim.manico at owasp.org (Jim Manico)
Date: Tue, 02 Nov 2010 08:35:53 +0530
Subject: [Owasp-appsensor-project] Fwd: AppSensor & ESAPI
In-Reply-To: <AANLkTimL5Nm00L0bde5Qeq3T6xt+iE_PDCV3EivTqsSk@mail.gmail.com>
References: <4CCDA61A.3070707@owasp.org>
	<AANLkTi=Vs5DuKZMJEPxv2vjJetiUq+2Breb06mSBe-io@mail.gmail.com>
	<4CCE6520.6000305@owasp.org>
	<AANLkTikd+8WU39PwnHVgONEqUsNFogMAdPJwAd80PEXE@mail.gmail.com>
	<1043295925-1288658616-cardhu_decombobulator_blackberry.rim.net-642151923-@bda649.bisx.prod.on.blackberry>
	<4CCF61EE.40503@owasp.org>
	<AANLkTimL5Nm00L0bde5Qeq3T6xt+iE_PDCV3EivTqsSk@mail.gmail.com>
Message-ID: <4CCF8011.3040906@owasp.org>

Looks very reasonable, John.

The issue that worries me is, if the AppSensor jar is complied against 
ESAPI 2.0 rc10, and then we want to use it in say ESAPI 2.0 rc13, 
problems might arise. But that might be an undue concern. I don't have 
the answer yet, but I think we need to be more "version organized". And 
John, I appreciate you taking the time to explain all of this to me.

Has anyone given this a try? Using AppSensor inside of a full-on ESAPI 
implementation?

- Jim

> Jim,
> From my perspective, it should be pretty easy.  If you had a webapp w/ 
> esapi and wanted to add appsensor, here are the steps as of the 
> current release.
> 1. get appsensor jar and add to project
> 2. modify esapi.properties file to point to appsensor intrusion 
> detector instead of default
> 3. add appsensor.properties file
> ... and ...
> 4. modify your code and/or the properties files to add new detection 
> points and their associated threshold configurations (this step is 
> optional, technically)
>
> If you want to add appsensor to a project that's not using esapi, 
> you'd have a couple extra steps, but it's still possible.
> Thanks,
> John
>
> On Mon, Nov 1, 2010 at 8:57 PM, Jim Manico <jim.manico at owasp.org 
> <mailto:jim.manico at owasp.org>> wrote:
>
>
>     John and August,
>
>     My goal is to make it easy for ESAPI users to enable AppSensor as
>     an IntrusionDetection option when using ESAPI. I'm open to any
>     possibility to make that happen....
>
>
>     > Or do you mean to simply make it the default intrusion detector
>     in ESAPI.properties? In that case you risk adding a whole bunch of
>     new dependencies -I thought we were trying to keep those down...
>
>     Well, maybe not default -  but an /option /as the ESAPI intrusion
>     detector. AppSensor is absolutely perfect for ESAPI intrusion
>     detection - but we have a circular dependency issue...
>
>     So let me just ask, you all know how ESAPI's IntrusionDetector
>     works - how tough is it going to be to make AppSensor an option,
>     or are we already very close to being there? It sounds like you
>     have done much of the work already (*use the logger through an
>     adapter *use the authenticator through an adapter) so I'm hoping
>     this might be a lot simpler than I think it will be....
>
>     And I'm sorry I'm a bit distracted and on vacation - I'll dig into
>     the code much deeper starting this Monday.
>
>     - Jim
>
>
>
>
>
>>     Jim are you talking about pulling the AppSensor codebase directly
>>     within ESAPI? In that case you would definitely want to use the
>>     same log factory as configured in ESAPI.properties.
>>
>>     Or do you mean to simply make it the default intrusion detector
>>     in ESAPI.properties? In that case you risk adding a whole bunch
>>     of new dependencies -I thought we were trying to keep those down...
>>
>>     -August
>>
>>     Sent via BlackBerry by AT&T
>>
>>     *From: * John Melton <jtmelton at gmail.com>
>>     <mailto:jtmelton at gmail.com>
>>     *Date: *Mon, 1 Nov 2010 13:08:32 -0400
>>     *To: *Jim Manico<jim.manico at owasp.org> <mailto:jim.manico at owasp.org>
>>     *Cc: *Michael Coates<michael.coates at owasp.org>
>>     <mailto:michael.coates at owasp.org>; Kevin W.
>>     Wall<kevin.w.wall at gmail.com> <mailto:kevin.w.wall at gmail.com>;
>>     owasp-appsensor-project<owasp-appsensor-project at lists.owasp.org>
>>     <mailto:owasp-appsensor-project at lists.owasp.org>; August
>>     Detlefsen<augustd at codemagi.com> <mailto:augustd at codemagi.com>;
>>     Chris Schmidt<chrisisbeef at gmail.com>
>>     <mailto:chrisisbeef at gmail.com>; Jeff.Williams at aspectsecurity.com
>>     <mailto:Jeff.Williams at aspectsecurity.com><jeff.williams at aspectsecurity.com>
>>     <mailto:jeff.williams at aspectsecurity.com>
>>     *Subject: *Re: [Owasp-appsensor-project] Fwd: AppSensor & ESAPI
>>
>>     Jim,
>>     Not sure I agree with #1 - not sure why we need to stop using
>>     ESAPI.  I'm not sure how maven deals w/ circular dependencies,
>>     but ESAPI's interaction w/ appsensor for the most part would be
>>     through the intrusion detector mechanism ...
>>     ESAPI.intrusionDetector().addException(this), which is already
>>     implemented in the EnterpriseSecurityException constructor and
>>     maybe 1 or 2 other exceptions.  I admit, though, I'm not sure how
>>     maven deals w/ the dependencies so that could certainly be an
>>     issue - any maven experts can you chime in?
>>
>>     We do use a few of the esapi classes.
>>     - IntrusionDetector interface
>>     - SecurityConfiguration class
>>     - I think we might use the StringUtilities in a place or 2, but
>>     we could remove these if need be
>>     - use the logger through an adapter
>>     - use the authenticator through an adapter.
>>
>>     We've planned ahead for integration w/ ESAPI or w/ other
>>     frameworks.  In the current incarnation of AppSensor, we do
>>     depend on ESAPI, but you don't have to *use* ESAPI.  You can use
>>     a different mechanism for all the controls that ESAPI would
>>     normally cover, but if you use AppSensor, we're still gonna use
>>     some ESAPI code behind the scenes.  Having said that, our only
>>     implementations for certain pieces are written for ESAPI
>>     integration (logger/authenticator), but an app could easily
>>     implement their own.
>>
>>     I'm also curious about what "ESAPI can build a AppSensor
>>     implementation" means from your perspective?  Are you saying ...
>>     1. use our code, and implement your own detection points and
>>     threshold configurations
>>     2. implement your own ground-up code/detection/response engine,
>>     as well as the detection points and threshold configs -or-
>>     3. something else
>>     ?
>>
>>     Thanks,
>>     John
>>
>>     On Mon, Nov 1, 2010 at 2:58 AM, Jim Manico <jim.manico at owasp.org
>>     <mailto:jim.manico at owasp.org>> wrote:
>>
>>         I'd like to include AppSensor as the default intrusion
>>         detector for ESAPI via maven integration. It's way more
>>         powerful that our WAF. But the two do not complete, they are
>>         complimentary.
>>
>>         I think we also want AppSensor to use the ESAPI logging
>>         methodology if we choose. This is difficult, and a little out
>>         of my league. (Circular dependency injection?).
>>
>>         So I think...
>>
>>         1) AppSensor first stops using ESAPI...
>>         2) AppSensor provides a pluggable logging mechanism so we can
>>         still force it to use ESAPI logging...
>>         3) THEN ESAPI can build a AppSensor implementation and
>>         include it in the project
>>
>>         Does this make sense? Any thoughts Chris/August - I know you
>>         both have a lot more experience with this kind of integration.
>>
>>         - Jim
>>
>>
>>
>>>         Kevin,
>>>         Hi, Glad you are considering AppSensor.  I attempted answers
>>>         inline - if you have further questions, let me know.
>>>         Thanks,
>>>         John
>>>
>>>         On Sun, Oct 31, 2010 at 1:23 PM, Michael Coates
>>>         <michael.coates at owasp.org <mailto:michael.coates at owasp.org>>
>>>         wrote:
>>>
>>>             Forwarding to AppSensor mailing list.  I think John will
>>>             have the most current info for several of these questions.
>>>
>>>             But, we do need to get the appsensor.jar as a feature
>>>             download.  We don't want people to build from scratch if
>>>             they don't want to.
>>>
>>>             -------- Original Message --------
>>>             Subject: 	AppSensor & ESAPI
>>>             Date: 	Sun, 31 Oct 2010 09:37:31 -0400
>>>             From: 	Kevin W. Wall <kevin.w.wall at gmail.com>
>>>             <mailto:kevin.w.wall at gmail.com>
>>>             Organization: 	Qwest IT - Application Security Team
>>>             To: 	Michael Coates <michael.coates at owasp.org>
>>>             <mailto:michael.coates at owasp.org>
>>>
>>>
>>>
>>>             Michael,
>>>
>>>             I just watched your AppSec USA 2010 video presentation about AppSensor&  ESAPI
>>>             yesterday. (Thanks for the credit as contributor BTW. Totally unexpected.)
>>>
>>>             In it, you mentioned that it was planned to have appsensor.jar bundled with
>>>             ESAPI as of ESAPI 2.0rc8. Since I don't see it in ESAPI even in 2.0rc10,
>>>             I'm guessing that there was a delay for some reason.
>>>
>>>         I copied Jim on this email b/c he was discussing this with
>>>         us.  I personally am not sure what's required on the ESAPI
>>>         side to get AppSensor bundled. I can say AppSensor depends
>>>         on ESAPI in some of it's code (ESAPI is a maven dependency
>>>         of AppSensor).  I would be happy to do whatever I can to get
>>>         it included in the bundle.  Jim, any thoughts?
>>>
>>>             So then I go to look for the AppSensor tutorial and the AppSensor jar file
>>>             at the AppSensor Google Code site and I don't find either. (The tutorial is
>>>             under '/' of the trunk under the svn/trunk though, so I did get it.) But
>>>             surprisingly (to me, at least) was the fact that I could not find appsensor.jar
>>>             anywhere under the featured or previous Downloads. (Do you expect people to
>>>             build it from scratch?)
>>>
>>>         Right now, there are 3 ways to get the jar, and I agree this
>>>         should be reorganized ... we all admit documentation is our
>>>         next hurdle.  The first is to build from scratch as you
>>>         mentioned, unpalatable to most.  The second is to grab the
>>>         jar from the link on
>>>         http://www.owasp.org/index.php/AppSensor_Developer_Guide. 
>>>         The third is to add it as a maven dependency - AppSensor is
>>>         in Maven central (same as ESAPI as of 2.0RC10.  We really do
>>>         need to move towards producing a deliverable similar to
>>>         ESAPI that is a zip w/ the jar/dependencies/javadoc/config
>>>         files, etc. in a zip or something like that, but we're not
>>>         there yet.
>>>
>>>             Anyway, the reason that I am bringing this up is that I am about ready to
>>>             start working on the ESAPI crypto for the 2.1 branch and I see many places
>>>             where I'd like to wire-in AppSensor detection points into either JavaEncryptor
>>>             or perhaps even EncryptionException. If AppSensor was truly bundled as part of
>>>             ESAPI that would be fairly easy to do. OTOH, if it is not, I may need to
>>>             rethink this because I don't want to create yet another dependency on an
>>>             external class library. (ESAPI already has something like 30+ jars that it
>>>             is dependent upon.)
>>>
>>>         Glad you're thinking of going this way, again, I'd need to
>>>         talk to Jim about bundling.
>>>
>>>             Lastly, from your AppSec USA 2010 video, I recall you stating that that the
>>>             way that AppSensor would be enabled in ESAPI would be to set
>>>
>>>             ESAPI.IntrusionDetector=org.owasp.appsensor.intrusiondetection.AppSensorIntrusionDetector
>>>
>>>             in the ESAPI.properties file. However, I also vaguely recall discussion
>>>             as to how that property should not be used as that would disable
>>>             ESAPI's built-in WAF and I thought that I remember Jeff Williams arguing that
>>>             AppSensor and the ESAPI WAF were_complimentary_ rather than_competing_
>>>             technologies so therefore they should use different properties in ESAPI.
>>>             Anyway, I am not sure that this has been resolved or not, so would appreciate
>>>             an update in this area as well.
>>>
>>>         This will probably have to be cleared up with Jeff and/or
>>>         Jim.  I haven't seen anything in the intrusion detector code
>>>         that says anything about the WAF, but I could be wrong.  I
>>>         agree with Jeff's core point, but if that configuration is
>>>         true, then I think the current setup is confusing.  The WAF
>>>         should have separate configuration.  I wouldn't necessarily
>>>         hook the WAF into the intrusion detection config, since some
>>>         folks would want to use one or the other.
>>>         Also wanted to point out that in addition to changing that
>>>         1-line config, you do need to add the appsensor.properties
>>>         file (goes in the same folder as the esapi.properties), and
>>>         make sure the config is right there.  That config file is in
>>>         svn.
>>>
>>>             Thanks,
>>>             -kevin
>>>             P.S.- If you wish to reply to the OWASP-AppSensor-Project mailing list, that's
>>>                    fine as I subscribe to that. Just wasn't sure if this was to appropriate
>>>                    to ask this there as I'm not sure if that's a developers list or a users
>>>                    list.
>>>             -- 
>>>             Kevin W. Wall
>>>             "The most likely way for the world to be destroyed, most experts agree,
>>>             is by accident. That's where we come in; we're computer professionals.
>>>             We cause accidents."        -- Nathaniel Borenstein, co-creator of MIME
>>>
>>>
>>>             _______________________________________________
>>>             Owasp-appsensor-project mailing list
>>>             Owasp-appsensor-project at lists.owasp.org
>>>             <mailto:Owasp-appsensor-project at lists.owasp.org>
>>>             https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>>
>>>
>>
>>
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20101102/78954a89/attachment-0001.html 

From colin.watson at owasp.org  Tue Nov  2 03:35:25 2010
From: colin.watson at owasp.org (Colin Watson)
Date: Tue, 2 Nov 2010 07:35:25 +0000
Subject: [Owasp-appsensor-project] GeoIP Data
In-Reply-To: <AANLkTinDz1+RFHhO8J7o0tGEK+=Ln2VwJ8pE3F1tE3+N@mail.gmail.com>
References: <C8F452E0.16A9F%rcbarnett@gmail.com>
	<AANLkTinDz1+RFHhO8J7o0tGEK+=Ln2VwJ8pE3F1tE3+N@mail.gmail.com>
Message-ID: <AANLkTikMw6GLTiokRZmOv-870Ct6WNnNJX_82DVY=hmS@mail.gmail.com>

Ryan

Yes I prefer "Source Location Changes During Session" for SE5 too.

Also, perhaps "RP1: Suspicious or Disallowed User IP Address" should
be renamed in a similar way?  RP1 is about the reputation of the
source, rather than it changing mid-session.

In the GeoIP blog post you mention "DefCon Level - Dynamic".  This
could also be implemented directly in AppSensor (RP4: Change to
Environment Threat Level) perhaps using the Geo-location data
collected by ModSecurity (and I added an example when I read your
post).

Colin

http://www.owasp.org/index.php/AppSensor_DetectionPoints#SE5:_Source_IP_Address_Changes_During_Session
http://www.owasp.org/index.php/AppSensor_DetectionPoints#RP1:_Suspicious_or_Disallowed_User_IP_Address
http://www.owasp.org/index.php/AppSensor_DetectionPoints#RP4:_Change_to_Environment_Threat_Level


On 1 November 2010 16:49, John Melton <jtmelton at gmail.com> wrote:
> Ryan,
> I like this idea, particularly changing the detection point to source
> location changes during session.? This makes the detection point generic
> enough to be malleable over time, and can be defined at the
> organizational/project level as many of the detection points will be.
> Excellent article by the way - really have enjoyed reading your detailed
> posts in your recent series' - very helpful.
> Thanks,
> John
>
> On Mon, Nov 1, 2010 at 11:20 AM, Ryan Barnett <rcbarnett at gmail.com> wrote:
>>
>> Hello everyone,
>> Not sure if this is a new detection point or perhaps an update to an
>> existing one ? tracking GeoIP data during a Session. ?See my recent blog
>> post on using this data -
>> http://blog.modsecurity.org/2010/10/detecting-malice-with-modsecurity-geolocation-data.html
>>
>> The concept is similar to the current Session Exception -
>> http://www.owasp.org/index.php/AppSensor_DetectionPoints#SE5:_Source_IP_Address_Changes_During_Session
>>
>> While this is somewhat similar to Source IP Changes During Session ? it is
>> a bit more lenient as you could track by City/State/Country.
>>
>> Perhaps a title change to ? Source Location Changes During Session. ?This
>> would allow for either GeoIP or IP Address data to be evaluated.
>>
>> -Ryan
>>
>>
>>
>> _______________________________________________
>> Owasp-appsensor-project mailing list
>> Owasp-appsensor-project at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>
>
>
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
>

From colin.watson at owasp.org  Tue Nov  2 03:39:47 2010
From: colin.watson at owasp.org (Colin Watson)
Date: Tue, 2 Nov 2010 07:39:47 +0000
Subject: [Owasp-appsensor-project] New Unexpected Type/Quantity
	Detection Points
In-Reply-To: <C8F48384.16AD2%rcbarnett@gmail.com>
References: <C8F48384.16AD2%rcbarnett@gmail.com>
Message-ID: <AANLkTimc1F-fgyx08WakOq1NsV8oBU42kckKDmOuXpOG@mail.gmail.com>

Ryan

I think these are worth adding.  They are more general cases of the
AuthenticationException ones.  It is good to have both since
thresholds and responses may be different.

I have a chart of relationships between detection points in my
presentation next week at AppSec DC 2010.  RE7 and RE8 won't be on it
though!

Colin

On 1 November 2010 18:47, Ryan Barnett <rcbarnett at gmail.com> wrote:
> I suggest that we add a new Detection Point in the RequestException category
> similar to the following AuthenticationException ones -
>
> 2.2.4?AE4: Unexpected Quantity of Characters in Username
> <http://www.owasp.org/index.php/AppSensor_DetectionPoints#AE4:_Unexpected_Quantity_of_Characters_in_Username>
> 2.2.5?AE5: Unexpected Quantity of Characters in Password
> <http://www.owasp.org/index.php/AppSensor_DetectionPoints#AE5:_Unexpected_Quantity_of_Characters_in_Password>
> 2.2.6?AE6: Unexpected Type of Character in Username
> <http://www.owasp.org/index.php/AppSensor_DetectionPoints#AE6:_Unexpected_Type_of_Character_in_Username>
> 2.2.7?AE7: Unexpected Type of Character in Password
> <http://www.owasp.org/index.php/AppSensor_DetectionPoints#AE7:_Unexpected_Type_of_Character_in_Password>
>
> Instead of only focusing in on username/password parameters, the detection
> should be something like -
>
> 2.1.7 RE7: Unexpected Quantity of Characters in Parameter
> 2.1.8?RE8: Unexpected Type of Characters in Parameter
>
> BTW ? I am working on these types of application profiling/learning
> detection points for additions to the ModSecurity CRS.
>
> -Ryan
>
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
>

From michael.coates at owasp.org  Tue Nov  2 13:18:56 2010
From: michael.coates at owasp.org (Michael Coates)
Date: Tue, 02 Nov 2010 10:18:56 -0700
Subject: [Owasp-appsensor-project] Fwd: AppSensor & ESAPI
In-Reply-To: <AANLkTi=Vs5DuKZMJEPxv2vjJetiUq+2Breb06mSBe-io@mail.gmail.com>
References: <4CCDA61A.3070707@owasp.org>
	<AANLkTi=Vs5DuKZMJEPxv2vjJetiUq+2Breb06mSBe-io@mail.gmail.com>
Message-ID: <4CD04800.4050606@owasp.org>

The google code page (http://code.google.com/p/appsensor/) has been
updated. The featured download section now contains links to:

AppSensor-0.1.3.jar
AppSensor Developer Guide - OWASP.pdf (just a pdf of our wiki page)


Michael Coates
OWASP


On 10/31/10 4:53 PM, John Melton wrote:
> Kevin,
> Hi, Glad you are considering AppSensor.  I attempted answers inline - if you 
> have further questions, let me know.
> Thanks,
> John
>
> On Sun, Oct 31, 2010 at 1:23 PM, Michael Coates <michael.coates at owasp.org 
> <mailto:michael.coates at owasp.org>> wrote:
>
>     Forwarding to AppSensor mailing list.  I think John will have the most
>     current info for several of these questions.
>
>     But, we do need to get the appsensor.jar as a feature download.  We don't
>     want people to build from scratch if they don't want to.
>
>     -------- Original Message --------
>     Subject: 	AppSensor & ESAPI
>     Date: 	Sun, 31 Oct 2010 09:37:31 -0400
>     From: 	Kevin W. Wall <kevin.w.wall at gmail.com> <mailto:kevin.w.wall at gmail.com>
>     Organization: 	Qwest IT - Application Security Team
>     To: 	Michael Coates <michael.coates at owasp.org>
>     <mailto:michael.coates at owasp.org>
>
>
>
>     Michael,
>
>     I just watched your AppSec USA 2010 video presentation about AppSensor&  ESAPI
>     yesterday. (Thanks for the credit as contributor BTW. Totally unexpected.)
>
>     In it, you mentioned that it was planned to have appsensor.jar bundled with
>     ESAPI as of ESAPI 2.0rc8. Since I don't see it in ESAPI even in 2.0rc10,
>     I'm guessing that there was a delay for some reason.
>
> I copied Jim on this email b/c he was discussing this with us.  I personally am 
> not sure what's required on the ESAPI side to get AppSensor bundled. I can say 
> AppSensor depends on ESAPI in some of it's code (ESAPI is a maven dependency of 
> AppSensor).  I would be happy to do whatever I can to get it included in the 
> bundle.  Jim, any thoughts?
>
>     So then I go to look for the AppSensor tutorial and the AppSensor jar file
>     at the AppSensor Google Code site and I don't find either. (The tutorial is
>     under'/'  of the trunk under the svn/trunk though, so I did get it.) But
>     surprisingly (to me, at least) was the fact that I could not find appsensor.jar
>     anywhere under the featured or previous Downloads. (Do you expect people to
>     build it from scratch?)
>
> Right now, there are 3 ways to get the jar, and I agree this should be 
> reorganized ... we all admit documentation is our next hurdle.  The first is to 
> build from scratch as you mentioned, unpalatable to most.  The second is to grab 
> the jar from the link on 
> http://www.owasp.org/index.php/AppSensor_Developer_Guide.  The third is to add 
> it as a maven dependency - AppSensor is in Maven central (same as ESAPI as of 
> 2.0RC10.  We really do need to move towards producing a deliverable similar to 
> ESAPI that is a zip w/ the jar/dependencies/javadoc/config files, etc. in a zip 
> or something like that, but we're not there yet.
>
>     Anyway, the reason that I am bringing this up is that I am about ready to
>     start working on the ESAPI crypto for the 2.1 branch and I see many places
>     where I'd like to wire-in AppSensor detection points into either JavaEncryptor
>     or perhaps even EncryptionException. If AppSensor was truly bundled as part of
>     ESAPI that would be fairly easy to do. OTOH, if it is not, I may need to
>     rethink this because I don't want to create yet another dependency on an
>     external class library. (ESAPI already has something like 30+ jars that it
>     is dependent upon.)
>
> Glad you're thinking of going this way, again, I'd need to talk to Jim about 
> bundling.
>
>     Lastly, from your AppSec USA 2010 video, I recall you stating that that the
>     way that AppSensor would be enabled in ESAPI would be to set
>
>     ESAPI.IntrusionDetector=org.owasp.appsensor.intrusiondetection.AppSensorIntrusionDetector
>
>     in the ESAPI.properties file. However, I also vaguely recall discussion
>     as to how that property should not be used as that would disable
>     ESAPI's built-in WAF and I thought that I remember Jeff Williams arguing that
>     AppSensor and the ESAPI WAF were _complimentary_ rather than _competing_
>     technologies so therefore they should use different properties in ESAPI.
>     Anyway, I am not sure that this has been resolved or not, so would appreciate
>     an update in this area as well.
>
> This will probably have to be cleared up with Jeff and/or Jim.  I haven't seen 
> anything in the intrusion detector code that says anything about the WAF, but I 
> could be wrong.  I agree with Jeff's core point, but if that configuration is 
> true, then I think the current setup is confusing.  The WAF should have separate 
> configuration.  I wouldn't necessarily hook the WAF into the intrusion detection 
> config, since some folks would want to use one or the other.
> Also wanted to point out that in addition to changing that 1-line config, you do 
> need to add the appsensor.properties file (goes in the same folder as the 
> esapi.properties), and make sure the config is right there.  That config file is 
> in svn.
>
>     Thanks,
>     -kevin
>     P.S.- If you wish to reply to the OWASP-AppSensor-Project mailing list, that's
>            fine as I subscribe to that. Just wasn't sure if this was to appropriate
>            to ask this there as I'm not sure if that's a developers list or a users
>            list.
>     -- 
>     Kevin W. Wall
>     "The most likely way for the world to be destroyed, most experts agree,
>     is by accident. That's where we come in; we're computer professionals.
>     We cause accidents."         -- Nathaniel Borenstein, co-creator of MIME
>
>
>     _______________________________________________
>     Owasp-appsensor-project mailing list
>     Owasp-appsensor-project at lists.owasp.org
>     <mailto:Owasp-appsensor-project at lists.owasp.org>
>     https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
>

From colin.watson at owasp.org  Thu Nov  4 10:59:29 2010
From: colin.watson at owasp.org (Colin Watson)
Date: Thu, 4 Nov 2010 14:59:29 +0000
Subject: [Owasp-appsensor-project] GeoIP Data
In-Reply-To: <AANLkTikMw6GLTiokRZmOv-870Ct6WNnNJX_82DVY=hmS@mail.gmail.com>
References: <C8F452E0.16A9F%rcbarnett@gmail.com>
	<AANLkTinDz1+RFHhO8J7o0tGEK+=Ln2VwJ8pE3F1tE3+N@mail.gmail.com>
	<AANLkTikMw6GLTiokRZmOv-870Ct6WNnNJX_82DVY=hmS@mail.gmail.com>
Message-ID: <AANLkTin=pORybr8JwLMeKd_tVDdQqj-ASfJPoxudna5m@mail.gmail.com>

I have updated SE5 with the suggestion:

http://www.owasp.org/index.php/AppSensor_DetectionPoints#SE5:_Source_Location_Changes_During_Session

Colin

On 2 November 2010 07:35, Colin Watson <colin.watson at owasp.org> wrote:
> Ryan
>
> Yes I prefer "Source Location Changes During Session" for SE5 too.
>
> Also, perhaps "RP1: Suspicious or Disallowed User IP Address" should
> be renamed in a similar way? ?RP1 is about the reputation of the
> source, rather than it changing mid-session.
>
> In the GeoIP blog post you mention "DefCon Level - Dynamic". ?This
> could also be implemented directly in AppSensor (RP4: Change to
> Environment Threat Level) perhaps using the Geo-location data
> collected by ModSecurity (and I added an example when I read your
> post).
>
> Colin
>
> http://www.owasp.org/index.php/AppSensor_DetectionPoints#SE5:_Source_IP_Address_Changes_During_Session
> http://www.owasp.org/index.php/AppSensor_DetectionPoints#RP1:_Suspicious_or_Disallowed_User_IP_Address
> http://www.owasp.org/index.php/AppSensor_DetectionPoints#RP4:_Change_to_Environment_Threat_Level
>
>
> On 1 November 2010 16:49, John Melton <jtmelton at gmail.com> wrote:
>> Ryan,
>> I like this idea, particularly changing the detection point to source
>> location changes during session.? This makes the detection point generic
>> enough to be malleable over time, and can be defined at the
>> organizational/project level as many of the detection points will be.
>> Excellent article by the way - really have enjoyed reading your detailed
>> posts in your recent series' - very helpful.
>> Thanks,
>> John
>>
>> On Mon, Nov 1, 2010 at 11:20 AM, Ryan Barnett <rcbarnett at gmail.com> wrote:
>>>
>>> Hello everyone,
>>> Not sure if this is a new detection point or perhaps an update to an
>>> existing one ? tracking GeoIP data during a Session. ?See my recent blog
>>> post on using this data -
>>> http://blog.modsecurity.org/2010/10/detecting-malice-with-modsecurity-geolocation-data.html
>>>
>>> The concept is similar to the current Session Exception -
>>> http://www.owasp.org/index.php/AppSensor_DetectionPoints#SE5:_Source_IP_Address_Changes_During_Session
>>>
>>> While this is somewhat similar to Source IP Changes During Session ? it is
>>> a bit more lenient as you could track by City/State/Country.
>>>
>>> Perhaps a title change to ? Source Location Changes During Session. ?This
>>> would allow for either GeoIP or IP Address data to be evaluated.
>>>
>>> -Ryan
>>>
>>>
>>>
>>> _______________________________________________
>>> Owasp-appsensor-project mailing list
>>> Owasp-appsensor-project at lists.owasp.org
>>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>>
>>
>>
>> _______________________________________________
>> Owasp-appsensor-project mailing list
>> Owasp-appsensor-project at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>
>>
>

From colin.watson at owasp.org  Fri Nov 12 09:54:05 2010
From: colin.watson at owasp.org (Colin Watson)
Date: Fri, 12 Nov 2010 14:54:05 +0000
Subject: [Owasp-appsensor-project] AppSensor Planning
Message-ID: <AANLkTikWOiK8Uc4YdCzORjquNo8gXBDERNfVSxgoenPu@mail.gmail.com>

My presentation on AppSensor was delivered at AppSec DC yesterday, and
the slides should be up on the site next week.

   http://www.owasp.org/index.php/OWASP_AppSec_DC_2010_Schedule#tab=Plenary_Day_2_-_11.2F11
   http://www.owasp.org/index.php/Attack_Detection_and_Prevention_with_OWASP_AppSensor

There were a few questions - clarifying what I had said, about ESAPI
and how AppSensor relates to WAFs.  But I'd like to mention the
document I created about planning an AppSensor implementation:

   Attack Detection & Response with OWASP AppSensor - An
Implementation Planning Workbook
   http://www.owasp.org/index.php/File:Appsensor-planning.zip

Whilst this is quite an early version, and it could do with some more
input and streamlining, there are some charts and tables which could
be extracted and added as separate resources for the project.  I am
thinking about making this into some sort of training session.

Ryan Barrnett spoke afterwards, and referenced some of AppSensor's
concepts in ModSecurity core rule set.

   http://www.owasp.org/index.php/OWASP_ModSecurity_Core_Rule_Set

Fabio Cerrullo's presentation about ESAPI Swingset, and I wondered if
it might be worth contributing an AppSensor tutorial/lesson to that
project.

   http://www.owasp.org/index.php/OWASP_ESAPI_SwingSet

Colin

