From michael.coates at owasp.org  Thu Sep  1 02:12:16 2011
From: michael.coates at owasp.org (Michael Coates)
Date: Wed, 31 Aug 2011 23:12:16 -0700
Subject: [Owasp-appsensor-project] AppSensor Summit at AppSecUSA
Message-ID: <DDC54694-98AD-45F4-A9C0-67E99766BA2C@owasp.org>

All,

I've posted a first draft of the AppSensor Summit which will be held on Wednesday, Sept 21, the day before AppSecUSA conference talks begin.

I'm looking for any feedback on the schedule of events and also indication of who will be at AppSecUSA and whether you'll be available for the Wednesday summit sessions.

https://www.owasp.org/index.php/AppSensor_Summit




Michael Coates
OWASP




From ryan.barnett at owasp.org  Fri Sep  2 08:10:45 2011
From: ryan.barnett at owasp.org (Ryan Barnett)
Date: Fri, 02 Sep 2011 08:10:45 -0400
Subject: [Owasp-appsensor-project] Recommend New Detection Point: IE7:
 Detect Abnormal Quantity of Returned Scripts
Message-ID: <CA864005.31657%ryan.barnett@owasp.org>

Consider the following two CommandInjectionException detection points -

* 2.7.1 CIE1: Blacklist Inspection for Common SQL Injection Values
* 2.7.2 CIE2: Detect Abnormal Quantity of Returned Records

There is an obvious correlation between these two as oftentimes SQL
Injection attacks result in bulk extraction of DB data within the returned
html page.

If we take this same concept and apply it to XSS, we should have a similar
detection point for -

 * 2.5.1 IE1: Cross Site Scripting Attempt

The new detection point will check for an abnormal # of scripts (and
iframes) returned in the html page as this can help to flag successful XSS
injections.  I suggest the following be added to the InputException
category -

 * 2.5.7 IE7: Detect Abnormal Quantity of Returned Scripts

-Ryan




From luke.biddell at gmail.com  Fri Sep  2 09:54:19 2011
From: luke.biddell at gmail.com (Luke Biddell)
Date: Fri, 2 Sep 2011 14:54:19 +0100
Subject: [Owasp-appsensor-project] AppSensorServiceController in a
	distributed environment
Message-ID: <CAAnxdqtJ6=UMyDRtDdYwvDbib8ka+e8bHxU4kFbL71Fbir=vUw@mail.gmail.com>

Chaps,

I'm plumbing in AppSensor and currently switching out elements (such as the
IntrusionStore) for more persistent implementations (eg a
MembaseIntrusionStore etc).

The only place I've come unstuck is the AppSensorServiceController
implementation that's used behind AppSensorRequestBlockingFilter. The
service and perUser service stores are static Hashtables, ideally I'd switch
those out for MemBase or whatever so they don't just apply to the current
node, they apply across all distributed nodes. But I can't see how without
writing my own filter, service controller and response actions. The code
would largely be a clone or your defaults, give or take, which seems a shame
when it's so close. This would be made easier if some of the action methods
in DefaultResponseAction were protected; then I could just override the
disableComponent* methods and wire them into my service controller and
filter.

Perhaps an AppSensorServiceStore in a similar pattern to the IntrustionStore
could be employed? Then I could use it pretty much as is.



Luke



PS  - thanks for a great product, it integrates pretty well into Jersey
JAX-RS using a custom ExceptionMapper.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20110902/872a642d/attachment.html 

From ryan.barnett at owasp.org  Fri Sep  2 17:09:19 2011
From: ryan.barnett at owasp.org (Ryan Barnett)
Date: Fri, 02 Sep 2011 17:09:19 -0400
Subject: [Owasp-appsensor-project] AppSensor Summit at AppSecUSA
In-Reply-To: <DDC54694-98AD-45F4-A9C0-67E99766BA2C@owasp.org>
Message-ID: <CA86BDFD.316B8%ryan.barnett@owasp.org>

I will be there and just added my name :)

I will think about some topics and send them along.

FYI - I can talk a bit about how we are implementing AppSensor Detection
Points in the ModSecurity CRS.

-Ryan

On 9/1/11 2:12 AM, "Michael Coates" <michael.coates at owasp.org> wrote:

>All,
>
>I've posted a first draft of the AppSensor Summit which will be held on
>Wednesday, Sept 21, the day before AppSecUSA conference talks begin.
>
>I'm looking for any feedback on the schedule of events and also
>indication of who will be at AppSecUSA and whether you'll be available
>for the Wednesday summit sessions.
>
>https://www.owasp.org/index.php/AppSensor_Summit
>
>
>
>
>Michael Coates
>OWASP
>
>
>
>_______________________________________________
>Owasp-appsensor-project mailing list
>Owasp-appsensor-project at lists.owasp.org
>https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project



From bob at jellyvision.com  Fri Sep  2 17:41:49 2011
From: bob at jellyvision.com (Bob Chojnacki)
Date: Fri, 2 Sep 2011 21:41:49 +0000
Subject: [Owasp-appsensor-project] AppSensor Summit at AppSecUSA
In-Reply-To: <CA86BDFD.316B8%ryan.barnett@owasp.org>
References: <DDC54694-98AD-45F4-A9C0-67E99766BA2C@owasp.org>,
	<CA86BDFD.316B8%ryan.barnett@owasp.org>
Message-ID: <5D54F1D0AB7AA1459FCA689F90E0B037DC46A5@EXDAG10-N1>

Sorry, I am coming into this discussion a little late.  I will already be at AppSecUSA Thursday and Friday.  Is there a cost to the AppSesnsor Summit?

I just requested an account (via my owasp.org email address) so I can sign up.

________________________________________
From: owasp-appsensor-project-bounces at lists.owasp.org [owasp-appsensor-project-bounces at lists.owasp.org] on behalf of Ryan Barnett [ryan.barnett at owasp.org]
Sent: Friday, September 02, 2011 4:09 PM
To: Michael Coates; owasp-appsensor-project
Subject: Re: [Owasp-appsensor-project] AppSensor Summit at AppSecUSA

I will be there and just added my name :)

I will think about some topics and send them along.

FYI - I can talk a bit about how we are implementing AppSensor Detection
Points in the ModSecurity CRS.

-Ryan

On 9/1/11 2:12 AM, "Michael Coates" <michael.coates at owasp.org> wrote:

>All,
>
>I've posted a first draft of the AppSensor Summit which will be held on
>Wednesday, Sept 21, the day before AppSecUSA conference talks begin.
>
>I'm looking for any feedback on the schedule of events and also
>indication of who will be at AppSecUSA and whether you'll be available
>for the Wednesday summit sessions.
>
>https://www.owasp.org/index.php/AppSensor_Summit
>
>
>
>
>Michael Coates
>OWASP
>
>
>
>_______________________________________________
>Owasp-appsensor-project mailing list
>Owasp-appsensor-project at lists.owasp.org
>https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project


_______________________________________________
Owasp-appsensor-project mailing list
Owasp-appsensor-project at lists.owasp.org
https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project

From michael.coates at owasp.org  Fri Sep  2 17:50:50 2011
From: michael.coates at owasp.org (Michael Coates)
Date: Fri, 2 Sep 2011 14:50:50 -0700
Subject: [Owasp-appsensor-project] AppSensor Summit at AppSecUSA
In-Reply-To: <5D54F1D0AB7AA1459FCA689F90E0B037DC46A5@EXDAG10-N1>
References: <DDC54694-98AD-45F4-A9C0-67E99766BA2C@owasp.org>,
	<CA86BDFD.316B8%ryan.barnett@owasp.org>
	<5D54F1D0AB7AA1459FCA689F90E0B037DC46A5@EXDAG10-N1>
Message-ID: <77032E9C-D9BC-4A31-939E-FD5F739DCEEE@owasp.org>

Nope, no cost.  All are welcomed to attend.

Michael Coates
OWASP



On Sep 2, 2011, at 2:41 PM, Bob Chojnacki wrote:

> Sorry, I am coming into this discussion a little late.  I will already be at AppSecUSA Thursday and Friday.  Is there a cost to the AppSesnsor Summit?
> 
> I just requested an account (via my owasp.org email address) so I can sign up.
> 
> ________________________________________
> From: owasp-appsensor-project-bounces at lists.owasp.org [owasp-appsensor-project-bounces at lists.owasp.org] on behalf of Ryan Barnett [ryan.barnett at owasp.org]
> Sent: Friday, September 02, 2011 4:09 PM
> To: Michael Coates; owasp-appsensor-project
> Subject: Re: [Owasp-appsensor-project] AppSensor Summit at AppSecUSA
> 
> I will be there and just added my name :)
> 
> I will think about some topics and send them along.
> 
> FYI - I can talk a bit about how we are implementing AppSensor Detection
> Points in the ModSecurity CRS.
> 
> -Ryan
> 
> On 9/1/11 2:12 AM, "Michael Coates" <michael.coates at owasp.org> wrote:
> 
>> All,
>> 
>> I've posted a first draft of the AppSensor Summit which will be held on
>> Wednesday, Sept 21, the day before AppSecUSA conference talks begin.
>> 
>> I'm looking for any feedback on the schedule of events and also
>> indication of who will be at AppSecUSA and whether you'll be available
>> for the Wednesday summit sessions.
>> 
>> https://www.owasp.org/index.php/AppSensor_Summit
>> 
>> 
>> 
>> 
>> Michael Coates
>> OWASP
>> 
>> 
>> 
>> _______________________________________________
>> Owasp-appsensor-project mailing list
>> Owasp-appsensor-project at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
> 
> 
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project


From ryan.barnett at owasp.org  Fri Sep  2 18:53:03 2011
From: ryan.barnett at owasp.org (Ryan Barnett)
Date: Fri, 2 Sep 2011 18:53:03 -0400
Subject: [Owasp-appsensor-project] AppSensor Summit at AppSecUSA
In-Reply-To: <77032E9C-D9BC-4A31-939E-FD5F739DCEEE@owasp.org>
References: <DDC54694-98AD-45F4-A9C0-67E99766BA2C@owasp.org>
	<CA86BDFD.316B8%ryan.barnett@owasp.org>
	<5D54F1D0AB7AA1459FCA689F90E0B037DC46A5@EXDAG10-N1>
	<77032E9C-D9BC-4A31-939E-FD5F739DCEEE@owasp.org>
Message-ID: <DC4576E7-066C-46A9-9C8E-232085AB50E2@owasp.org>

Yeah, "registered" was a poor choice of wording :(. Just add your name to the Summit page. 

Ryan

On Sep 2, 2011, at 5:50 PM, Michael Coates <michael.coates at owasp.org> wrote:

> Nope, no cost.  All are welcomed to attend.
> 
> Michael Coates
> OWASP
> 
> 
> 
> On Sep 2, 2011, at 2:41 PM, Bob Chojnacki wrote:
> 
>> Sorry, I am coming into this discussion a little late.  I will already be at AppSecUSA Thursday and Friday.  Is there a cost to the AppSesnsor Summit?
>> 
>> I just requested an account (via my owasp.org email address) so I can sign up.
>> 
>> ________________________________________
>> From: owasp-appsensor-project-bounces at lists.owasp.org [owasp-appsensor-project-bounces at lists.owasp.org] on behalf of Ryan Barnett [ryan.barnett at owasp.org]
>> Sent: Friday, September 02, 2011 4:09 PM
>> To: Michael Coates; owasp-appsensor-project
>> Subject: Re: [Owasp-appsensor-project] AppSensor Summit at AppSecUSA
>> 
>> I will be there and just added my name :)
>> 
>> I will think about some topics and send them along.
>> 
>> FYI - I can talk a bit about how we are implementing AppSensor Detection
>> Points in the ModSecurity CRS.
>> 
>> -Ryan
>> 
>> On 9/1/11 2:12 AM, "Michael Coates" <michael.coates at owasp.org> wrote:
>> 
>>> All,
>>> 
>>> I've posted a first draft of the AppSensor Summit which will be held on
>>> Wednesday, Sept 21, the day before AppSecUSA conference talks begin.
>>> 
>>> I'm looking for any feedback on the schedule of events and also
>>> indication of who will be at AppSecUSA and whether you'll be available
>>> for the Wednesday summit sessions.
>>> 
>>> https://www.owasp.org/index.php/AppSensor_Summit
>>> 
>>> 
>>> 
>>> 
>>> Michael Coates
>>> OWASP
>>> 
>>> 
>>> 
>>> _______________________________________________
>>> Owasp-appsensor-project mailing list
>>> Owasp-appsensor-project at lists.owasp.org
>>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>> 
>> 
>> _______________________________________________
>> Owasp-appsensor-project mailing list
>> Owasp-appsensor-project at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>> _______________________________________________
>> Owasp-appsensor-project mailing list
>> Owasp-appsensor-project at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
> 
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project

From michael.coates at owasp.org  Tue Sep  6 21:26:50 2011
From: michael.coates at owasp.org (Michael Coates)
Date: Tue, 6 Sep 2011 18:26:50 -0700
Subject: [Owasp-appsensor-project] AppSensor Summit at AppSecUSA
In-Reply-To: <CA86BDFD.316B8%ryan.barnett@owasp.org>
References: <CA86BDFD.316B8%ryan.barnett@owasp.org>
Message-ID: <144EF7B2-8B60-4149-9722-4CF9C6948FA7@owasp.org>

Sounds good. I think some discussion on AppSensor + ModSecurity would be good.

Michael Coates
OWASP



On Sep 2, 2011, at 2:09 PM, Ryan Barnett wrote:

> I will be there and just added my name :)
> 
> I will think about some topics and send them along.
> 
> FYI - I can talk a bit about how we are implementing AppSensor Detection
> Points in the ModSecurity CRS.
> 
> -Ryan
> 
> On 9/1/11 2:12 AM, "Michael Coates" <michael.coates at owasp.org> wrote:
> 
>> All,
>> 
>> I've posted a first draft of the AppSensor Summit which will be held on
>> Wednesday, Sept 21, the day before AppSecUSA conference talks begin.
>> 
>> I'm looking for any feedback on the schedule of events and also
>> indication of who will be at AppSecUSA and whether you'll be available
>> for the Wednesday summit sessions.
>> 
>> https://www.owasp.org/index.php/AppSensor_Summit
>> 
>> 
>> 
>> 
>> Michael Coates
>> OWASP
>> 
>> 
>> 
>> _______________________________________________
>> Owasp-appsensor-project mailing list
>> Owasp-appsensor-project at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
> 
> 


From michael.coates at owasp.org  Tue Sep  6 21:30:48 2011
From: michael.coates at owasp.org (Michael Coates)
Date: Tue, 6 Sep 2011 18:30:48 -0700
Subject: [Owasp-appsensor-project] AppSensorServiceController in a
	distributed environment
In-Reply-To: <CAAnxdqtJ6=UMyDRtDdYwvDbib8ka+e8bHxU4kFbL71Fbir=vUw@mail.gmail.com>
References: <CAAnxdqtJ6=UMyDRtDdYwvDbib8ka+e8bHxU4kFbL71Fbir=vUw@mail.gmail.com>
Message-ID: <DEA0D49F-7A19-49B1-B0BA-AD7B4836D5FF@owasp.org>

John M,

Your thoughts? I defer to you on the specifics of the code base.



Luke,

Great to hear that its working so well for you. I'd really love to get some information on how AppSensor is being used in your application. I think our project could really benefit from a few "real life" testimonials.



Michael Coates
OWASP



On Sep 2, 2011, at 6:54 AM, Luke Biddell wrote:

> Chaps,
> 
> I'm plumbing in AppSensor and currently switching out elements (such as the IntrusionStore) for more persistent implementations (eg a MembaseIntrusionStore etc).
> 
> The only place I've come unstuck is the AppSensorServiceController implementation that's used behind AppSensorRequestBlockingFilter. The service and perUser service stores are static Hashtables, ideally I'd switch those out for MemBase or whatever so they don't just apply to the current node, they apply across all distributed nodes. But I can't see how without writing my own filter, service controller and response actions. The code would largely be a clone or your defaults, give or take, which seems a shame when it's so close. This would be made easier if some of the action methods in DefaultResponseAction were protected; then I could just override the disableComponent* methods and wire them into my service controller and filter.
> 
> Perhaps an AppSensorServiceStore in a similar pattern to the IntrustionStore could be employed? Then I could use it pretty much as is.
> 
> 
> 
> Luke
> 
> 
> 
> PS  - thanks for a great product, it integrates pretty well into Jersey JAX-RS using a custom ExceptionMapper.
> 
> 
> 
> 
> 
> 
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project


From jtmelton at gmail.com  Tue Sep  6 21:59:46 2011
From: jtmelton at gmail.com (John Melton)
Date: Tue, 6 Sep 2011 21:59:46 -0400
Subject: [Owasp-appsensor-project] AppSensorServiceController in a
 distributed environment
In-Reply-To: <DEA0D49F-7A19-49B1-B0BA-AD7B4836D5FF@owasp.org>
References: <CAAnxdqtJ6=UMyDRtDdYwvDbib8ka+e8bHxU4kFbL71Fbir=vUw@mail.gmail.com>
	<DEA0D49F-7A19-49B1-B0BA-AD7B4836D5FF@owasp.org>
Message-ID: <CAM8z=y+UHtYSH1G59OSrce3EMno=Un_cwZT1NMcVacv3qcmVDw@mail.gmail.com>

Michael,
No way you would've known this, but Luke and I have worked together offline,
and he even was kind enough to send in some patches to apply this concept.
You should see a note from me in a few days about applying his patches to
add this new functionality.
Thanks,
John

On Tue, Sep 6, 2011 at 9:30 PM, Michael Coates <michael.coates at owasp.org>wrote:

> John M,
>
> Your thoughts? I defer to you on the specifics of the code base.
>
>
>
> Luke,
>
> Great to hear that its working so well for you. I'd really love to get some
> information on how AppSensor is being used in your application. I think our
> project could really benefit from a few "real life" testimonials.
>
>
>
> Michael Coates
> OWASP
>
>
>
> On Sep 2, 2011, at 6:54 AM, Luke Biddell wrote:
>
> > Chaps,
> >
> > I'm plumbing in AppSensor and currently switching out elements (such as
> the IntrusionStore) for more persistent implementations (eg a
> MembaseIntrusionStore etc).
> >
> > The only place I've come unstuck is the AppSensorServiceController
> implementation that's used behind AppSensorRequestBlockingFilter. The
> service and perUser service stores are static Hashtables, ideally I'd switch
> those out for MemBase or whatever so they don't just apply to the current
> node, they apply across all distributed nodes. But I can't see how without
> writing my own filter, service controller and response actions. The code
> would largely be a clone or your defaults, give or take, which seems a shame
> when it's so close. This would be made easier if some of the action methods
> in DefaultResponseAction were protected; then I could just override the
> disableComponent* methods and wire them into my service controller and
> filter.
> >
> > Perhaps an AppSensorServiceStore in a similar pattern to the
> IntrustionStore could be employed? Then I could use it pretty much as is.
> >
> >
> >
> > Luke
> >
> >
> >
> > PS  - thanks for a great product, it integrates pretty well into Jersey
> JAX-RS using a custom ExceptionMapper.
> >
> >
> >
> >
> >
> >
> > _______________________________________________
> > Owasp-appsensor-project mailing list
> > Owasp-appsensor-project at lists.owasp.org
> > https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20110906/a97f93c3/attachment.html 

From colin.watson at owasp.org  Thu Sep  8 07:13:20 2011
From: colin.watson at owasp.org (Colin Watson)
Date: Thu, 8 Sep 2011 12:13:20 +0100
Subject: [Owasp-appsensor-project] Recommend New Detection Point: IE7:
 Detect Abnormal Quantity of Returned Scripts
In-Reply-To: <CA864005.31657%ryan.barnett@owasp.org>
References: <CA864005.31657%ryan.barnett@owasp.org>
Message-ID: <CAAxdBB=Y2RjoAx7gTZmbziTJ9vt+CRwMG1Rmpqjms1=V3ANi7Q@mail.gmail.com>

Ryan

Probably a good idea.  Would it be worth making it more generic than
"Detect Abnormal Quantity of Returned Scripts" since it could be a
text change to the content or the creation of an extra form etc.  And
it might not just be HTML outputs?  Maybe:

   Detect Abnormal Content Output Structure

or something that matches IE 4 Violation of Input Data Integrity like:

   Violation of Output Data Integrity

See you at the AppSensor Summit on the 21st September.

Colin

On 2 September 2011 13:10, Ryan Barnett <ryan.barnett at owasp.org> wrote:
> Consider the following two CommandInjectionException detection points -
>
> * 2.7.1 CIE1: Blacklist Inspection for Common SQL Injection Values
> * 2.7.2 CIE2: Detect Abnormal Quantity of Returned Records
>
> There is an obvious correlation between these two as oftentimes SQL
> Injection attacks result in bulk extraction of DB data within the returned
> html page.
>
> If we take this same concept and apply it to XSS, we should have a similar
> detection point for -
>
> ?* 2.5.1 IE1: Cross Site Scripting Attempt
>
> The new detection point will check for an abnormal # of scripts (and
> iframes) returned in the html page as this can help to flag successful XSS
> injections. ?I suggest the following be added to the InputException
> category -
>
> ?* 2.5.7 IE7: Detect Abnormal Quantity of Returned Scripts
>
> -Ryan
>
>
>
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>

From ryan.barnett at owasp.org  Thu Sep  8 07:17:53 2011
From: ryan.barnett at owasp.org (Ryan Barnett)
Date: Thu, 8 Sep 2011 07:17:53 -0400
Subject: [Owasp-appsensor-project] Recommend New Detection Point: IE7:
	Detect Abnormal Quantity of Returned Scripts
In-Reply-To: <CAAxdBB=Y2RjoAx7gTZmbziTJ9vt+CRwMG1Rmpqjms1=V3ANi7Q@mail.gmail.com>
References: <CA864005.31657%ryan.barnett@owasp.org>
	<CAAxdBB=Y2RjoAx7gTZmbziTJ9vt+CRwMG1Rmpqjms1=V3ANi7Q@mail.gmail.com>
Message-ID: <3CF5E2E4-836E-40ED-B386-CAB287634BB2@owasp.org>

Agreed that the scope and text could be widened. In the CRS we are profiling the expected number of scripts, iframes and image tags as those are the top 3 HTML attack vectors that we see for both XSS and malicious drive-by-download infections. 

Looking forward to the AppSensor Summit as well.  I am flying in that morning and should be there by the first coffee break :)

Ryan

On Sep 8, 2011, at 7:13 AM, Colin Watson <colin.watson at owasp.org> wrote:

> Ryan
> 
> Probably a good idea.  Would it be worth making it more generic than
> "Detect Abnormal Quantity of Returned Scripts" since it could be a
> text change to the content or the creation of an extra form etc.  And
> it might not just be HTML outputs?  Maybe:
> 
>   Detect Abnormal Content Output Structure
> 
> or something that matches IE 4 Violation of Input Data Integrity like:
> 
>   Violation of Output Data Integrity
> 
> See you at the AppSensor Summit on the 21st September.
> 
> Colin
> 
> On 2 September 2011 13:10, Ryan Barnett <ryan.barnett at owasp.org> wrote:
>> Consider the following two CommandInjectionException detection points -
>> 
>> * 2.7.1 CIE1: Blacklist Inspection for Common SQL Injection Values
>> * 2.7.2 CIE2: Detect Abnormal Quantity of Returned Records
>> 
>> There is an obvious correlation between these two as oftentimes SQL
>> Injection attacks result in bulk extraction of DB data within the returned
>> html page.
>> 
>> If we take this same concept and apply it to XSS, we should have a similar
>> detection point for -
>> 
>>  * 2.5.1 IE1: Cross Site Scripting Attempt
>> 
>> The new detection point will check for an abnormal # of scripts (and
>> iframes) returned in the html page as this can help to flag successful XSS
>> injections.  I suggest the following be added to the InputException
>> category -
>> 
>>  * 2.5.7 IE7: Detect Abnormal Quantity of Returned Scripts
>> 
>> -Ryan
>> 
>> 
>> 
>> _______________________________________________
>> Owasp-appsensor-project mailing list
>> Owasp-appsensor-project at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>> 

From colin.watson at owasp.org  Tue Sep 13 03:16:48 2011
From: colin.watson at owasp.org (Colin Watson)
Date: Tue, 13 Sep 2011 08:16:48 +0100
Subject: [Owasp-appsensor-project] CrossTalk - Creating Attack-Aware
 Software Applications with Real-Time Defenses
Message-ID: <CAAxdBBk36-jNwg=BHRw2L_gGuoU0rio-VoQkkTLoiRt+RzFPTA@mail.gmail.com>

Michael Coates, John Melton, Dennis Groves and I wrote an article
about OWASP AppSensor for CrossTalk, the Journal of Defense Software
Engineering, which has now been published in the September/October
issue.  This edition has the theme Protecting Against Predatory
Practices.

   Creating Attack-Aware Software Applications with Real-Time Defenses
   http://www.crosstalkonline.org/storage/issue-archives/2011/201109/201109-Watson.pdf

   Full edition listing
   http://www.crosstalkonline.org/issues/septoct-2011.html

We hope this will help to raise awareness and solicit further help
with the project.

I will try to get some printed copies and bring them along to the
AppSensor Summit next week in Minneapolis at AppSec USA 2011:

   https://www.owasp.org/index.php/AppSensor_Summit

Colin

From jtmelton at gmail.com  Wed Sep 14 11:08:09 2011
From: jtmelton at gmail.com (John Melton)
Date: Wed, 14 Sep 2011 11:08:09 -0400
Subject: [Owasp-appsensor-project] AppSensorServiceController in a
 distributed environment
In-Reply-To: <CAM8z=y+UHtYSH1G59OSrce3EMno=Un_cwZT1NMcVacv3qcmVDw@mail.gmail.com>
References: <CAAnxdqtJ6=UMyDRtDdYwvDbib8ka+e8bHxU4kFbL71Fbir=vUw@mail.gmail.com>
	<DEA0D49F-7A19-49B1-B0BA-AD7B4836D5FF@owasp.org>
	<CAM8z=y+UHtYSH1G59OSrce3EMno=Un_cwZT1NMcVacv3qcmVDw@mail.gmail.com>
Message-ID: <CAM8z=yJjz-AdDXnzHX5U=kVCdBzPOS=xvrFbBAWXTA1Rg9fkSg@mail.gmail.com>

All,
Just a quick note that version 0.1.3.5 finally got pushed to maven central
(some server issues at sonatype apparently). I applied Luke's changes to add
support for a configurable service store and close issue 9. (Thanks Luke! -
pointing out bugs is awesome, patches are golden) Issue 8 still exists, but
is probably gonna take a bit longer to fix.
Thanks,
John

On Tue, Sep 6, 2011 at 9:59 PM, John Melton <jtmelton at gmail.com> wrote:

> Michael,
> No way you would've known this, but Luke and I have worked together
> offline, and he even was kind enough to send in some patches to apply this
> concept. You should see a note from me in a few days about applying his
> patches to add this new functionality.
> Thanks,
> John
>
>
> On Tue, Sep 6, 2011 at 9:30 PM, Michael Coates <michael.coates at owasp.org>wrote:
>
>> John M,
>>
>> Your thoughts? I defer to you on the specifics of the code base.
>>
>>
>>
>> Luke,
>>
>> Great to hear that its working so well for you. I'd really love to get
>> some information on how AppSensor is being used in your application. I think
>> our project could really benefit from a few "real life" testimonials.
>>
>>
>>
>> Michael Coates
>> OWASP
>>
>>
>>
>> On Sep 2, 2011, at 6:54 AM, Luke Biddell wrote:
>>
>> > Chaps,
>> >
>> > I'm plumbing in AppSensor and currently switching out elements (such as
>> the IntrusionStore) for more persistent implementations (eg a
>> MembaseIntrusionStore etc).
>> >
>> > The only place I've come unstuck is the AppSensorServiceController
>> implementation that's used behind AppSensorRequestBlockingFilter. The
>> service and perUser service stores are static Hashtables, ideally I'd switch
>> those out for MemBase or whatever so they don't just apply to the current
>> node, they apply across all distributed nodes. But I can't see how without
>> writing my own filter, service controller and response actions. The code
>> would largely be a clone or your defaults, give or take, which seems a shame
>> when it's so close. This would be made easier if some of the action methods
>> in DefaultResponseAction were protected; then I could just override the
>> disableComponent* methods and wire them into my service controller and
>> filter.
>> >
>> > Perhaps an AppSensorServiceStore in a similar pattern to the
>> IntrustionStore could be employed? Then I could use it pretty much as is.
>> >
>> >
>> >
>> > Luke
>> >
>> >
>> >
>> > PS  - thanks for a great product, it integrates pretty well into Jersey
>> JAX-RS using a custom ExceptionMapper.
>> >
>> >
>> >
>> >
>> >
>> >
>> > _______________________________________________
>> > Owasp-appsensor-project mailing list
>> > Owasp-appsensor-project at lists.owasp.org
>> > https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20110914/da66354b/attachment.html 

From jtmelton at gmail.com  Tue Sep 27 00:30:59 2011
From: jtmelton at gmail.com (John Melton)
Date: Tue, 27 Sep 2011 00:30:59 -0400
Subject: [Owasp-appsensor-project] Pseudo-Random Next Gen AppSensor
	Thoughts
In-Reply-To: <CAEiZe=WUnxfDJB__x4fznYnO7XzOCcxZt+pvFd3xqPBDnmroxQ@mail.gmail.com>
References: <CAEiZe=WUnxfDJB__x4fznYnO7XzOCcxZt+pvFd3xqPBDnmroxQ@mail.gmail.com>
Message-ID: <CAM8z=yJ3iW6ZSmWbrw5Vk1in4At8gevCnS1z_y7hHV2kA_yzJQ@mail.gmail.com>

Bob,
I took this on-list as I think it's an important topic. Responses inline.
Thanks,
John

On Sun, Sep 25, 2011 at 2:46 AM, Robert Chojnacki
<bob.chojnacki at owasp.org>wrote:

> Hi All,
>
> It was good to meet all of you at AppSecUSA. I have been looking for ways
> to contribute to this project and came up with some ideas.  I wanted to run
> them by you all to see if I am on track with what you guys feel should be
> the direction of AppSensor.
>
Great to meet you too - glad you're plugging in - we LOVE the help!

>
>
> *Background:*
>
> During the summit it was proposed that the Intrusion Detection Analysis
> Engine (not sure what it is called) would be separated out as a separate
> process, but kept in Java.  Then the code that implements the detection
> points and response actions could be written in Java, .Net, PHP and so on to
> interface with this engine I imagine via some form of inter-process
> communication.  I offered to write some initial detection-point PHP code as
> a test that would allow developers to insert detection points and echo any
> detections back to the screen (or to a file, or to syslog, since PHP already
> has syslog integration) as a first pass until John was able to start on the
> next gen Engine.
>
Yes, and we're stoked about that.

>
>
> *Some Thoughts, Observations and Questions:*
>
> 1. The current AppSensor was designed to play well with ESAPI.  Based on
> the very little I know about ESAPI, I would imagine that the detection-point
> code should continue to depend on ESAPI.  Would the Engine also have to be
> dependent on ESAPI?
>
The intrusion detector bit, yes, should probably stay at least
ESAPI-compliant since we want to "play together well" for sure. However, we
will also likely provide non-esapi hooks for the client in case someone is
anti-esapi for some reason, or just can't doesn't want to bring it in, and
that version should still talk to the engine just fine. The engine component
certainly does not HAVE to use ESAPI at all. We'll make that determination
during the design, and will use it only if it makes sense.

>
> 2. I was going through some of the current AppSensor/ESAPI Java code, and
> also looking at the ESAPI PHP code and noticed that the Java version used a
> ".properties" format for the config, but the PHP ESAPI used an XML config
> file.  Based on this, I will probably use an XML config file for any
> AppSensor-specific configs for the detection-point code.  However, it should
> be trivial to fall back to a ".properties" file format if need be.
>
This is DEFINITELY up in the air for me at the moment. I want to hear what
the ESAPI folks are doing here, and will probably stay with that. I know
we're a different project, but we are going for "drop in" replacement and
changing our config files does not make us drop in. Having said that, I
don't know the status on the PHP side for ESAPI. For now, go w/ XML as you
said and just build some abstraction like we discussed so you can swap in a
properties file reader if necessary

>
> 3. Assuming you all are comfortable with the PHP I submit, and it makes
> sense to release it, I can also update the wiki with example snippets of PHP
> code in the section on detection points.
>
This would be awesome. Ping me the code and I'll give it a quick review for
you. The wiki editing you can do yourself. Michael can set you up if you
don't have write access.

>
>
> Thoughts?
>
> Bob
>
>
> PS: I was not sure if this discussion was appropriate for the mailing list
> or if it was a bit premature for that.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20110927/d9e26177/attachment.html 

From Simon.Bennetts at sage.com  Tue Sep 27 04:48:27 2011
From: Simon.Bennetts at sage.com (Bennetts, Simon)
Date: Tue, 27 Sep 2011 08:48:27 +0000
Subject: [Owasp-appsensor-project] Pseudo-Random Next Gen
	AppSensor	Thoughts
In-Reply-To: <CAM8z=yJ3iW6ZSmWbrw5Vk1in4At8gevCnS1z_y7hHV2kA_yzJQ@mail.gmail.com>
References: <CAEiZe=WUnxfDJB__x4fznYnO7XzOCcxZt+pvFd3xqPBDnmroxQ@mail.gmail.com>
	<CAM8z=yJ3iW6ZSmWbrw5Vk1in4At8gevCnS1z_y7hHV2kA_yzJQ@mail.gmail.com>
Message-ID: <911A2ECD94210D4E984C562BD6652BFB1C4853EF@NA-MAIL-2.gs.adinternal.com>

Hi folks,

Sorry I couldn't make the AppSensor meeting - too many other things going on at AppSecUSA.
Is there a summary of the topics discussed and/or decisions made?
I'm very interested in the "Intrusion Detection Analysis Engine" plans!

Cheers,

Simon
--
"The confidence that people have in security is inversely proportional to how much they know about it."

From: owasp-appsensor-project-bounces at lists.owasp.org [mailto:owasp-appsensor-project-bounces at lists.owasp.org] On Behalf Of John Melton
Sent: 27 September 2011 05:31
To: Robert Chojnacki; owasp-appsensor-project
Subject: Re: [Owasp-appsensor-project] Pseudo-Random Next Gen AppSensor Thoughts

Bob,
I took this on-list as I think it's an important topic. Responses inline.
Thanks,
John
On Sun, Sep 25, 2011 at 2:46 AM, Robert Chojnacki <bob.chojnacki at owasp.org<mailto:bob.chojnacki at owasp.org>> wrote:
Hi All,

It was good to meet all of you at AppSecUSA. I have been looking for ways to contribute to this project and came up with some ideas.  I wanted to run them by you all to see if I am on track with what you guys feel should be the direction of AppSensor.
Great to meet you too - glad you're plugging in - we LOVE the help!


Background:

During the summit it was proposed that the Intrusion Detection Analysis Engine (not sure what it is called) would be separated out as a separate process, but kept in Java.  Then the code that implements the detection points and response actions could be written in Java, .Net, PHP and so on to interface with this engine I imagine via some form of inter-process communication.  I offered to write some initial detection-point PHP code as a test that would allow developers to insert detection points and echo any detections back to the screen (or to a file, or to syslog, since PHP already has syslog integration) as a first pass until John was able to start on the next gen Engine.
Yes, and we're stoked about that.


Some Thoughts, Observations and Questions:

1. The current AppSensor was designed to play well with ESAPI.  Based on the very little I know about ESAPI, I would imagine that the detection-point code should continue to depend on ESAPI.  Would the Engine also have to be dependent on ESAPI?
The intrusion detector bit, yes, should probably stay at least ESAPI-compliant since we want to "play together well" for sure. However, we will also likely provide non-esapi hooks for the client in case someone is anti-esapi for some reason, or just can't doesn't want to bring it in, and that version should still talk to the engine just fine. The engine component certainly does not HAVE to use ESAPI at all. We'll make that determination during the design, and will use it only if it makes sense.

2. I was going through some of the current AppSensor/ESAPI Java code, and also looking at the ESAPI PHP code and noticed that the Java version used a ".properties" format for the config, but the PHP ESAPI used an XML config file.  Based on this, I will probably use an XML config file for any AppSensor-specific configs for the detection-point code.  However, it should be trivial to fall back to a ".properties" file format if need be.
This is DEFINITELY up in the air for me at the moment. I want to hear what the ESAPI folks are doing here, and will probably stay with that. I know we're a different project, but we are going for "drop in" replacement and changing our config files does not make us drop in. Having said that, I don't know the status on the PHP side for ESAPI. For now, go w/ XML as you said and just build some abstraction like we discussed so you can swap in a properties file reader if necessary

3. Assuming you all are comfortable with the PHP I submit, and it makes sense to release it, I can also update the wiki with example snippets of PHP code in the section on detection points.
This would be awesome. Ping me the code and I'll give it a quick review for you. The wiki editing you can do yourself. Michael can set you up if you don't have write access.


Thoughts?

Bob


PS: I was not sure if this discussion was appropriate for the mailing list or if it was a bit premature for that.


If you've received this email by mistake, we're sorry for bothering you. It may contain information that's confidential, so please delete it without sharing it. And if you let us know, we can try to stop it from happening again. Thank you. 

We may monitor any emails sent or received by us, or on our behalf. If we do, this will be in line with relevant law and our own policies.

Sage (UK) Limited. Registered in England at North Park, Newcastle upon Tyne, NE13 9AA. Registered number 1045967.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20110927/40b48f2b/attachment.html 

From colin.watson at owasp.org  Tue Sep 27 05:05:59 2011
From: colin.watson at owasp.org (Colin Watson)
Date: Tue, 27 Sep 2011 10:05:59 +0100
Subject: [Owasp-appsensor-project] Pseudo-Random Next Gen AppSensor
	Thoughts
In-Reply-To: <911A2ECD94210D4E984C562BD6652BFB1C4853EF@NA-MAIL-2.gs.adinternal.com>
References: <CAEiZe=WUnxfDJB__x4fznYnO7XzOCcxZt+pvFd3xqPBDnmroxQ@mail.gmail.com>
	<CAM8z=yJ3iW6ZSmWbrw5Vk1in4At8gevCnS1z_y7hHV2kA_yzJQ@mail.gmail.com>
	<911A2ECD94210D4E984C562BD6652BFB1C4853EF@NA-MAIL-2.gs.adinternal.com>
Message-ID: <CAAxdBBnG=+0k4Dd+jKhi-eguWwbAKZYHwwfVRvve-O9S1Z3pew@mail.gmail.com>

Simon

The meeting notes are here:

   http://etherpad.mozilla.org:9000/AppSensor

To summarise a little, the idea is to separate out the analytical
engine (Java, with possibly .NET and now PHP versions), and provide
some sort of common API to send data, and receive intelligence back,
allowing the applications to do the API calls and related logic
however they want.

Colin

On 27 September 2011 09:48, Bennetts, Simon <Simon.Bennetts at sage.com> wrote:
> Hi folks,
>
>
>
> Sorry I couldn?t make the AppSensor meeting ? too many other things going on
> at AppSecUSA.
>
> Is there a summary of the topics discussed and/or decisions made?
>
> I?m very interested in the ?Intrusion Detection Analysis Engine? plans!
>
>
>
> Cheers,
>
>
>
> Simon
>
> --
>
> "The confidence that people have in security is inversely proportional to
> how much they know about it."
>
>
>
> From: owasp-appsensor-project-bounces at lists.owasp.org
> [mailto:owasp-appsensor-project-bounces at lists.owasp.org] On Behalf Of John
> Melton
> Sent: 27 September 2011 05:31
> To: Robert Chojnacki; owasp-appsensor-project
> Subject: Re: [Owasp-appsensor-project] Pseudo-Random Next Gen AppSensor
> Thoughts
>
>
>
> Bob,
> I took this on-list as I think it's an important topic. Responses inline.
> Thanks,
> John
>
> On Sun, Sep 25, 2011 at 2:46 AM, Robert Chojnacki <bob.chojnacki at owasp.org>
> wrote:
>
> Hi All,
>
> It was good to meet all of you at AppSecUSA. I have been looking for ways to
> contribute to this project and came up with some ideas.? I wanted to run
> them by you all to see if I am on track with what you guys feel should be
> the direction of AppSensor.
>
> Great to meet you too - glad you're plugging in - we LOVE the help!
>
> Background:
>
> During the summit it was proposed that the Intrusion Detection Analysis
> Engine (not sure what it is called) would be separated out as a separate
> process, but kept in Java.? Then the code that implements the detection
> points and response actions could be written in Java, .Net, PHP and so on to
> interface with this engine I imagine via some form of inter-process
> communication.? I offered to write some initial detection-point PHP code as
> a test that would allow developers to insert detection points and echo any
> detections back to the screen (or to a file, or to syslog, since PHP already
> has syslog integration) as a first pass until John was able to start on the
> next gen Engine.
>
> Yes, and we're stoked about that.
>
> Some Thoughts, Observations and Questions:
>
> 1. The current AppSensor was designed to play well with ESAPI.? Based on the
> very little I know about ESAPI, I would imagine that the detection-point
> code should continue to depend on ESAPI.? Would the Engine also have to be
> dependent on ESAPI?
>
> The intrusion detector bit, yes, should probably stay at least
> ESAPI-compliant since we want to "play together well" for sure. However, we
> will also likely provide non-esapi hooks for the client in case someone is
> anti-esapi for some reason, or just can't doesn't want to bring it in, and
> that version should still talk to the engine just fine. The engine component
> certainly does not HAVE to use ESAPI at all. We'll make that determination
> during the design, and will use it only if it makes sense.
>
> 2. I was going through some of the current AppSensor/ESAPI Java code, and
> also looking at the ESAPI PHP code and noticed that the Java version used a
> ".properties" format for the config, but the PHP ESAPI used an XML config
> file.? Based on this, I will probably use an XML config file for any
> AppSensor-specific configs for the detection-point code.? However, it should
> be trivial to fall back to a ".properties" file format if need be.
>
> This is DEFINITELY up in the air for me at the moment. I want to hear what
> the ESAPI folks are doing here, and will probably stay with that. I know
> we're a different project, but we are going for "drop in" replacement and
> changing our config files does not make us drop in. Having said that, I
> don't know the status on the PHP side for ESAPI. For now, go w/ XML as you
> said and just build some abstraction like we discussed so you can swap in a
> properties file reader if necessary
>
> 3. Assuming you all are comfortable with the PHP I submit, and it makes
> sense to release it, I can also update the wiki with example snippets of PHP
> code in the section on detection points.
>
> This would be awesome. Ping me the code and I'll give it a quick review for
> you. The wiki editing you can do yourself. Michael can set you up if you
> don't have write access.
>
> Thoughts?
>
> Bob
>
>
> PS: I was not sure if this discussion was appropriate for the mailing list
> or if it was a bit premature for that.
>
>
>
> If you've received this email by mistake, we're sorry for bothering you. It
> may contain information that's confidential, so please delete it without
> sharing it. And if you let us know, we can try to stop it from happening
> again. Thank you.
>
> We may monitor any emails sent or received by us, or on our behalf. If we
> do, this will be in line with relevant law and our own policies.
>
> Sage (UK) Limited. Registered in England at North Park, Newcastle upon Tyne,
> NE13 9AA. Registered number 1045967.
>
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
>

From Simon.Bennetts at sage.com  Tue Sep 27 06:16:40 2011
From: Simon.Bennetts at sage.com (Bennetts, Simon)
Date: Tue, 27 Sep 2011 10:16:40 +0000
Subject: [Owasp-appsensor-project] Pseudo-Random Next Gen
	AppSensor	Thoughts
In-Reply-To: <CAAxdBBnG=+0k4Dd+jKhi-eguWwbAKZYHwwfVRvve-O9S1Z3pew@mail.gmail.com>
References: <CAEiZe=WUnxfDJB__x4fznYnO7XzOCcxZt+pvFd3xqPBDnmroxQ@mail.gmail.com>
	<CAM8z=yJ3iW6ZSmWbrw5Vk1in4At8gevCnS1z_y7hHV2kA_yzJQ@mail.gmail.com>
	<911A2ECD94210D4E984C562BD6652BFB1C4853EF@NA-MAIL-2.gs.adinternal.com>
	<CAAxdBBnG=+0k4Dd+jKhi-eguWwbAKZYHwwfVRvve-O9S1Z3pew@mail.gmail.com>
Message-ID: <911A2ECD94210D4E984C562BD6652BFB1C4854FE@NA-MAIL-2.gs.adinternal.com>

Thanks Colin.

So could the analytical engine be a stand alone service being used by multiple applications?

Cheers,

Simon
--
"The confidence that people have in security is inversely proportional to how much they know about it."

-----Original Message-----
From: owasp-appsensor-project-bounces at lists.owasp.org [mailto:owasp-appsensor-project-bounces at lists.owasp.org] On Behalf Of Colin Watson
Sent: 27 September 2011 10:06
To: owasp-appsensor-project at lists.owasp.org
Subject: Re: [Owasp-appsensor-project] Pseudo-Random Next Gen AppSensor Thoughts

Simon

The meeting notes are here:

   http://etherpad.mozilla.org:9000/AppSensor

To summarise a little, the idea is to separate out the analytical engine (Java, with possibly .NET and now PHP versions), and provide some sort of common API to send data, and receive intelligence back, allowing the applications to do the API calls and related logic however they want.

Colin

On 27 September 2011 09:48, Bennetts, Simon <Simon.Bennetts at sage.com> wrote:
> Hi folks,
>
>
>
> Sorry I couldn't make the AppSensor meeting - too many other things 
> going on at AppSecUSA.
>
> Is there a summary of the topics discussed and/or decisions made?
>
> I'm very interested in the "Intrusion Detection Analysis Engine" plans!
>
>
>
> Cheers,
>
>
>
> Simon
>
> --
>
> "The confidence that people have in security is inversely proportional 
> to how much they know about it."
>
>
>
> From: owasp-appsensor-project-bounces at lists.owasp.org
> [mailto:owasp-appsensor-project-bounces at lists.owasp.org] On Behalf Of 
> John Melton
> Sent: 27 September 2011 05:31
> To: Robert Chojnacki; owasp-appsensor-project
> Subject: Re: [Owasp-appsensor-project] Pseudo-Random Next Gen 
> AppSensor Thoughts
>
>
>
> Bob,
> I took this on-list as I think it's an important topic. Responses inline.
> Thanks,
> John
>
> On Sun, Sep 25, 2011 at 2:46 AM, Robert Chojnacki 
> <bob.chojnacki at owasp.org>
> wrote:
>
> Hi All,
>
> It was good to meet all of you at AppSecUSA. I have been looking for 
> ways to contribute to this project and came up with some ideas.? I 
> wanted to run them by you all to see if I am on track with what you 
> guys feel should be the direction of AppSensor.
>
> Great to meet you too - glad you're plugging in - we LOVE the help!
>
> Background:
>
> During the summit it was proposed that the Intrusion Detection 
> Analysis Engine (not sure what it is called) would be separated out as 
> a separate process, but kept in Java.? Then the code that implements 
> the detection points and response actions could be written in Java, 
> .Net, PHP and so on to interface with this engine I imagine via some 
> form of inter-process communication.? I offered to write some initial 
> detection-point PHP code as a test that would allow developers to 
> insert detection points and echo any detections back to the screen (or 
> to a file, or to syslog, since PHP already has syslog integration) as 
> a first pass until John was able to start on the next gen Engine.
>
> Yes, and we're stoked about that.
>
> Some Thoughts, Observations and Questions:
>
> 1. The current AppSensor was designed to play well with ESAPI.? Based 
> on the very little I know about ESAPI, I would imagine that the 
> detection-point code should continue to depend on ESAPI.? Would the 
> Engine also have to be dependent on ESAPI?
>
> The intrusion detector bit, yes, should probably stay at least 
> ESAPI-compliant since we want to "play together well" for sure. 
> However, we will also likely provide non-esapi hooks for the client in 
> case someone is anti-esapi for some reason, or just can't doesn't want 
> to bring it in, and that version should still talk to the engine just 
> fine. The engine component certainly does not HAVE to use ESAPI at 
> all. We'll make that determination during the design, and will use it only if it makes sense.
>
> 2. I was going through some of the current AppSensor/ESAPI Java code, 
> and also looking at the ESAPI PHP code and noticed that the Java 
> version used a ".properties" format for the config, but the PHP ESAPI 
> used an XML config file.? Based on this, I will probably use an XML 
> config file for any AppSensor-specific configs for the detection-point 
> code.? However, it should be trivial to fall back to a ".properties" file format if need be.
>
> This is DEFINITELY up in the air for me at the moment. I want to hear 
> what the ESAPI folks are doing here, and will probably stay with that. 
> I know we're a different project, but we are going for "drop in" 
> replacement and changing our config files does not make us drop in. 
> Having said that, I don't know the status on the PHP side for ESAPI. 
> For now, go w/ XML as you said and just build some abstraction like we 
> discussed so you can swap in a properties file reader if necessary
>
> 3. Assuming you all are comfortable with the PHP I submit, and it 
> makes sense to release it, I can also update the wiki with example 
> snippets of PHP code in the section on detection points.
>
> This would be awesome. Ping me the code and I'll give it a quick 
> review for you. The wiki editing you can do yourself. Michael can set 
> you up if you don't have write access.
>
> Thoughts?
>
> Bob
>
>
> PS: I was not sure if this discussion was appropriate for the mailing 
> list or if it was a bit premature for that.
>
>
>
> If you've received this email by mistake, we're sorry for bothering 
> you. It may contain information that's confidential, so please delete 
> it without sharing it. And if you let us know, we can try to stop it 
> from happening again. Thank you.
>
> We may monitor any emails sent or received by us, or on our behalf. If 
> we do, this will be in line with relevant law and our own policies.
>
> Sage (UK) Limited. Registered in England at North Park, Newcastle upon 
> Tyne,
> NE13 9AA. Registered number 1045967.
>
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
>
_______________________________________________
Owasp-appsensor-project mailing list
Owasp-appsensor-project at lists.owasp.org
https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
If you've received this email by mistake, we're sorry for bothering you. It may contain information that's confidential, so please delete it without sharing it. And if you let us know, we can try to stop it from happening again. Thank you. 

We may monitor any emails sent or received by us, or on our behalf. If we do, this will be in line with relevant law and our own policies.

Sage (UK) Limited. Registered in England at North Park, Newcastle upon Tyne, NE13 9AA. Registered number 1045967.

From colin.watson at owasp.org  Tue Sep 27 07:42:57 2011
From: colin.watson at owasp.org (Colin Watson)
Date: Tue, 27 Sep 2011 12:42:57 +0100
Subject: [Owasp-appsensor-project] Pseudo-Random Next Gen AppSensor
	Thoughts
In-Reply-To: <911A2ECD94210D4E984C562BD6652BFB1C4854FE@NA-MAIL-2.gs.adinternal.com>
References: <CAEiZe=WUnxfDJB__x4fznYnO7XzOCcxZt+pvFd3xqPBDnmroxQ@mail.gmail.com>
	<CAM8z=yJ3iW6ZSmWbrw5Vk1in4At8gevCnS1z_y7hHV2kA_yzJQ@mail.gmail.com>
	<911A2ECD94210D4E984C562BD6652BFB1C4853EF@NA-MAIL-2.gs.adinternal.com>
	<CAAxdBBnG=+0k4Dd+jKhi-eguWwbAKZYHwwfVRvve-O9S1Z3pew@mail.gmail.com>
	<911A2ECD94210D4E984C562BD6652BFB1C4854FE@NA-MAIL-2.gs.adinternal.com>
Message-ID: <CAAxdBBmi-5KNVQoZ6TXyb13J6WvrofrFHoJg0GYDRijtdCxXsQ@mail.gmail.com>

Simon

Yes, I believe so.  We haven't discussed the API in much detail, but
including source application and machine designators would be useful.

Colin

On 27 September 2011 11:16, Bennetts, Simon <Simon.Bennetts at sage.com> wrote:
> Thanks Colin.
>
> So could the analytical engine be a stand alone service being used by multiple applications?
>
> Cheers,
>
> Simon
> --
> "The confidence that people have in security is inversely proportional to how much they know about it."
>
> -----Original Message-----
> From: owasp-appsensor-project-bounces at lists.owasp.org [mailto:owasp-appsensor-project-bounces at lists.owasp.org] On Behalf Of Colin Watson
> Sent: 27 September 2011 10:06
> To: owasp-appsensor-project at lists.owasp.org
> Subject: Re: [Owasp-appsensor-project] Pseudo-Random Next Gen AppSensor Thoughts
>
> Simon
>
> The meeting notes are here:
>
> ? http://etherpad.mozilla.org:9000/AppSensor
>
> To summarise a little, the idea is to separate out the analytical engine (Java, with possibly .NET and now PHP versions), and provide some sort of common API to send data, and receive intelligence back, allowing the applications to do the API calls and related logic however they want.
>
> Colin
>
> On 27 September 2011 09:48, Bennetts, Simon <Simon.Bennetts at sage.com> wrote:
>> Hi folks,
>>
>>
>>
>> Sorry I couldn't make the AppSensor meeting - too many other things
>> going on at AppSecUSA.
>>
>> Is there a summary of the topics discussed and/or decisions made?
>>
>> I'm very interested in the "Intrusion Detection Analysis Engine" plans!
>>
>>
>>
>> Cheers,
>>
>>
>>
>> Simon
>>
>> --
>>
>> "The confidence that people have in security is inversely proportional
>> to how much they know about it."
>>
>>
>>
>> From: owasp-appsensor-project-bounces at lists.owasp.org
>> [mailto:owasp-appsensor-project-bounces at lists.owasp.org] On Behalf Of
>> John Melton
>> Sent: 27 September 2011 05:31
>> To: Robert Chojnacki; owasp-appsensor-project
>> Subject: Re: [Owasp-appsensor-project] Pseudo-Random Next Gen
>> AppSensor Thoughts
>>
>>
>>
>> Bob,
>> I took this on-list as I think it's an important topic. Responses inline.
>> Thanks,
>> John
>>
>> On Sun, Sep 25, 2011 at 2:46 AM, Robert Chojnacki
>> <bob.chojnacki at owasp.org>
>> wrote:
>>
>> Hi All,
>>
>> It was good to meet all of you at AppSecUSA. I have been looking for
>> ways to contribute to this project and came up with some ideas.? I
>> wanted to run them by you all to see if I am on track with what you
>> guys feel should be the direction of AppSensor.
>>
>> Great to meet you too - glad you're plugging in - we LOVE the help!
>>
>> Background:
>>
>> During the summit it was proposed that the Intrusion Detection
>> Analysis Engine (not sure what it is called) would be separated out as
>> a separate process, but kept in Java.? Then the code that implements
>> the detection points and response actions could be written in Java,
>> .Net, PHP and so on to interface with this engine I imagine via some
>> form of inter-process communication.? I offered to write some initial
>> detection-point PHP code as a test that would allow developers to
>> insert detection points and echo any detections back to the screen (or
>> to a file, or to syslog, since PHP already has syslog integration) as
>> a first pass until John was able to start on the next gen Engine.
>>
>> Yes, and we're stoked about that.
>>
>> Some Thoughts, Observations and Questions:
>>
>> 1. The current AppSensor was designed to play well with ESAPI.? Based
>> on the very little I know about ESAPI, I would imagine that the
>> detection-point code should continue to depend on ESAPI.? Would the
>> Engine also have to be dependent on ESAPI?
>>
>> The intrusion detector bit, yes, should probably stay at least
>> ESAPI-compliant since we want to "play together well" for sure.
>> However, we will also likely provide non-esapi hooks for the client in
>> case someone is anti-esapi for some reason, or just can't doesn't want
>> to bring it in, and that version should still talk to the engine just
>> fine. The engine component certainly does not HAVE to use ESAPI at
>> all. We'll make that determination during the design, and will use it only if it makes sense.
>>
>> 2. I was going through some of the current AppSensor/ESAPI Java code,
>> and also looking at the ESAPI PHP code and noticed that the Java
>> version used a ".properties" format for the config, but the PHP ESAPI
>> used an XML config file.? Based on this, I will probably use an XML
>> config file for any AppSensor-specific configs for the detection-point
>> code.? However, it should be trivial to fall back to a ".properties" file format if need be.
>>
>> This is DEFINITELY up in the air for me at the moment. I want to hear
>> what the ESAPI folks are doing here, and will probably stay with that.
>> I know we're a different project, but we are going for "drop in"
>> replacement and changing our config files does not make us drop in.
>> Having said that, I don't know the status on the PHP side for ESAPI.
>> For now, go w/ XML as you said and just build some abstraction like we
>> discussed so you can swap in a properties file reader if necessary
>>
>> 3. Assuming you all are comfortable with the PHP I submit, and it
>> makes sense to release it, I can also update the wiki with example
>> snippets of PHP code in the section on detection points.
>>
>> This would be awesome. Ping me the code and I'll give it a quick
>> review for you. The wiki editing you can do yourself. Michael can set
>> you up if you don't have write access.
>>
>> Thoughts?
>>
>> Bob
>>
>>
>> PS: I was not sure if this discussion was appropriate for the mailing
>> list or if it was a bit premature for that.
>>
>>
>>
>> If you've received this email by mistake, we're sorry for bothering
>> you. It may contain information that's confidential, so please delete
>> it without sharing it. And if you let us know, we can try to stop it
>> from happening again. Thank you.
>>
>> We may monitor any emails sent or received by us, or on our behalf. If
>> we do, this will be in line with relevant law and our own policies.
>>
>> Sage (UK) Limited. Registered in England at North Park, Newcastle upon
>> Tyne,
>> NE13 9AA. Registered number 1045967.
>>
>> _______________________________________________
>> Owasp-appsensor-project mailing list
>> Owasp-appsensor-project at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>
>>
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
> If you've received this email by mistake, we're sorry for bothering you. It may contain information that's confidential, so please delete it without sharing it. And if you let us know, we can try to stop it from happening again. Thank you.
>
> We may monitor any emails sent or received by us, or on our behalf. If we do, this will be in line with relevant law and our own policies.
>
> Sage (UK) Limited. Registered in England at North Park, Newcastle upon Tyne, NE13 9AA. Registered number 1045967.
>

From Simon.Bennetts at sage.com  Tue Sep 27 07:45:32 2011
From: Simon.Bennetts at sage.com (Bennetts, Simon)
Date: Tue, 27 Sep 2011 11:45:32 +0000
Subject: [Owasp-appsensor-project] Pseudo-Random Next Gen AppSensor
 Thoughts
In-Reply-To: <CAAxdBBmi-5KNVQoZ6TXyb13J6WvrofrFHoJg0GYDRijtdCxXsQ@mail.gmail.com>
References: <CAEiZe=WUnxfDJB__x4fznYnO7XzOCcxZt+pvFd3xqPBDnmroxQ@mail.gmail.com>
	<CAM8z=yJ3iW6ZSmWbrw5Vk1in4At8gevCnS1z_y7hHV2kA_yzJQ@mail.gmail.com>
	<911A2ECD94210D4E984C562BD6652BFB1C4853EF@NA-MAIL-2.gs.adinternal.com>
	<CAAxdBBnG=+0k4Dd+jKhi-eguWwbAKZYHwwfVRvve-O9S1Z3pew@mail.gmail.com>
	<911A2ECD94210D4E984C562BD6652BFB1C4854FE@NA-MAIL-2.gs.adinternal.com>
	<CAAxdBBmi-5KNVQoZ6TXyb13J6WvrofrFHoJg0GYDRijtdCxXsQ@mail.gmail.com>
Message-ID: <911A2ECD94210D4E984C562BD6652BFB1C48560D@NA-MAIL-2.gs.adinternal.com>

OK, I like this idea a lot :)
I'd really like a centralised 'security monitor' which I think this essentially is (will be;).
I've not got many spare cycles (!) but I'll keep lurking on this list and see if I can help out with it at some point in the future.

Cheers,

Simon
--
"The confidence that people have in security is inversely proportional to how much they know about it."


-----Original Message-----
From: Colin Watson [mailto:colin.watson at owasp.org] 
Sent: 27 September 2011 12:43
To: Bennetts, Simon
Cc: owasp-appsensor-project at lists.owasp.org
Subject: Re: [Owasp-appsensor-project] Pseudo-Random Next Gen AppSensor Thoughts

Simon

Yes, I believe so.  We haven't discussed the API in much detail, but including source application and machine designators would be useful.

Colin

On 27 September 2011 11:16, Bennetts, Simon <Simon.Bennetts at sage.com> wrote:
> Thanks Colin.
>
> So could the analytical engine be a stand alone service being used by multiple applications?
>
> Cheers,
>
> Simon
> --
> "The confidence that people have in security is inversely proportional to how much they know about it."
>
> -----Original Message-----
> From: owasp-appsensor-project-bounces at lists.owasp.org 
> [mailto:owasp-appsensor-project-bounces at lists.owasp.org] On Behalf Of 
> Colin Watson
> Sent: 27 September 2011 10:06
> To: owasp-appsensor-project at lists.owasp.org
> Subject: Re: [Owasp-appsensor-project] Pseudo-Random Next Gen 
> AppSensor Thoughts
>
> Simon
>
> The meeting notes are here:
>
> ? http://etherpad.mozilla.org:9000/AppSensor
>
> To summarise a little, the idea is to separate out the analytical engine (Java, with possibly .NET and now PHP versions), and provide some sort of common API to send data, and receive intelligence back, allowing the applications to do the API calls and related logic however they want.
>
> Colin
>
> On 27 September 2011 09:48, Bennetts, Simon <Simon.Bennetts at sage.com> wrote:
>> Hi folks,
>>
>>
>>
>> Sorry I couldn't make the AppSensor meeting - too many other things 
>> going on at AppSecUSA.
>>
>> Is there a summary of the topics discussed and/or decisions made?
>>
>> I'm very interested in the "Intrusion Detection Analysis Engine" plans!
>>
>>
>>
>> Cheers,
>>
>>
>>
>> Simon
>>
>> --
>>
>> "The confidence that people have in security is inversely 
>> proportional to how much they know about it."
>>
>>
>>
>> From: owasp-appsensor-project-bounces at lists.owasp.org
>> [mailto:owasp-appsensor-project-bounces at lists.owasp.org] On Behalf Of 
>> John Melton
>> Sent: 27 September 2011 05:31
>> To: Robert Chojnacki; owasp-appsensor-project
>> Subject: Re: [Owasp-appsensor-project] Pseudo-Random Next Gen 
>> AppSensor Thoughts
>>
>>
>>
>> Bob,
>> I took this on-list as I think it's an important topic. Responses inline.
>> Thanks,
>> John
>>
>> On Sun, Sep 25, 2011 at 2:46 AM, Robert Chojnacki 
>> <bob.chojnacki at owasp.org>
>> wrote:
>>
>> Hi All,
>>
>> It was good to meet all of you at AppSecUSA. I have been looking for 
>> ways to contribute to this project and came up with some ideas.? I 
>> wanted to run them by you all to see if I am on track with what you 
>> guys feel should be the direction of AppSensor.
>>
>> Great to meet you too - glad you're plugging in - we LOVE the help!
>>
>> Background:
>>
>> During the summit it was proposed that the Intrusion Detection 
>> Analysis Engine (not sure what it is called) would be separated out 
>> as a separate process, but kept in Java.? Then the code that 
>> implements the detection points and response actions could be written 
>> in Java, .Net, PHP and so on to interface with this engine I imagine 
>> via some form of inter-process communication.? I offered to write 
>> some initial detection-point PHP code as a test that would allow 
>> developers to insert detection points and echo any detections back to 
>> the screen (or to a file, or to syslog, since PHP already has syslog 
>> integration) as a first pass until John was able to start on the next gen Engine.
>>
>> Yes, and we're stoked about that.
>>
>> Some Thoughts, Observations and Questions:
>>
>> 1. The current AppSensor was designed to play well with ESAPI.? Based 
>> on the very little I know about ESAPI, I would imagine that the 
>> detection-point code should continue to depend on ESAPI.? Would the 
>> Engine also have to be dependent on ESAPI?
>>
>> The intrusion detector bit, yes, should probably stay at least 
>> ESAPI-compliant since we want to "play together well" for sure.
>> However, we will also likely provide non-esapi hooks for the client 
>> in case someone is anti-esapi for some reason, or just can't doesn't 
>> want to bring it in, and that version should still talk to the engine 
>> just fine. The engine component certainly does not HAVE to use ESAPI 
>> at all. We'll make that determination during the design, and will use it only if it makes sense.
>>
>> 2. I was going through some of the current AppSensor/ESAPI Java code, 
>> and also looking at the ESAPI PHP code and noticed that the Java 
>> version used a ".properties" format for the config, but the PHP ESAPI 
>> used an XML config file.? Based on this, I will probably use an XML 
>> config file for any AppSensor-specific configs for the 
>> detection-point code.? However, it should be trivial to fall back to a ".properties" file format if need be.
>>
>> This is DEFINITELY up in the air for me at the moment. I want to hear 
>> what the ESAPI folks are doing here, and will probably stay with that.
>> I know we're a different project, but we are going for "drop in"
>> replacement and changing our config files does not make us drop in.
>> Having said that, I don't know the status on the PHP side for ESAPI.
>> For now, go w/ XML as you said and just build some abstraction like 
>> we discussed so you can swap in a properties file reader if necessary
>>
>> 3. Assuming you all are comfortable with the PHP I submit, and it 
>> makes sense to release it, I can also update the wiki with example 
>> snippets of PHP code in the section on detection points.
>>
>> This would be awesome. Ping me the code and I'll give it a quick 
>> review for you. The wiki editing you can do yourself. Michael can set 
>> you up if you don't have write access.
>>
>> Thoughts?
>>
>> Bob
>>
>>
>> PS: I was not sure if this discussion was appropriate for the mailing 
>> list or if it was a bit premature for that.
>>
>>
>>
>> If you've received this email by mistake, we're sorry for bothering 
>> you. It may contain information that's confidential, so please delete 
>> it without sharing it. And if you let us know, we can try to stop it 
>> from happening again. Thank you.
>>
>> We may monitor any emails sent or received by us, or on our behalf. 
>> If we do, this will be in line with relevant law and our own policies.
>>
>> Sage (UK) Limited. Registered in England at North Park, Newcastle 
>> upon Tyne,
>> NE13 9AA. Registered number 1045967.
>>
>> _______________________________________________
>> Owasp-appsensor-project mailing list
>> Owasp-appsensor-project at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>
>>
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
> If you've received this email by mistake, we're sorry for bothering you. It may contain information that's confidential, so please delete it without sharing it. And if you let us know, we can try to stop it from happening again. Thank you.
>
> We may monitor any emails sent or received by us, or on our behalf. If we do, this will be in line with relevant law and our own policies.
>
> Sage (UK) Limited. Registered in England at North Park, Newcastle upon Tyne, NE13 9AA. Registered number 1045967.
>
If you've received this email by mistake, we're sorry for bothering you. It may contain information that's confidential, so please delete it without sharing it. And if you let us know, we can try to stop it from happening again. Thank you. 

We may monitor any emails sent or received by us, or on our behalf. If we do, this will be in line with relevant law and our own policies.

Sage (UK) Limited. Registered in England at North Park, Newcastle upon Tyne, NE13 9AA. Registered number 1045967.

From dennis.groves at gmail.com  Tue Sep 27 09:03:34 2011
From: dennis.groves at gmail.com (Dennis Groves)
Date: Tue, 27 Sep 2011 14:03:34 +0100
Subject: [Owasp-appsensor-project] Pseudo-Random Next Gen AppSensor
	Thoughts
In-Reply-To: <911A2ECD94210D4E984C562BD6652BFB1C48560D@NA-MAIL-2.gs.adinternal.com>
References: <CAEiZe=WUnxfDJB__x4fznYnO7XzOCcxZt+pvFd3xqPBDnmroxQ@mail.gmail.com>
	<CAM8z=yJ3iW6ZSmWbrw5Vk1in4At8gevCnS1z_y7hHV2kA_yzJQ@mail.gmail.com>
	<911A2ECD94210D4E984C562BD6652BFB1C4853EF@NA-MAIL-2.gs.adinternal.com>
	<CAAxdBBnG=+0k4Dd+jKhi-eguWwbAKZYHwwfVRvve-O9S1Z3pew@mail.gmail.com>
	<911A2ECD94210D4E984C562BD6652BFB1C4854FE@NA-MAIL-2.gs.adinternal.com>
	<CAAxdBBmi-5KNVQoZ6TXyb13J6WvrofrFHoJg0GYDRijtdCxXsQ@mail.gmail.com>
	<911A2ECD94210D4E984C562BD6652BFB1C48560D@NA-MAIL-2.gs.adinternal.com>
Message-ID: <CAJL+Z04+=wCCPhpx2PXCuUGzyDWmB6MAw51015gx+3wJbteEDQ@mail.gmail.com>

I would love to volunteer to be part of this book...


--
Dennis Groves <http://about.me/dennis.groves>, MSc
dennis.groves at gmail.com

*"What is the use of living, if it be not to strive for noble causes and
make this muddled world a better place for those who will live in it after
we have gone."*

*-- Winston Churchill, October 10th, 1908*



On Tue, Sep 27, 2011 at 12:45 PM, Bennetts, Simon
<Simon.Bennetts at sage.com>wrote:

> OK, I like this idea a lot :)
> I'd really like a centralised 'security monitor' which I think this
> essentially is (will be;).
> I've not got many spare cycles (!) but I'll keep lurking on this list and
> see if I can help out with it at some point in the future.
>
> Cheers,
>
> Simon
> --
> "The confidence that people have in security is inversely proportional to
> how much they know about it."
>
>
> -----Original Message-----
> From: Colin Watson [mailto:colin.watson at owasp.org]
> Sent: 27 September 2011 12:43
> To: Bennetts, Simon
> Cc: owasp-appsensor-project at lists.owasp.org
> Subject: Re: [Owasp-appsensor-project] Pseudo-Random Next Gen AppSensor
> Thoughts
>
> Simon
>
> Yes, I believe so.  We haven't discussed the API in much detail, but
> including source application and machine designators would be useful.
>
> Colin
>
> On 27 September 2011 11:16, Bennetts, Simon <Simon.Bennetts at sage.com>
> wrote:
> > Thanks Colin.
> >
> > So could the analytical engine be a stand alone service being used by
> multiple applications?
> >
> > Cheers,
> >
> > Simon
> > --
> > "The confidence that people have in security is inversely proportional to
> how much they know about it."
> >
> > -----Original Message-----
> > From: owasp-appsensor-project-bounces at lists.owasp.org
> > [mailto:owasp-appsensor-project-bounces at lists.owasp.org] On Behalf Of
> > Colin Watson
> > Sent: 27 September 2011 10:06
> > To: owasp-appsensor-project at lists.owasp.org
> > Subject: Re: [Owasp-appsensor-project] Pseudo-Random Next Gen
> > AppSensor Thoughts
> >
> > Simon
> >
> > The meeting notes are here:
> >
> >   http://etherpad.mozilla.org:9000/AppSensor
> >
> > To summarise a little, the idea is to separate out the analytical engine
> (Java, with possibly .NET and now PHP versions), and provide some sort of
> common API to send data, and receive intelligence back, allowing the
> applications to do the API calls and related logic however they want.
> >
> > Colin
> >
> > On 27 September 2011 09:48, Bennetts, Simon <Simon.Bennetts at sage.com>
> wrote:
> >> Hi folks,
> >>
> >>
> >>
> >> Sorry I couldn't make the AppSensor meeting - too many other things
> >> going on at AppSecUSA.
> >>
> >> Is there a summary of the topics discussed and/or decisions made?
> >>
> >> I'm very interested in the "Intrusion Detection Analysis Engine" plans!
> >>
> >>
> >>
> >> Cheers,
> >>
> >>
> >>
> >> Simon
> >>
> >> --
> >>
> >> "The confidence that people have in security is inversely
> >> proportional to how much they know about it."
> >>
> >>
> >>
> >> From: owasp-appsensor-project-bounces at lists.owasp.org
> >> [mailto:owasp-appsensor-project-bounces at lists.owasp.org] On Behalf Of
> >> John Melton
> >> Sent: 27 September 2011 05:31
> >> To: Robert Chojnacki; owasp-appsensor-project
> >> Subject: Re: [Owasp-appsensor-project] Pseudo-Random Next Gen
> >> AppSensor Thoughts
> >>
> >>
> >>
> >> Bob,
> >> I took this on-list as I think it's an important topic. Responses
> inline.
> >> Thanks,
> >> John
> >>
> >> On Sun, Sep 25, 2011 at 2:46 AM, Robert Chojnacki
> >> <bob.chojnacki at owasp.org>
> >> wrote:
> >>
> >> Hi All,
> >>
> >> It was good to meet all of you at AppSecUSA. I have been looking for
> >> ways to contribute to this project and came up with some ideas.  I
> >> wanted to run them by you all to see if I am on track with what you
> >> guys feel should be the direction of AppSensor.
> >>
> >> Great to meet you too - glad you're plugging in - we LOVE the help!
> >>
> >> Background:
> >>
> >> During the summit it was proposed that the Intrusion Detection
> >> Analysis Engine (not sure what it is called) would be separated out
> >> as a separate process, but kept in Java.  Then the code that
> >> implements the detection points and response actions could be written
> >> in Java, .Net, PHP and so on to interface with this engine I imagine
> >> via some form of inter-process communication.  I offered to write
> >> some initial detection-point PHP code as a test that would allow
> >> developers to insert detection points and echo any detections back to
> >> the screen (or to a file, or to syslog, since PHP already has syslog
> >> integration) as a first pass until John was able to start on the next
> gen Engine.
> >>
> >> Yes, and we're stoked about that.
> >>
> >> Some Thoughts, Observations and Questions:
> >>
> >> 1. The current AppSensor was designed to play well with ESAPI.  Based
> >> on the very little I know about ESAPI, I would imagine that the
> >> detection-point code should continue to depend on ESAPI.  Would the
> >> Engine also have to be dependent on ESAPI?
> >>
> >> The intrusion detector bit, yes, should probably stay at least
> >> ESAPI-compliant since we want to "play together well" for sure.
> >> However, we will also likely provide non-esapi hooks for the client
> >> in case someone is anti-esapi for some reason, or just can't doesn't
> >> want to bring it in, and that version should still talk to the engine
> >> just fine. The engine component certainly does not HAVE to use ESAPI
> >> at all. We'll make that determination during the design, and will use it
> only if it makes sense.
> >>
> >> 2. I was going through some of the current AppSensor/ESAPI Java code,
> >> and also looking at the ESAPI PHP code and noticed that the Java
> >> version used a ".properties" format for the config, but the PHP ESAPI
> >> used an XML config file.  Based on this, I will probably use an XML
> >> config file for any AppSensor-specific configs for the
> >> detection-point code.  However, it should be trivial to fall back to a
> ".properties" file format if need be.
> >>
> >> This is DEFINITELY up in the air for me at the moment. I want to hear
> >> what the ESAPI folks are doing here, and will probably stay with that.
> >> I know we're a different project, but we are going for "drop in"
> >> replacement and changing our config files does not make us drop in.
> >> Having said that, I don't know the status on the PHP side for ESAPI.
> >> For now, go w/ XML as you said and just build some abstraction like
> >> we discussed so you can swap in a properties file reader if necessary
> >>
> >> 3. Assuming you all are comfortable with the PHP I submit, and it
> >> makes sense to release it, I can also update the wiki with example
> >> snippets of PHP code in the section on detection points.
> >>
> >> This would be awesome. Ping me the code and I'll give it a quick
> >> review for you. The wiki editing you can do yourself. Michael can set
> >> you up if you don't have write access.
> >>
> >> Thoughts?
> >>
> >> Bob
> >>
> >>
> >> PS: I was not sure if this discussion was appropriate for the mailing
> >> list or if it was a bit premature for that.
> >>
> >>
> >>
> >> If you've received this email by mistake, we're sorry for bothering
> >> you. It may contain information that's confidential, so please delete
> >> it without sharing it. And if you let us know, we can try to stop it
> >> from happening again. Thank you.
> >>
> >> We may monitor any emails sent or received by us, or on our behalf.
> >> If we do, this will be in line with relevant law and our own policies.
> >>
> >> Sage (UK) Limited. Registered in England at North Park, Newcastle
> >> upon Tyne,
> >> NE13 9AA. Registered number 1045967.
> >>
> >> _______________________________________________
> >> Owasp-appsensor-project mailing list
> >> Owasp-appsensor-project at lists.owasp.org
> >> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
> >>
> >>
> > _______________________________________________
> > Owasp-appsensor-project mailing list
> > Owasp-appsensor-project at lists.owasp.org
> > https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
> > If you've received this email by mistake, we're sorry for bothering you.
> It may contain information that's confidential, so please delete it without
> sharing it. And if you let us know, we can try to stop it from happening
> again. Thank you.
> >
> > We may monitor any emails sent or received by us, or on our behalf. If we
> do, this will be in line with relevant law and our own policies.
> >
> > Sage (UK) Limited. Registered in England at North Park, Newcastle upon
> Tyne, NE13 9AA. Registered number 1045967.
> >
> If you've received this email by mistake, we're sorry for bothering you. It
> may contain information that's confidential, so please delete it without
> sharing it. And if you let us know, we can try to stop it from happening
> again. Thank you.
>
> We may monitor any emails sent or received by us, or on our behalf. If we
> do, this will be in line with relevant law and our own policies.
>
> Sage (UK) Limited. Registered in England at North Park, Newcastle upon
> Tyne, NE13 9AA. Registered number 1045967.
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20110927/345e1e8d/attachment-0001.html 

From jtmelton at gmail.com  Tue Sep 27 09:30:17 2011
From: jtmelton at gmail.com (John Melton)
Date: Tue, 27 Sep 2011 09:30:17 -0400
Subject: [Owasp-appsensor-project] Pseudo-Random Next Gen AppSensor
	Thoughts
In-Reply-To: <911A2ECD94210D4E984C562BD6652BFB1C48560D@NA-MAIL-2.gs.adinternal.com>
References: <CAEiZe=WUnxfDJB__x4fznYnO7XzOCcxZt+pvFd3xqPBDnmroxQ@mail.gmail.com>
	<CAM8z=yJ3iW6ZSmWbrw5Vk1in4At8gevCnS1z_y7hHV2kA_yzJQ@mail.gmail.com>
	<911A2ECD94210D4E984C562BD6652BFB1C4853EF@NA-MAIL-2.gs.adinternal.com>
	<CAAxdBBnG=+0k4Dd+jKhi-eguWwbAKZYHwwfVRvve-O9S1Z3pew@mail.gmail.com>
	<911A2ECD94210D4E984C562BD6652BFB1C4854FE@NA-MAIL-2.gs.adinternal.com>
	<CAAxdBBmi-5KNVQoZ6TXyb13J6WvrofrFHoJg0GYDRijtdCxXsQ@mail.gmail.com>
	<911A2ECD94210D4E984C562BD6652BFB1C48560D@NA-MAIL-2.gs.adinternal.com>
Message-ID: <CAM8z=yL7N-r8NRu0RPaYzBbs0FKcS_r=e2L7=GyihZvwEaZwoQ@mail.gmail.com>

Simon,
Just wanted to jump in quickly. I've got a couple things going on in the
next couple weeks, but will soon send out a simple arch diagram we made at
the summit that should give everyone on list a simple picture of what we
discussed and the major architectural components in the new design. There
are still a few points that are "fuzzy". That would be a great area to help
out if interested. We do currently have a deployable product (existing
release), but the next major version will rework the architecture and aims
to make the system more usable for more types of deployments, such as
typical enterprise scenarios. As for your question about a single deployment
functioning as the server to multiple sensor nodes, yes, that's in the plan
currently.

Just for the benefit of everyone on list, I plan to build out the next
version like a normal SDLC project. There will be a requirements phase (see
Colin's etherpad note below), then I'll send out the arch diagram, do a
little more detailed design and then start actually implementing it. Please
chime in now and give us ideas for what we missed by discussing the plans
that are listed in etherpad and/or when I send out the basic arch diagram.
We want to cover (or at least understand) the requirements everyone has as
much as possible. As a final note, this is a volunteer project, so all help
is eagerly enjoyed - thanks in advance.

p.s.
Simon - enjoyed your quote in your signature line - spot on.

Thanks,
John

On Tue, Sep 27, 2011 at 7:45 AM, Bennetts, Simon <Simon.Bennetts at sage.com>wrote:

> OK, I like this idea a lot :)
> I'd really like a centralised 'security monitor' which I think this
> essentially is (will be;).
> I've not got many spare cycles (!) but I'll keep lurking on this list and
> see if I can help out with it at some point in the future.
>
> Cheers,
>
> Simon
> --
> "The confidence that people have in security is inversely proportional to
> how much they know about it."
>
>
> -----Original Message-----
> From: Colin Watson [mailto:colin.watson at owasp.org]
> Sent: 27 September 2011 12:43
> To: Bennetts, Simon
> Cc: owasp-appsensor-project at lists.owasp.org
> Subject: Re: [Owasp-appsensor-project] Pseudo-Random Next Gen AppSensor
> Thoughts
>
> Simon
>
> Yes, I believe so.  We haven't discussed the API in much detail, but
> including source application and machine designators would be useful.
>
> Colin
>
> On 27 September 2011 11:16, Bennetts, Simon <Simon.Bennetts at sage.com>
> wrote:
> > Thanks Colin.
> >
> > So could the analytical engine be a stand alone service being used by
> multiple applications?
> >
> > Cheers,
> >
> > Simon
> > --
> > "The confidence that people have in security is inversely proportional to
> how much they know about it."
> >
> > -----Original Message-----
> > From: owasp-appsensor-project-bounces at lists.owasp.org
> > [mailto:owasp-appsensor-project-bounces at lists.owasp.org] On Behalf Of
> > Colin Watson
> > Sent: 27 September 2011 10:06
> > To: owasp-appsensor-project at lists.owasp.org
> > Subject: Re: [Owasp-appsensor-project] Pseudo-Random Next Gen
> > AppSensor Thoughts
> >
> > Simon
> >
> > The meeting notes are here:
> >
> >   http://etherpad.mozilla.org:9000/AppSensor
> >
> > To summarise a little, the idea is to separate out the analytical engine
> (Java, with possibly .NET and now PHP versions), and provide some sort of
> common API to send data, and receive intelligence back, allowing the
> applications to do the API calls and related logic however they want.
> >
> > Colin
> >
> > On 27 September 2011 09:48, Bennetts, Simon <Simon.Bennetts at sage.com>
> wrote:
> >> Hi folks,
> >>
> >>
> >>
> >> Sorry I couldn't make the AppSensor meeting - too many other things
> >> going on at AppSecUSA.
> >>
> >> Is there a summary of the topics discussed and/or decisions made?
> >>
> >> I'm very interested in the "Intrusion Detection Analysis Engine" plans!
> >>
> >>
> >>
> >> Cheers,
> >>
> >>
> >>
> >> Simon
> >>
> >> --
> >>
> >> "The confidence that people have in security is inversely
> >> proportional to how much they know about it."
> >>
> >>
> >>
> >> From: owasp-appsensor-project-bounces at lists.owasp.org
> >> [mailto:owasp-appsensor-project-bounces at lists.owasp.org] On Behalf Of
> >> John Melton
> >> Sent: 27 September 2011 05:31
> >> To: Robert Chojnacki; owasp-appsensor-project
> >> Subject: Re: [Owasp-appsensor-project] Pseudo-Random Next Gen
> >> AppSensor Thoughts
> >>
> >>
> >>
> >> Bob,
> >> I took this on-list as I think it's an important topic. Responses
> inline.
> >> Thanks,
> >> John
> >>
> >> On Sun, Sep 25, 2011 at 2:46 AM, Robert Chojnacki
> >> <bob.chojnacki at owasp.org>
> >> wrote:
> >>
> >> Hi All,
> >>
> >> It was good to meet all of you at AppSecUSA. I have been looking for
> >> ways to contribute to this project and came up with some ideas.  I
> >> wanted to run them by you all to see if I am on track with what you
> >> guys feel should be the direction of AppSensor.
> >>
> >> Great to meet you too - glad you're plugging in - we LOVE the help!
> >>
> >> Background:
> >>
> >> During the summit it was proposed that the Intrusion Detection
> >> Analysis Engine (not sure what it is called) would be separated out
> >> as a separate process, but kept in Java.  Then the code that
> >> implements the detection points and response actions could be written
> >> in Java, .Net, PHP and so on to interface with this engine I imagine
> >> via some form of inter-process communication.  I offered to write
> >> some initial detection-point PHP code as a test that would allow
> >> developers to insert detection points and echo any detections back to
> >> the screen (or to a file, or to syslog, since PHP already has syslog
> >> integration) as a first pass until John was able to start on the next
> gen Engine.
> >>
> >> Yes, and we're stoked about that.
> >>
> >> Some Thoughts, Observations and Questions:
> >>
> >> 1. The current AppSensor was designed to play well with ESAPI.  Based
> >> on the very little I know about ESAPI, I would imagine that the
> >> detection-point code should continue to depend on ESAPI.  Would the
> >> Engine also have to be dependent on ESAPI?
> >>
> >> The intrusion detector bit, yes, should probably stay at least
> >> ESAPI-compliant since we want to "play together well" for sure.
> >> However, we will also likely provide non-esapi hooks for the client
> >> in case someone is anti-esapi for some reason, or just can't doesn't
> >> want to bring it in, and that version should still talk to the engine
> >> just fine. The engine component certainly does not HAVE to use ESAPI
> >> at all. We'll make that determination during the design, and will use it
> only if it makes sense.
> >>
> >> 2. I was going through some of the current AppSensor/ESAPI Java code,
> >> and also looking at the ESAPI PHP code and noticed that the Java
> >> version used a ".properties" format for the config, but the PHP ESAPI
> >> used an XML config file.  Based on this, I will probably use an XML
> >> config file for any AppSensor-specific configs for the
> >> detection-point code.  However, it should be trivial to fall back to a
> ".properties" file format if need be.
> >>
> >> This is DEFINITELY up in the air for me at the moment. I want to hear
> >> what the ESAPI folks are doing here, and will probably stay with that.
> >> I know we're a different project, but we are going for "drop in"
> >> replacement and changing our config files does not make us drop in.
> >> Having said that, I don't know the status on the PHP side for ESAPI.
> >> For now, go w/ XML as you said and just build some abstraction like
> >> we discussed so you can swap in a properties file reader if necessary
> >>
> >> 3. Assuming you all are comfortable with the PHP I submit, and it
> >> makes sense to release it, I can also update the wiki with example
> >> snippets of PHP code in the section on detection points.
> >>
> >> This would be awesome. Ping me the code and I'll give it a quick
> >> review for you. The wiki editing you can do yourself. Michael can set
> >> you up if you don't have write access.
> >>
> >> Thoughts?
> >>
> >> Bob
> >>
> >>
> >> PS: I was not sure if this discussion was appropriate for the mailing
> >> list or if it was a bit premature for that.
> >>
> >>
> >>
> >> If you've received this email by mistake, we're sorry for bothering
> >> you. It may contain information that's confidential, so please delete
> >> it without sharing it. And if you let us know, we can try to stop it
> >> from happening again. Thank you.
> >>
> >> We may monitor any emails sent or received by us, or on our behalf.
> >> If we do, this will be in line with relevant law and our own policies.
> >>
> >> Sage (UK) Limited. Registered in England at North Park, Newcastle
> >> upon Tyne,
> >> NE13 9AA. Registered number 1045967.
> >>
> >> _______________________________________________
> >> Owasp-appsensor-project mailing list
> >> Owasp-appsensor-project at lists.owasp.org
> >> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
> >>
> >>
> > _______________________________________________
> > Owasp-appsensor-project mailing list
> > Owasp-appsensor-project at lists.owasp.org
> > https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
> > If you've received this email by mistake, we're sorry for bothering you.
> It may contain information that's confidential, so please delete it without
> sharing it. And if you let us know, we can try to stop it from happening
> again. Thank you.
> >
> > We may monitor any emails sent or received by us, or on our behalf. If we
> do, this will be in line with relevant law and our own policies.
> >
> > Sage (UK) Limited. Registered in England at North Park, Newcastle upon
> Tyne, NE13 9AA. Registered number 1045967.
> >
> If you've received this email by mistake, we're sorry for bothering you. It
> may contain information that's confidential, so please delete it without
> sharing it. And if you let us know, we can try to stop it from happening
> again. Thank you.
>
> We may monitor any emails sent or received by us, or on our behalf. If we
> do, this will be in line with relevant law and our own policies.
>
> Sage (UK) Limited. Registered in England at North Park, Newcastle upon
> Tyne, NE13 9AA. Registered number 1045967.
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20110927/912959c4/attachment.html 

From colin.watson at owasp.org  Tue Sep 27 09:52:17 2011
From: colin.watson at owasp.org (Colin Watson)
Date: Tue, 27 Sep 2011 14:52:17 +0100
Subject: [Owasp-appsensor-project] AppSensor Book v2
Message-ID: <CAAxdBBn9Lo6JPdtRnZRT_ch9GPOXkiroF=URLyDdSo1Tv9e+tw@mail.gmail.com>

Dennis

I hope it's okay, but I have put this 'book' discussion into a new
thread.  I am sure it will have enough messages to stand alone.

It would be great to have help with the book.  We have a lot of
content already, and need to pull it together.  But there are also
some new sections selling the idea and describing how to go about it -
the AppSensor Lifecycle.  So lots to do.

Colin


---------- Forwarded message ----------
From: Dennis Groves <dennis.groves at gmail.com>
Date: 27 September 2011 14:03
Subject: Re: [Owasp-appsensor-project] Pseudo-Random Next Gen AppSensor Thoughts
To: "owasp-appsensor-project at lists.owasp.org"
<owasp-appsensor-project at lists.owasp.org>
Cc: Colin Watson <colin.watson at owasp.org>


I would love to volunteer to be part of this book...

--
Dennis Groves, MSc
dennis.groves at gmail.com

"What is the use of living, if it be not to strive for noble causes
and make this muddled world a better place for those who will live in
it after we have gone."

-- Winston Churchill, October 10th, 1908

From ryan.barnett at owasp.org  Fri Sep 30 11:25:21 2011
From: ryan.barnett at owasp.org (Ryan Barnett)
Date: Fri, 30 Sep 2011 11:25:21 -0400
Subject: [Owasp-appsensor-project] New Detection Point Candidate: IE7:
 Detect Abnormal Content Output Structure
Message-ID: <CAAB57A1.3675D%ryan.barnett@owasp.org>

Since we didn't have time to discuss new Detection Points at the AppSensor
Summit, I wanted to send out emails for each one so we can discuss them.
Here is the first one.

As discussed in a previous email thread, this is a recap -

Consider the following two CommandInjectionException detection points -

* 2.7.1 CIE1: Blacklist Inspection for Common SQL Injection Values
* 2.7.2 CIE2: Detect Abnormal Quantity of Returned Records

There is an obvious correlation between these two as oftentimes SQL
Injection attacks result in bulk extraction of DB data within the returned
html page.

If we take this same concept and apply it to XSS, we should have a similar
detection point for -

 * 2.5.1 IE1: Cross Site Scripting Attempt

The new detection point will check for an abnormal # of scripts (and
iframes) returned in the html page as this can help to flag successful XSS
injections.  I suggest the following be added to the InputException
category -

IE7: Detect Abnormal Content Output Structure

--
Ryan Barnett



-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20110930/bf29c2ed/attachment.html 

From jtmelton at gmail.com  Fri Sep 30 11:28:48 2011
From: jtmelton at gmail.com (John Melton)
Date: Fri, 30 Sep 2011 11:28:48 -0400
Subject: [Owasp-appsensor-project] New Detection Point Candidate: IE7:
 Detect Abnormal Content Output Structure
In-Reply-To: <CAAB57A1.3675D%ryan.barnett@owasp.org>
References: <CAAB57A1.3675D%ryan.barnett@owasp.org>
Message-ID: <CAM8z=yLqjnwJWA0u4v=rtVdofSzZ5Gfso3AuXPcKeRE6uq8Wzw@mail.gmail.com>

+1 for this one for me.

On Fri, Sep 30, 2011 at 11:25 AM, Ryan Barnett <ryan.barnett at owasp.org>wrote:

> Since we didn't have time to discuss new Detection Points at the AppSensor
> Summit, I wanted to send out emails for each one so we can discuss them.
>  Here is the first one.
>
> As discussed in a previous email thread, this is a recap -
>
> Consider the following two CommandInjectionException detection points -
>
> * 2.7.1 CIE1: Blacklist Inspection for Common SQL Injection Values
> * 2.7.2 CIE2: Detect Abnormal Quantity of Returned Records
>
> There is an obvious correlation between these two as oftentimes SQL
> Injection attacks result in bulk extraction of DB data within the returned
> html page.
>
> If we take this same concept and apply it to XSS, we should have a similar
> detection point for -
>
>  * 2.5.1 IE1: Cross Site Scripting Attempt
>
> The new detection point will check for an abnormal # of scripts (and
> iframes) returned in the html page as this can help to flag successful XSS
> injections.  I suggest the following be added to the InputException
> category -
>
> IE7: Detect Abnormal Content Output Structure
>
> --
> Ryan Barnett
>
>
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20110930/a9f35ac2/attachment.html 

From ryan.barnett at owasp.org  Fri Sep 30 11:30:59 2011
From: ryan.barnett at owasp.org (Ryan Barnett)
Date: Fri, 30 Sep 2011 11:30:59 -0400
Subject: [Owasp-appsensor-project] New Detection Point Candidate: AE13:
 Deviation from normal GEO location during login
Message-ID: <CAAB58F3.3676A%ryan.barnett@owasp.org>

Most users normally log into an application from 1 or a few Geographic
locations.  If the application learns these GeoIP locations, it can then
detect when a user is logging into the application from a different
location.  This would help to identify possible account hijacking attacks
(from phishing, banking trojans).

--
Ryan Barnett


-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20110930/d2b5a0c8/attachment.html 

From ryan.barnett at owasp.org  Fri Sep 30 11:39:55 2011
From: ryan.barnett at owasp.org (Ryan Barnett)
Date: Fri, 30 Sep 2011 11:39:55 -0400
Subject: [Owasp-appsensor-project] New Detection Point Candidate: UT5:
 Inter-Request Latency Threshold Violation
Message-ID: <CAAB5B0B.3677D%ryan.barnett@owasp.org>

This detection point may be related to UT2 however it isn't specifically
covered:
https://www.owasp.org/index.php/AppSensor_DetectionPoints#UT2:_Speed_of_Appl
ication_Use

The concept is that normal/real users have an amount of delay between
requesting dynamic resources as they need time to read the pages and fill in
FORM elements, etc? So this detection point would be measuring the time
interval between the application sending back a web page with form elements
and when the application then receives a follow-up request with parameters.

I have conducted some minimal testing with this concept and ModSecurity and
have found that it also catches many CSRF attacks as it forces the user's
browser to send an immediate request back to the server once the html page
loads and the user's browser is tricked into executing the CSRF code.  See
the last section here -
http://blog.spiderlabs.com/2011/01/detecting-malice-with-modsecurity-csrf-at
tacks.html

Thoughts?  Should this be a stand-alone detection point or perhaps listed as
a subsection of UT2?

--
Ryan Barnett


-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20110930/7169e7ca/attachment.html 

From colin.watson at owasp.org  Fri Sep 30 11:42:01 2011
From: colin.watson at owasp.org (Colin Watson)
Date: Fri, 30 Sep 2011 16:42:01 +0100
Subject: [Owasp-appsensor-project] New Detection Point Candidate: IE7:
 Detect Abnormal Content Output Structure
In-Reply-To: <CAM8z=yLqjnwJWA0u4v=rtVdofSzZ5Gfso3AuXPcKeRE6uq8Wzw@mail.gmail.com>
References: <CAAB57A1.3675D%ryan.barnett@owasp.org>
	<CAM8z=yLqjnwJWA0u4v=rtVdofSzZ5Gfso3AuXPcKeRE6uq8Wzw@mail.gmail.com>
Message-ID: <CAAxdBB=41Ze4GjCKk-T0C4tWUXB9NK4vCR48UsuZj7basMa5Aw@mail.gmail.com>

Yes, I think the new name sums it up well.

Colin

On 30 September 2011 16:28, John Melton <jtmelton at gmail.com> wrote:
> +1 for this one for me.
>
> On Fri, Sep 30, 2011 at 11:25 AM, Ryan Barnett <ryan.barnett at owasp.org>
> wrote:
>>
>> Since we didn't have time to discuss new Detection Points at the AppSensor
>> Summit, I wanted to send out emails for each one so we can discuss them.
>> ?Here is the first one.
>> As discussed in a previous email thread, this is a recap -
>> Consider the following two CommandInjectionException detection points -
>>
>> * 2.7.1 CIE1: Blacklist Inspection for Common SQL Injection Values
>> * 2.7.2 CIE2: Detect Abnormal Quantity of Returned Records
>>
>> There is an obvious correlation between these two as oftentimes SQL
>> Injection attacks result in bulk extraction of DB data within the returned
>> html page.
>>
>> If we take this same concept and apply it to XSS, we should have a similar
>> detection point for -
>>
>> ?* 2.5.1 IE1: Cross Site Scripting Attempt
>>
>> The new detection point will check for an abnormal # of scripts (and
>> iframes) returned in the html page as this can help to flag successful XSS
>> injections. ?I suggest the following be added to the InputException
>> category -
>>
>> IE7:?Detect Abnormal Content Output Structure
>> --
>> Ryan Barnett
>>
>>
>> _______________________________________________
>> Owasp-appsensor-project mailing list
>> Owasp-appsensor-project at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>
>
>
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
>

From colin.watson at owasp.org  Fri Sep 30 11:47:44 2011
From: colin.watson at owasp.org (Colin Watson)
Date: Fri, 30 Sep 2011 16:47:44 +0100
Subject: [Owasp-appsensor-project] New Detection Point Candidate: AE13:
 Deviation from normal GEO location during login
In-Reply-To: <CAAB58F3.3676A%ryan.barnett@owasp.org>
References: <CAAB58F3.3676A%ryan.barnett@owasp.org>
Message-ID: <CAAxdBB=G4OrknbvA2_HkfrO1kVt0yR39buYZAMUE9LPXMAmEFQ@mail.gmail.com>

Ryan

Good idea.

The related "SE5 Source Location Changes During Session" is just
session specific, but this new new idea is concerns information about
a user learnt (or set) over time.  So I was thinking it perhaps ought
to be a User Trend (UT) code?  But since it specifically mentions
login, it could be an Authentication Exception (AE) instead?

Does it need to be just login?  Maybe if it were more generic, it
might also be used post authentication on say a banking payment
transfer function i.e. we don't care where they log in from, but if
the amount is more than $5,000 we will take more notice of their
location.

So perhaps "UT4 Deviation from normal Geo Location"?

Colin

On 30 September 2011 16:30, Ryan Barnett <ryan.barnett at owasp.org> wrote:
> Most users normally log into an application from 1 or a few Geographic
> locations. ?If the application learns these GeoIP locations, it can then
> detect when a user is logging into the application from a different
> location. ?This would help to identify possible account hijacking attacks
> (from phishing, banking trojans).
> --
> Ryan Barnett
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
>

From dennis.groves at gmail.com  Fri Sep 30 11:49:06 2011
From: dennis.groves at gmail.com (Dennis Groves)
Date: Fri, 30 Sep 2011 16:49:06 +0100
Subject: [Owasp-appsensor-project] New Detection Point Candidate: IE7:
 Detect Abnormal Content Output Structure
In-Reply-To: <CAAB57A1.3675D%ryan.barnett@owasp.org>
References: <CAAB57A1.3675D%ryan.barnett@owasp.org>
Message-ID: <CAJL+Z06CF3kOqDOnqeH7_C6y02LkVDepA5hjY2NP=eCvOCnvXw@mail.gmail.com>

This is quite interesting, since I do believe that growing the capabilities
and adding detection points is a good thing. :-)

What concerns me is that since we have a stochastic anomaly detection model
we can adapt the behaviour of the application based on algedonic responses,
those algedonic responses are the result of a threshold of pain inside the
stochastic anomoly system from input from the detection points.

This is important, because if we go around and start naming detection points
after exploits; people forget that it is the stochastic anomaly system that
is providing the protection - especially if you haven't got your heard
around the idea yet. And this will lead to people building all kinds of
attack signatures based on exploits, and we have just become another
web-application-firewall-signature based device.

Where as I think the real ideal goal would be for every application to
actually send every single input validation violation to the stochastic
anomaly detection engine. Thus I think we should use the terminology
necessary to communicate - but we need to be very, very careful. I would not
even want to try and name every kind of throw that results from an input
validation violation.

In my mind - we throw all exceptions, the stochastic anomaly detection
catches and a decision is made by the rules engine and the application
adapts accordingly.


Your thought please...


--
Dennis Groves <http://about.me/dennis.groves>, MSc
dennis.groves at gmail.com

*"What is the use of living, if it be not to strive for noble causes and
make this muddled world a better place for those who will live in it after
we have gone."*

*-- Winston Churchill, October 10th, 1908*



On Fri, Sep 30, 2011 at 4:25 PM, Ryan Barnett <ryan.barnett at owasp.org>wrote:

> Since we didn't have time to discuss new Detection Points at the AppSensor
> Summit, I wanted to send out emails for each one so we can discuss them.
>  Here is the first one.
>
> As discussed in a previous email thread, this is a recap -
>
> Consider the following two CommandInjectionException detection points -
>
> * 2.7.1 CIE1: Blacklist Inspection for Common SQL Injection Values
> * 2.7.2 CIE2: Detect Abnormal Quantity of Returned Records
>
> There is an obvious correlation between these two as oftentimes SQL
> Injection attacks result in bulk extraction of DB data within the returned
> html page.
>
> If we take this same concept and apply it to XSS, we should have a similar
> detection point for -
>
>  * 2.5.1 IE1: Cross Site Scripting Attempt
>
> The new detection point will check for an abnormal # of scripts (and
> iframes) returned in the html page as this can help to flag successful XSS
> injections.  I suggest the following be added to the InputException
> category -
>
> IE7: Detect Abnormal Content Output Structure
>
> --
> Ryan Barnett
>
>
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20110930/93398bf1/attachment.html 

From colin.watson at owasp.org  Fri Sep 30 11:52:43 2011
From: colin.watson at owasp.org (Colin Watson)
Date: Fri, 30 Sep 2011 16:52:43 +0100
Subject: [Owasp-appsensor-project] New Detection Point Candidate: UT5:
 Inter-Request Latency Threshold Violation
In-Reply-To: <CAAB5B0B.3677D%ryan.barnett@owasp.org>
References: <CAAB5B0B.3677D%ryan.barnett@owasp.org>
Message-ID: <CAAxdBBkka7VYdY=eFEkPE=PngB5N8_UF7nWE52qsW7qB7JwBjA@mail.gmail.com>

Ryan

Sorry I hadn't read this before I suggested the previous suggestion to be UT5!

I sort of feel this is just a great example of UT2, and could be
"example 5" there.  What does everyone else think?

Colin

On 30 September 2011 16:39, Ryan Barnett <ryan.barnett at owasp.org> wrote:
> This detection point may be related to UT2 however it isn't specifically
> covered:
> https://www.owasp.org/index.php/AppSensor_DetectionPoints#UT2:_Speed_of_Application_Use
> The concept is that normal/real users have an amount of delay between
> requesting dynamic resources as they need time to read the pages and fill in
> FORM elements, etc? So this detection point would be measuring the time
> interval between the application sending back a web page with form elements
> and when the application then receives a follow-up request with parameters.
> I have conducted some minimal testing with this concept and ModSecurity and
> have found that it also catches many CSRF attacks as it forces the user's
> browser to send an immediate?request back to the server once the html page
> loads and the user's browser is tricked into executing the CSRF code. ?See
> the last section here
> -?http://blog.spiderlabs.com/2011/01/detecting-malice-with-modsecurity-csrf-attacks.html
> Thoughts? ?Should this be a stand-alone detection point or perhaps listed as
> a subsection of UT2?
> --
> Ryan Barnett
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
>

From jtmelton at gmail.com  Fri Sep 30 11:52:21 2011
From: jtmelton at gmail.com (John Melton)
Date: Fri, 30 Sep 2011 11:52:21 -0400
Subject: [Owasp-appsensor-project] New Detection Point Candidate: AE13:
 Deviation from normal GEO location during login
In-Reply-To: <CAAB58F3.3676A%ryan.barnett@owasp.org>
References: <CAAB58F3.3676A%ryan.barnett@owasp.org>
Message-ID: <CAM8z=yJZ_0fR4OAVtYHcsAqQ4G7-aSKAj3Kv=_NU0339h04XWg@mail.gmail.com>

This is a good idea - for some reason thought it was already there - +1

On Fri, Sep 30, 2011 at 11:30 AM, Ryan Barnett <ryan.barnett at owasp.org>wrote:

> Most users normally log into an application from 1 or a few Geographic
> locations.  If the application learns these GeoIP locations, it can then
> detect when a user is logging into the application from a different
> location.  This would help to identify possible account hijacking attacks
> (from phishing, banking trojans).
>
> --
> Ryan Barnett
>
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20110930/602f347d/attachment.html 

From ryan.barnett at owasp.org  Fri Sep 30 11:52:38 2011
From: ryan.barnett at owasp.org (Ryan Barnett)
Date: Fri, 30 Sep 2011 11:52:38 -0400
Subject: [Owasp-appsensor-project] New Detection Point Candidate: New Parent
 Category - OutputException (OE)
Message-ID: <CAAB5E06.36799%ryan.barnett@owasp.org>

We currently have InputException (IE) and this would be its counterpart and
would include all issues related to inspecting the HTTP response.

There are a number of current detection points that could move here -
* IE7: Detect Abnormal Content Output Structure ? could actually move here
to 
* CIE2: Detect Abnormal Quantity of Returned Records
There is also a new Detection Point for this category that I recommend -

- Deviation from normal response time interval ? which could detect if an
application is under a resource DoS attack.

So the new category could be this -

OutputException (OE)
* OE1: Detect Abnormal Content Output Structure
* OE2: Detect Abnormal Quantity of Returned Records
* OE3: Deviation from normal response time interval

Thoughts?

--
Ryan Barnett


-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20110930/6df9bb2f/attachment.html 

From dennis.groves at gmail.com  Fri Sep 30 11:53:15 2011
From: dennis.groves at gmail.com (Dennis Groves)
Date: Fri, 30 Sep 2011 16:53:15 +0100
Subject: [Owasp-appsensor-project] New Detection Point Candidate: AE13:
 Deviation from normal GEO location during login
In-Reply-To: <CAAxdBB=G4OrknbvA2_HkfrO1kVt0yR39buYZAMUE9LPXMAmEFQ@mail.gmail.com>
References: <CAAB58F3.3676A%ryan.barnett@owasp.org>
	<CAAxdBB=G4OrknbvA2_HkfrO1kVt0yR39buYZAMUE9LPXMAmEFQ@mail.gmail.com>
Message-ID: <CAJL+Z05W-nOj7JGXvpy6tE1H1M+JnSJwy0en4sDmj+9xX2t1VQ@mail.gmail.com>

the problem with this is that more and more people are going mobile thanks
to iPhones and Droids. And their IP's are guaranteed to change during a
session as they swap cell towers.


--
Dennis Groves <http://about.me/dennis.groves>, MSc
dennis.groves at gmail.com

*"What is the use of living, if it be not to strive for noble causes and
make this muddled world a better place for those who will live in it after
we have gone."*

*-- Winston Churchill, October 10th, 1908*



On Fri, Sep 30, 2011 at 4:47 PM, Colin Watson <colin.watson at owasp.org>wrote:

> Ryan
>
> Good idea.
>
> The related "SE5 Source Location Changes During Session" is just
> session specific, but this new new idea is concerns information about
> a user learnt (or set) over time.  So I was thinking it perhaps ought
> to be a User Trend (UT) code?  But since it specifically mentions
> login, it could be an Authentication Exception (AE) instead?
>
> Does it need to be just login?  Maybe if it were more generic, it
> might also be used post authentication on say a banking payment
> transfer function i.e. we don't care where they log in from, but if
> the amount is more than $5,000 we will take more notice of their
> location.
>
> So perhaps "UT4 Deviation from normal Geo Location"?
>
> Colin
>
> On 30 September 2011 16:30, Ryan Barnett <ryan.barnett at owasp.org> wrote:
> > Most users normally log into an application from 1 or a few Geographic
> > locations.  If the application learns these GeoIP locations, it can then
> > detect when a user is logging into the application from a different
> > location.  This would help to identify possible account hijacking attacks
> > (from phishing, banking trojans).
> > --
> > Ryan Barnett
> > _______________________________________________
> > Owasp-appsensor-project mailing list
> > Owasp-appsensor-project at lists.owasp.org
> > https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
> >
> >
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20110930/935591af/attachment-0001.html 

From jtmelton at gmail.com  Fri Sep 30 11:58:14 2011
From: jtmelton at gmail.com (John Melton)
Date: Fri, 30 Sep 2011 11:58:14 -0400
Subject: [Owasp-appsensor-project] New Detection Point Candidate: UT5:
 Inter-Request Latency Threshold Violation
In-Reply-To: <CAAB5B0B.3677D%ryan.barnett@owasp.org>
References: <CAAB5B0B.3677D%ryan.barnett@owasp.org>
Message-ID: <CAM8z=y+nd687mf8k+r5zY57_V43PO+nA+ZPZ2TojVO2niLE_GQ@mail.gmail.com>

my vote is for a subsection - I do think it is important to call it out
however, b/c both are related to speed of use of the app but are going to
manifest themselves in different places in the detection point placement.

On Fri, Sep 30, 2011 at 11:39 AM, Ryan Barnett <ryan.barnett at owasp.org>wrote:

> This detection point may be related to UT2 however it isn't specifically
> covered:
>
> https://www.owasp.org/index.php/AppSensor_DetectionPoints#UT2:_Speed_of_Application_Use
>
> The concept is that normal/real users have an amount of delay between
> requesting dynamic resources as they need time to read the pages and fill in
> FORM elements, etc? So this detection point would be measuring the time
> interval between the application sending back a web page with form elements
> and when the application then receives a follow-up request with parameters.
>
> I have conducted some minimal testing with this concept and ModSecurity and
> have found that it also catches many CSRF attacks as it forces the user's
> browser to send an immediate request back to the server once the html page
> loads and the user's browser is tricked into executing the CSRF code.  See
> the last section here -
> http://blog.spiderlabs.com/2011/01/detecting-malice-with-modsecurity-csrf-attacks.html
>
> Thoughts?  Should this be a stand-alone detection point or perhaps listed
> as a subsection of UT2?
>
> --
> Ryan Barnett
>
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20110930/6b707833/attachment.html 

From colin.watson at owasp.org  Fri Sep 30 11:58:55 2011
From: colin.watson at owasp.org (Colin Watson)
Date: Fri, 30 Sep 2011 16:58:55 +0100
Subject: [Owasp-appsensor-project] Detection Point list
Message-ID: <CAAxdBBmKPCzxnAKCnwXifCOqaiDfvgoX6ofr2RBJdCMK393LyA@mail.gmail.com>

During the summit I asked if we should store the detection point IDs,
titles, considerations and examples, in a more structured manner than
the wiki.  That would also help us when we need to add detection
points, like the new examples just coming in from Ryan.

Yesterday I began laying out an XML file which could be used for this.
 XML allows us to specify relationships (e.g. is a child of, is more
specific than, is like) and also include the mappings in my charts (to
WASC, to the OWASP Top 10, to CAPEC, to ModSecurity rules, etc).  We
could then use XSLT to convert that into the wiki page, or into other
structures and layouts as needed.

Hopefully I'll post a draft version next week.

Colin

From mehmety at gmail.com  Fri Sep 30 12:03:10 2011
From: mehmety at gmail.com (M Yilmaz)
Date: Fri, 30 Sep 2011 12:03:10 -0400
Subject: [Owasp-appsensor-project] New Detection Point Candidate: AE13:
 Deviation from normal GEO location during login
In-Reply-To: <CAJL+Z05W-nOj7JGXvpy6tE1H1M+JnSJwy0en4sDmj+9xX2t1VQ@mail.gmail.com>
References: <CAAB58F3.3676A%ryan.barnett@owasp.org>
	<CAAxdBB=G4OrknbvA2_HkfrO1kVt0yR39buYZAMUE9LPXMAmEFQ@mail.gmail.com>
	<CAJL+Z05W-nOj7JGXvpy6tE1H1M+JnSJwy0en4sDmj+9xX2t1VQ@mail.gmail.com>
Message-ID: <CAJs4TMkNQX4-1zCCSm0J65qfeNGYrfkypP=qq7o1JnwO0Ptg6g@mail.gmail.com>

But they are less likely to be logged in from multiple IPs under such a
circumstance. I like the principle of escalation here.

On Fri, Sep 30, 2011 at 11:53 AM, Dennis Groves <dennis.groves at gmail.com>wrote:

> the problem with this is that more and more people are going mobile thanks
> to iPhones and Droids. And their IP's are guaranteed to change during a
> session as they swap cell towers.
>
>
> --
> Dennis Groves <http://about.me/dennis.groves>, MSc
> dennis.groves at gmail.com
>
> *"What is the use of living, if it be not to strive for noble causes and
> make this muddled world a better place for those who will live in it after
> we have gone."*
>
> *-- Winston Churchill, October 10th, 1908*
>
>
>
> On Fri, Sep 30, 2011 at 4:47 PM, Colin Watson <colin.watson at owasp.org>wrote:
>
>> Ryan
>>
>> Good idea.
>>
>> The related "SE5 Source Location Changes During Session" is just
>> session specific, but this new new idea is concerns information about
>> a user learnt (or set) over time.  So I was thinking it perhaps ought
>> to be a User Trend (UT) code?  But since it specifically mentions
>> login, it could be an Authentication Exception (AE) instead?
>>
>> Does it need to be just login?  Maybe if it were more generic, it
>> might also be used post authentication on say a banking payment
>> transfer function i.e. we don't care where they log in from, but if
>> the amount is more than $5,000 we will take more notice of their
>> location.
>>
>> So perhaps "UT4 Deviation from normal Geo Location"?
>>
>> Colin
>>
>> On 30 September 2011 16:30, Ryan Barnett <ryan.barnett at owasp.org> wrote:
>> > Most users normally log into an application from 1 or a few Geographic
>> > locations.  If the application learns these GeoIP locations, it can then
>> > detect when a user is logging into the application from a different
>> > location.  This would help to identify possible account hijacking
>> attacks
>> > (from phishing, banking trojans).
>> > --
>> > Ryan Barnett
>> > _______________________________________________
>> > Owasp-appsensor-project mailing list
>> > Owasp-appsensor-project at lists.owasp.org
>> > https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>> >
>> >
>> _______________________________________________
>> Owasp-appsensor-project mailing list
>> Owasp-appsensor-project at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>
>
>
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
>


-- 
Mehmet Yilmaz
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20110930/8d5843df/attachment.html 

From mehmety at gmail.com  Fri Sep 30 12:03:59 2011
From: mehmety at gmail.com (M Yilmaz)
Date: Fri, 30 Sep 2011 12:03:59 -0400
Subject: [Owasp-appsensor-project] New Detection Point Candidate: AE13:
 Deviation from normal GEO location during login
In-Reply-To: <CAJs4TMkNQX4-1zCCSm0J65qfeNGYrfkypP=qq7o1JnwO0Ptg6g@mail.gmail.com>
References: <CAAB58F3.3676A%ryan.barnett@owasp.org>
	<CAAxdBB=G4OrknbvA2_HkfrO1kVt0yR39buYZAMUE9LPXMAmEFQ@mail.gmail.com>
	<CAJL+Z05W-nOj7JGXvpy6tE1H1M+JnSJwy0en4sDmj+9xX2t1VQ@mail.gmail.com>
	<CAJs4TMkNQX4-1zCCSm0J65qfeNGYrfkypP=qq7o1JnwO0Ptg6g@mail.gmail.com>
Message-ID: <CAJs4TMnSjEpRuk-LJLFu9Fk6QMwqUdiyV7F2jJ7EOfoeJQ6tCw@mail.gmail.com>

sorry, key word missing
multiple IPs simultaneously*

On Fri, Sep 30, 2011 at 12:03 PM, M Yilmaz <mehmety at gmail.com> wrote:

> But they are less likely to be logged in from multiple IPs under such a
> circumstance. I like the principle of escalation here.
>
>
> On Fri, Sep 30, 2011 at 11:53 AM, Dennis Groves <dennis.groves at gmail.com>wrote:
>
>> the problem with this is that more and more people are going mobile thanks
>> to iPhones and Droids. And their IP's are guaranteed to change during a
>> session as they swap cell towers.
>>
>>
>> --
>> Dennis Groves <http://about.me/dennis.groves>, MSc
>> dennis.groves at gmail.com
>>
>> *"What is the use of living, if it be not to strive for noble causes and
>> make this muddled world a better place for those who will live in it after
>> we have gone."*
>>
>> *-- Winston Churchill, October 10th, 1908*
>>
>>
>>
>> On Fri, Sep 30, 2011 at 4:47 PM, Colin Watson <colin.watson at owasp.org>wrote:
>>
>>> Ryan
>>>
>>> Good idea.
>>>
>>> The related "SE5 Source Location Changes During Session" is just
>>> session specific, but this new new idea is concerns information about
>>> a user learnt (or set) over time.  So I was thinking it perhaps ought
>>> to be a User Trend (UT) code?  But since it specifically mentions
>>> login, it could be an Authentication Exception (AE) instead?
>>>
>>> Does it need to be just login?  Maybe if it were more generic, it
>>> might also be used post authentication on say a banking payment
>>> transfer function i.e. we don't care where they log in from, but if
>>> the amount is more than $5,000 we will take more notice of their
>>> location.
>>>
>>> So perhaps "UT4 Deviation from normal Geo Location"?
>>>
>>> Colin
>>>
>>> On 30 September 2011 16:30, Ryan Barnett <ryan.barnett at owasp.org> wrote:
>>> > Most users normally log into an application from 1 or a few Geographic
>>> > locations.  If the application learns these GeoIP locations, it can
>>> then
>>> > detect when a user is logging into the application from a different
>>> > location.  This would help to identify possible account hijacking
>>> attacks
>>> > (from phishing, banking trojans).
>>> > --
>>> > Ryan Barnett
>>> > _______________________________________________
>>> > Owasp-appsensor-project mailing list
>>> > Owasp-appsensor-project at lists.owasp.org
>>> > https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>> >
>>> >
>>> _______________________________________________
>>> Owasp-appsensor-project mailing list
>>> Owasp-appsensor-project at lists.owasp.org
>>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>>
>>
>>
>> _______________________________________________
>> Owasp-appsensor-project mailing list
>> Owasp-appsensor-project at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>
>>
>
>
> --
> Mehmet Yilmaz
>
>


-- 
Mehmet Yilmaz
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20110930/0e568de5/attachment.html 

From jtmelton at gmail.com  Fri Sep 30 12:05:32 2011
From: jtmelton at gmail.com (John Melton)
Date: Fri, 30 Sep 2011 12:05:32 -0400
Subject: [Owasp-appsensor-project] New Detection Point Candidate: AE13:
 Deviation from normal GEO location during login
In-Reply-To: <CAJL+Z05W-nOj7JGXvpy6tE1H1M+JnSJwy0en4sDmj+9xX2t1VQ@mail.gmail.com>
References: <CAAB58F3.3676A%ryan.barnett@owasp.org>
	<CAAxdBB=G4OrknbvA2_HkfrO1kVt0yR39buYZAMUE9LPXMAmEFQ@mail.gmail.com>
	<CAJL+Z05W-nOj7JGXvpy6tE1H1M+JnSJwy0en4sDmj+9xX2t1VQ@mail.gmail.com>
Message-ID: <CAM8z=yJWeCZnWLa26ATiYwFi3AvFG=rxP_dJNLYfsBY1c+_HyQ@mail.gmail.com>

Dennis,
This is a great point, but having done the geo-location stuff before, I'll
say you must build in a reasonable buffer. Most of the products can only at
*best* (if you believe their marketing hype :>) get to city level
resolution, so what you usually see is some distance correlation occurring
where you compare the new IP and if < say 50 miles, we can think it might be
the same person. There's also an issue here with timing - a person may
logically fly around the world, still using your app, and the geo changes
significantly. Depending on your risk model to your app, obviously that may
not work. However, geo can sometimes be helpful as an obvious attack. If
someone is using your app in New York, then 30 minutes later in London, then
it's probably a safe bet that's a different person and you've got an issue.
I definitely think this can help show "obvious" malicious behavior at times
and have seen it personally work.

Thanks,
John

On Fri, Sep 30, 2011 at 11:53 AM, Dennis Groves <dennis.groves at gmail.com>wrote:

> the problem with this is that more and more people are going mobile thanks
> to iPhones and Droids. And their IP's are guaranteed to change during a
> session as they swap cell towers.
>
>
> --
> Dennis Groves <http://about.me/dennis.groves>, MSc
> dennis.groves at gmail.com
>
> *"What is the use of living, if it be not to strive for noble causes and
> make this muddled world a better place for those who will live in it after
> we have gone."*
>
> *-- Winston Churchill, October 10th, 1908*
>
>
>
> On Fri, Sep 30, 2011 at 4:47 PM, Colin Watson <colin.watson at owasp.org>wrote:
>
>> Ryan
>>
>> Good idea.
>>
>> The related "SE5 Source Location Changes During Session" is just
>> session specific, but this new new idea is concerns information about
>> a user learnt (or set) over time.  So I was thinking it perhaps ought
>> to be a User Trend (UT) code?  But since it specifically mentions
>> login, it could be an Authentication Exception (AE) instead?
>>
>> Does it need to be just login?  Maybe if it were more generic, it
>> might also be used post authentication on say a banking payment
>> transfer function i.e. we don't care where they log in from, but if
>> the amount is more than $5,000 we will take more notice of their
>> location.
>>
>> So perhaps "UT4 Deviation from normal Geo Location"?
>>
>> Colin
>>
>> On 30 September 2011 16:30, Ryan Barnett <ryan.barnett at owasp.org> wrote:
>> > Most users normally log into an application from 1 or a few Geographic
>> > locations.  If the application learns these GeoIP locations, it can then
>> > detect when a user is logging into the application from a different
>> > location.  This would help to identify possible account hijacking
>> attacks
>> > (from phishing, banking trojans).
>> > --
>> > Ryan Barnett
>> > _______________________________________________
>> > Owasp-appsensor-project mailing list
>> > Owasp-appsensor-project at lists.owasp.org
>> > https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>> >
>> >
>> _______________________________________________
>> Owasp-appsensor-project mailing list
>> Owasp-appsensor-project at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>
>
>
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20110930/461c4ca6/attachment-0001.html 

From dennis.groves at gmail.com  Fri Sep 30 12:06:24 2011
From: dennis.groves at gmail.com (Dennis Groves)
Date: Fri, 30 Sep 2011 17:06:24 +0100
Subject: [Owasp-appsensor-project] New Detection Point Candidate: AE13:
 Deviation from normal GEO location during login
In-Reply-To: <CAJs4TMkNQX4-1zCCSm0J65qfeNGYrfkypP=qq7o1JnwO0Ptg6g@mail.gmail.com>
References: <CAAB58F3.3676A%ryan.barnett@owasp.org>
	<CAAxdBB=G4OrknbvA2_HkfrO1kVt0yR39buYZAMUE9LPXMAmEFQ@mail.gmail.com>
	<CAJL+Z05W-nOj7JGXvpy6tE1H1M+JnSJwy0en4sDmj+9xX2t1VQ@mail.gmail.com>
	<CAJs4TMkNQX4-1zCCSm0J65qfeNGYrfkypP=qq7o1JnwO0Ptg6g@mail.gmail.com>
Message-ID: <CAJL+Z047vb0bUOWeqVKS8No+3DtKtR9qPfPLd9F-eBfYP3ZPqA@mail.gmail.com>

I think this is again part of the reason for using the stochastic anomaly
detection over a rules based engine alone. The client actually has the risk
appetite and they need to decide for themselves what is the right about
of specificity and sensitivity for their risk appetite.  We can not decide
that an event is really normal nor attack for any given situation especially
when dealing in the hypothetical.


--
Dennis Groves <http://about.me/dennis.groves>, MSc
dennis.groves at gmail.com

*"What is the use of living, if it be not to strive for noble causes and
make this muddled world a better place for those who will live in it after
we have gone."*

*-- Winston Churchill, October 10th, 1908*



On Fri, Sep 30, 2011 at 5:03 PM, M Yilmaz <mehmety at gmail.com> wrote:

> But they are less likely to be logged in from multiple IPs under such a
> circumstance. I like the principle of escalation here.
>
>
> On Fri, Sep 30, 2011 at 11:53 AM, Dennis Groves <dennis.groves at gmail.com>wrote:
>
>> the problem with this is that more and more people are going mobile thanks
>> to iPhones and Droids. And their IP's are guaranteed to change during a
>> session as they swap cell towers.
>>
>>
>> --
>> Dennis Groves <http://about.me/dennis.groves>, MSc
>> dennis.groves at gmail.com
>>
>> *"What is the use of living, if it be not to strive for noble causes and
>> make this muddled world a better place for those who will live in it after
>> we have gone."*
>>
>> *-- Winston Churchill, October 10th, 1908*
>>
>>
>>
>> On Fri, Sep 30, 2011 at 4:47 PM, Colin Watson <colin.watson at owasp.org>wrote:
>>
>>> Ryan
>>>
>>> Good idea.
>>>
>>> The related "SE5 Source Location Changes During Session" is just
>>> session specific, but this new new idea is concerns information about
>>> a user learnt (or set) over time.  So I was thinking it perhaps ought
>>> to be a User Trend (UT) code?  But since it specifically mentions
>>> login, it could be an Authentication Exception (AE) instead?
>>>
>>> Does it need to be just login?  Maybe if it were more generic, it
>>> might also be used post authentication on say a banking payment
>>> transfer function i.e. we don't care where they log in from, but if
>>> the amount is more than $5,000 we will take more notice of their
>>> location.
>>>
>>> So perhaps "UT4 Deviation from normal Geo Location"?
>>>
>>> Colin
>>>
>>> On 30 September 2011 16:30, Ryan Barnett <ryan.barnett at owasp.org> wrote:
>>> > Most users normally log into an application from 1 or a few Geographic
>>> > locations.  If the application learns these GeoIP locations, it can
>>> then
>>> > detect when a user is logging into the application from a different
>>> > location.  This would help to identify possible account hijacking
>>> attacks
>>> > (from phishing, banking trojans).
>>> > --
>>> > Ryan Barnett
>>> > _______________________________________________
>>> > Owasp-appsensor-project mailing list
>>> > Owasp-appsensor-project at lists.owasp.org
>>> > https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>> >
>>> >
>>> _______________________________________________
>>> Owasp-appsensor-project mailing list
>>> Owasp-appsensor-project at lists.owasp.org
>>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>>
>>
>>
>> _______________________________________________
>> Owasp-appsensor-project mailing list
>> Owasp-appsensor-project at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>
>>
>
>
> --
> Mehmet Yilmaz
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20110930/f5158369/attachment.html 

From colin.watson at owasp.org  Fri Sep 30 12:14:05 2011
From: colin.watson at owasp.org (Colin Watson)
Date: Fri, 30 Sep 2011 17:14:05 +0100
Subject: [Owasp-appsensor-project] New Detection Point Candidate: AE13:
 Deviation from normal GEO location during login
In-Reply-To: <CAJL+Z047vb0bUOWeqVKS8No+3DtKtR9qPfPLd9F-eBfYP3ZPqA@mail.gmail.com>
References: <CAAB58F3.3676A%ryan.barnett@owasp.org>
	<CAAxdBB=G4OrknbvA2_HkfrO1kVt0yR39buYZAMUE9LPXMAmEFQ@mail.gmail.com>
	<CAJL+Z05W-nOj7JGXvpy6tE1H1M+JnSJwy0en4sDmj+9xX2t1VQ@mail.gmail.com>
	<CAJs4TMkNQX4-1zCCSm0J65qfeNGYrfkypP=qq7o1JnwO0Ptg6g@mail.gmail.com>
	<CAJL+Z047vb0bUOWeqVKS8No+3DtKtR9qPfPLd9F-eBfYP3ZPqA@mail.gmail.com>
Message-ID: <CAAxdBB=xWWhcuGbYM9i+4ze5v4p=_PMba5oY19qiYSM3vwSVbw@mail.gmail.com>

Good discussion.  DPs are just there as inspiration to
designers/implementers - we don't know the context.  The devil is in
the detail, and I don't see any harm in mentioning this type of idea,
but then add a summary of this discussion into the 'considerations'
and 'examples' sections.

I have a feeling there might be a chapter in the new book about
stochastic anomaly detection....

Colin

On 30 September 2011 17:06, Dennis Groves <dennis.groves at gmail.com> wrote:
> I think this is again part of the reason for using the stochastic anomaly
> detection over a rules based engine alone. The client actually has the risk
> appetite and they need to decide for themselves what is the right about
> of?specificity and sensitivity for their risk appetite. ?We can not decide
> that an event is really normal nor attack for any given situation especially
> when dealing in the hypothetical.
>
> --
> Dennis Groves, MSc
> dennis.groves at gmail.com
>
> "What is the use of living, if it be not to strive for noble causes and make
> this muddled world a better place for those who will live in it after we
> have gone."
>
> -- Winston Churchill, October 10th, 1908
>
>
> On Fri, Sep 30, 2011 at 5:03 PM, M Yilmaz <mehmety at gmail.com> wrote:
>>
>> But they are less likely to be logged in from multiple IPs under such a
>> circumstance. I like the principle of escalation here.
>>
>> On Fri, Sep 30, 2011 at 11:53 AM, Dennis Groves <dennis.groves at gmail.com>
>> wrote:
>>>
>>> the problem with this is that more and more people are going mobile
>>> thanks to iPhones and Droids. And their IP's are guaranteed to change during
>>> a session as they swap cell towers.
>>>
>>> --
>>> Dennis Groves, MSc
>>> dennis.groves at gmail.com
>>>
>>> "What is the use of living, if it be not to strive for noble causes and
>>> make this muddled world a better place for those who will live in it after
>>> we have gone."
>>>
>>> -- Winston Churchill, October 10th, 1908
>>>
>>>
>>> On Fri, Sep 30, 2011 at 4:47 PM, Colin Watson <colin.watson at owasp.org>
>>> wrote:
>>>>
>>>> Ryan
>>>>
>>>> Good idea.
>>>>
>>>> The related "SE5 Source Location Changes During Session" is just
>>>> session specific, but this new new idea is concerns information about
>>>> a user learnt (or set) over time. ?So I was thinking it perhaps ought
>>>> to be a User Trend (UT) code? ?But since it specifically mentions
>>>> login, it could be an Authentication Exception (AE) instead?
>>>>
>>>> Does it need to be just login? ?Maybe if it were more generic, it
>>>> might also be used post authentication on say a banking payment
>>>> transfer function i.e. we don't care where they log in from, but if
>>>> the amount is more than $5,000 we will take more notice of their
>>>> location.
>>>>
>>>> So perhaps "UT4 Deviation from normal Geo Location"?
>>>>
>>>> Colin
>>>>
>>>> On 30 September 2011 16:30, Ryan Barnett <ryan.barnett at owasp.org> wrote:
>>>> > Most users normally log into an application from 1 or a few Geographic
>>>> > locations. ?If the application learns these GeoIP locations, it can
>>>> > then
>>>> > detect when a user is logging into the application from a different
>>>> > location. ?This would help to identify possible account hijacking
>>>> > attacks
>>>> > (from phishing, banking trojans).
>>>> > --
>>>> > Ryan Barnett
>>>> > _______________________________________________
>>>> > Owasp-appsensor-project mailing list
>>>> > Owasp-appsensor-project at lists.owasp.org
>>>> > https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>>> >
>>>> >
>>>> _______________________________________________
>>>> Owasp-appsensor-project mailing list
>>>> Owasp-appsensor-project at lists.owasp.org
>>>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>>
>>>
>>> _______________________________________________
>>> Owasp-appsensor-project mailing list
>>> Owasp-appsensor-project at lists.owasp.org
>>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>>
>>
>>
>>
>> --
>> Mehmet Yilmaz
>>
>
>

From jtmelton at gmail.com  Fri Sep 30 12:18:21 2011
From: jtmelton at gmail.com (John Melton)
Date: Fri, 30 Sep 2011 12:18:21 -0400
Subject: [Owasp-appsensor-project] New Detection Point Candidate: AE13:
 Deviation from normal GEO location during login
In-Reply-To: <CAAxdBB=xWWhcuGbYM9i+4ze5v4p=_PMba5oY19qiYSM3vwSVbw@mail.gmail.com>
References: <CAAB58F3.3676A%ryan.barnett@owasp.org>
	<CAAxdBB=G4OrknbvA2_HkfrO1kVt0yR39buYZAMUE9LPXMAmEFQ@mail.gmail.com>
	<CAJL+Z05W-nOj7JGXvpy6tE1H1M+JnSJwy0en4sDmj+9xX2t1VQ@mail.gmail.com>
	<CAJs4TMkNQX4-1zCCSm0J65qfeNGYrfkypP=qq7o1JnwO0Ptg6g@mail.gmail.com>
	<CAJL+Z047vb0bUOWeqVKS8No+3DtKtR9qPfPLd9F-eBfYP3ZPqA@mail.gmail.com>
	<CAAxdBB=xWWhcuGbYM9i+4ze5v4p=_PMba5oY19qiYSM3vwSVbw@mail.gmail.com>
Message-ID: <CAM8z=yJXPGN5PDneQ1wNeG621qzFrX3iSkjpxzm8hq-j=hjNRQ@mail.gmail.com>

I agree Colin, and if Dennis writes that section, I think I'll read it :>.
Dennis, Have any good resources for the group at large to go read about
Stochastic Anomaly Detection (yes, that's SAD).

On Fri, Sep 30, 2011 at 12:14 PM, Colin Watson <colin.watson at owasp.org>wrote:

> Good discussion.  DPs are just there as inspiration to
> designers/implementers - we don't know the context.  The devil is in
> the detail, and I don't see any harm in mentioning this type of idea,
> but then add a summary of this discussion into the 'considerations'
> and 'examples' sections.
>
> I have a feeling there might be a chapter in the new book about
> stochastic anomaly detection....
>
> Colin
>
> On 30 September 2011 17:06, Dennis Groves <dennis.groves at gmail.com> wrote:
> > I think this is again part of the reason for using the stochastic anomaly
> > detection over a rules based engine alone. The client actually has the
> risk
> > appetite and they need to decide for themselves what is the right about
> > of specificity and sensitivity for their risk appetite.  We can not
> decide
> > that an event is really normal nor attack for any given situation
> especially
> > when dealing in the hypothetical.
> >
> > --
> > Dennis Groves, MSc
> > dennis.groves at gmail.com
> >
> > "What is the use of living, if it be not to strive for noble causes and
> make
> > this muddled world a better place for those who will live in it after we
> > have gone."
> >
> > -- Winston Churchill, October 10th, 1908
> >
> >
> > On Fri, Sep 30, 2011 at 5:03 PM, M Yilmaz <mehmety at gmail.com> wrote:
> >>
> >> But they are less likely to be logged in from multiple IPs under such a
> >> circumstance. I like the principle of escalation here.
> >>
> >> On Fri, Sep 30, 2011 at 11:53 AM, Dennis Groves <
> dennis.groves at gmail.com>
> >> wrote:
> >>>
> >>> the problem with this is that more and more people are going mobile
> >>> thanks to iPhones and Droids. And their IP's are guaranteed to change
> during
> >>> a session as they swap cell towers.
> >>>
> >>> --
> >>> Dennis Groves, MSc
> >>> dennis.groves at gmail.com
> >>>
> >>> "What is the use of living, if it be not to strive for noble causes and
> >>> make this muddled world a better place for those who will live in it
> after
> >>> we have gone."
> >>>
> >>> -- Winston Churchill, October 10th, 1908
> >>>
> >>>
> >>> On Fri, Sep 30, 2011 at 4:47 PM, Colin Watson <colin.watson at owasp.org>
> >>> wrote:
> >>>>
> >>>> Ryan
> >>>>
> >>>> Good idea.
> >>>>
> >>>> The related "SE5 Source Location Changes During Session" is just
> >>>> session specific, but this new new idea is concerns information about
> >>>> a user learnt (or set) over time.  So I was thinking it perhaps ought
> >>>> to be a User Trend (UT) code?  But since it specifically mentions
> >>>> login, it could be an Authentication Exception (AE) instead?
> >>>>
> >>>> Does it need to be just login?  Maybe if it were more generic, it
> >>>> might also be used post authentication on say a banking payment
> >>>> transfer function i.e. we don't care where they log in from, but if
> >>>> the amount is more than $5,000 we will take more notice of their
> >>>> location.
> >>>>
> >>>> So perhaps "UT4 Deviation from normal Geo Location"?
> >>>>
> >>>> Colin
> >>>>
> >>>> On 30 September 2011 16:30, Ryan Barnett <ryan.barnett at owasp.org>
> wrote:
> >>>> > Most users normally log into an application from 1 or a few
> Geographic
> >>>> > locations.  If the application learns these GeoIP locations, it can
> >>>> > then
> >>>> > detect when a user is logging into the application from a different
> >>>> > location.  This would help to identify possible account hijacking
> >>>> > attacks
> >>>> > (from phishing, banking trojans).
> >>>> > --
> >>>> > Ryan Barnett
> >>>> > _______________________________________________
> >>>> > Owasp-appsensor-project mailing list
> >>>> > Owasp-appsensor-project at lists.owasp.org
> >>>> > https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
> >>>> >
> >>>> >
> >>>> _______________________________________________
> >>>> Owasp-appsensor-project mailing list
> >>>> Owasp-appsensor-project at lists.owasp.org
> >>>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
> >>>
> >>>
> >>> _______________________________________________
> >>> Owasp-appsensor-project mailing list
> >>> Owasp-appsensor-project at lists.owasp.org
> >>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
> >>>
> >>
> >>
> >>
> >> --
> >> Mehmet Yilmaz
> >>
> >
> >
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20110930/1ec40dd2/attachment-0001.html 

From ryan.barnett at owasp.org  Fri Sep 30 12:27:44 2011
From: ryan.barnett at owasp.org (Ryan Barnett)
Date: Fri, 30 Sep 2011 12:27:44 -0400
Subject: [Owasp-appsensor-project] New Detection Point Candidate: AE13:
	Deviation from normal GEO location during login
In-Reply-To: <CAAxdBB=xWWhcuGbYM9i+4ze5v4p=_PMba5oY19qiYSM3vwSVbw@mail.gmail.com>
References: <CAAB58F3.3676A%ryan.barnett@owasp.org>
	<CAAxdBB=G4OrknbvA2_HkfrO1kVt0yR39buYZAMUE9LPXMAmEFQ@mail.gmail.com>
	<CAJL+Z05W-nOj7JGXvpy6tE1H1M+JnSJwy0en4sDmj+9xX2t1VQ@mail.gmail.com>
	<CAJs4TMkNQX4-1zCCSm0J65qfeNGYrfkypP=qq7o1JnwO0Ptg6g@mail.gmail.com>
	<CAJL+Z047vb0bUOWeqVKS8No+3DtKtR9qPfPLd9F-eBfYP3ZPqA@mail.gmail.com>
	<CAAxdBB=xWWhcuGbYM9i+4ze5v4p=_PMba5oY19qiYSM3vwSVbw@mail.gmail.com>
Message-ID: <849B96AA-A26E-4FFE-8085-07DB2BB9B8D9@owasp.org>

We sort touched on this topic at the summit when talking about the DPs for XSS and SQLi. The point being that DPs tell Devs *where* to look for stuff but not necessarily *how* to determine it is bad. My example with SQLi, etc... was that Devs understand the input validation items (whitelist/blacklist) but *how* do they further categorize an input validation exception as SQLi?  That seems like it is "not their responsibility". I tweeted about this this week - 
https://mobile.twitter.com/#!/ryancbarnett/status/118355899524976640

The overwhelming response was that this is not Dev's job...

The takeaway for me is that AppSensor is not only a Dev tool. It is a collaborative effort between Dev, InfoSec and OpSec.

Ryan


On Sep 30, 2011, at 12:14 PM, Colin Watson <colin.watson at owasp.org> wrote:

> Good discussion.  DPs are just there as inspiration to
> designers/implementers - we don't know the context.  The devil is in
> the detail, and I don't see any harm in mentioning this type of idea,
> but then add a summary of this discussion into the 'considerations'
> and 'examples' sections.
> 
> I have a feeling there might be a chapter in the new book about
> stochastic anomaly detection....
> 
> Colin
> 
> On 30 September 2011 17:06, Dennis Groves <dennis.groves at gmail.com> wrote:
>> I think this is again part of the reason for using the stochastic anomaly
>> detection over a rules based engine alone. The client actually has the risk
>> appetite and they need to decide for themselves what is the right about
>> of specificity and sensitivity for their risk appetite.  We can not decide
>> that an event is really normal nor attack for any given situation especially
>> when dealing in the hypothetical.
>> 
>> --
>> Dennis Groves, MSc
>> dennis.groves at gmail.com
>> 
>> "What is the use of living, if it be not to strive for noble causes and make
>> this muddled world a better place for those who will live in it after we
>> have gone."
>> 
>> -- Winston Churchill, October 10th, 1908
>> 
>> 
>> On Fri, Sep 30, 2011 at 5:03 PM, M Yilmaz <mehmety at gmail.com> wrote:
>>> 
>>> But they are less likely to be logged in from multiple IPs under such a
>>> circumstance. I like the principle of escalation here.
>>> 
>>> On Fri, Sep 30, 2011 at 11:53 AM, Dennis Groves <dennis.groves at gmail.com>
>>> wrote:
>>>> 
>>>> the problem with this is that more and more people are going mobile
>>>> thanks to iPhones and Droids. And their IP's are guaranteed to change during
>>>> a session as they swap cell towers.
>>>> 
>>>> --
>>>> Dennis Groves, MSc
>>>> dennis.groves at gmail.com
>>>> 
>>>> "What is the use of living, if it be not to strive for noble causes and
>>>> make this muddled world a better place for those who will live in it after
>>>> we have gone."
>>>> 
>>>> -- Winston Churchill, October 10th, 1908
>>>> 
>>>> 
>>>> On Fri, Sep 30, 2011 at 4:47 PM, Colin Watson <colin.watson at owasp.org>
>>>> wrote:
>>>>> 
>>>>> Ryan
>>>>> 
>>>>> Good idea.
>>>>> 
>>>>> The related "SE5 Source Location Changes During Session" is just
>>>>> session specific, but this new new idea is concerns information about
>>>>> a user learnt (or set) over time.  So I was thinking it perhaps ought
>>>>> to be a User Trend (UT) code?  But since it specifically mentions
>>>>> login, it could be an Authentication Exception (AE) instead?
>>>>> 
>>>>> Does it need to be just login?  Maybe if it were more generic, it
>>>>> might also be used post authentication on say a banking payment
>>>>> transfer function i.e. we don't care where they log in from, but if
>>>>> the amount is more than $5,000 we will take more notice of their
>>>>> location.
>>>>> 
>>>>> So perhaps "UT4 Deviation from normal Geo Location"?
>>>>> 
>>>>> Colin
>>>>> 
>>>>> On 30 September 2011 16:30, Ryan Barnett <ryan.barnett at owasp.org> wrote:
>>>>>> Most users normally log into an application from 1 or a few Geographic
>>>>>> locations.  If the application learns these GeoIP locations, it can
>>>>>> then
>>>>>> detect when a user is logging into the application from a different
>>>>>> location.  This would help to identify possible account hijacking
>>>>>> attacks
>>>>>> (from phishing, banking trojans).
>>>>>> --
>>>>>> Ryan Barnett
>>>>>> _______________________________________________
>>>>>> Owasp-appsensor-project mailing list
>>>>>> Owasp-appsensor-project at lists.owasp.org
>>>>>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>>>>> 
>>>>>> 
>>>>> _______________________________________________
>>>>> Owasp-appsensor-project mailing list
>>>>> Owasp-appsensor-project at lists.owasp.org
>>>>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>>> 
>>>> 
>>>> _______________________________________________
>>>> Owasp-appsensor-project mailing list
>>>> Owasp-appsensor-project at lists.owasp.org
>>>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>>> 
>>> 
>>> 
>>> 
>>> --
>>> Mehmet Yilmaz
>>> 
>> 
>> 

From dennis.groves at gmail.com  Fri Sep 30 12:32:00 2011
From: dennis.groves at gmail.com (Dennis Groves)
Date: Fri, 30 Sep 2011 17:32:00 +0100
Subject: [Owasp-appsensor-project] New Detection Point Candidate: AE13:
 Deviation from normal GEO location during login
In-Reply-To: <CAM8z=yJXPGN5PDneQ1wNeG621qzFrX3iSkjpxzm8hq-j=hjNRQ@mail.gmail.com>
References: <CAAB58F3.3676A%ryan.barnett@owasp.org>
	<CAAxdBB=G4OrknbvA2_HkfrO1kVt0yR39buYZAMUE9LPXMAmEFQ@mail.gmail.com>
	<CAJL+Z05W-nOj7JGXvpy6tE1H1M+JnSJwy0en4sDmj+9xX2t1VQ@mail.gmail.com>
	<CAJs4TMkNQX4-1zCCSm0J65qfeNGYrfkypP=qq7o1JnwO0Ptg6g@mail.gmail.com>
	<CAJL+Z047vb0bUOWeqVKS8No+3DtKtR9qPfPLd9F-eBfYP3ZPqA@mail.gmail.com>
	<CAAxdBB=xWWhcuGbYM9i+4ze5v4p=_PMba5oY19qiYSM3vwSVbw@mail.gmail.com>
	<CAM8z=yJXPGN5PDneQ1wNeG621qzFrX3iSkjpxzm8hq-j=hjNRQ@mail.gmail.com>
Message-ID: <CAJL+Z05AppRb+tR3caz=gjrzyJ83HRdA8+Ppb3sKK0TvNzF0zg@mail.gmail.com>

Actually, this is one of the reasons I have signed up for the Stanford
AI<http://www.ai-class.com/>class they are holding online. I hope to
learn more. There certainly has
been a great deal of interest in this subject lately. For example "Stochastic
Anomaly Detection<http://scholar.google.co.uk/scholar?hl=en&q=Stochastic+Anomaly+Detection&as_sdt=1%2C5&as_ylo=&as_vis=0>"
turns up 745 hits for 2011 alone in Google Scholar. The other part of my
background comes from having been through the experience of implementation
with people who did use a stochastic engine; and I learned a great deal
about both statistics and the utility of them. A great deal of the academic
efforts so far have been around markov chains which are essentially  state
transition diagrams / regular expressions. It helps if you have experience
programming with recursive languages, or lex and yacc since many of the
ideas are related.


--
Dennis Groves <http://about.me/dennis.groves>, MSc
dennis.groves at gmail.com

*"What is the use of living, if it be not to strive for noble causes and
make this muddled world a better place for those who will live in it after
we have gone."*

*-- Winston Churchill, October 10th, 1908*



On Fri, Sep 30, 2011 at 5:18 PM, John Melton <jtmelton at gmail.com> wrote:

> I agree Colin, and if Dennis writes that section, I think I'll read it :>.
> Dennis, Have any good resources for the group at large to go read about
> Stochastic Anomaly Detection (yes, that's SAD).
>
>
> On Fri, Sep 30, 2011 at 12:14 PM, Colin Watson <colin.watson at owasp.org>wrote:
>
>> Good discussion.  DPs are just there as inspiration to
>> designers/implementers - we don't know the context.  The devil is in
>> the detail, and I don't see any harm in mentioning this type of idea,
>> but then add a summary of this discussion into the 'considerations'
>> and 'examples' sections.
>>
>> I have a feeling there might be a chapter in the new book about
>> stochastic anomaly detection....
>>
>> Colin
>>
>> On 30 September 2011 17:06, Dennis Groves <dennis.groves at gmail.com>
>> wrote:
>> > I think this is again part of the reason for using the stochastic
>> anomaly
>> > detection over a rules based engine alone. The client actually has the
>> risk
>> > appetite and they need to decide for themselves what is the right about
>> > of specificity and sensitivity for their risk appetite.  We can not
>> decide
>> > that an event is really normal nor attack for any given situation
>> especially
>> > when dealing in the hypothetical.
>> >
>> > --
>> > Dennis Groves, MSc
>> > dennis.groves at gmail.com
>> >
>> > "What is the use of living, if it be not to strive for noble causes and
>> make
>> > this muddled world a better place for those who will live in it after we
>> > have gone."
>> >
>> > -- Winston Churchill, October 10th, 1908
>> >
>> >
>> > On Fri, Sep 30, 2011 at 5:03 PM, M Yilmaz <mehmety at gmail.com> wrote:
>> >>
>> >> But they are less likely to be logged in from multiple IPs under such a
>> >> circumstance. I like the principle of escalation here.
>> >>
>> >> On Fri, Sep 30, 2011 at 11:53 AM, Dennis Groves <
>> dennis.groves at gmail.com>
>> >> wrote:
>> >>>
>> >>> the problem with this is that more and more people are going mobile
>> >>> thanks to iPhones and Droids. And their IP's are guaranteed to change
>> during
>> >>> a session as they swap cell towers.
>> >>>
>> >>> --
>> >>> Dennis Groves, MSc
>> >>> dennis.groves at gmail.com
>> >>>
>> >>> "What is the use of living, if it be not to strive for noble causes
>> and
>> >>> make this muddled world a better place for those who will live in it
>> after
>> >>> we have gone."
>> >>>
>> >>> -- Winston Churchill, October 10th, 1908
>> >>>
>> >>>
>> >>> On Fri, Sep 30, 2011 at 4:47 PM, Colin Watson <colin.watson at owasp.org
>> >
>> >>> wrote:
>> >>>>
>> >>>> Ryan
>> >>>>
>> >>>> Good idea.
>> >>>>
>> >>>> The related "SE5 Source Location Changes During Session" is just
>> >>>> session specific, but this new new idea is concerns information about
>> >>>> a user learnt (or set) over time.  So I was thinking it perhaps ought
>> >>>> to be a User Trend (UT) code?  But since it specifically mentions
>> >>>> login, it could be an Authentication Exception (AE) instead?
>> >>>>
>> >>>> Does it need to be just login?  Maybe if it were more generic, it
>> >>>> might also be used post authentication on say a banking payment
>> >>>> transfer function i.e. we don't care where they log in from, but if
>> >>>> the amount is more than $5,000 we will take more notice of their
>> >>>> location.
>> >>>>
>> >>>> So perhaps "UT4 Deviation from normal Geo Location"?
>> >>>>
>> >>>> Colin
>> >>>>
>> >>>> On 30 September 2011 16:30, Ryan Barnett <ryan.barnett at owasp.org>
>> wrote:
>> >>>> > Most users normally log into an application from 1 or a few
>> Geographic
>> >>>> > locations.  If the application learns these GeoIP locations, it can
>> >>>> > then
>> >>>> > detect when a user is logging into the application from a different
>> >>>> > location.  This would help to identify possible account hijacking
>> >>>> > attacks
>> >>>> > (from phishing, banking trojans).
>> >>>> > --
>> >>>> > Ryan Barnett
>> >>>> > _______________________________________________
>> >>>> > Owasp-appsensor-project mailing list
>> >>>> > Owasp-appsensor-project at lists.owasp.org
>> >>>> > https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>> >>>> >
>> >>>> >
>> >>>> _______________________________________________
>> >>>> Owasp-appsensor-project mailing list
>> >>>> Owasp-appsensor-project at lists.owasp.org
>> >>>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>> >>>
>> >>>
>> >>> _______________________________________________
>> >>> Owasp-appsensor-project mailing list
>> >>> Owasp-appsensor-project at lists.owasp.org
>> >>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>> >>>
>> >>
>> >>
>> >>
>> >> --
>> >> Mehmet Yilmaz
>> >>
>> >
>> >
>> _______________________________________________
>> Owasp-appsensor-project mailing list
>> Owasp-appsensor-project at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20110930/438c399a/attachment.html 

From dennis.groves at gmail.com  Fri Sep 30 12:37:42 2011
From: dennis.groves at gmail.com (Dennis Groves)
Date: Fri, 30 Sep 2011 17:37:42 +0100
Subject: [Owasp-appsensor-project] New Detection Point Candidate: AE13:
 Deviation from normal GEO location during login
In-Reply-To: <849B96AA-A26E-4FFE-8085-07DB2BB9B8D9@owasp.org>
References: <CAAB58F3.3676A%ryan.barnett@owasp.org>
	<CAAxdBB=G4OrknbvA2_HkfrO1kVt0yR39buYZAMUE9LPXMAmEFQ@mail.gmail.com>
	<CAJL+Z05W-nOj7JGXvpy6tE1H1M+JnSJwy0en4sDmj+9xX2t1VQ@mail.gmail.com>
	<CAJs4TMkNQX4-1zCCSm0J65qfeNGYrfkypP=qq7o1JnwO0Ptg6g@mail.gmail.com>
	<CAJL+Z047vb0bUOWeqVKS8No+3DtKtR9qPfPLd9F-eBfYP3ZPqA@mail.gmail.com>
	<CAAxdBB=xWWhcuGbYM9i+4ze5v4p=_PMba5oY19qiYSM3vwSVbw@mail.gmail.com>
	<849B96AA-A26E-4FFE-8085-07DB2BB9B8D9@owasp.org>
Message-ID: <CAJL+Z05dCUcVwDVz42QcR1db9hu2LBiLF96tCH4wOU2pwDBSeg@mail.gmail.com>

inline -

On Fri, Sep 30, 2011 at 5:27 PM, Ryan Barnett <ryan.barnett at owasp.org>wrote:

> We sort touched on this topic at the summit when talking about the DPs for
> XSS and SQLi. The point being that DPs tell Devs *where* to look for stuff
> but not necessarily *how* to determine it is bad. My example with SQLi,
> etc... was that Devs understand the input validation items
> (whitelist/blacklist) but *how* do they further categorize an input
> validation exception as SQLi?  That seems like it is "not their
> responsibility". I tweeted about this this week -
> https://mobile.twitter.com/#!/ryancbarnett/status/118355899524976640
>
> The overwhelming response was that this is not Dev's job...
>
> The takeaway for me is that AppSensor is not only a Dev tool. It is a
> collaborative effort between Dev, InfoSec and OpSec.


I could not agree more! This is exactly how I view it. AppSensor defines a
way for Dev's to manage exceptions - at the end of the day AppSensor is
really a development pattern for error management. Dev's have to be
involved, however - the real magic is in the black box or rules as we call
them, this is where InfoSec and OpSec get involved and cause the whole
engine to create value for the organisation.



> Ryan
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20110930/cc40545e/attachment-0001.html 

From dennis.groves at owasp.org  Fri Sep 30 12:55:31 2011
From: dennis.groves at owasp.org (Dennis Groves)
Date: Fri, 30 Sep 2011 17:55:31 +0100
Subject: [Owasp-appsensor-project] New Detection Point Candidate: AE13:
 Deviation from normal GEO location during login
In-Reply-To: <CAJL+Z07P1NTTxKr1B_5ipCNY9__Z_X1mrO7FVShK5ndwkFVvmw@mail.gmail.com>
References: <CAAB58F3.3676A%ryan.barnett@owasp.org>
	<CAAxdBB=G4OrknbvA2_HkfrO1kVt0yR39buYZAMUE9LPXMAmEFQ@mail.gmail.com>
	<CAJL+Z05W-nOj7JGXvpy6tE1H1M+JnSJwy0en4sDmj+9xX2t1VQ@mail.gmail.com>
	<CAJs4TMkNQX4-1zCCSm0J65qfeNGYrfkypP=qq7o1JnwO0Ptg6g@mail.gmail.com>
	<CAJL+Z047vb0bUOWeqVKS8No+3DtKtR9qPfPLd9F-eBfYP3ZPqA@mail.gmail.com>
	<CAAxdBB=xWWhcuGbYM9i+4ze5v4p=_PMba5oY19qiYSM3vwSVbw@mail.gmail.com>
	<849B96AA-A26E-4FFE-8085-07DB2BB9B8D9@owasp.org>
	<CAJL+Z05dCUcVwDVz42QcR1db9hu2LBiLF96tCH4wOU2pwDBSeg@mail.gmail.com>
	<CAJL+Z07P1NTTxKr1B_5ipCNY9__Z_X1mrO7FVShK5ndwkFVvmw@mail.gmail.com>
Message-ID: <CAJL+Z053CijH77jbv0Lwu+2siP+jWMwwZomJ8_oB91+6Zw=qYA@mail.gmail.com>

Here is a great
example<http://ceres.ugr.es/~gmacia/papers/COMSEC09_AnidsPublishedVersion.pdf>from
2008 about A-NIDS or Anomaly Based Network Intrusions Detection
Systems.

*Pay attention to figure 1 on page 19 and figure 3 on page 20. *

There are some very enlightening patterns to learn from within the attached
document. And this leads to a number of questions we can ask ourselves. For
example should we be building 3 types of rule-engines as they have on page
20; statistical, knowledge based and machine learning based?

Right now we have done a lot of work on the knowledge based (detection
points), because of our tacit knowledge of web application security issues.
And we have recently been discussing the statistical models. However, there
is certainly room in our design for 'machine learning' - particularly since
we are splitting the 'rules engine out' - and in doing so; will be able to
more easily accommodate such expansions of capability. In doing so we start
to really define a 'self healing' and adaptive behaviour for Applications,
darwinian security if you will, and I think that is very, very cutting edge
and exciting.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20110930/1459c077/attachment.html 

From jtmelton at gmail.com  Fri Sep 30 13:11:48 2011
From: jtmelton at gmail.com (John Melton)
Date: Fri, 30 Sep 2011 13:11:48 -0400
Subject: [Owasp-appsensor-project] New Detection Point Candidate: AE13:
 Deviation from normal GEO location during login
In-Reply-To: <CAJL+Z053CijH77jbv0Lwu+2siP+jWMwwZomJ8_oB91+6Zw=qYA@mail.gmail.com>
References: <CAAB58F3.3676A%ryan.barnett@owasp.org>
	<CAAxdBB=G4OrknbvA2_HkfrO1kVt0yR39buYZAMUE9LPXMAmEFQ@mail.gmail.com>
	<CAJL+Z05W-nOj7JGXvpy6tE1H1M+JnSJwy0en4sDmj+9xX2t1VQ@mail.gmail.com>
	<CAJs4TMkNQX4-1zCCSm0J65qfeNGYrfkypP=qq7o1JnwO0Ptg6g@mail.gmail.com>
	<CAJL+Z047vb0bUOWeqVKS8No+3DtKtR9qPfPLd9F-eBfYP3ZPqA@mail.gmail.com>
	<CAAxdBB=xWWhcuGbYM9i+4ze5v4p=_PMba5oY19qiYSM3vwSVbw@mail.gmail.com>
	<849B96AA-A26E-4FFE-8085-07DB2BB9B8D9@owasp.org>
	<CAJL+Z05dCUcVwDVz42QcR1db9hu2LBiLF96tCH4wOU2pwDBSeg@mail.gmail.com>
	<CAJL+Z07P1NTTxKr1B_5ipCNY9__Z_X1mrO7FVShK5ndwkFVvmw@mail.gmail.com>
	<CAJL+Z053CijH77jbv0Lwu+2siP+jWMwwZomJ8_oB91+6Zw=qYA@mail.gmail.com>
Message-ID: <CAM8z=y+-wTTmJ_75PdBAEZPM89wojP4is=eaLH6Lwhb2p_5agQ@mail.gmail.com>

Thanks for the resource - looks like an interesting read.

On Fri, Sep 30, 2011 at 12:55 PM, Dennis Groves <dennis.groves at owasp.org>wrote:

> Here is a great example<http://ceres.ugr.es/%7Egmacia/papers/COMSEC09_AnidsPublishedVersion.pdf>from 2008 about A-NIDS or Anomaly Based Network Intrusions Detection
> Systems.
>
> *Pay attention to figure 1 on page 19 and figure 3 on page 20. *
>
> There are some very enlightening patterns to learn from within the attached
> document. And this leads to a number of questions we can ask ourselves. For
> example should we be building 3 types of rule-engines as they have on page
> 20; statistical, knowledge based and machine learning based?
>
> Right now we have done a lot of work on the knowledge based (detection
> points), because of our tacit knowledge of web application security issues.
> And we have recently been discussing the statistical models. However, there
> is certainly room in our design for 'machine learning' - particularly since
> we are splitting the 'rules engine out' - and in doing so; will be able to
> more easily accommodate such expansions of capability. In doing so we start
> to really define a 'self healing' and adaptive behaviour for Applications,
> darwinian security if you will, and I think that is very, very cutting edge
> and exciting.
>
> _______________________________________________
> Owasp-appsensor-project mailing list
> Owasp-appsensor-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-appsensor-project
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-appsensor-project/attachments/20110930/ba17e7be/attachment.html 

