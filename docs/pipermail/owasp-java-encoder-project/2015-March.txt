From scorcher14x at gmail.com  Thu Mar  5 17:58:29 2015
From: scorcher14x at gmail.com (Carl Ludewig)
Date: Thu, 5 Mar 2015 09:58:29 -0800
Subject: [Owasp-java-encoder-project] Thanks
Message-ID: <B7A9245C-F86D-43D0-A3DD-EC8043DCF420@gmail.com>

Just wanted to send a quick now and say thanks for creating the OWASP Java Encoder. It?s terrific and simple to use.

Cheers,
Carl

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-java-encoder-project/attachments/20150305/5ca5c3a3/attachment.html>

From jim.manico at owasp.org  Thu Mar  5 23:50:23 2015
From: jim.manico at owasp.org (Jim Manico)
Date: Thu, 05 Mar 2015 13:50:23 -1000
Subject: [Owasp-java-encoder-project] Thanks
In-Reply-To: <B7A9245C-F86D-43D0-A3DD-EC8043DCF420@gmail.com>
References: <B7A9245C-F86D-43D0-A3DD-EC8043DCF420@gmail.com>
Message-ID: <54F8EBBF.60600@owasp.org>

Thank you for your kind words, Carl.  Jeff sure did put a lot of work 
into this! :)

Aloha!
Jim Manico

On 3/5/15 7:58 AM, Carl Ludewig wrote:
> Just wanted to send a quick now and say thanks for creating the OWASP 
> Java Encoder. It?s terrific and simple to use.
>
> Cheers,
> Carl
>
>
>
> _______________________________________________
> Owasp-java-encoder-project mailing list
> Owasp-java-encoder-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-java-encoder-project

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-java-encoder-project/attachments/20150305/f597257c/attachment.html>

From mseil at acm.org  Fri Mar 27 15:37:55 2015
From: mseil at acm.org (Matt Seil)
Date: Fri, 27 Mar 2015 10:37:55 -0500
Subject: [Owasp-java-encoder-project] Encoder canonicalization?
Message-ID: <CADYkqj54nW7E7SwB6QDiQNp5DVh+bk0rUtg=TrFDFNNqkChz3g@mail.gmail.com>

Esapi provided an Encoder.canonicalize() method that (still is) useful for
detecting multiple encoding attacks.

I have roadmaps to replace both esapi and antisamy but am having trouble
finding frameworks/libraries that explicitly provide a mixed/multiple
encoding detection.

--Matt Seil
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-java-encoder-project/attachments/20150327/73722e35/attachment.html>

From jim.manico at owasp.org  Sun Mar 29 20:36:04 2015
From: jim.manico at owasp.org (Jim Manico)
Date: Sun, 29 Mar 2015 10:36:04 -1000
Subject: [Owasp-java-encoder-project] Encoder canonicalization?
In-Reply-To: <CADYkqj54nW7E7SwB6QDiQNp5DVh+bk0rUtg=TrFDFNNqkChz3g@mail.gmail.com>
References: <CADYkqj54nW7E7SwB6QDiQNp5DVh+bk0rUtg=TrFDFNNqkChz3g@mail.gmail.com>
Message-ID: <55186234.5070301@owasp.org>

I think you hit upon one of the best features of ESAPI from an Intrusion 
Detection point of view - one that is not duplicated elsewhere. I see 
this defense in WAF's, IDS/IPS and similar, but not in Java libraries or 
other app layer code.

If you want, consider enhancing the OWASP Java Encoder to provide 
cannonicalization and decoding function support. It's a dedicated 
encoding library that is well maintained.

https://www.owasp.org/index.php/OWASP_Java_Encoder_Project

If you are willing to lend a hand, I'll help you make it happen.

Aloha,
Jim


On 3/27/15 5:37 AM, Matt Seil wrote:
> Esapi provided an Encoder.canonicalize() method that (still is) useful 
> for detecting multiple encoding attacks.
>
> I have roadmaps to replace both esapi and antisamy but am having 
> trouble finding frameworks/libraries that explicitly provide a 
> mixed/multiple encoding detection.
>
> --Matt Seil
>
>
>
> _______________________________________________
> Owasp-java-encoder-project mailing list
> Owasp-java-encoder-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-java-encoder-project

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-java-encoder-project/attachments/20150329/ce3468d7/attachment.html>

From jim.manico at owasp.org  Mon Mar 30 00:10:43 2015
From: jim.manico at owasp.org (Jim Manico)
Date: Sun, 29 Mar 2015 14:10:43 -1000
Subject: [Owasp-java-encoder-project] Decode
Message-ID: <55189483.9090708@owasp.org>

What do you think of adding decode and canonizalization functions to the 
Java encoder library?

Aloha,
Jim

From jeremy.long at gmail.com  Mon Mar 30 00:22:23 2015
From: jeremy.long at gmail.com (Jeremy Long)
Date: Sun, 29 Mar 2015 20:22:23 -0400
Subject: [Owasp-java-encoder-project] Decode
In-Reply-To: <55189483.9090708@owasp.org>
References: <55189483.9090708@owasp.org>
Message-ID: <CAKAumBGriH-vbDKsEAgAXK=OtUs9FLz2E03Jm4VqmftcP-scuA@mail.gmail.com>

I think the decoders would be a good add. Then if there is enough interest
in the canonicalization functions add those in a separate jar.

--jeremy
On Mar 29, 2015 8:11 PM, "Jim Manico" <jim.manico at owasp.org> wrote:

> What do you think of adding decode and canonizalization functions to the
> Java encoder library?
>
> Aloha,
> Jim
> _______________________________________________
> Owasp-java-encoder-project mailing list
> Owasp-java-encoder-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-java-encoder-project
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-java-encoder-project/attachments/20150329/5ba2c9a6/attachment.html>

From jeff.ichnowski at gmail.com  Mon Mar 30 17:04:29 2015
From: jeff.ichnowski at gmail.com (Jeff Ichnowski)
Date: Mon, 30 Mar 2015 13:04:29 -0400
Subject: [Owasp-java-encoder-project] Decode
In-Reply-To: <CAKAumBGriH-vbDKsEAgAXK=OtUs9FLz2E03Jm4VqmftcP-scuA@mail.gmail.com>
References: <55189483.9090708@owasp.org>
	<CAKAumBGriH-vbDKsEAgAXK=OtUs9FLz2E03Jm4VqmftcP-scuA@mail.gmail.com>
Message-ID: <CALbNpGihEfuqhf6u61HYj_orfmzssyFAMNZDjmjoByAjjKA8eg@mail.gmail.com>

I think it should be a separate equally small and efficient project.
owasp-java-decoder. :)

The use case for decoders is typically not coupled encoders.  Like who is
going to do <%= Decode.fromHTML(...) %> in their JSP?  May they're
intentionally trying to introduce XSS? :)

What canonicalization functions are you thinking of?

Also, when I think of decoders, I always wonder what the proper thing to do
with HTML named entities (e.g., &nbsp; &copy; etc...).

-Jeff


On Sun, Mar 29, 2015 at 8:22 PM, Jeremy Long <jeremy.long at gmail.com> wrote:

> I think the decoders would be a good add. Then if there is enough interest
> in the canonicalization functions add those in a separate jar.
>
> --jeremy
> On Mar 29, 2015 8:11 PM, "Jim Manico" <jim.manico at owasp.org> wrote:
>
>> What do you think of adding decode and canonizalization functions to the
>> Java encoder library?
>>
>> Aloha,
>> Jim
>> _______________________________________________
>> Owasp-java-encoder-project mailing list
>> Owasp-java-encoder-project at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-java-encoder-project
>>
>
> _______________________________________________
> Owasp-java-encoder-project mailing list
> Owasp-java-encoder-project at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-java-encoder-project
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-java-encoder-project/attachments/20150330/c113e2d6/attachment.html>

From mseil at acm.org  Mon Mar 30 21:25:15 2015
From: mseil at acm.org (Matt Seil)
Date: Mon, 30 Mar 2015 16:25:15 -0500
Subject: [Owasp-java-encoder-project] Decode
In-Reply-To: <CALbNpGihEfuqhf6u61HYj_orfmzssyFAMNZDjmjoByAjjKA8eg@mail.gmail.com>
References: <55189483.9090708@owasp.org>
	<CAKAumBGriH-vbDKsEAgAXK=OtUs9FLz2E03Jm4VqmftcP-scuA@mail.gmail.com>
	<CALbNpGihEfuqhf6u61HYj_orfmzssyFAMNZDjmjoByAjjKA8eg@mail.gmail.com>
Message-ID: <CADYkqj4du5p0UNn=b5-=WbYeNCC+NaWRiotO9sP-PJY+3yCUXQ@mail.gmail.com>

Hello all,

I'm new here though I've been doing security related development and
pentesting going on six years now.

The question was prompted by me asking about whether or not the Encoder
project supported a similar functionality to ESAPI's "canonicalize" method
which runs a slew of decoders in the hopes to find an attempt at multi or
mixed encoding in order to flag for Intrusion exceptions.  There's
absolutely nothing else like that that I can find in Javaland.

Decoding methods have a really important use in my everyday world:
Receiving encoded data from a webservice.  I typically specify that
applications always send parameters across entity-encoded.  And decoders
kind of have to be written before canonicalization is a reality.  And I
really have to have that intrusion detection on my roadmap out of ESAPI.

I just downloaded the encoder source today but haven't had a chance to play
with it.  My thought was similar to Jeff's... I like the idea of an
"encoder-core" that specifies interfaces and abstract classes and then
encoder/decoder "projects" would really be be concrete implementations from
what was specified in the core.  <--Off the cuff.







-- 
Matt Seil
Cyber-Security Software Engineer  *whew*
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-java-encoder-project/attachments/20150330/a208ad3e/attachment.html>

