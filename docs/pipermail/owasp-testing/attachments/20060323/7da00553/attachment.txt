[Daniel Cuthbert]
Introduction 
How to go about performing an application review
Principles of Testing
Testing Techniques Explained (overview)
OWASP Testing Framework

Methodologies used (explanation and guidelines)
Manual Inspections 
Penetration Testing 
Code Review 
Threat Modeling introduction

Benefits of fuzzing applications and protocols
General guidelines when fuzzing
Fuzzing examples 

Validating results
Identifying false positives
Creating a threat classification for discovered issues
---------------------------------------------------------------------------------

[Julian Harty] julian.harty@btinternet.com
Threat Modeling introduction 
Threat modeling the application 
----------------------------------------------------------------------------------

[Ian Keith]
How have the development team created the business logic for the application
Does the application handle when it’s used in non-standard manner?

---------------------------------------------------------------------------------

[Irene Abezgauz] irene.abezgauz@gmail.com
Default or guessable user accounts 
Empty passwords
Session token generation (are they generated by the web server software or by the application itself?) 
Control for automated attacks? (ie. does the authentication mechanism block remote systems that try a brute force attack against a simple user/password form?)
Vulnerable remember password implementation

---------------------------------------------------------------------------------

[Simon Roses Femerling (sroses@itdeusto.com)]
Session ID predictability 
Listening HTTP ports 
HTTP banner and server version 
HTTP server extensions 
HTTP methods supported 
SSL/ TLS version

Benefits of fuzzing applications and protocols
General guidelines when fuzzing
Fuzzing examples 

---------------------------------------------------------------------------------

[Stephen Venter (stephen.venter@gmail.com) ]
Token storage?
Improper use of cache control directives 

---------------------------------------------------------------------------------

[Ralph M Los (Ralph@boundariez.com) ]
Weak “forgot password” implementations
Weak PIN or password requirements leading to easy to guessable choices

---------------------------------------------------------------------------------

[Javier Fernandez-Sanguino <jfernandez@germinus.com>]
Known Web Server Vulnerabilities
Web application architecture (investigating/discovering components such as  application servers, DBMSs, other back-end applications, etc.)
Access and visibility of administrative tools of web, application, etc servers. 
Authentication back-ends (LDAP, DBMS, text files)
Sample/known files and directories
Comment review
Configuration errors (e.g. directory indexing?)
Web root
Logging 
Permissions 
Unsafe modules 
HTML and hidden form fields 
Error handling and page analysis  
Process permissions

---------------------------------------------------------------------------------
[Syed Mohamed A (syedma@microland.net)]
HTTP header manipulation  
URL parameters
Path traversal
Google hacking 

---------------------------------------------------------------------------------

[Victor Chapela (victor@sm4rt.com)]
SQL Input Injection
Database testing (via the web application) 

---------------------------------------------------------------------------------

[Ferruh Mavituna (ferruh@mavituna.com) ]
XSS Input Injection

---------------------------------------------------------------------------------

[Yvan Boily (yboily@gmail.com) ]
Weak encryption or flawed implementation of encryption.
SSL usage during whole session

---------------------------------------------------------------------------------

[Varun Uppal (varunuppal81@gmail.com) ]
Format Buffer Overflow

---------------------------------------------------------------------------------

[BishnuPokharel (bishnu.pokharel@gmail.com) ]
JavaScript (Language/Services/Application Specific Testing)

---------------------------------------------------------------------------------

[Steve Lord ]
Flash testing and applet analysis (Language/Services/Application Specific Testing)
---------------------------------------------------------------------------------

[Sebastien Deleersnyder (sdl@ascure.com)]
Validating results
Identifying false positives
Creating a threat classification for discovered issues
---------------------------------------------------------------------------------

[Meghna Nadkarni (meghnan@mahindrabt.com)]
J2EE (Language/Services/Application Specific Testing)


