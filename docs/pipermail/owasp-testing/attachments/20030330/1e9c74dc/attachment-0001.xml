<!-- $Id: ch01.xml,v 1.16 2003/03/26 04:52:19 mcurphey Exp $ -->
<chapter label="1">
    <chapterinfo>
        <authorgroup>
            <author>
                <firstname>Mark</firstname>
                <surname>Curphey</surname>
            </author>
        </authorgroup>
    </chapterinfo>
<title>Introduction</title>
<sect1>
	<title>Foreword</title>
	<para>
	We all use web applications everyday whether we consciously know it or
	not. That is, all of us who browse the web.  The ubiquity of web
	applications is not always apparent to the everyday web user.
	When one visits cnn.com and the site automagically knows you
	are a US resident and serves you US news and local weather, it's all
	because of a web application. When you transfer money, search
	for a flight, check out arrival times or even the latest sports scores
	online, you are using a web application. Web Applications and Web
	Services (inter-web applications) are what drive the current iteration
	of the web and are evolving to serve new platforms and new devices
	with an ever-expanding array of information and services.
	</para>
	<para>
	The last two years have seen a significant surge in the amount of web
	application specific vulnerabilities that are disclosed to the public.
	No web application technology has shown itself invulnerable, and
	discoveries are made every day that affect both owners' and users'
	security and privacy.
	</para>
	<para>
	Security professionals have traditionally focused on network and
	operating system security. Assessment services have relied
	heavily on automated tools to help find holes in those layers.
	Today's needs are different, and different tools are needed. Despite
	this, the basic tennants of security design have not changed. This document is
	an attempt to reconcile the lessons learned in past decades with the
	unique challenges that the web provides.
	</para>
	<para>
	While this document doesn't provide a silver bullet to cure all the
	ills, we hope it goes a long way in taking the first step towards
	helping people understand the inherent problems in web applications
	and build more secure web applications and web services in the future.
	</para>
    <para>
This version 2.0 is a significant improvement over the initial release and a major
milestone. Not only is the content more eloquently laid out and significantly better
written but the original content has been significantly expanded to cover web
services, XML, Microsoft's .NET and Java. You can now find extensive practical
code samples for the Java and PHP languages and a much improved common problems
chapter. You may also be reading this document in a printed published book,
proof itself that open source documents really are commercially viable. 
	</para>
	<para>
Personally I am very proud to be a part of OWASP. There are many talented people involved
who are a pleasure to work with and learn from. It's a truly fun and very
rewarding project for all involved performing an important fucntion in this digital age.
	</para>
	<para>
	Enjoy,
	</para>
	<para>
	Mark Curphey, OWASP Founder and Project Leader
	</para>
	<sect2>
		<title>About The Open Web Application Security Project</title>
		<para>
		The Open Web Application Security Project (OWASP) was started in 
        September 2001 by Mark Curphey and now has over 40 active contributors from around the world. 
        OWASP is a "not for profit" open source reference point for system architects, developers, 
        vendors, consumers and security professionals involved in Designing, Developing, Deploying 
        and Testing the security of web applications and Web Services. In short, the Open Web Application 
        Security Project aims to help everyone and anyone build more secure web applications and Web Services. 
        OWASP projects are broadly divided into two main categories, development projects and documentation projects. 
		</para>
                <para>
                Our development projects currently consist of WebScarab - a web application vulnerability assessment 
                suite including proxy tools, Filters - generic security boundary filters that developers can use in their own applications, 
                CodeSeeker - an commercial quality application level firewall and Intrusion Detection System that runs on Windows and Linux and supports IIS, Apache and iPlanet web servers, 
                WebGoat - an interactive training and benchmarking tool that users can learn about web application security 
                in a safe and legal environment and the OWASP Portal - our own Java based portal code designed with security 
                as a prime concern. We are also developing a Model View Controller framework for the .NET platform. 
                All software and documentation is open source under the GNU Public License and 
                copyrighted to the Free Software Foundation so that the community can contribute without the fear of exploitation. 
                </para>
                <para>
                Our documentation projects currently consist of this Guide and Testing - a web site security testing methodology 
                and framework.
                </para>
                <para>
                We also have one significant project that spans both our development projects and documentation 
                projects called VulnXML. VulnXML is an XML file format for describing web application security 
                vulnerabilities which can be used in a number of commercial and open source tools to check for specific 
                problems. OWASP has developed a web based VulnXML database where the community can submit checks which are QA'd
                by the OWASP team before being released into a production feed.
                </para>
        </sect2>
	<sect2>
		<title>Purpose Of This Document</title>
		<para>
		While several good documents are available to help developers
		write secure code, at the time of this project's innception
		there were no open source documents that described the wider
		technical picture of building appropriate security into web
		applications and web services. This document sets out to describe technical
		components, and certain people, process, and management issues
		that are needed to design, build and maintain a secure web
		application or web service. This is maintained as an ongoing
		exercise and expanded as time permits and the need arises.
		</para>
	</sect2>
	<sect2>
		<title>Intended Audience</title>
		<para>
		Any document about building secure web applications clearly
		will have a large degree of technical content and address
		a technically oriented audience. We have deliberately not
		omitted technical detail that may scare some readers. However,
		throughout this document we have sought to refrain from
		"technical speak for the sake of technical speak" wherever
		possible.
		</para>
	</sect2>
	<sect2>
		<title>How to Use This Document</title>
		<para>
		This document is a designed to be used by as many people
		and in as many inventive ways as possible. While sections
		are logically arranged in a specific order, they can also
		be used alone or in conjunction with other discrete sections.
		</para>
		<para>
		Here are just a few of the ways we envisage it being used:
		</para>
		<sect3>
			<title>Designing Systems</title>
			<para>
			When designing a system the system architect can
			use the document as a template to ensure he or she
			has thought about the implications that each of the
			sections described could have on the target system.
			</para>
		</sect3>
		<sect3>
			<title>Evaluating Vendors of Services</title>
			<para>
			When engaging professional services companies for
			web application security design or testing, it is
			extremely difficult to accurately gauge whether
			the company or its staff are qualified and if they
			intend to cover all of the items necessary to ensure
			an application (a) meets the security requirements
			specified or (b) will be tested adequately. We
			envisage companies being able to use this document
			to evaluate proposals from security consulting
			companies to determine whether they will provide
			adequate coverage in their work. Companies may also
			request services based on the sections specified
			in this document. If a company doesn't agree with the widely recognized
            and community derived best practices set out in this document (or hasn't even read it) 
            you may want to reconsider the services!
			</para>
		</sect3>
		<sect3>
			<title>Testing Systems</title>
			<para>
			We anticipate security professionals and systems
			owners using this document as a template for
			testing. By a template we refer to using the sections
			outlined as a checklist or as the basis of a testing
			plan. Sections are split into a logical order for
			this purpose.  Testing without requirements is of
			course an oxymoron. What do you test against? What
			are you testing for? If this document is used in
			this way, we anticipate a functional questionnaire
			of system requirements to drive the process.  As a
			complement to this document, the OWASP Testing
			Framework group is working on a comprehensive web
			application methodology that covers both "white box"
			(source code analysis) and "black box" (penetration
			test) analysis.
			</para>
		</sect3>
	</sect2>
	<sect2>
		<title>What This Document Is Not</title>
		<para>
		This document is most definitely not a silver bullet! Web
		applications and services are almost all unique in their design and in
		their implementation. By covering all items in this document
		it may still be possible that you will have significant security
		vulnerabilities that have not been addressed. In short,
		implementing this document is no guarantee of security. It may also 
		not cover items that are important to you and your application environment.  
		However, we do think it will go a long way toward helping the audience
		achieve their desired state.
		</para>
	</sect2>
	<sect2>
		<title>How to Contribute and Feedback</title>
		<para>
		If you are a subject matter expert, feel there is a topic
		you would like included or that can be improved and are volunteering to author or
		are able to edit this document in any way, we want to hear
		from you. All content must be original and the copyright assigned to the 
                Free Software Foundation. The document is produced using DocBook at Sourceforge 
                and you should ideally be able to use CVS over SSH to submit your content. In some case 
                we can do this for you. Please email guide-editors@owasp.org with your Sourceforge ID, your 
                ideas and some background information on you or your company. You can also view the 
                project mailing list archives at http://www.sourceforge.net/projects/owasp/
		</para>
	</sect2>
</sect1>
</chapter>

