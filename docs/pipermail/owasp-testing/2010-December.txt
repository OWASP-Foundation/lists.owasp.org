From lode at vanstechelman.eu  Wed Dec  1 08:01:51 2010
From: lode at vanstechelman.eu (Lode Vanstechelman)
Date: Wed, 1 Dec 2010 14:01:51 +0100
Subject: [Owasp-testing] Change proposal for v4: Logout management
Message-ID: <AANLkTi=Pg29fBqq4CDTFvsK906Z5vTuS5tSDP2=tVi8r@mail.gmail.com>

Hi everybody,

When using the testing guide, I find it a bit strange to find logout
management in the authentication section.
I would find it easier to find it in the session management section, since
testing the logout functionality is testing whether sessions are still valid
or not.

Therefore, I would like to propose to split the section OWASP-AT-007
(Testing for Logout and Browser Cache Management) in 2 sections:
- Testing for Browser Cache Management (OWASP-AT-007)
- Testing for Logout Management (OWASP-SM-006)

What do you think?

Kind regards,
Lode
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-testing/attachments/20101201/48d0bd48/attachment.html 

From kevin.horvath at gmail.com  Wed Dec  1 08:25:04 2010
From: kevin.horvath at gmail.com (Kevin Horvath)
Date: Wed, 1 Dec 2010 08:25:04 -0500
Subject: [Owasp-testing] Change proposal for v4: Logout management
In-Reply-To: <AANLkTi=Pg29fBqq4CDTFvsK906Z5vTuS5tSDP2=tVi8r@mail.gmail.com>
References: <AANLkTi=Pg29fBqq4CDTFvsK906Z5vTuS5tSDP2=tVi8r@mail.gmail.com>
Message-ID: <AANLkTi=d9yeAKMK4_CskijM0=t+mDF+bjrzowoWORUK2@mail.gmail.com>

Makes sense...I agree.

Kevin

On 12/1/10, Lode Vanstechelman <lode at vanstechelman.eu> wrote:
> Hi everybody,
>
> When using the testing guide, I find it a bit strange to find logout
> management in the authentication section.
> I would find it easier to find it in the session management section, since
> testing the logout functionality is testing whether sessions are still valid
> or not.
>
> Therefore, I would like to propose to split the section OWASP-AT-007
> (Testing for Logout and Browser Cache Management) in 2 sections:
> - Testing for Browser Cache Management (OWASP-AT-007)
> - Testing for Logout Management (OWASP-SM-006)
>
> What do you think?
>
> Kind regards,
> Lode
>

-- 
Sent from my mobile device

From jasoneflood at gmail.com  Wed Dec  1 08:59:04 2010
From: jasoneflood at gmail.com (Jason)
Date: Wed, 1 Dec 2010 13:59:04 +0000
Subject: [Owasp-testing] Change proposal for v4: Logout management
In-Reply-To: <AANLkTi=d9yeAKMK4_CskijM0=t+mDF+bjrzowoWORUK2@mail.gmail.com>
References: <AANLkTi=Pg29fBqq4CDTFvsK906Z5vTuS5tSDP2=tVi8r@mail.gmail.com>
	<AANLkTi=d9yeAKMK4_CskijM0=t+mDF+bjrzowoWORUK2@mail.gmail.com>
Message-ID: <85040340-4AF1-4292-9895-2EC27ABD7071@gmail.com>

I can see both sides, I support the move but it might be good to have a paragraph on subject in authentication that ended with, for more on logout management see ...

Sent from my iPhone

On Dec 1, 2010, at 1:25 PM, Kevin Horvath <kevin.horvath at gmail.com> wrote:

> Makes sense...I agree.
> 
> Kevin
> 
> On 12/1/10, Lode Vanstechelman <lode at vanstechelman.eu> wrote:
>> Hi everybody,
>> 
>> When using the testing guide, I find it a bit strange to find logout
>> management in the authentication section.
>> I would find it easier to find it in the session management section, since
>> testing the logout functionality is testing whether sessions are still valid
>> or not.
>> 
>> Therefore, I would like to propose to split the section OWASP-AT-007
>> (Testing for Logout and Browser Cache Management) in 2 sections:
>> - Testing for Browser Cache Management (OWASP-AT-007)
>> - Testing for Logout Management (OWASP-SM-006)
>> 
>> What do you think?
>> 
>> Kind regards,
>> Lode
>> 
> 
> -- 
> Sent from my mobile device
> _______________________________________________
> Owasp-testing mailing list
> Owasp-testing at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-testing

From matt.tesauro at owasp.org  Thu Dec  2 14:53:23 2010
From: matt.tesauro at owasp.org (Matt Tesauro)
Date: Thu, 02 Dec 2010 13:53:23 -0600
Subject: [Owasp-testing] Error on OWASP AT-004 page
Message-ID: <4CF7F933.9000209@owasp.org>

Looking at the Hydra command here:
http://www.owasp.org/index.php/Testing_for_Brute_Force_%28OWASP-AT-004%29
  (about 3/4 way down the page under "Brute force Attacks")

You'll see that it has the command:
./hydra -L users.txt -P words.txt www.site.com http-head /private/

This will issue HTTP 1.0 HEAD requests for /private/.  The problem is
that some hosts (I tested this on an IIS host) will reply with
a HTTP 501 Not Implemented response instead of actually brute forcing
basic auth.

If you change the command to:
./hydra -L users.txt -P words.txt www.site.com http-get /private/

it will send a HTTP GET request and will work as expected.

I don't know what server the example was run against but I know for IIS,
HEAD won't work.

BTW, that page is ranked #1 when you search for "hydra http basic auth"
so congrats for the testing guide being the reference of choice for that
phrase.

Cheers!

-- 
-- Matt Tesauro
OWASP Board Member
OWASP WTE Project Lead
http://www.owasp.org/index.php/Category:OWASP_Live_CD_Project
http://AppSecLive.org - Community and Download site

From viitimo at wallzone.net  Sat Dec  4 07:20:45 2010
From: viitimo at wallzone.net (Timo Viikki)
Date: Sat, 4 Dec 2010 14:20:45 +0200
Subject: [Owasp-testing] (no subject)
Message-ID: <201012041420.45483.viitimo@wallzone.net>



From pavol.luptak at nethemba.com  Sun Dec  5 16:23:05 2010
From: pavol.luptak at nethemba.com (Pavol Luptak)
Date: Sun, 5 Dec 2010 22:23:05 +0100
Subject: [Owasp-testing] Change proposal for v4: Logout management
In-Reply-To: <AANLkTi=Pg29fBqq4CDTFvsK906Z5vTuS5tSDP2=tVi8r@mail.gmail.com>
References: <AANLkTi=Pg29fBqq4CDTFvsK906Z5vTuS5tSDP2=tVi8r@mail.gmail.com>
Message-ID: <20101205212304.GA11464@core.nethemba.com>

Hi,

On Wed, Dec 01, 2010 at 02:01:51PM +0100, Lode Vanstechelman wrote:
>    When using the testing guide, I find it a bit strange to find logout
>    management in the authentication section.
>    I would find it easier to find it in the session management section, since
>    testing the logout functionality is testing whether sessions are still
>    valid or not.
>    Therefore, I would like to propose to split the section OWASP-AT-007
>    (Testing for Logout and Browser Cache Management) in 2 sections:
>    - Testing for Browser Cache Management (OWASP-AT-007)
>    - Testing for Logout Management (OWASP-SM-006)

Personally I like this idea, because "Logout" and "Browser Cache Management"
is a bit different topic. In the "Logout Management" it should be emphasized
the rules for secure logout (invalidating of the session both on server and
client side).

And we should also consider all other ways for storing cookies (see
http://samy.pl/evercookie/ ) and describe methods for their invalidation.

Pavol
-- 
Pavol Luptak, CISSP, CEH
OWASP Slovakia chapter leader
http://www.owasp.org/index.php/Slovakia
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3611 bytes
Desc: not available
Url : https://lists.owasp.org/pipermail/owasp-testing/attachments/20101205/69ccf053/attachment.bin 

From rasiak76 at live.co.uk  Wed Dec  8 11:07:21 2010
From: rasiak76 at live.co.uk (ras iak)
Date: Wed, 8 Dec 2010 16:07:21 +0000
Subject: [Owasp-testing] Recommendation Depth
Message-ID: <SNT138-w4758E5CE336FF851AEA66FFC2D0@phx.gbl>


Dear All, 
 
May I ask a question in relation to recommendation depth in your web app pen testing reports? 

Say for example you find a major SQLi flaw in a web app you are testing that allows somebody to bypass authentication and gain unauthorised access to the app you are testing. How far do you go with your recommendation to fix the problem. With proprietary apps whereby no vendor patch will fix the problem, as I see it you really need to give them some good advice how to fix the problem. 
 
However, as you are an independent 3rd party if you start re-writing their code have you just jeapordised your independence, and potentially set yourself up for issues if at a later date your code was found to have a flaw? Or do you just stick with generic recommendations and best practice to prevent SQLi, as opposed to really re engineering the code.
 
Would anyone be willing to share a recommendation so I can see what level of depth you are going to? 
 
Thanks 		 	   		  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-testing/attachments/20101208/e6497ae7/attachment.html 

From juan.calderon at ge.com  Wed Dec  8 11:13:25 2010
From: juan.calderon at ge.com (Calderon, Juan Carlos (GE, Corporate,
	consultant))
Date: Wed, 8 Dec 2010 11:13:25 -0500
Subject: [Owasp-testing] Recommendation Depth
In-Reply-To: <SNT138-w4758E5CE336FF851AEA66FFC2D0@phx.gbl>
References: <SNT138-w4758E5CE336FF851AEA66FFC2D0@phx.gbl>
Message-ID: <39BEE7C0B62C1C4283593C6C421BCBB40698D53D@CINMLVEM16.e2k.ad.ge.com>

In my case you get a middle point, too high and the recommendation pretty much useless as you can find the same information on the internet. Too detailed and you get the issues you mention plus a lot of questioning on your programming maturity and development process.
 
Thus, explain the issue, explain some solutions in the context of the issue and give some code examples that might not be the same as the current software, but are close enough to figure out the actual solution. So the developers can do their work with a good understanding of both the issue and the solution.
 
Regards,

Juan C Calderon



________________________________

From: owasp-testing-bounces at lists.owasp.org [mailto:owasp-testing-bounces at lists.owasp.org] On Behalf Of ras iak
Sent: Mi?rcoles, 08 de Diciembre de 2010 10:07 a.m.
To: owasp-testing at lists.owasp.org
Subject: [Owasp-testing] Recommendation Depth



Dear All, 

 

May I ask a question in relation to recommendation depth in your web app pen testing reports? 


Say for example you find a major SQLi flaw in a web app you are testing that allows somebody to bypass authentication and gain unauthorised access to the app you are testing. How far do you go with your recommendation to fix the problem. With proprietary apps whereby no vendor patch will fix the problem, as I see it you really need to give them some good advice how to fix the problem. 

 

However, as you are an independent 3rd party if you start re-writing their code have you just jeapordised your independence, and potentially set yourself up for issues if at a later date your code was found to have a flaw? Or do you just stick with generic recommendations and best practice to prevent SQLi, as opposed to really re engineering the code.

 

Would anyone be willing to share a recommendation so I can see what level of depth you are going to? 

 

Thanks

-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-testing/attachments/20101208/b1ba5106/attachment.html 

From lode at vanstechelman.eu  Thu Dec  9 06:40:29 2010
From: lode at vanstechelman.eu (Lode Vanstechelman)
Date: Thu, 9 Dec 2010 12:40:29 +0100
Subject: [Owasp-testing] Recommendation Depth
In-Reply-To: <SNT138-w4758E5CE336FF851AEA66FFC2D0@phx.gbl>
References: <SNT138-w4758E5CE336FF851AEA66FFC2D0@phx.gbl>
Message-ID: <AANLkTimLTQXucGdz3P7K6GtXQySJWjH+4gmcekmm2H3U@mail.gmail.com>

If you are an independent 3rd party, then you cannot write code for the app
your testing since otherwise you would jeopardise your independence. This is
because if at a later stage you would have to test this application again,
then you're no longer an independent party since you would be pen testing
your own code.
Furthermore, as you mentioned yourself, writing code can make you liable in
some/most cases. It all depends on the contract you have.

You can also give multiple recommendations. For example, next to the
recommendation on how to prevent SQL injection flaws in your code, you could
also make a recommendation on installing a web application firewall which
would detect and block the SQL injection attempt.

Just make sure that the customer understands that he is ultimately
responsible for choosing how he wants to address the vulnerability.

Regards,

Lode

On 8 December 2010 17:07, ras iak <rasiak76 at live.co.uk> wrote:

>  Dear All,
>
>
>
> May I ask a question in relation to recommendation depth in your web app
> pen testing reports?
>
>
> Say for example you find a major SQLi flaw in a web app you are testing
> that allows somebody to bypass authentication and gain unauthorised access
> to the app you are testing. How far do you go with your recommendation to
> fix the problem. With proprietary apps whereby no vendor patch will fix the
> problem, as I see it you really need to give them some good advice how to
> fix the problem.
>
>
>
> However, as you are an independent 3rd party if you start re-writing their
> code have you just jeapordised your independence, and potentially set
> yourself up for issues if at a later date your code was found to have a
> flaw? Or do you just stick with generic recommendations and best practice to
> prevent SQLi, as opposed to really re engineering the code.
>
>
>
> Would anyone be willing to share a recommendation so I can see what level
> of depth you are going to?
>
>
>
> Thanks
>
> _______________________________________________
> Owasp-testing mailing list
> Owasp-testing at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-testing
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-testing/attachments/20101209/a8a72c53/attachment.html 

From yvanboily at gmail.com  Thu Dec  9 06:57:54 2010
From: yvanboily at gmail.com (Yvan Boily)
Date: Thu, 9 Dec 2010 03:57:54 -0800
Subject: [Owasp-testing] Recommendation Depth
In-Reply-To: <SNT138-w4758E5CE336FF851AEA66FFC2D0@phx.gbl>
References: <SNT138-w4758E5CE336FF851AEA66FFC2D0@phx.gbl>
Message-ID: <AANLkTi=7r-e0Zv6GPnXHGxkn93xx6ifta_e3NromxjNS@mail.gmail.com>

Hi Ras,

As a 3rd party I don't think it is appropriate to supplement a vulnerability
write-up with a patch or explicit code change, but my position is not based
on a concern for liability from a legal perspective.

Working on a point in time, 3rd party security assessment, you probably are
working from the perspective of someone who has been brought into the
project without all of the history and knowledge the system, the development
lifecycle, coding standards, etc.  In addition to this, there could be
challenges with the level of acceptance of your findings from the
development team, particularly in the case where you are seen as an
outsider.  Any of these things can result in developers focusing on finding
fault with your patch or code sample rather than focusing on the intent of
your recommendation which is to help them improve the product they are
working on.

When I detail a write-up on an assessment where I have access to code, I
will typically include specific guidance that calls out exactly what steps
need to be taken (for example: "on line 248, ensure that the parameter
pwHash is verified to only contain hexadecimal characters, and only the
correct number of characters in length for the hashing algorithm in use").
If there is a suitable framework reference for implementing my
recommendations I will link to that, and ensure that if the developers
require explicit assistance in developing or re-engineering the code I am
happy to work collaboratively with them on the issue.

On Wed, Dec 8, 2010 at 8:07 AM, ras iak <rasiak76 at live.co.uk> wrote:

>  Dear All,
>
>
>
> May I ask a question in relation to recommendation depth in your web app
> pen testing reports?
>
>
> Say for example you find a major SQLi flaw in a web app you are testing
> that allows somebody to bypass authentication and gain unauthorised access
> to the app you are testing. How far do you go with your recommendation to
> fix the problem. With proprietary apps whereby no vendor patch will fix the
> problem, as I see it you really need to give them some good advice how to
> fix the problem.
>
>
>
> However, as you are an independent 3rd party if you start re-writing their
> code have you just jeapordised your independence, and potentially set
> yourself up for issues if at a later date your code was found to have a
> flaw? Or do you just stick with generic recommendations and best practice to
> prevent SQLi, as opposed to really re engineering the code.
>
>
>
> Would anyone be willing to share a recommendation so I can see what level
> of depth you are going to?
>
>
>
> Thanks
>
> _______________________________________________
> Owasp-testing mailing list
> Owasp-testing at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-testing
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-testing/attachments/20101209/5af29a65/attachment-0001.html 

From viitimo at wallzone.net  Thu Dec 16 04:34:08 2010
From: viitimo at wallzone.net (Timo Viikki)
Date: Thu, 16 Dec 2010 11:34:08 +0200
Subject: [Owasp-testing] (no subject)
Message-ID: <201012161134.08432.viitimo@wallzone.net>



From viitimo at wallzone.net  Thu Dec 23 08:39:49 2010
From: viitimo at wallzone.net (Timo Viikki)
Date: Thu, 23 Dec 2010 15:39:49 +0200
Subject: [Owasp-testing] Contents of Owasp-testing digest...
Message-ID: <201012231539.49593.viitimo@wallzone.net>



From kranthi.kondle at gmail.com  Wed Dec 29 02:22:21 2010
From: kranthi.kondle at gmail.com (kranthi kondle)
Date: Wed, 29 Dec 2010 12:52:21 +0530
Subject: [Owasp-testing] kranthi.kondle@gmail.com
Message-ID: <AANLkTimdYYa1B3qXNA2ESiSTV=1oxUu_DtK3DfYKk-bG@mail.gmail.com>



From kranthi.kondle at gmail.com  Wed Dec 29 23:04:50 2010
From: kranthi.kondle at gmail.com (kranthi kondle)
Date: Thu, 30 Dec 2010 09:34:50 +0530
Subject: [Owasp-testing] (no subject)
Message-ID: <AANLkTim+H0gHK4PYwipdk+vNxb0GNGru0p5Au_9RMdde@mail.gmail.com>



