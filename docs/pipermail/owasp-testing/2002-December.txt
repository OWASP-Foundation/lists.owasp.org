From bill at owasp.org  Mon Dec  2 08:56:34 2002
From: bill at owasp.org (bill)
Date: Mon, 02 Dec 2002 08:56:34 -0500 (EST)
Subject: [OWASP-TESTING] Re: Features
In-Reply-To: <200211270908.EAA06142@arkroyal.cnchost.com> from Mark Curphey <mark@curphey.com> on 29 Nov 2002 10:08:18 -0800
Message-ID: <200212021356.IAA21623@arkroyal.cnchost.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
Url: http://lists.owasp.org/pipermail/owasp-testing/attachments/20021202/4e9fd83c/attachment.pl 

From DEndler at iDefense.com  Tue Dec  3 13:52:29 2002
From: DEndler at iDefense.com (David Endler)
Date: Tue, 3 Dec 2002 13:52:29 -0500 
Subject: [OWASP-TESTING] Peer Review!
Message-ID: <A4FCADDE108AD611A4A70008C7A49E0D56C815@IDSRV10>

OK folks, here it is, the latest and greatest version of the OWASP Testing
Methodology: http://www.owasp.org/testing/TestingPeerReview0.6.sxw .  

Please take some time to rip into it and get me your document copy with
edits by Monday December 9th.  No section is out of bounds, please feel free
to add, delete, or modify content, structure, graphics, and style/grammar.

To edit this document, download OpenOffice from
http://www.openoffice.org/dev_docs/source/download.html
Make sure you enter your name in the installation for editing purposes.
After you open the document, please click on

Edit->Changes->Record and 
Edit->Changes->Show

and edit away! Thanks again for your efforts and contributions so far to
this project.  There are many people in industry anxiously awaiting our
first cut at this, believe it or not, and there has become a small buzz
surrounding this project.  This document is also going to be well integrated
with the webgoat project so that real live examples can be illustrated of
testing techniques.  Please make the effort to provide meaningful feedback
and edits by Monday, thanks.  Please email me with any questions or
technical difficulties.

-dave




From DEndler at iDefense.com  Tue Dec  3 13:59:10 2002
From: DEndler at iDefense.com (David Endler)
Date: Tue, 3 Dec 2002 13:59:10 -0500 
Subject: [OWASP-TESTING] OpenOffice download
Message-ID: <A4FCADDE108AD611A4A70008C7A49E0D56C817@IDSRV10>

sorry, a more direct link to the OpenOffice download:

http://www.openoffice.org/dev_docs/source/1.0.1/index.html#en

-dave



From mark at curphey.com  Tue Dec  3 14:16:38 2002
From: mark at curphey.com (Mark Curphey)
Date: Tue, 03 Dec 2002 14:16:38 -0500 (EST)
Subject: [OWASP-TESTING] Peer Review!
In-Reply-To: <A4FCADDE108AD611A4A70008C7A49E0D56C815@IDSRV10> from David Endler <DEndler@iDefense.com> on Tue, 3 Dec 2002 13:52:29 -0500
Message-ID: <200212031916.OAA08772@arkroyal.cnchost.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
Url: http://lists.owasp.org/pipermail/owasp-testing/attachments/20021203/a5d114b9/attachment.pl 

From zeno at cgisecurity.net  Tue Dec  3 14:14:46 2002
From: zeno at cgisecurity.net (zeno)
Date: Tue, 3 Dec 2002 14:14:46 -0500 (EST)
Subject: [OWASP-TESTING] Peer Review!
In-Reply-To: <no.id> from "Mark Curphey" at Dec 03, 2002 02:16:38 PM
Message-ID: <200212031914.gB3JEkk47309@cgisecurity.net>

> I will make my comments by Decmember the 9th and encourage everyone lese to do the same. If its anything like the guide that has now had over 600,000 downloads, its will get a lot of attention and be sure to be a classic ;-)

Ah I'd say the guide has had well over 800k downloads. When I hosted the main mirror I know it got
at least 200k-250k. 


- zeno


> 
> ---- David Endler <DEndler at iDefense.com> wrote:
> > OK folks, here it is, the latest and greatest version of the OWASP Testing
> > Methodology: http://www.owasp.org/testing/TestingPeerReview0.6.sxw .  
> > 
> > Please take some time to rip into it and get me your document copy with
> > edits by Monday December 9th.  No section is out of bounds, please feel free
> > to add, delete, or modify content, structure, graphics, and style/grammar.
> > 
> > To edit this document, download OpenOffice from
> > http://www.openoffice.org/dev_docs/source/download.html
> > Make sure you enter your name in the installation for editing purposes.
> > After you open the document, please click on
> > 
> > Edit->Changes->Record and 
> > Edit->Changes->Show
> > 
> > and edit away! Thanks again for your efforts and contributions so far to
> > this project.  There are many people in industry anxiously awaiting our
> > first cut at this, believe it or not, and there has become a small buzz
> > surrounding this project.  This document is also going to be well integrated
> > with the webgoat project so that real live examples can be illustrated of
> > testing techniques.  Please make the effort to provide meaningful feedback
> > and edits by Monday, thanks.  Please email me with any questions or
> > technical difficulties.
> > 
> > -dave
> > 
> > 
> > 
> > -------------------------------------------------------
> > This SF.net email is sponsored by: Microsoft Visual Studio.NET 
> > comprehensive development tool, built to increase your 
> > productivity. Try a free online hosted session at:
> > http://ads.sourceforge.net/cgi-bin/redirect.pl?micr0003en
> > _______________________________________________
> > owasp-testing mailing list
> > owasp-testing at lists.sourceforge.net
> > https://lists.sourceforge.net/lists/listinfo/owasp-testing
> > 
> > 
> 
> 
> -------------------------------------------------------
> This SF.net email is sponsored by: Microsoft Visual Studio.NET 
> comprehensive development tool, built to increase your 
> productivity. Try a free online hosted session at:
> http://ads.sourceforge.net/cgi-bin/redirect.pl?micr0003en
> _______________________________________________
> owasp-testing mailing list
> owasp-testing at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/owasp-testing
> 




From cedric.malecot at club-internet.fr  Tue Dec  3 15:03:24 2002
From: cedric.malecot at club-internet.fr (=?iso-8859-1?Q?C=E9dric_MALECOT?=)
Date: Tue, 3 Dec 2002 21:03:24 +0100
Subject: [OWASP-TESTING] OpenOffice download
References: <A4FCADDE108AD611A4A70008C7A49E0D56C817@IDSRV10>
Message-ID: <00bb01c29b07$09b6b380$bf87c2d4@standalone>

If I use the french version of OpenOffice, do you think it could cause
problems or not ?

----- Original Message -----
From: "David Endler" <DEndler at iDefense.com>
To: <owasp-testing at lists.sourceforge.net>
Sent: Tuesday, December 03, 2002 7:59 PM
Subject: [OWASP-TESTING] OpenOffice download


> sorry, a more direct link to the OpenOffice download:
>
> http://www.openoffice.org/dev_docs/source/1.0.1/index.html#en
>
> -dave
>
>
> -------------------------------------------------------
> This SF.net email is sponsored by: Microsoft Visual Studio.NET
> comprehensive development tool, built to increase your
> productivity. Try a free online hosted session at:
> http://ads.sourceforge.net/cgi-bin/redirect.pl?micr0003en
> _______________________________________________
> owasp-testing mailing list
> owasp-testing at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/owasp-testing
>




From DEndler at iDefense.com  Tue Dec  3 15:30:40 2002
From: DEndler at iDefense.com (David Endler)
Date: Tue, 3 Dec 2002 15:30:40 -0500 
Subject: [OWASP-TESTING] OpenOffice download
Message-ID: <A4FCADDE108AD611A4A70008C7A49E0D56C823@IDSRV10>

It should be fine, go ahead and use it.

-dave

> -----Original Message-----
> From: owasp-testing-admin at lists.sourceforge.net
> [mailto:owasp-testing-admin at lists.sourceforge.net]On Behalf Of C?dric
> MALECOT
> Sent: Tuesday, December 03, 2002 3:03 PM
> To: David Endler; owasp-testing at lists.sourceforge.net
> Subject: Re: [OWASP-TESTING] OpenOffice download
> 
> 
> If I use the french version of OpenOffice, do you think it could cause
> problems or not ?
> 
> ----- Original Message -----
> From: "David Endler" <DEndler at iDefense.com>
> To: <owasp-testing at lists.sourceforge.net>
> Sent: Tuesday, December 03, 2002 7:59 PM
> Subject: [OWASP-TESTING] OpenOffice download
> 
> 
> > sorry, a more direct link to the OpenOffice download:
> >
> > http://www.openoffice.org/dev_docs/source/1.0.1/index.html#en
> >
> > -dave
> >
> >
> > -------------------------------------------------------
> > This SF.net email is sponsored by: Microsoft Visual Studio.NET
> > comprehensive development tool, built to increase your
> > productivity. Try a free online hosted session at:
> > http://ads.sourceforge.net/cgi-bin/redirect.pl?micr0003en
> > _______________________________________________
> > owasp-testing mailing list
> > owasp-testing at lists.sourceforge.net
> > https://lists.sourceforge.net/lists/listinfo/owasp-testing
> >
> 
> 
> 
> -------------------------------------------------------
> This SF.net email is sponsored by: Microsoft Visual Studio.NET 
> comprehensive development tool, built to increase your 
> productivity. Try a free online hosted session at:
> http://ads.sourceforge.net/cgi-bin/redirect.pl?micr0003en
> _______________________________________________
> owasp-testing mailing list
> owasp-testing at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/owasp-testing
> 



From DEndler at iDefense.com  Tue Dec  3 15:49:09 2002
From: DEndler at iDefense.com (David Endler)
Date: Tue, 3 Dec 2002 15:49:09 -0500 
Subject: [OWASP-TESTING] new member
Message-ID: <A4FCADDE108AD611A4A70008C7A49E0D56C828@IDSRV10>

Just wanted to briefly introduce a late joiner to the group who has
graciously agreed to help out with the peer review stage.  Andrew Jaquith is
a program director at @stake who manages a variety of consulting efforts,
including web app assessments. You may also know him as the author of "The
Security of Applications: Not All Are Created Equal" which has been recently
discussed on the webappsec list.  

http://www.atstake.com/research/reports/acrobat/atstake_app_unequal.pdf

Welcome Andrew.

-dave






From zeno at cgisecurity.net  Tue Dec  3 16:03:28 2002
From: zeno at cgisecurity.net (zeno)
Date: Tue, 3 Dec 2002 16:03:28 -0500 (EST)
Subject: [OWASP-TESTING] new member
In-Reply-To: <no.id> from "David Endler" at Dec 03, 2002 03:49:09 PM
Message-ID: <200212032103.gB3L3S549571@cgisecurity.net>

Hrm I think I met him once at the NH SWANH conference. Welcome aboard!

- zeno


> 
> Just wanted to briefly introduce a late joiner to the group who has
> graciously agreed to help out with the peer review stage.  Andrew Jaquith is
> a program director at @stake who manages a variety of consulting efforts,
> including web app assessments. You may also know him as the author of "The
> Security of Applications: Not All Are Created Equal" which has been recently
> discussed on the webappsec list.  
> 
> http://www.atstake.com/research/reports/acrobat/atstake_app_unequal.pdf
> 
> Welcome Andrew.
> 
> -dave
> 
> 
> 
> 
> 
> -------------------------------------------------------
> This SF.net email is sponsored by: Microsoft Visual Studio.NET 
> comprehensive development tool, built to increase your 
> productivity. Try a free online hosted session at:
> http://ads.sourceforge.net/cgi-bin/redirect.pl?micr0003en
> _______________________________________________
> owasp-testing mailing list
> owasp-testing at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/owasp-testing
> 




From zeno at cgisecurity.net  Tue Dec  3 19:54:04 2002
From: zeno at cgisecurity.net (zeno)
Date: Tue, 3 Dec 2002 19:54:04 -0500 (EST)
Subject: [OWASP-TESTING] Paper review
In-Reply-To: <no.id> from "David Endler" at Dec 03, 2002 03:49:09 PM
Message-ID: <200212040054.gB40s4554098@cgisecurity.net>

Hola,


"Regulatory requirements"

You wanted some examples of country regulations. Why don't we mention crypto export limitations?
Great example that should be covered. Maybe something about the bill passed in the 1990's about
illegal export of strong encryption outside the USA bla bla bla .


Moving on (nice graphs BTW :p)

The image looks fine near the Intro to owaps testing methodology. Anyone else object?

Interviewing the stakeholders is a nice touch.

*maybe* have a flowchart containing "Obtaining documentation".
 People like perty easy to understand pictures :)

 Under obtaining source code perhaps mention that gaining sourcecode via blackboxing may be possible.
A simple example could be exploiting a perl script and having it load itself bah.pl?file=../bah.pl.
This can happen with other interprated languages also like ASP, perl, python, etc..
Nothing to talk to much in detail though.

Under preparing tools in that list maybe we should mention something in regards to checking
for permissions of files? File handle monitors seems broad like "I am monitoring what is used" but
doesn't immediatly ring the bell of "should check permissions in regards to local, roaming, and public(everyone) users.

Under listening http ports

You give tips for checking ports 80 and 443. Perhaps mention 8080 since it usually is a proxy port,
or alt webserver port. Perhaps "test for proxy usage" *maybe*

Under server versioning I would include "http banner order, default error pages, max connections, etc..)
I'm actually working on a NICE big detailed paper on fingerprinting webservers. It will cover manually
and Ihope fr it to be rather extensive. (also see whitehatsec.com blahat server fingerprinter tool)


HTTP Server extensions

Also add apache modulkes to this. Seems a little to IIS'ish to me.


HTTP Methods supported

You ask if we should provide examples on each. Obviously it could be helpful. Perhaps include
HEAD, GET, and POST. As much as I'd like to learn more about TRACE this document is a web security paper
and unless we dedicate
alot of time (like lan mapping/cache networks) perhaps we should limit it to the 3 most popular/used methods.


Old, Backup or un-referenced files

Include that smome editors create files like file.txt~ when being edited. Perhaps include a general "editor" reference.


File extension Handling

It mentions http://www.host.com. May want to do http://host/ for legal reasons? Same with rest of document.


Unsafe modules

Everything from SQL access, usernames/passwords to sections of your site, to paths to important files can be obtained both locally, and in some cases(when specifically allowed) remotely.

perhaps make (when specifically allowed, or misconfigured). People don't say "Hey why don't I misconfigure
my machine for people to hack me with".


Page 38

n this example we are going to send a request to a news application which includes data from other file and displays it.

I assume is

"includes data from another file and displays it"


Direct OS commands

Nice use of showing which functions to watch out for. 



I would also perhaps add more flowcharts or something along those lines. Yeah it sounds silly but
when I'm reading a 60+ page document flowcharts are a nice break and re etterate what I just read.
If I'm sounding like a moron just let me know I'm tired :p

- bob

ps: looks good




From randolph at seawa.org.au  Tue Dec  3 23:29:38 2002
From: randolph at seawa.org.au (Nick Randolph)
Date: Wed, 4 Dec 2002 12:29:38 +0800
Subject: [OWASP-TESTING] Paper review
Message-ID: <2A7BEE31ED0FFF40AE0C4E68A53AB26504E5FD@ntserver.seawa.org.au>

David and others

Firstly I would like to apologise for not having taken an active role in this project until now.  I have however just looked at the latest release and it appears to be very impressive.

A couple of initial comments:

1)	Coming from a software engineering background (rather than a purely testing and/or security background) one of the areas that we focus on is the integration of testing into product development.  In line with most Agile product development methodologies we believe that testing should be done in parallel (if not before - ie preparation of test cases) with product development.  From what I have read to date, it appears as if there is a focus on post-development security testing.  In fact, to quote (pg 17 - Implementation review) - "An implementation review assumes the tester actually has a "finished" web application/component/service to use as his 'target'".  Whether this was the intention or not, it conveys the message that this should be done after the development has been completed.

2)	The section titled "Implementation Review" is essentially where the actual testing is done.  Is the word "review" appropriate.  Development life cycles typically follow the requirements-design-build-test cycle (even with the Agile methodologies that use micro cycles).  Would it not be appropriate to have a similar flow eg.  Application review (determines testing requirements), Test design and planning (develops Test plan), Test execution (equivalent to Implementation review) and Results Analysis.

3)	The section entitles "Security Management Review" is really a review of the processes in place within the organisation to ensure security is maintained and improved over time.  It might be better to reflect this in the title with some mention of Process Improvement (countless Quality/Process standards can be quoted here!!)

Nick

-----Original Message-----
From: zeno [mailto:zeno at cgisecurity.net]
Sent: Wednesday, 4 December 2002 8:54 AM
To: David Endler
Cc: 'owasp-testing at lists.sourceforge.net'
Subject: [OWASP-TESTING] Paper review


Hola,


"Regulatory requirements"

You wanted some examples of country regulations. Why don't we mention crypto export limitations?
Great example that should be covered. Maybe something about the bill passed in the 1990's about
illegal export of strong encryption outside the USA bla bla bla .


Moving on (nice graphs BTW :p)

The image looks fine near the Intro to owaps testing methodology. Anyone else object?

Interviewing the stakeholders is a nice touch.

*maybe* have a flowchart containing "Obtaining documentation".
 People like perty easy to understand pictures :)

 Under obtaining source code perhaps mention that gaining sourcecode via blackboxing may be possible.
A simple example could be exploiting a perl script and having it load itself bah.pl?file=../bah.pl.
This can happen with other interprated languages also like ASP, perl, python, etc..
Nothing to talk to much in detail though.

Under preparing tools in that list maybe we should mention something in regards to checking
for permissions of files? File handle monitors seems broad like "I am monitoring what is used" but
doesn't immediatly ring the bell of "should check permissions in regards to local, roaming, and public(everyone) users.

Under listening http ports

You give tips for checking ports 80 and 443. Perhaps mention 8080 since it usually is a proxy port,
or alt webserver port. Perhaps "test for proxy usage" *maybe*

Under server versioning I would include "http banner order, default error pages, max connections, etc..)
I'm actually working on a NICE big detailed paper on fingerprinting webservers. It will cover manually
and Ihope fr it to be rather extensive. (also see whitehatsec.com blahat server fingerprinter tool)


HTTP Server extensions

Also add apache modulkes to this. Seems a little to IIS'ish to me.


HTTP Methods supported

You ask if we should provide examples on each. Obviously it could be helpful. Perhaps include
HEAD, GET, and POST. As much as I'd like to learn more about TRACE this document is a web security paper
and unless we dedicate
alot of time (like lan mapping/cache networks) perhaps we should limit it to the 3 most popular/used methods.


Old, Backup or un-referenced files

Include that smome editors create files like file.txt~ when being edited. Perhaps include a general "editor" reference.


File extension Handling

It mentions http://www.host.com. May want to do http://host/ for legal reasons? Same with rest of document.


Unsafe modules

Everything from SQL access, usernames/passwords to sections of your site, to paths to important files can be obtained both locally, and in some cases(when specifically allowed) remotely.

perhaps make (when specifically allowed, or misconfigured). People don't say "Hey why don't I misconfigure
my machine for people to hack me with".


Page 38

n this example we are going to send a request to a news application which includes data from other file and displays it.

I assume is

"includes data from another file and displays it"


Direct OS commands

Nice use of showing which functions to watch out for. 



I would also perhaps add more flowcharts or something along those lines. Yeah it sounds silly but
when I'm reading a 60+ page document flowcharts are a nice break and re etterate what I just read.
If I'm sounding like a moron just let me know I'm tired :p

- bob

ps: looks good



-------------------------------------------------------
This SF.net email is sponsored by: Microsoft Visual Studio.NET 
comprehensive development tool, built to increase your 
productivity. Try a free online hosted session at:
http://ads.sourceforge.net/cgi-bin/redirect.pl?micr0003en
_______________________________________________
owasp-testing mailing list
owasp-testing at lists.sourceforge.net
https://lists.sourceforge.net/lists/listinfo/owasp-testing



From mark at curphey.com  Tue Dec  3 23:48:26 2002
From: mark at curphey.com (Mark Curphey)
Date: 03 Dec 2002 20:48:26 -0800
Subject: [OWASP-TESTING] Paper review
In-Reply-To: <2A7BEE31ED0FFF40AE0C4E68A53AB26504E5FD@ntserver.seawa.org.au>
References: <2A7BEE31ED0FFF40AE0C4E68A53AB26504E5FD@ntserver.seawa.org.au>
Message-ID: <1038977307.1635.168.camel@localhost.localdomain>

Nick

I haven't made my comments yet but I couldn't agree with you more. You
are spot on. And one of the things OWASP needs to do is align with more
general developers and fit into their well established and mature best
practices that are purveyed in the industry. The security industry is
very behind in this I am afraid to say. 

I think this is a really important point.

Thanks

Mark


On Tue, 2002-12-03 at 20:29, Nick Randolph wrote:
> David and others
> 
> Firstly I would like to apologise for not having taken an active role in this project until now.  I have however just looked at the latest release and it appears to be very impressive.
> 
> A couple of initial comments:
> 
> 1)	Coming from a software engineering background (rather than a purely testing and/or security background) one of the areas that we focus on is the integration of testing into product development.  In line with most Agile product development methodologies we believe that testing should be done in parallel (if not before - ie preparation of test cases) with product development.  From what I have read to date, it appears as if there is a focus on post-development security testing.  In fact, to quote (pg 17 - Implementation review) - "An implementation review assumes the tester actually has a "finished" web application/component/service to use as his 'target'".  Whether this was the intention or not, it conveys the message that this should be done after the development has been completed.
> 
> 2)	The section titled "Implementation Review" is essentially where the actual testing is done.  Is the word "review" appropriate.  Development life cycles typically follow the requirements-design-build-test cycle (even with the Agile methodologies that use micro cycles).  Would it not be appropriate to have a similar flow eg.  Application review (determines testing requirements), Test design and planning (develops Test plan), Test execution (equivalent to Implementation review) and Results Analysis.
> 
> 3)	The section entitles "Security Management Review" is really a review of the processes in place within the organisation to ensure security is maintained and improved over time.  It might be better to reflect this in the title with some mention of Process Improvement (countless Quality/Process standards can be quoted here!!)
> 
> Nick
> 
> -----Original Message-----
> From: zeno [mailto:zeno at cgisecurity.net]
> Sent: Wednesday, 4 December 2002 8:54 AM
> To: David Endler
> Cc: 'owasp-testing at lists.sourceforge.net'
> Subject: [OWASP-TESTING] Paper review
> 
> 
> Hola,
> 
> 
> "Regulatory requirements"
> 
> You wanted some examples of country regulations. Why don't we mention crypto export limitations?
> Great example that should be covered. Maybe something about the bill passed in the 1990's about
> illegal export of strong encryption outside the USA bla bla bla .
> 
> 
> Moving on (nice graphs BTW :p)
> 
> The image looks fine near the Intro to owaps testing methodology. Anyone else object?
> 
> Interviewing the stakeholders is a nice touch.
> 
> *maybe* have a flowchart containing "Obtaining documentation".
>  People like perty easy to understand pictures :)
> 
>  Under obtaining source code perhaps mention that gaining sourcecode via blackboxing may be possible.
> A simple example could be exploiting a perl script and having it load itself bah.pl?file=../bah.pl.
> This can happen with other interprated languages also like ASP, perl, python, etc..
> Nothing to talk to much in detail though.
> 
> Under preparing tools in that list maybe we should mention something in regards to checking
> for permissions of files? File handle monitors seems broad like "I am monitoring what is used" but
> doesn't immediatly ring the bell of "should check permissions in regards to local, roaming, and public(everyone) users.
> 
> Under listening http ports
> 
> You give tips for checking ports 80 and 443. Perhaps mention 8080 since it usually is a proxy port,
> or alt webserver port. Perhaps "test for proxy usage" *maybe*
> 
> Under server versioning I would include "http banner order, default error pages, max connections, etc..)
> I'm actually working on a NICE big detailed paper on fingerprinting webservers. It will cover manually
> and Ihope fr it to be rather extensive. (also see whitehatsec.com blahat server fingerprinter tool)
> 
> 
> HTTP Server extensions
> 
> Also add apache modulkes to this. Seems a little to IIS'ish to me.
> 
> 
> HTTP Methods supported
> 
> You ask if we should provide examples on each. Obviously it could be helpful. Perhaps include
> HEAD, GET, and POST. As much as I'd like to learn more about TRACE this document is a web security paper
> and unless we dedicate
> alot of time (like lan mapping/cache networks) perhaps we should limit it to the 3 most popular/used methods.
> 
> 
> Old, Backup or un-referenced files
> 
> Include that smome editors create files like file.txt~ when being edited. Perhaps include a general "editor" reference.
> 
> 
> File extension Handling
> 
> It mentions http://www.host.com. May want to do http://host/ for legal reasons? Same with rest of document.
> 
> 
> Unsafe modules
> 
> Everything from SQL access, usernames/passwords to sections of your site, to paths to important files can be obtained both locally, and in some cases(when specifically allowed) remotely.
> 
> perhaps make (when specifically allowed, or misconfigured). People don't say "Hey why don't I misconfigure
> my machine for people to hack me with".
> 
> 
> Page 38
> 
> n this example we are going to send a request to a news application which includes data from other file and displays it.
> 
> I assume is
> 
> "includes data from another file and displays it"
> 
> 
> Direct OS commands
> 
> Nice use of showing which functions to watch out for. 
> 
> 
> 
> I would also perhaps add more flowcharts or something along those lines. Yeah it sounds silly but
> when I'm reading a 60+ page document flowcharts are a nice break and re etterate what I just read.
> If I'm sounding like a moron just let me know I'm tired :p
> 
> - bob
> 
> ps: looks good
> 
> 
> 
> -------------------------------------------------------
> This SF.net email is sponsored by: Microsoft Visual Studio.NET 
> comprehensive development tool, built to increase your 
> productivity. Try a free online hosted session at:
> http://ads.sourceforge.net/cgi-bin/redirect.pl?micr0003en
> _______________________________________________
> owasp-testing mailing list
> owasp-testing at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/owasp-testing
> 
> 
> -------------------------------------------------------
> This SF.net email is sponsored by: Microsoft Visual Studio.NET 
> comprehensive development tool, built to increase your 
> productivity. Try a free online hosted session at:
> http://ads.sourceforge.net/cgi-bin/redirect.pl?micr0003en
> _______________________________________________
> owasp-testing mailing list
> owasp-testing at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/owasp-testing
> 





From mark at curphey.com  Wed Dec  4 01:20:29 2002
From: mark at curphey.com (Mark Curphey)
Date: 03 Dec 2002 22:20:29 -0800
Subject: [OWASP-TESTING] Paper review
In-Reply-To: <1038977307.1635.168.camel@localhost.localdomain>
References: <2A7BEE31ED0FFF40AE0C4E68A53AB26504E5FD@ntserver.seawa.org.au> 
	<1038977307.1635.168.camel@localhost.localdomain>
Message-ID: <1038982830.1631.275.camel@localhost.localdomain>

Another area of weakness maybe the lack of information on source code
auditing in a testing methodology. I personally think this is a the
really effective way to catch issues but not well described, practiced
or understood.

I have CC'd Jeff Williams of Aspect Security. I dare not ask him to
write the section as they have already committed loads with WebGoat but
Jeff maybe able to make some comments



On Tue, 2002-12-03 at 20:48, Mark Curphey wrote:
> Nick
> 
> I haven't made my comments yet but I couldn't agree with you more. You
> are spot on. And one of the things OWASP needs to do is align with more
> general developers and fit into their well established and mature best
> practices that are purveyed in the industry. The security industry is
> very behind in this I am afraid to say. 
> 
> I think this is a really important point.
> 
> Thanks
> 
> Mark
> 
> 
> On Tue, 2002-12-03 at 20:29, Nick Randolph wrote:
> > David and others
> > 
> > Firstly I would like to apologise for not having taken an active role in this project until now.  I have however just looked at the latest release and it appears to be very impressive.
> > 
> > A couple of initial comments:
> > 
> > 1)	Coming from a software engineering background (rather than a purely testing and/or security background) one of the areas that we focus on is the integration of testing into product development.  In line with most Agile product development methodologies we believe that testing should be done in parallel (if not before - ie preparation of test cases) with product development.  From what I have read to date, it appears as if there is a focus on post-development security testing.  In fact, to quote (pg 17 - Implementation review) - "An implementation review assumes the tester actually has a "finished" web application/component/service to use as his 'target'".  Whether this was the intention or not, it conveys the message that this should be done after the development has been completed.
> > 
> > 2)	The section titled "Implementation Review" is essentially where the actual testing is done.  Is the word "review" appropriate.  Development life cycles typically follow the requirements-design-build-test cycle (even with the Agile methodologies that use micro cycles).  Would it not be appropriate to have a similar flow eg.  Application review (determines testing requirements), Test design and planning (develops Test plan), Test execution (equivalent to Implementation review) and Results Analysis.
> > 
> > 3)	The section entitles "Security Management Review" is really a review of the processes in place within the organisation to ensure security is maintained and improved over time.  It might be better to reflect this in the title with some mention of Process Improvement (countless Quality/Process standards can be quoted here!!)
> > 
> > Nick
> > 
> > -----Original Message-----
> > From: zeno [mailto:zeno at cgisecurity.net]
> > Sent: Wednesday, 4 December 2002 8:54 AM
> > To: David Endler
> > Cc: 'owasp-testing at lists.sourceforge.net'
> > Subject: [OWASP-TESTING] Paper review
> > 
> > 
> > Hola,
> > 
> > 
> > "Regulatory requirements"
> > 
> > You wanted some examples of country regulations. Why don't we mention crypto export limitations?
> > Great example that should be covered. Maybe something about the bill passed in the 1990's about
> > illegal export of strong encryption outside the USA bla bla bla .
> > 
> > 
> > Moving on (nice graphs BTW :p)
> > 
> > The image looks fine near the Intro to owaps testing methodology. Anyone else object?
> > 
> > Interviewing the stakeholders is a nice touch.
> > 
> > *maybe* have a flowchart containing "Obtaining documentation".
> >  People like perty easy to understand pictures :)
> > 
> >  Under obtaining source code perhaps mention that gaining sourcecode via blackboxing may be possible.
> > A simple example could be exploiting a perl script and having it load itself bah.pl?file=../bah.pl.
> > This can happen with other interprated languages also like ASP, perl, python, etc..
> > Nothing to talk to much in detail though.
> > 
> > Under preparing tools in that list maybe we should mention something in regards to checking
> > for permissions of files? File handle monitors seems broad like "I am monitoring what is used" but
> > doesn't immediatly ring the bell of "should check permissions in regards to local, roaming, and public(everyone) users.
> > 
> > Under listening http ports
> > 
> > You give tips for checking ports 80 and 443. Perhaps mention 8080 since it usually is a proxy port,
> > or alt webserver port. Perhaps "test for proxy usage" *maybe*
> > 
> > Under server versioning I would include "http banner order, default error pages, max connections, etc..)
> > I'm actually working on a NICE big detailed paper on fingerprinting webservers. It will cover manually
> > and Ihope fr it to be rather extensive. (also see whitehatsec.com blahat server fingerprinter tool)
> > 
> > 
> > HTTP Server extensions
> > 
> > Also add apache modulkes to this. Seems a little to IIS'ish to me.
> > 
> > 
> > HTTP Methods supported
> > 
> > You ask if we should provide examples on each. Obviously it could be helpful. Perhaps include
> > HEAD, GET, and POST. As much as I'd like to learn more about TRACE this document is a web security paper
> > and unless we dedicate
> > alot of time (like lan mapping/cache networks) perhaps we should limit it to the 3 most popular/used methods.
> > 
> > 
> > Old, Backup or un-referenced files
> > 
> > Include that smome editors create files like file.txt~ when being edited. Perhaps include a general "editor" reference.
> > 
> > 
> > File extension Handling
> > 
> > It mentions http://www.host.com. May want to do http://host/ for legal reasons? Same with rest of document.
> > 
> > 
> > Unsafe modules
> > 
> > Everything from SQL access, usernames/passwords to sections of your site, to paths to important files can be obtained both locally, and in some cases(when specifically allowed) remotely.
> > 
> > perhaps make (when specifically allowed, or misconfigured). People don't say "Hey why don't I misconfigure
> > my machine for people to hack me with".
> > 
> > 
> > Page 38
> > 
> > n this example we are going to send a request to a news application which includes data from other file and displays it.
> > 
> > I assume is
> > 
> > "includes data from another file and displays it"
> > 
> > 
> > Direct OS commands
> > 
> > Nice use of showing which functions to watch out for. 
> > 
> > 
> > 
> > I would also perhaps add more flowcharts or something along those lines. Yeah it sounds silly but
> > when I'm reading a 60+ page document flowcharts are a nice break and re etterate what I just read.
> > If I'm sounding like a moron just let me know I'm tired :p
> > 
> > - bob
> > 
> > ps: looks good
> > 
> > 
> > 
> > -------------------------------------------------------
> > This SF.net email is sponsored by: Microsoft Visual Studio.NET 
> > comprehensive development tool, built to increase your 
> > productivity. Try a free online hosted session at:
> > http://ads.sourceforge.net/cgi-bin/redirect.pl?micr0003en
> > _______________________________________________
> > owasp-testing mailing list
> > owasp-testing at lists.sourceforge.net
> > https://lists.sourceforge.net/lists/listinfo/owasp-testing
> > 
> > 
> > -------------------------------------------------------
> > This SF.net email is sponsored by: Microsoft Visual Studio.NET 
> > comprehensive development tool, built to increase your 
> > productivity. Try a free online hosted session at:
> > http://ads.sourceforge.net/cgi-bin/redirect.pl?micr0003en
> > _______________________________________________
> > owasp-testing mailing list
> > owasp-testing at lists.sourceforge.net
> > https://lists.sourceforge.net/lists/listinfo/owasp-testing
> > 
> 
> 
> 
> 
> -------------------------------------------------------
> This SF.net email is sponsored by: Microsoft Visual Studio.NET 
> comprehensive development tool, built to increase your 
> productivity. Try a free online hosted session at:
> http://ads.sourceforge.net/cgi-bin/redirect.pl?micr0003en
> _______________________________________________
> owasp-testing mailing list
> owasp-testing at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/owasp-testing
> 





From mark at curphey.com  Wed Dec  4 02:21:48 2002
From: mark at curphey.com (Mark Curphey)
Date: 03 Dec 2002 23:21:48 -0800
Subject: [OWASP-TESTING] Notes on Testing
Message-ID: <1038986509.1635.337.camel@localhost.localdomain>

Crew,

Its late I am tired and so I haven't made this polite or politically 
correct. Pls forgive me before reading. Nothing is personal.

I will re-write into and what are web applications sections. I have to
do this for the Guide anyways.

Page 15 - Pretty diagram but not sure what it is trying to show ?

Page 16 / 66 - I think planning of each phase of a test occurs, its not
a discrete task. You plan the architecture assessment as well as an
implementation review.

I strongly (STRONGLY) think that there are discrete Requirements,
Architecture (design), Implementation and Management Reviews. There may
even be more phases we wish to call out. 

Section 5 should be removed for the same reasons as section 1

Planning a test - maybe this section should be replaced with an overview
about testing, planning, organizing etc

white box, black box, static whitebox....urgh i hate those terms. If we
are going to use them then we need to really clearly define them in a
glossary so we are all on the same page as to exactly what they mean. I
hate them ;-)

Based on above comments the requirements review and architecture
analysis doesn't exist

Page 17 / 66 - agree with Nicks comments earlier. I think this is like
25% at most of a good assessment methodology. Its the after the fact
tactical testing. 

23 / 66 - obtaining source code - this should be the norm not the ab
norm. It says in large tests. I don't think thats true. It also says in
addition to pen tests. It should read as part of the testing life cycle
including requirements, management etc

24 / 66 - this is a UML sequence diagram and we should use well
understood language and syntax I think

25 / 66 - Infr review - I was thinking this would include more stuff
like if the app uses getHostByName() and not GetHostbyIP() or doesn't
synchronize tie clocks making timing attacks possible

26 / 66 - everyone should have dev, qa, pre-prod and prod. I would
strongly argue that most testing is well before prod. Real data should
never (NEVER) be used in testing. This section IMHO needs a big rewrite.
This is all good and well for momandpops.php but....

27 - 66 - decompilers ? This is testing not hacking ;-) I think this
section should explain how browser proxies work, how automated scanners
are combos of automated http_user agents and fuzzers etc. It needs to
outline source code analyzers. There are technical tools and checklist
tools for the management reviews as well. 

DCMA - should be moved into an overview section if not removed. DCMA is
about reverse engineering stuff, not examining stuff with permission
unless I am missing the point

33 / 66 - webdav is an http extension and not an httpd extension.
Options will return that baby ;-)

SSL - again this is stuff an arch review and implementation / code
review combined are best suited for. I am not sure I get the comments
about making sure an entire page is SSL. You should make sure your
applications transport matches your requirements but in many cases only
sending data back may require a tunnel. This section should explain the
SSL helo, how the cipher suites are determined and how you find
algorithms supported and key lengths etc. Saying you should block old
SSL (which I assume you mean 2) is interesting. Why ? Let the SSL
negotiate the best it can do and allow your customers to make the choice
with informed info.Summary, this section should show how to determine
SSL version, cipher specs, and cert validity.And its all in the ssl
headers and I can knock up a quick Java app if you want as a demo. JSSE
is a king.

SSL requirements by source code on each page ?

And on that section its back to the code review / arch review / pen test
thing. Looking at this from the outside is much harder than inspecting
the code and arch. Have a good MVC model and you know one thing. Look at
JSSE and you know another

33 /66 . old backup unreferenced files. This doesn't explain how to
test. Too much guide type explanation. I think we should provide a list
of extensions mapped to apps asa to asp for instance from FP, and then
explain how from a crawled site and common file names you fuzz requests
and look for an http 200 to come back.

Less mature code - bit of a leap of faith isn't it ?

This is only true if you build on same box as you deploy anyway which is
a big no no IMHO. We cant just say the tools used to spider should check
for this. Its a cop out ;-)

38 - logging 0- again as a general comment we should be driving people
to testing against logging requirements or best practice. The logging
section is a valid point but what about testing to make sure failed
logins actual log, about malicious input creates an event etc

OK only half way thru and probably offended 90% of people by now, but
candid comments is the only way to go. If anyone finds this helpful I
will do the rest, if not tell me or ignore.



 






From javapro13 at hotmail.com  Wed Dec  4 13:21:15 2002
From: javapro13 at hotmail.com (Kartik Trivedi)
Date: Wed, 4 Dec 2002 10:21:15 -0800
Subject: [OWASP-TESTING] Notes on Testing
References: <1038986509.1635.337.camel@localhost.localdomain>
Message-ID: <OE55qqh0aauS3FvSz2K00007b0c@hotmail.com>

Hi Mark,

The guide is shaping out great....
Sorry for the lack of participation...was a bit busy....But I will make up
for it ;)

Attached is a small section on xss. Let me know what you think.

Thanks
Kartik



----- Original Message -----
From: "Mark Curphey" <mark at curphey.com>
To: <owasp-testing at lists.sourceforge.net>
Sent: Tuesday, December 03, 2002 11:21 PM
Subject: [OWASP-TESTING] Notes on Testing


> Crew,
>
> Its late I am tired and so I haven't made this polite or politically
> correct. Pls forgive me before reading. Nothing is personal.
>
> I will re-write into and what are web applications sections. I have to
> do this for the Guide anyways.
>
> Page 15 - Pretty diagram but not sure what it is trying to show ?
>
> Page 16 / 66 - I think planning of each phase of a test occurs, its not
> a discrete task. You plan the architecture assessment as well as an
> implementation review.
>
> I strongly (STRONGLY) think that there are discrete Requirements,
> Architecture (design), Implementation and Management Reviews. There may
> even be more phases we wish to call out.
>
> Section 5 should be removed for the same reasons as section 1
>
> Planning a test - maybe this section should be replaced with an overview
> about testing, planning, organizing etc
>
> white box, black box, static whitebox....urgh i hate those terms. If we
> are going to use them then we need to really clearly define them in a
> glossary so we are all on the same page as to exactly what they mean. I
> hate them ;-)
>
> Based on above comments the requirements review and architecture
> analysis doesn't exist
>
> Page 17 / 66 - agree with Nicks comments earlier. I think this is like
> 25% at most of a good assessment methodology. Its the after the fact
> tactical testing.
>
> 23 / 66 - obtaining source code - this should be the norm not the ab
> norm. It says in large tests. I don't think thats true. It also says in
> addition to pen tests. It should read as part of the testing life cycle
> including requirements, management etc
>
> 24 / 66 - this is a UML sequence diagram and we should use well
> understood language and syntax I think
>
> 25 / 66 - Infr review - I was thinking this would include more stuff
> like if the app uses getHostByName() and not GetHostbyIP() or doesn't
> synchronize tie clocks making timing attacks possible
>
> 26 / 66 - everyone should have dev, qa, pre-prod and prod. I would
> strongly argue that most testing is well before prod. Real data should
> never (NEVER) be used in testing. This section IMHO needs a big rewrite.
> This is all good and well for momandpops.php but....
>
> 27 - 66 - decompilers ? This is testing not hacking ;-) I think this
> section should explain how browser proxies work, how automated scanners
> are combos of automated http_user agents and fuzzers etc. It needs to
> outline source code analyzers. There are technical tools and checklist
> tools for the management reviews as well.
>
> DCMA - should be moved into an overview section if not removed. DCMA is
> about reverse engineering stuff, not examining stuff with permission
> unless I am missing the point
>
> 33 / 66 - webdav is an http extension and not an httpd extension.
> Options will return that baby ;-)
>
> SSL - again this is stuff an arch review and implementation / code
> review combined are best suited for. I am not sure I get the comments
> about making sure an entire page is SSL. You should make sure your
> applications transport matches your requirements but in many cases only
> sending data back may require a tunnel. This section should explain the
> SSL helo, how the cipher suites are determined and how you find
> algorithms supported and key lengths etc. Saying you should block old
> SSL (which I assume you mean 2) is interesting. Why ? Let the SSL
> negotiate the best it can do and allow your customers to make the choice
> with informed info.Summary, this section should show how to determine
> SSL version, cipher specs, and cert validity.And its all in the ssl
> headers and I can knock up a quick Java app if you want as a demo. JSSE
> is a king.
>
> SSL requirements by source code on each page ?
>
> And on that section its back to the code review / arch review / pen test
> thing. Looking at this from the outside is much harder than inspecting
> the code and arch. Have a good MVC model and you know one thing. Look at
> JSSE and you know another
>
> 33 /66 . old backup unreferenced files. This doesn't explain how to
> test. Too much guide type explanation. I think we should provide a list
> of extensions mapped to apps asa to asp for instance from FP, and then
> explain how from a crawled site and common file names you fuzz requests
> and look for an http 200 to come back.
>
> Less mature code - bit of a leap of faith isn't it ?
>
> This is only true if you build on same box as you deploy anyway which is
> a big no no IMHO. We cant just say the tools used to spider should check
> for this. Its a cop out ;-)
>
> 38 - logging 0- again as a general comment we should be driving people
> to testing against logging requirements or best practice. The logging
> section is a valid point but what about testing to make sure failed
> logins actual log, about malicious input creates an event etc
>
> OK only half way thru and probably offended 90% of people by now, but
> candid comments is the only way to go. If anyone finds this helpful I
> will do the rest, if not tell me or ignore.
>
>
>
>
>
>
>
>
>
> -------------------------------------------------------
> This SF.net email is sponsored by: Microsoft Visual Studio.NET
> comprehensive development tool, built to increase your
> productivity. Try a free online hosted session at:
> http://ads.sourceforge.net/cgi-bin/redirect.pl?micr0003en
> _______________________________________________
> owasp-testing mailing list
> owasp-testing at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/owasp-testing
>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: xss.txt
Url: http://lists.owasp.org/pipermail/owasp-testing/attachments/20021204/21aa4915/attachment.txt 

From DEndler at iDefense.com  Wed Dec  4 16:37:46 2002
From: DEndler at iDefense.com (David Endler)
Date: Wed, 4 Dec 2002 16:37:46 -0500 
Subject: [OWASP-TESTING] Notes on Testing
Message-ID: <A4FCADDE108AD611A4A70008C7A49E0D56C842@IDSRV10>

Kartik,

This is a good start, but still the slant and style is more appropriate for
the Requirements Guide.  What we're looking for is a more methodical
approach for how to check for XSS, not necessarily how to protect against
it.  I've asked Jeremy Poteet, another late joiner, to take a stab at the
XSS section and also provide his feedback.  Jeremy was actually the only
winner of the latest eweek OpenHack contest and discovered an XSS attack in
the system.  http://www.eweek.com/article2/0,3959,741368,00.asp . Welcome
Jeremy.

-dave

> -----Original Message-----
> From: owasp-testing-admin at lists.sourceforge.net
> [mailto:owasp-testing-admin at lists.sourceforge.net]On Behalf Of Kartik
> Trivedi
> Sent: Wednesday, December 04, 2002 1:21 PM
> To: Mark Curphey; owasp-testing at lists.sourceforge.net
> Subject: Re: [OWASP-TESTING] Notes on Testing
> 
> 
> Hi Mark,
> 
> The guide is shaping out great....
> Sorry for the lack of participation...was a bit busy....But I 
> will make up
> for it ;)
> 
> Attached is a small section on xss. Let me know what you think.
> 
> Thanks
> Kartik
> 
> 
> 
> ----- Original Message -----
> From: "Mark Curphey" <mark at curphey.com>
> To: <owasp-testing at lists.sourceforge.net>
> Sent: Tuesday, December 03, 2002 11:21 PM
> Subject: [OWASP-TESTING] Notes on Testing
> 
> 
> > Crew,
> >
> > Its late I am tired and so I haven't made this polite or politically
> > correct. Pls forgive me before reading. Nothing is personal.
> >
> > I will re-write into and what are web applications 
> sections. I have to
> > do this for the Guide anyways.
> >
> > Page 15 - Pretty diagram but not sure what it is trying to show ?
> >
> > Page 16 / 66 - I think planning of each phase of a test 
> occurs, its not
> > a discrete task. You plan the architecture assessment as well as an
> > implementation review.
> >
> > I strongly (STRONGLY) think that there are discrete Requirements,
> > Architecture (design), Implementation and Management 
> Reviews. There may
> > even be more phases we wish to call out.
> >
> > Section 5 should be removed for the same reasons as section 1
> >
> > Planning a test - maybe this section should be replaced 
> with an overview
> > about testing, planning, organizing etc
> >
> > white box, black box, static whitebox....urgh i hate those 
> terms. If we
> > are going to use them then we need to really clearly define 
> them in a
> > glossary so we are all on the same page as to exactly what 
> they mean. I
> > hate them ;-)
> >
> > Based on above comments the requirements review and architecture
> > analysis doesn't exist
> >
> > Page 17 / 66 - agree with Nicks comments earlier. I think 
> this is like
> > 25% at most of a good assessment methodology. Its the after the fact
> > tactical testing.
> >
> > 23 / 66 - obtaining source code - this should be the norm not the ab
> > norm. It says in large tests. I don't think thats true. It 
> also says in
> > addition to pen tests. It should read as part of the 
> testing life cycle
> > including requirements, management etc
> >
> > 24 / 66 - this is a UML sequence diagram and we should use well
> > understood language and syntax I think
> >
> > 25 / 66 - Infr review - I was thinking this would include more stuff
> > like if the app uses getHostByName() and not GetHostbyIP() 
> or doesn't
> > synchronize tie clocks making timing attacks possible
> >
> > 26 / 66 - everyone should have dev, qa, pre-prod and prod. I would
> > strongly argue that most testing is well before prod. Real 
> data should
> > never (NEVER) be used in testing. This section IMHO needs a 
> big rewrite.
> > This is all good and well for momandpops.php but....
> >
> > 27 - 66 - decompilers ? This is testing not hacking ;-) I think this
> > section should explain how browser proxies work, how 
> automated scanners
> > are combos of automated http_user agents and fuzzers etc. 
> It needs to
> > outline source code analyzers. There are technical tools 
> and checklist
> > tools for the management reviews as well.
> >
> > DCMA - should be moved into an overview section if not 
> removed. DCMA is
> > about reverse engineering stuff, not examining stuff with permission
> > unless I am missing the point
> >
> > 33 / 66 - webdav is an http extension and not an httpd extension.
> > Options will return that baby ;-)
> >
> > SSL - again this is stuff an arch review and implementation / code
> > review combined are best suited for. I am not sure I get 
> the comments
> > about making sure an entire page is SSL. You should make sure your
> > applications transport matches your requirements but in 
> many cases only
> > sending data back may require a tunnel. This section should 
> explain the
> > SSL helo, how the cipher suites are determined and how you find
> > algorithms supported and key lengths etc. Saying you should 
> block old
> > SSL (which I assume you mean 2) is interesting. Why ? Let the SSL
> > negotiate the best it can do and allow your customers to 
> make the choice
> > with informed info.Summary, this section should show how to 
> determine
> > SSL version, cipher specs, and cert validity.And its all in the ssl
> > headers and I can knock up a quick Java app if you want as 
> a demo. JSSE
> > is a king.
> >
> > SSL requirements by source code on each page ?
> >
> > And on that section its back to the code review / arch 
> review / pen test
> > thing. Looking at this from the outside is much harder than 
> inspecting
> > the code and arch. Have a good MVC model and you know one 
> thing. Look at
> > JSSE and you know another
> >
> > 33 /66 . old backup unreferenced files. This doesn't explain how to
> > test. Too much guide type explanation. I think we should 
> provide a list
> > of extensions mapped to apps asa to asp for instance from 
> FP, and then
> > explain how from a crawled site and common file names you 
> fuzz requests
> > and look for an http 200 to come back.
> >
> > Less mature code - bit of a leap of faith isn't it ?
> >
> > This is only true if you build on same box as you deploy 
> anyway which is
> > a big no no IMHO. We cant just say the tools used to spider 
> should check
> > for this. Its a cop out ;-)
> >
> > 38 - logging 0- again as a general comment we should be 
> driving people
> > to testing against logging requirements or best practice. 
> The logging
> > section is a valid point but what about testing to make sure failed
> > logins actual log, about malicious input creates an event etc
> >
> > OK only half way thru and probably offended 90% of people 
> by now, but
> > candid comments is the only way to go. If anyone finds this 
> helpful I
> > will do the rest, if not tell me or ignore.
> >
> >
> >
> >
> >
> >
> >
> >
> >
> > -------------------------------------------------------
> > This SF.net email is sponsored by: Microsoft Visual Studio.NET
> > comprehensive development tool, built to increase your
> > productivity. Try a free online hosted session at:
> > http://ads.sourceforge.net/cgi-bin/redirect.pl?micr0003en
> > _______________________________________________
> > owasp-testing mailing list
> > owasp-testing at lists.sourceforge.net
> > https://lists.sourceforge.net/lists/listinfo/owasp-testing
> >
> 



From DEndler at iDefense.com  Wed Dec  4 16:43:19 2002
From: DEndler at iDefense.com (David Endler)
Date: Wed, 4 Dec 2002 16:43:19 -0500 
Subject: [OWASP-TESTING] Notes on Testing
Message-ID: <A4FCADDE108AD611A4A70008C7A49E0D56C844@IDSRV10>

Great feedback, thanks Mark and Nick.  No hurt feelings whatsoever.  For the
future, what would be most helpful is for the sections that require a
rewrite in your mind, please take a stab at it in the actual document and
send me your edits.  Even if you can't produce the entire section, an
attempt at it would really help when piecing together everyone's
suggestions.

-dave

> -----Original Message-----
> From: owasp-testing-admin at lists.sourceforge.net
> [mailto:owasp-testing-admin at lists.sourceforge.net]On Behalf Of Mark
> Curphey
> Sent: Wednesday, December 04, 2002 2:22 AM
> To: owasp-testing at lists.sourceforge.net
> Subject: [OWASP-TESTING] Notes on Testing
> 
> 
> Crew,
> 
> Its late I am tired and so I haven't made this polite or politically 
> correct. Pls forgive me before reading. Nothing is personal.
> 
> I will re-write into and what are web applications sections. I have to
> do this for the Guide anyways.
> 
> Page 15 - Pretty diagram but not sure what it is trying to show ?
> 
> Page 16 / 66 - I think planning of each phase of a test 
> occurs, its not
> a discrete task. You plan the architecture assessment as well as an
> implementation review.
> 
> I strongly (STRONGLY) think that there are discrete Requirements,
> Architecture (design), Implementation and Management Reviews. 
> There may
> even be more phases we wish to call out. 
> 
> Section 5 should be removed for the same reasons as section 1
> 
> Planning a test - maybe this section should be replaced with 
> an overview
> about testing, planning, organizing etc
> 
> white box, black box, static whitebox....urgh i hate those 
> terms. If we
> are going to use them then we need to really clearly define them in a
> glossary so we are all on the same page as to exactly what 
> they mean. I
> hate them ;-)
> 
> Based on above comments the requirements review and architecture
> analysis doesn't exist
> 
> Page 17 / 66 - agree with Nicks comments earlier. I think this is like
> 25% at most of a good assessment methodology. Its the after the fact
> tactical testing. 
> 
> 23 / 66 - obtaining source code - this should be the norm not the ab
> norm. It says in large tests. I don't think thats true. It 
> also says in
> addition to pen tests. It should read as part of the testing 
> life cycle
> including requirements, management etc
> 
> 24 / 66 - this is a UML sequence diagram and we should use well
> understood language and syntax I think
> 
> 25 / 66 - Infr review - I was thinking this would include more stuff
> like if the app uses getHostByName() and not GetHostbyIP() or doesn't
> synchronize tie clocks making timing attacks possible
> 
> 26 / 66 - everyone should have dev, qa, pre-prod and prod. I would
> strongly argue that most testing is well before prod. Real data should
> never (NEVER) be used in testing. This section IMHO needs a 
> big rewrite.
> This is all good and well for momandpops.php but....
> 
> 27 - 66 - decompilers ? This is testing not hacking ;-) I think this
> section should explain how browser proxies work, how 
> automated scanners
> are combos of automated http_user agents and fuzzers etc. It needs to
> outline source code analyzers. There are technical tools and checklist
> tools for the management reviews as well. 
> 
> DCMA - should be moved into an overview section if not 
> removed. DCMA is
> about reverse engineering stuff, not examining stuff with permission
> unless I am missing the point
> 
> 33 / 66 - webdav is an http extension and not an httpd extension.
> Options will return that baby ;-)
> 
> SSL - again this is stuff an arch review and implementation / code
> review combined are best suited for. I am not sure I get the comments
> about making sure an entire page is SSL. You should make sure your
> applications transport matches your requirements but in many 
> cases only
> sending data back may require a tunnel. This section should 
> explain the
> SSL helo, how the cipher suites are determined and how you find
> algorithms supported and key lengths etc. Saying you should block old
> SSL (which I assume you mean 2) is interesting. Why ? Let the SSL
> negotiate the best it can do and allow your customers to make 
> the choice
> with informed info.Summary, this section should show how to determine
> SSL version, cipher specs, and cert validity.And its all in the ssl
> headers and I can knock up a quick Java app if you want as a 
> demo. JSSE
> is a king.
> 
> SSL requirements by source code on each page ?
> 
> And on that section its back to the code review / arch review 
> / pen test
> thing. Looking at this from the outside is much harder than inspecting
> the code and arch. Have a good MVC model and you know one 
> thing. Look at
> JSSE and you know another
> 
> 33 /66 . old backup unreferenced files. This doesn't explain how to
> test. Too much guide type explanation. I think we should 
> provide a list
> of extensions mapped to apps asa to asp for instance from FP, and then
> explain how from a crawled site and common file names you 
> fuzz requests
> and look for an http 200 to come back.
> 
> Less mature code - bit of a leap of faith isn't it ?
> 
> This is only true if you build on same box as you deploy 
> anyway which is
> a big no no IMHO. We cant just say the tools used to spider 
> should check
> for this. Its a cop out ;-)
> 
> 38 - logging 0- again as a general comment we should be driving people
> to testing against logging requirements or best practice. The logging
> section is a valid point but what about testing to make sure failed
> logins actual log, about malicious input creates an event etc
> 
> OK only half way thru and probably offended 90% of people by now, but
> candid comments is the only way to go. If anyone finds this helpful I
> will do the rest, if not tell me or ignore.
> 
> 
> 
>  
> 
> 
> 
> 
> 
> -------------------------------------------------------
> This SF.net email is sponsored by: Microsoft Visual Studio.NET 
> comprehensive development tool, built to increase your 
> productivity. Try a free online hosted session at:
> http://ads.sourceforge.net/cgi-bin/redirect.pl?micr0003en
> _______________________________________________
> owasp-testing mailing list
> owasp-testing at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/owasp-testing
> 



From DEndler at iDefense.com  Wed Dec  4 16:45:30 2002
From: DEndler at iDefense.com (David Endler)
Date: Wed, 4 Dec 2002 16:45:30 -0500 
Subject: [OWASP-TESTING] Paper review
Message-ID: <A4FCADDE108AD611A4A70008C7A49E0D56C845@IDSRV10>

Good feedback here far as well.  Sounds like you're saying we need more
pretty pictures to keep people interested ;-)

On another topic, does anyone feel comfortable making an attempt at SQL
injection?  

-dave

> -----Original Message-----
> From: owasp-testing-admin at lists.sourceforge.net
> [mailto:owasp-testing-admin at lists.sourceforge.net]On Behalf Of zeno
> Sent: Tuesday, December 03, 2002 7:54 PM
> To: David Endler
> Cc: 'owasp-testing at lists.sourceforge.net'
> Subject: [OWASP-TESTING] Paper review
> 
> 
> Hola,
> 
> 
> "Regulatory requirements"
> 
> You wanted some examples of country regulations. Why don't we 
> mention crypto export limitations?
> Great example that should be covered. Maybe something about 
> the bill passed in the 1990's about
> illegal export of strong encryption outside the USA bla bla bla .
> 
> 
> Moving on (nice graphs BTW :p)
> 
> The image looks fine near the Intro to owaps testing 
> methodology. Anyone else object?
> 
> Interviewing the stakeholders is a nice touch.
> 
> *maybe* have a flowchart containing "Obtaining documentation".
>  People like perty easy to understand pictures :)
> 
>  Under obtaining source code perhaps mention that gaining 
> sourcecode via blackboxing may be possible.
> A simple example could be exploiting a perl script and having 
> it load itself bah.pl?file=../bah.pl.
> This can happen with other interprated languages also like 
> ASP, perl, python, etc..
> Nothing to talk to much in detail though.
> 
> Under preparing tools in that list maybe we should mention 
> something in regards to checking
> for permissions of files? File handle monitors seems broad 
> like "I am monitoring what is used" but
> doesn't immediatly ring the bell of "should check permissions 
> in regards to local, roaming, and public(everyone) users.
> 
> Under listening http ports
> 
> You give tips for checking ports 80 and 443. Perhaps mention 
> 8080 since it usually is a proxy port,
> or alt webserver port. Perhaps "test for proxy usage" *maybe*
> 
> Under server versioning I would include "http banner order, 
> default error pages, max connections, etc..)
> I'm actually working on a NICE big detailed paper on 
> fingerprinting webservers. It will cover manually
> and Ihope fr it to be rather extensive. (also see 
> whitehatsec.com blahat server fingerprinter tool)
> 
> 
> HTTP Server extensions
> 
> Also add apache modulkes to this. Seems a little to IIS'ish to me.
> 
> 
> HTTP Methods supported
> 
> You ask if we should provide examples on each. Obviously it 
> could be helpful. Perhaps include
> HEAD, GET, and POST. As much as I'd like to learn more about 
> TRACE this document is a web security paper
> and unless we dedicate
> alot of time (like lan mapping/cache networks) perhaps we 
> should limit it to the 3 most popular/used methods.
> 
> 
> Old, Backup or un-referenced files
> 
> Include that smome editors create files like file.txt~ when 
> being edited. Perhaps include a general "editor" reference.
> 
> 
> File extension Handling
> 
> It mentions http://www.host.com. May want to do http://host/ 
> for legal reasons? Same with rest of document.
> 
> 
> Unsafe modules
> 
> Everything from SQL access, usernames/passwords to sections 
> of your site, to paths to important files can be obtained 
> both locally, and in some cases(when specifically allowed) remotely.
> 
> perhaps make (when specifically allowed, or misconfigured). 
> People don't say "Hey why don't I misconfigure
> my machine for people to hack me with".
> 
> 
> Page 38
> 
> n this example we are going to send a request to a news 
> application which includes data from other file and displays it.
> 
> I assume is
> 
> "includes data from another file and displays it"
> 
> 
> Direct OS commands
> 
> Nice use of showing which functions to watch out for. 
> 
> 
> 
> I would also perhaps add more flowcharts or something along 
> those lines. Yeah it sounds silly but
> when I'm reading a 60+ page document flowcharts are a nice 
> break and re etterate what I just read.
> If I'm sounding like a moron just let me know I'm tired :p
> 
> - bob
> 
> ps: looks good
> 
> 
> 
> -------------------------------------------------------
> This SF.net email is sponsored by: Microsoft Visual Studio.NET 
> comprehensive development tool, built to increase your 
> productivity. Try a free online hosted session at:
> http://ads.sourceforge.net/cgi-bin/redirect.pl?micr0003en
> _______________________________________________
> owasp-testing mailing list
> owasp-testing at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/owasp-testing
> 



From javapro13 at hotmail.com  Wed Dec  4 17:11:24 2002
From: javapro13 at hotmail.com (Kartik Trivedi)
Date: Wed, 4 Dec 2002 14:11:24 -0800
Subject: [OWASP-TESTING] Paper review
References: <A4FCADDE108AD611A4A70008C7A49E0D56C845@IDSRV10>
Message-ID: <OE49zfud7bqV0tpw4Sv00000ea5@hotmail.com>

Hi David,

To start with, how does this look

<head>Bypassing Authentication</head>
To authenticate without any credentials
         Username: ' OR "='
         Password: ' OR "='
To authenticate with just the username
        Username: admin'--
To authenticate as the first user in user's table
        Username: ' or 1=1--
To authenticate as a fictional user
        Username: ' union select 1, 'user', 'passwd' 1--

</head>Causing Destruction</head>
To drop a database table
     Username: ';drop table users--
To shutdown the database remotely
     Username: aaaaaaaaaaaaaaa'
     Password: '; shutdown--

<head>Executing Function calls and stored procedures </head>
Executing xp_cmdshell to get directory listing
 http://localhost/script?0';EXEC+master..xp_cmdshell+'dir';--
Excuting xp_servicecontrol to manipulate services
 http://localhost/script?0';EXEC+master..xp_servicecontrol+'start',+'server'
;--


I am sure there is much more to add..

Thanks
Kartik


----- Original Message -----
From: "David Endler" <DEndler at iDefense.com>
To: "'zeno'" <zeno at cgisecurity.net>
Cc: <owasp-testing at lists.sourceforge.net>
Sent: Wednesday, December 04, 2002 1:45 PM
Subject: RE: [OWASP-TESTING] Paper review


> Good feedback here far as well.  Sounds like you're saying we need more
> pretty pictures to keep people interested ;-)
>
> On another topic, does anyone feel comfortable making an attempt at SQL
> injection?
>
> -dave
>
> > -----Original Message-----
> > From: owasp-testing-admin at lists.sourceforge.net
> > [mailto:owasp-testing-admin at lists.sourceforge.net]On Behalf Of zeno
> > Sent: Tuesday, December 03, 2002 7:54 PM
> > To: David Endler
> > Cc: 'owasp-testing at lists.sourceforge.net'
> > Subject: [OWASP-TESTING] Paper review
> >
> >
> > Hola,
> >
> >
> > "Regulatory requirements"
> >
> > You wanted some examples of country regulations. Why don't we
> > mention crypto export limitations?
> > Great example that should be covered. Maybe something about
> > the bill passed in the 1990's about
> > illegal export of strong encryption outside the USA bla bla bla .
> >
> >
> > Moving on (nice graphs BTW :p)
> >
> > The image looks fine near the Intro to owaps testing
> > methodology. Anyone else object?
> >
> > Interviewing the stakeholders is a nice touch.
> >
> > *maybe* have a flowchart containing "Obtaining documentation".
> >  People like perty easy to understand pictures :)
> >
> >  Under obtaining source code perhaps mention that gaining
> > sourcecode via blackboxing may be possible.
> > A simple example could be exploiting a perl script and having
> > it load itself bah.pl?file=../bah.pl.
> > This can happen with other interprated languages also like
> > ASP, perl, python, etc..
> > Nothing to talk to much in detail though.
> >
> > Under preparing tools in that list maybe we should mention
> > something in regards to checking
> > for permissions of files? File handle monitors seems broad
> > like "I am monitoring what is used" but
> > doesn't immediatly ring the bell of "should check permissions
> > in regards to local, roaming, and public(everyone) users.
> >
> > Under listening http ports
> >
> > You give tips for checking ports 80 and 443. Perhaps mention
> > 8080 since it usually is a proxy port,
> > or alt webserver port. Perhaps "test for proxy usage" *maybe*
> >
> > Under server versioning I would include "http banner order,
> > default error pages, max connections, etc..)
> > I'm actually working on a NICE big detailed paper on
> > fingerprinting webservers. It will cover manually
> > and Ihope fr it to be rather extensive. (also see
> > whitehatsec.com blahat server fingerprinter tool)
> >
> >
> > HTTP Server extensions
> >
> > Also add apache modulkes to this. Seems a little to IIS'ish to me.
> >
> >
> > HTTP Methods supported
> >
> > You ask if we should provide examples on each. Obviously it
> > could be helpful. Perhaps include
> > HEAD, GET, and POST. As much as I'd like to learn more about
> > TRACE this document is a web security paper
> > and unless we dedicate
> > alot of time (like lan mapping/cache networks) perhaps we
> > should limit it to the 3 most popular/used methods.
> >
> >
> > Old, Backup or un-referenced files
> >
> > Include that smome editors create files like file.txt~ when
> > being edited. Perhaps include a general "editor" reference.
> >
> >
> > File extension Handling
> >
> > It mentions http://www.host.com. May want to do http://host/
> > for legal reasons? Same with rest of document.
> >
> >
> > Unsafe modules
> >
> > Everything from SQL access, usernames/passwords to sections
> > of your site, to paths to important files can be obtained
> > both locally, and in some cases(when specifically allowed) remotely.
> >
> > perhaps make (when specifically allowed, or misconfigured).
> > People don't say "Hey why don't I misconfigure
> > my machine for people to hack me with".
> >
> >
> > Page 38
> >
> > n this example we are going to send a request to a news
> > application which includes data from other file and displays it.
> >
> > I assume is
> >
> > "includes data from another file and displays it"
> >
> >
> > Direct OS commands
> >
> > Nice use of showing which functions to watch out for.
> >
> >
> >
> > I would also perhaps add more flowcharts or something along
> > those lines. Yeah it sounds silly but
> > when I'm reading a 60+ page document flowcharts are a nice
> > break and re etterate what I just read.
> > If I'm sounding like a moron just let me know I'm tired :p
> >
> > - bob
> >
> > ps: looks good
> >
> >
> >
> > -------------------------------------------------------
> > This SF.net email is sponsored by: Microsoft Visual Studio.NET
> > comprehensive development tool, built to increase your
> > productivity. Try a free online hosted session at:
> > http://ads.sourceforge.net/cgi-bin/redirect.pl?micr0003en
> > _______________________________________________
> > owasp-testing mailing list
> > owasp-testing at lists.sourceforge.net
> > https://lists.sourceforge.net/lists/listinfo/owasp-testing
> >
>
>
> -------------------------------------------------------
> This SF.net email is sponsored by: Microsoft Visual Studio.NET
> comprehensive development tool, built to increase your
> productivity. Try a free online hosted session at:
> http://ads.sourceforge.net/cgi-bin/redirect.pl?micr0003en
> _______________________________________________
> owasp-testing mailing list
> owasp-testing at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/owasp-testing
>



From mark at curphey.com  Wed Dec  4 18:39:22 2002
From: mark at curphey.com (Mark Curphey)
Date: Wed, 04 Dec 2002 18:39:22 -0500 (EST)
Subject: [OWASP-TESTING] Notes on Testing
In-Reply-To: <A4FCADDE108AD611A4A70008C7A49E0D56C842@IDSRV10> from David Endler <DEndler@iDefense.com> on Wed, 4 Dec 2002 16:37:46 -0500
Message-ID: <200212042339.SAA25899@arkroyal.cnchost.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
Url: http://lists.owasp.org/pipermail/owasp-testing/attachments/20021204/fbbd9232/attachment.pl 

From dan at idsec.com  Thu Dec  5 03:39:22 2002
From: dan at idsec.com (Dan Cuthbert)
Date: 05 Dec 2002 08:39:22 +0000
Subject: [OWASP-TESTING] Paper review
In-Reply-To: <A4FCADDE108AD611A4A70008C7A49E0D56C845@IDSRV10>
References: <A4FCADDE108AD611A4A70008C7A49E0D56C845@IDSRV10>
Message-ID: <1039077562.1330.2.camel@biohazard.idsec.co.uk>

i was going to have a look at it today, is anyone else _really_ good at
the sql injection side of things, so that we dont duplicate efforts?



On Wed, 2002-12-04 at 21:45, David Endler wrote:
> Good feedback here far as well.  Sounds like you're saying we need more
> pretty pictures to keep people interested ;-)
> 
> On another topic, does anyone feel comfortable making an attempt at SQL
> injection?  
> 
> -dave
> 
> > -----Original Message-----
> > From: owasp-testing-admin at lists.sourceforge.net
> > [mailto:owasp-testing-admin at lists.sourceforge.net]On Behalf Of zeno
> > Sent: Tuesday, December 03, 2002 7:54 PM
> > To: David Endler
> > Cc: 'owasp-testing at lists.sourceforge.net'
> > Subject: [OWASP-TESTING] Paper review
> > 
> > 
> > Hola,
> > 
> > 
> > "Regulatory requirements"
> > 
> > You wanted some examples of country regulations. Why don't we 
> > mention crypto export limitations?
> > Great example that should be covered. Maybe something about 
> > the bill passed in the 1990's about
> > illegal export of strong encryption outside the USA bla bla bla .
> > 
> > 
> > Moving on (nice graphs BTW :p)
> > 
> > The image looks fine near the Intro to owaps testing 
> > methodology. Anyone else object?
> > 
> > Interviewing the stakeholders is a nice touch.
> > 
> > *maybe* have a flowchart containing "Obtaining documentation".
> >  People like perty easy to understand pictures :)
> > 
> >  Under obtaining source code perhaps mention that gaining 
> > sourcecode via blackboxing may be possible.
> > A simple example could be exploiting a perl script and having 
> > it load itself bah.pl?file=../bah.pl.
> > This can happen with other interprated languages also like 
> > ASP, perl, python, etc..
> > Nothing to talk to much in detail though.
> > 
> > Under preparing tools in that list maybe we should mention 
> > something in regards to checking
> > for permissions of files? File handle monitors seems broad 
> > like "I am monitoring what is used" but
> > doesn't immediatly ring the bell of "should check permissions 
> > in regards to local, roaming, and public(everyone) users.
> > 
> > Under listening http ports
> > 
> > You give tips for checking ports 80 and 443. Perhaps mention 
> > 8080 since it usually is a proxy port,
> > or alt webserver port. Perhaps "test for proxy usage" *maybe*
> > 
> > Under server versioning I would include "http banner order, 
> > default error pages, max connections, etc..)
> > I'm actually working on a NICE big detailed paper on 
> > fingerprinting webservers. It will cover manually
> > and Ihope fr it to be rather extensive. (also see 
> > whitehatsec.com blahat server fingerprinter tool)
> > 
> > 
> > HTTP Server extensions
> > 
> > Also add apache modulkes to this. Seems a little to IIS'ish to me.
> > 
> > 
> > HTTP Methods supported
> > 
> > You ask if we should provide examples on each. Obviously it 
> > could be helpful. Perhaps include
> > HEAD, GET, and POST. As much as I'd like to learn more about 
> > TRACE this document is a web security paper
> > and unless we dedicate
> > alot of time (like lan mapping/cache networks) perhaps we 
> > should limit it to the 3 most popular/used methods.
> > 
> > 
> > Old, Backup or un-referenced files
> > 
> > Include that smome editors create files like file.txt~ when 
> > being edited. Perhaps include a general "editor" reference.
> > 
> > 
> > File extension Handling
> > 
> > It mentions http://www.host.com. May want to do http://host/
> > for legal reasons? Same with rest of document.
> > 
> > 
> > Unsafe modules
> > 
> > Everything from SQL access, usernames/passwords to sections 
> > of your site, to paths to important files can be obtained 
> > both locally, and in some cases(when specifically allowed) remotely.
> > 
> > perhaps make (when specifically allowed, or misconfigured). 
> > People don't say "Hey why don't I misconfigure
> > my machine for people to hack me with".
> > 
> > 
> > Page 38
> > 
> > n this example we are going to send a request to a news 
> > application which includes data from other file and displays it.
> > 
> > I assume is
> > 
> > "includes data from another file and displays it"
> > 
> > 
> > Direct OS commands
> > 
> > Nice use of showing which functions to watch out for. 
> > 
> > 
> > 
> > I would also perhaps add more flowcharts or something along 
> > those lines. Yeah it sounds silly but
> > when I'm reading a 60+ page document flowcharts are a nice 
> > break and re etterate what I just read.
> > If I'm sounding like a moron just let me know I'm tired :p
> > 
> > - bob
> > 
> > ps: looks good
> > 
> > 
> > 
> > -------------------------------------------------------
> > This SF.net email is sponsored by: Microsoft Visual Studio.NET 
> > comprehensive development tool, built to increase your 
> > productivity. Try a free online hosted session at:
> > http://ads.sourceforge.net/cgi-bin/redirect.pl?micr0003en
> > _______________________________________________
> > owasp-testing mailing list
> > owasp-testing at lists.sourceforge.net
> > https://lists.sourceforge.net/lists/listinfo/owasp-testing
> > 
> 
> 
> -------------------------------------------------------
> This SF.net email is sponsored by: Microsoft Visual Studio.NET 
> comprehensive development tool, built to increase your 
> productivity. Try a free online hosted session at:
> http://ads.sourceforge.net/cgi-bin/redirect.pl?micr0003en
> _______________________________________________
> owasp-testing mailing list
> owasp-testing at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/owasp-testing




From mads at opencs.com.br  Thu Dec  5 14:44:29 2002
From: mads at opencs.com.br (Mads Rasmussen)
Date: Thu, 5 Dec 2002 16:44:29 -0300
Subject: RES: [OWASP-TESTING] Peer Review!
Message-ID: <499FF4AFD7F16F4C99618F59BC5DA5563CAF56@olimpia.opencs.com.br>

Hi David,

Here is a text for a description of our toolbag for testing web
applications, it still needs improvement

I will send it again included in the openOffice document as appendix, I
have some figures for the methodology as well, maybe tomorrow :)

Mads

--
Appendix II - Toolbag 

1 - Test Tools
The following items are part of the toolbag for tests of web
applications. New tools can be added depending on needs according to the
toolbag updating methodology.
The items are divided into references, company, tool and if the license
is commercial.
1.1. Assessment tools
These tools are used to map the architecture of the application to be
tested as well as its environment, scanning the hierarchy of available
resources at the web server, examining the contents, returning and
reporting where problems might be.
Virtual users could be used to to simulate use of the site.
Some tools listed will suggest solutions to encountered vulnerabilities.
1.1.1.? AtStake??????? WAP Assessment Tool
1.1.2.? AtStake??????? WebProxy
1.1.3.? ISECOM??????? AssTool
1.1.4.? OSSTM???????? Metis
1.1.5.? eEye??????????? Retina (comercial)
1.1.6.? ParaSoft?????? WebKing Box Testing (commercial)
1.2. Fuzzing
These tools are used to realize attacks based on variations in requests
(random data)
1.2.1.? AtStake??????? Fuzzer
1.2.2.? AtStake??????? Fuzzer Server
1.3. Authentication
Dictionary attacks + variations and brute force at logins and passwords
1.3.1.? OpenSource??????????? Brutus
1.3.2.? Immunity Security??? SPIKE
1.4. Cookie and HTTP Manipulation
Man in the middle attacks modifying the messages sent between the client
and the server
1.4.1.? Paessler???????????????? IE Booster (comercial)
1.4.2.? AtStake????????????????? Achilles
1.5. CGI Tests
1.5.1.? OpenSource??????????? Nessus (CGI module)
1.5.2.? OpenSource??????????? Whisker
?1.6. Stress Tests
Discover pages that loads slowly and where to encounter high traffic
problems 
?1.6.1.? Paessler???????????????? WebStress (comercial)
1.6.2.? ParaSoft???????????????? WebKing Load Testing
?
1.7.Code Analysis
These tools are used to identify bad progamming techniques in various
languages (s.a. Java, C/C++, Perl, PHP, Python etc).in case of white box
testing.
In case of Black/Gray box testing, the functionality of the application
is tested based on random inputs, pre and popst conditions, verification
of time limited values. The format of input, buffer overflow, TOCTOU
(Time of Check, Time of Use), race conditions etc.
1.7.1.? AtStake????????????????? Feszer
1.7.2.? David Wheeler???????? FlawFinder
1.7.3.? Reliable Software???? ITS4
1.7.4.? ISECOM????????????????? Rats
1.7.5.? University Virginia???? Splint
1.7.6.? Parasoft???????????????? JTest/C++Test
1.7.7.? Gerald Combos???????? Ethereal
1.7.8.? DeCafe Software????? DeCafe
1.8. Session Auditing
?1.8.1.? iDefense???????????????? Session Auditor
1.8.2.? ???????? ?????????????????? SPIKE
?1.9. J2EE
?1.9.1.? AdventNet????????????? QEngine
?1.10. Tools for Training
These tools are used for training the skills needed to attack web
application as well as to test new tools.

1.10.1.???????? OWASP???????? WebGoat
1.10.2.???????? OWASP???????? WebMaven Buggy Bank

--

Mads Rasmussen
Open Communications Security
+55(11)3345-2525


> -----Mensagem original-----
> De: David Endler [mailto:DEndler at iDefense.com]
> Enviada em: ter?a-feira, 3 de dezembro de 2002 15:52
> Para: 'owasp-testing at lists.sourceforge.net'
> Assunto: [OWASP-TESTING] Peer Review!
> 
> OK folks, here it is, the latest and greatest version of the OWASP
Testing
> Methodology: http://www.owasp.org/testing/TestingPeerReview0.6.sxw .
> 
> Please take some time to rip into it and get me your document copy
with
> edits by Monday December 9th.  No section is out of bounds, please
feel
> free
> to add, delete, or modify content, structure, graphics, and
style/grammar.
> 
> To edit this document, download OpenOffice from
> http://www.openoffice.org/dev_docs/source/download.html
> Make sure you enter your name in the installation for editing
purposes.
> After you open the document, please click on
> 
> Edit->Changes->Record and
> Edit->Changes->Show
> 
> and edit away! Thanks again for your efforts and contributions so far
to
> this project.  There are many people in industry anxiously awaiting
our
> first cut at this, believe it or not, and there has become a small
buzz
> surrounding this project.  This document is also going to be well
> integrated
> with the webgoat project so that real live examples can be illustrated
of
> testing techniques.  Please make the effort to provide meaningful
feedback
> and edits by Monday, thanks.  Please email me with any questions or
> technical difficulties.
> 
> -dave
> 
> 
> 
> -------------------------------------------------------
> This SF.net email is sponsored by: Microsoft Visual Studio.NET
> comprehensive development tool, built to increase your
> productivity. Try a free online hosted session at:
> http://ads.sourceforge.net/cgi-bin/redirect.pl?micr0003en
> _______________________________________________
> owasp-testing mailing list
> owasp-testing at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/owasp-testing



From DEndler at iDefense.com  Thu Dec  5 13:41:27 2002
From: DEndler at iDefense.com (David Endler)
Date: Thu, 5 Dec 2002 13:41:27 -0500 
Subject: [OWASP-TESTING] Peer Review!
Message-ID: <A4FCADDE108AD611A4A70008C7A49E0D56C871@IDSRV10>

Thanks Mads!

Dan C., does this duplicate/add to the list of tools you were working on?

-dave

> -----Original Message-----
> From: Mads Rasmussen [mailto:mads at opencs.com.br]
> Sent: Thursday, December 05, 2002 2:44 PM
> To: David Endler
> Cc: owasp-testing at lists.sourceforge.net
> Subject: RES: [OWASP-TESTING] Peer Review!
> 
> 
> 
> Hi David,
> 
> Here is a text for a description of our toolbag for testing web
> applications, it still needs improvement
> 
> I will send it again included in the openOffice document as 
> appendix, I
> have some figures for the methodology as well, maybe tomorrow :)
> 
> Mads
> 
> --
> Appendix II - Toolbag 
> 
> 1 - Test Tools
> The following items are part of the toolbag for tests of web
> applications. New tools can be added depending on needs 
> according to the
> toolbag updating methodology.
> The items are divided into references, company, tool and if 
> the license
> is commercial.
> 1.1. Assessment tools
> These tools are used to map the architecture of the application to be
> tested as well as its environment, scanning the hierarchy of available
> resources at the web server, examining the contents, returning and
> reporting where problems might be.
> Virtual users could be used to to simulate use of the site.
> Some tools listed will suggest solutions to encountered 
> vulnerabilities.
> 1.1.1.? AtStake??????? WAP Assessment Tool
> 1.1.2.? AtStake??????? WebProxy
> 1.1.3.? ISECOM??????? AssTool
> 1.1.4.? OSSTM???????? Metis
> 1.1.5.? eEye??????????? Retina (comercial)
> 1.1.6.? ParaSoft?????? WebKing Box Testing (commercial)
> 1.2. Fuzzing
> These tools are used to realize attacks based on variations 
> in requests
> (random data)
> 1.2.1.? AtStake??????? Fuzzer
> 1.2.2.? AtStake??????? Fuzzer Server
> 1.3. Authentication
> Dictionary attacks + variations and brute force at logins and 
> passwords
> 1.3.1.? OpenSource??????????? Brutus
> 1.3.2.? Immunity Security??? SPIKE
> 1.4. Cookie and HTTP Manipulation
> Man in the middle attacks modifying the messages sent between 
> the client
> and the server
> 1.4.1.? Paessler???????????????? IE Booster (comercial)
> 1.4.2.? AtStake????????????????? Achilles
> 1.5. CGI Tests
> 1.5.1.? OpenSource??????????? Nessus (CGI module)
> 1.5.2.? OpenSource??????????? Whisker
> ?1.6. Stress Tests
> Discover pages that loads slowly and where to encounter high traffic
> problems 
> ?1.6.1.? Paessler???????????????? WebStress (comercial)
> 1.6.2.? ParaSoft???????????????? WebKing Load Testing
> ?
> 1.7.Code Analysis
> These tools are used to identify bad progamming techniques in various
> languages (s.a. Java, C/C++, Perl, PHP, Python etc).in case 
> of white box
> testing.
> In case of Black/Gray box testing, the functionality of the 
> application
> is tested based on random inputs, pre and popst conditions, 
> verification
> of time limited values. The format of input, buffer overflow, TOCTOU
> (Time of Check, Time of Use), race conditions etc.
> 1.7.1.? AtStake????????????????? Feszer
> 1.7.2.? David Wheeler???????? FlawFinder
> 1.7.3.? Reliable Software???? ITS4
> 1.7.4.? ISECOM????????????????? Rats
> 1.7.5.? University Virginia???? Splint
> 1.7.6.? Parasoft???????????????? JTest/C++Test
> 1.7.7.? Gerald Combos???????? Ethereal
> 1.7.8.? DeCafe Software????? DeCafe
> 1.8. Session Auditing
> ?1.8.1.? iDefense???????????????? Session Auditor
> 1.8.2.? ???????? ?????????????????? SPIKE
> ?1.9. J2EE
> ?1.9.1.? AdventNet????????????? QEngine
> ?1.10. Tools for Training
> These tools are used for training the skills needed to attack web
> application as well as to test new tools.
> 
> 1.10.1.???????? OWASP???????? WebGoat
> 1.10.2.???????? OWASP???????? WebMaven Buggy Bank
> 
> --
> 
> Mads Rasmussen
> Open Communications Security
> +55(11)3345-2525
> 
> 
> > -----Mensagem original-----
> > De: David Endler [mailto:DEndler at iDefense.com]
> > Enviada em: ter?a-feira, 3 de dezembro de 2002 15:52
> > Para: 'owasp-testing at lists.sourceforge.net'
> > Assunto: [OWASP-TESTING] Peer Review!
> > 
> > OK folks, here it is, the latest and greatest version of the OWASP
> Testing
> > Methodology: http://www.owasp.org/testing/TestingPeerReview0.6.sxw .
> > 
> > Please take some time to rip into it and get me your document copy
> with
> > edits by Monday December 9th.  No section is out of bounds, please
> feel
> > free
> > to add, delete, or modify content, structure, graphics, and
> style/grammar.
> > 
> > To edit this document, download OpenOffice from
> > http://www.openoffice.org/dev_docs/source/download.html
> > Make sure you enter your name in the installation for editing
> purposes.
> > After you open the document, please click on
> > 
> > Edit->Changes->Record and
> > Edit->Changes->Show
> > 
> > and edit away! Thanks again for your efforts and 
> contributions so far
> to
> > this project.  There are many people in industry anxiously awaiting
> our
> > first cut at this, believe it or not, and there has become a small
> buzz
> > surrounding this project.  This document is also going to be well
> > integrated
> > with the webgoat project so that real live examples can be 
> illustrated
> of
> > testing techniques.  Please make the effort to provide meaningful
> feedback
> > and edits by Monday, thanks.  Please email me with any questions or
> > technical difficulties.
> > 
> > -dave
> > 
> > 
> > 
> > -------------------------------------------------------
> > This SF.net email is sponsored by: Microsoft Visual Studio.NET
> > comprehensive development tool, built to increase your
> > productivity. Try a free online hosted session at:
> > http://ads.sourceforge.net/cgi-bin/redirect.pl?micr0003en
> > _______________________________________________
> > owasp-testing mailing list
> > owasp-testing at lists.sourceforge.net
> > https://lists.sourceforge.net/lists/listinfo/owasp-testing
> 



From zeno at cgisecurity.net  Thu Dec  5 13:41:29 2002
From: zeno at cgisecurity.net (zeno)
Date: Thu, 5 Dec 2002 13:41:29 -0500 (EST)
Subject: RES: [OWASP-TESTING] Peer Review!
In-Reply-To: <no.id> from "Mads Rasmussen" at Dec 05, 2002 04:44:29 PM
Message-ID: <200212051841.gB5IfT724584@cgisecurity.net>

Websleuth anyone? *caugh*

- zeno



> 
> 
> Hi David,
> 
> Here is a text for a description of our toolbag for testing web
> applications, it still needs improvement
> 
> I will send it again included in the openOffice document as appendix, I
> have some figures for the methodology as well, maybe tomorrow :)
> 
> Mads
> 
> --
> Appendix II - Toolbag 
> 
> 1 - Test Tools
> The following items are part of the toolbag for tests of web
> applications. New tools can be added depending on needs according to the
> toolbag updating methodology.
> The items are divided into references, company, tool and if the license
> is commercial.
> 1.1. Assessment tools
> These tools are used to map the architecture of the application to be
> tested as well as its environment, scanning the hierarchy of available
> resources at the web server, examining the contents, returning and
> reporting where problems might be.
> Virtual users could be used to to simulate use of the site.
> Some tools listed will suggest solutions to encountered vulnerabilities.
> 1.1.1.? AtStake??????? WAP Assessment Tool
> 1.1.2.? AtStake??????? WebProxy
> 1.1.3.? ISECOM??????? AssTool
> 1.1.4.? OSSTM???????? Metis
> 1.1.5.? eEye??????????? Retina (comercial)
> 1.1.6.? ParaSoft?????? WebKing Box Testing (commercial)
> 1.2. Fuzzing
> These tools are used to realize attacks based on variations in requests
> (random data)
> 1.2.1.? AtStake??????? Fuzzer
> 1.2.2.? AtStake??????? Fuzzer Server
> 1.3. Authentication
> Dictionary attacks + variations and brute force at logins and passwords
> 1.3.1.? OpenSource??????????? Brutus
> 1.3.2.? Immunity Security??? SPIKE
> 1.4. Cookie and HTTP Manipulation
> Man in the middle attacks modifying the messages sent between the client
> and the server
> 1.4.1.? Paessler???????????????? IE Booster (comercial)
> 1.4.2.? AtStake????????????????? Achilles
> 1.5. CGI Tests
> 1.5.1.? OpenSource??????????? Nessus (CGI module)
> 1.5.2.? OpenSource??????????? Whisker
> ?1.6. Stress Tests
> Discover pages that loads slowly and where to encounter high traffic
> problems 
> ?1.6.1.? Paessler???????????????? WebStress (comercial)
> 1.6.2.? ParaSoft???????????????? WebKing Load Testing
> ?
> 1.7.Code Analysis
> These tools are used to identify bad progamming techniques in various
> languages (s.a. Java, C/C++, Perl, PHP, Python etc).in case of white box
> testing.
> In case of Black/Gray box testing, the functionality of the application
> is tested based on random inputs, pre and popst conditions, verification
> of time limited values. The format of input, buffer overflow, TOCTOU
> (Time of Check, Time of Use), race conditions etc.
> 1.7.1.? AtStake????????????????? Feszer
> 1.7.2.? David Wheeler???????? FlawFinder
> 1.7.3.? Reliable Software???? ITS4
> 1.7.4.? ISECOM????????????????? Rats
> 1.7.5.? University Virginia???? Splint
> 1.7.6.? Parasoft???????????????? JTest/C++Test
> 1.7.7.? Gerald Combos???????? Ethereal
> 1.7.8.? DeCafe Software????? DeCafe
> 1.8. Session Auditing
> ?1.8.1.? iDefense???????????????? Session Auditor
> 1.8.2.? ???????? ?????????????????? SPIKE
> ?1.9. J2EE
> ?1.9.1.? AdventNet????????????? QEngine
> ?1.10. Tools for Training
> These tools are used for training the skills needed to attack web
> application as well as to test new tools.
> 
> 1.10.1.???????? OWASP???????? WebGoat
> 1.10.2.???????? OWASP???????? WebMaven Buggy Bank
> 
> --
> 
> Mads Rasmussen
> Open Communications Security
> +55(11)3345-2525
> 
> 
> > -----Mensagem original-----
> > De: David Endler [mailto:DEndler at iDefense.com]
> > Enviada em: ter?a-feira, 3 de dezembro de 2002 15:52
> > Para: 'owasp-testing at lists.sourceforge.net'
> > Assunto: [OWASP-TESTING] Peer Review!
> > 
> > OK folks, here it is, the latest and greatest version of the OWASP
> Testing
> > Methodology: http://www.owasp.org/testing/TestingPeerReview0.6.sxw .
> > 
> > Please take some time to rip into it and get me your document copy
> with
> > edits by Monday December 9th.  No section is out of bounds, please
> feel
> > free
> > to add, delete, or modify content, structure, graphics, and
> style/grammar.
> > 
> > To edit this document, download OpenOffice from
> > http://www.openoffice.org/dev_docs/source/download.html
> > Make sure you enter your name in the installation for editing
> purposes.
> > After you open the document, please click on
> > 
> > Edit->Changes->Record and
> > Edit->Changes->Show
> > 
> > and edit away! Thanks again for your efforts and contributions so far
> to
> > this project.  There are many people in industry anxiously awaiting
> our
> > first cut at this, believe it or not, and there has become a small
> buzz
> > surrounding this project.  This document is also going to be well
> > integrated
> > with the webgoat project so that real live examples can be illustrated
> of
> > testing techniques.  Please make the effort to provide meaningful
> feedback
> > and edits by Monday, thanks.  Please email me with any questions or
> > technical difficulties.
> > 
> > -dave
> > 
> > 
> > 
> > -------------------------------------------------------
> > This SF.net email is sponsored by: Microsoft Visual Studio.NET
> > comprehensive development tool, built to increase your
> > productivity. Try a free online hosted session at:
> > http://ads.sourceforge.net/cgi-bin/redirect.pl?micr0003en
> > _______________________________________________
> > owasp-testing mailing list
> > owasp-testing at lists.sourceforge.net
> > https://lists.sourceforge.net/lists/listinfo/owasp-testing
> 
> 
> -------------------------------------------------------
> This sf.net email is sponsored by:ThinkGeek
> Welcome to geek heaven.
> http://thinkgeek.com/sf
> _______________________________________________
> owasp-testing mailing list
> owasp-testing at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/owasp-testing
> 




From mads at opencs.com.br  Thu Dec  5 14:53:58 2002
From: mads at opencs.com.br (Mads Rasmussen)
Date: Thu, 5 Dec 2002 16:53:58 -0300
Subject: RES: RES: [OWASP-TESTING] Peer Review!
Message-ID: <499FF4AFD7F16F4C99618F59BC5DA55630BFDF@olimpia.opencs.com.br>


> -----Mensagem original-----
> De: zeno [mailto:zeno at cgisecurity.net]
> Enviada em: quinta-feira, 5 de dezembro de 2002 15:41
> Para: Mads Rasmussen
> Cc: David Endler; owasp-testing at lists.sourceforge.net
> Assunto: Re: RES: [OWASP-TESTING] Peer Review!
> 
> Websleuth anyone? *caugh*

I told you the list wasn't complete :)

Mads



From dan at idsec.com  Thu Dec  5 15:50:40 2002
From: dan at idsec.com (Dan Cuthbert)
Date: Thu, 5 Dec 2002 20:50:40 +0000
Subject: [OWASP-TESTING] Peer Review!
In-Reply-To: <A4FCADDE108AD611A4A70008C7A49E0D56C871@IDSRV10>; from DEndler@iDefense.com on Thu, Dec 05, 2002 at 01:41:27PM -0500
References: <A4FCADDE108AD611A4A70008C7A49E0D56C871@IDSRV10>
Message-ID: <20021205205040.A9251@popeye.idsec.co.uk>

not at all, it adds to it

will send out the combined version early next week for everyone to let me know if its on track


* David Endler (DEndler at iDefense.com) wrote:
> Thanks Mads!
> 
> Dan C., does this duplicate/add to the list of tools you were working on?
> 
> -dave
> 
> > -----Original Message-----
> > From: Mads Rasmussen [mailto:mads at opencs.com.br]
> > Sent: Thursday, December 05, 2002 2:44 PM
> > To: David Endler
> > Cc: owasp-testing at lists.sourceforge.net
> > Subject: RES: [OWASP-TESTING] Peer Review!
> > 
> > 
> > 
> > Hi David,
> > 
> > Here is a text for a description of our toolbag for testing web
> > applications, it still needs improvement
> > 
> > I will send it again included in the openOffice document as 
> > appendix, I
> > have some figures for the methodology as well, maybe tomorrow :)
> > 
> > Mads
> > 
> > --
> > Appendix II - Toolbag 
> > 
> > 1 - Test Tools
> > The following items are part of the toolbag for tests of web
> > applications. New tools can be added depending on needs 
> > according to the
> > toolbag updating methodology.
> > The items are divided into references, company, tool and if 
> > the license
> > is commercial.
> > 1.1. Assessment tools
> > These tools are used to map the architecture of the application to be
> > tested as well as its environment, scanning the hierarchy of available
> > resources at the web server, examining the contents, returning and
> > reporting where problems might be.
> > Virtual users could be used to to simulate use of the site.
> > Some tools listed will suggest solutions to encountered 
> > vulnerabilities.
> > 1.1.1.? AtStake??????? WAP Assessment Tool
> > 1.1.2.? AtStake??????? WebProxy
> > 1.1.3.? ISECOM??????? AssTool
> > 1.1.4.? OSSTM???????? Metis
> > 1.1.5.? eEye??????????? Retina (comercial)
> > 1.1.6.? ParaSoft?????? WebKing Box Testing (commercial)
> > 1.2. Fuzzing
> > These tools are used to realize attacks based on variations 
> > in requests
> > (random data)
> > 1.2.1.? AtStake??????? Fuzzer
> > 1.2.2.? AtStake??????? Fuzzer Server
> > 1.3. Authentication
> > Dictionary attacks + variations and brute force at logins and 
> > passwords
> > 1.3.1.? OpenSource??????????? Brutus
> > 1.3.2.? Immunity Security??? SPIKE
> > 1.4. Cookie and HTTP Manipulation
> > Man in the middle attacks modifying the messages sent between 
> > the client
> > and the server
> > 1.4.1.? Paessler???????????????? IE Booster (comercial)
> > 1.4.2.? AtStake????????????????? Achilles
> > 1.5. CGI Tests
> > 1.5.1.? OpenSource??????????? Nessus (CGI module)
> > 1.5.2.? OpenSource??????????? Whisker
> > ?1.6. Stress Tests
> > Discover pages that loads slowly and where to encounter high traffic
> > problems 
> > ?1.6.1.? Paessler???????????????? WebStress (comercial)
> > 1.6.2.? ParaSoft???????????????? WebKing Load Testing
> > ?
> > 1.7.Code Analysis
> > These tools are used to identify bad progamming techniques in various
> > languages (s.a. Java, C/C++, Perl, PHP, Python etc).in case 
> > of white box
> > testing.
> > In case of Black/Gray box testing, the functionality of the 
> > application
> > is tested based on random inputs, pre and popst conditions, 
> > verification
> > of time limited values. The format of input, buffer overflow, TOCTOU
> > (Time of Check, Time of Use), race conditions etc.
> > 1.7.1.? AtStake????????????????? Feszer
> > 1.7.2.? David Wheeler???????? FlawFinder
> > 1.7.3.? Reliable Software???? ITS4
> > 1.7.4.? ISECOM????????????????? Rats
> > 1.7.5.? University Virginia???? Splint
> > 1.7.6.? Parasoft???????????????? JTest/C++Test
> > 1.7.7.? Gerald Combos???????? Ethereal
> > 1.7.8.? DeCafe Software????? DeCafe
> > 1.8. Session Auditing
> > ?1.8.1.? iDefense???????????????? Session Auditor
> > 1.8.2.? ???????? ?????????????????? SPIKE
> > ?1.9. J2EE
> > ?1.9.1.? AdventNet????????????? QEngine
> > ?1.10. Tools for Training
> > These tools are used for training the skills needed to attack web
> > application as well as to test new tools.
> > 
> > 1.10.1.???????? OWASP???????? WebGoat
> > 1.10.2.???????? OWASP???????? WebMaven Buggy Bank
> > 
> > --
> > 
> > Mads Rasmussen
> > Open Communications Security
> > +55(11)3345-2525
> > 
> > 
> > > -----Mensagem original-----
> > > De: David Endler [mailto:DEndler at iDefense.com]
> > > Enviada em: ter?a-feira, 3 de dezembro de 2002 15:52
> > > Para: 'owasp-testing at lists.sourceforge.net'
> > > Assunto: [OWASP-TESTING] Peer Review!
> > > 
> > > OK folks, here it is, the latest and greatest version of the OWASP
> > Testing
> > > Methodology: http://www.owasp.org/testing/TestingPeerReview0.6.sxw .
> > > 
> > > Please take some time to rip into it and get me your document copy
> > with
> > > edits by Monday December 9th.  No section is out of bounds, please
> > feel
> > > free
> > > to add, delete, or modify content, structure, graphics, and
> > style/grammar.
> > > 
> > > To edit this document, download OpenOffice from
> > > http://www.openoffice.org/dev_docs/source/download.html
> > > Make sure you enter your name in the installation for editing
> > purposes.
> > > After you open the document, please click on
> > > 
> > > Edit->Changes->Record and
> > > Edit->Changes->Show
> > > 
> > > and edit away! Thanks again for your efforts and 
> > contributions so far
> > to
> > > this project.  There are many people in industry anxiously awaiting
> > our
> > > first cut at this, believe it or not, and there has become a small
> > buzz
> > > surrounding this project.  This document is also going to be well
> > > integrated
> > > with the webgoat project so that real live examples can be 
> > illustrated
> > of
> > > testing techniques.  Please make the effort to provide meaningful
> > feedback
> > > and edits by Monday, thanks.  Please email me with any questions or
> > > technical difficulties.
> > > 
> > > -dave
> > > 
> > > 
> > > 
> > > -------------------------------------------------------
> > > This SF.net email is sponsored by: Microsoft Visual Studio.NET
> > > comprehensive development tool, built to increase your
> > > productivity. Try a free online hosted session at:
> > > http://ads.sourceforge.net/cgi-bin/redirect.pl?micr0003en
> > > _______________________________________________
> > > owasp-testing mailing list
> > > owasp-testing at lists.sourceforge.net
> > > https://lists.sourceforge.net/lists/listinfo/owasp-testing
> > 
> 
> 
> -------------------------------------------------------
> This sf.net email is sponsored by:ThinkGeek
> Welcome to geek heaven.
> http://thinkgeek.com/sf
> _______________________________________________
> owasp-testing mailing list
> owasp-testing at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/owasp-testing





From mark at curphey.com  Thu Dec  5 15:50:25 2002
From: mark at curphey.com (Mark Curphey)
Date: Thu, 05 Dec 2002 15:50:25 -0500 (EST)
Subject: [OWASP-TESTING] Fwd: A "straw man" vulnerability auditing checklist
Message-ID: <200212052050.PAA29218@alexander.cnchost.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
Url: http://lists.owasp.org/pipermail/owasp-testing/attachments/20021205/c73b160e/attachment.pl 

From tomgal at Exchange.Microsoft.com  Thu Dec  5 16:00:22 2002
From: tomgal at Exchange.Microsoft.com (Tom Gallagher)
Date: Thu, 5 Dec 2002 13:00:22 -0800
Subject: [OWASP-TESTING] Peer Review!
Message-ID: <EB005E067BC00A458EF6639DEC5AEDA3373245@df-muttley.dogfood>

Achilles isn't made by @Stake.  I downloaded it from http://www.digizen-security.com, but that web site seems to display gibberish now.  

There are also other tools I can think of that aren't designed for security testing but are really useful.  For example, have you have tried using SQL Profiler to find SQL injection bugs?  It is really helpful.

Not sure if you want to include these types of tools or not.

Tom

---
Tom Gallagher <tomgal at microsoft.com>
Office QnS Security Team


-----Original Message-----
From: Mads Rasmussen [mailto:mads at opencs.com.br] 
Sent: Thursday, December 05, 2002 11:44 AM
To: David Endler
Cc: owasp-testing at lists.sourceforge.net


Hi David,

Here is a text for a description of our toolbag for testing web
applications, it still needs improvement

I will send it again included in the openOffice document as appendix, I
have some figures for the methodology as well, maybe tomorrow :)

Mads

--
Appendix II - Toolbag 

1 - Test Tools
The following items are part of the toolbag for tests of web
applications. New tools can be added depending on needs according to the
toolbag updating methodology.
The items are divided into references, company, tool and if the license
is commercial.
1.1. Assessment tools
These tools are used to map the architecture of the application to be
tested as well as its environment, scanning the hierarchy of available
resources at the web server, examining the contents, returning and
reporting where problems might be.
Virtual users could be used to to simulate use of the site.
Some tools listed will suggest solutions to encountered vulnerabilities.
1.1.1.? AtStake??????? WAP Assessment Tool
1.1.2.? AtStake??????? WebProxy
1.1.3.? ISECOM??????? AssTool
1.1.4.? OSSTM???????? Metis
1.1.5.? eEye??????????? Retina (comercial)
1.1.6.? ParaSoft?????? WebKing Box Testing (commercial)
1.2. Fuzzing
These tools are used to realize attacks based on variations in requests
(random data)
1.2.1.? AtStake??????? Fuzzer
1.2.2.? AtStake??????? Fuzzer Server
1.3. Authentication
Dictionary attacks + variations and brute force at logins and passwords
1.3.1.? OpenSource??????????? Brutus
1.3.2.? Immunity Security??? SPIKE
1.4. Cookie and HTTP Manipulation
Man in the middle attacks modifying the messages sent between the client
and the server
1.4.1.? Paessler???????????????? IE Booster (comercial)
1.4.2.? AtStake????????????????? Achilles
1.5. CGI Tests
1.5.1.? OpenSource??????????? Nessus (CGI module)
1.5.2.? OpenSource??????????? Whisker
?1.6. Stress Tests
Discover pages that loads slowly and where to encounter high traffic
problems 
?1.6.1.? Paessler???????????????? WebStress (comercial)
1.6.2.? ParaSoft???????????????? WebKing Load Testing
?
1.7.Code Analysis
These tools are used to identify bad progamming techniques in various
languages (s.a. Java, C/C++, Perl, PHP, Python etc).in case of white box
testing.
In case of Black/Gray box testing, the functionality of the application
is tested based on random inputs, pre and popst conditions, verification
of time limited values. The format of input, buffer overflow, TOCTOU
(Time of Check, Time of Use), race conditions etc.
1.7.1.? AtStake????????????????? Feszer
1.7.2.? David Wheeler???????? FlawFinder
1.7.3.? Reliable Software???? ITS4
1.7.4.? ISECOM????????????????? Rats
1.7.5.? University Virginia???? Splint
1.7.6.? Parasoft???????????????? JTest/C++Test
1.7.7.? Gerald Combos???????? Ethereal
1.7.8.? DeCafe Software????? DeCafe
1.8. Session Auditing
?1.8.1.? iDefense???????????????? Session Auditor
1.8.2.? ???????? ?????????????????? SPIKE
?1.9. J2EE
?1.9.1.? AdventNet????????????? QEngine
?1.10. Tools for Training
These tools are used for training the skills needed to attack web
application as well as to test new tools.

1.10.1.???????? OWASP???????? WebGoat
1.10.2.???????? OWASP???????? WebMaven Buggy Bank

--

Mads Rasmussen
Open Communications Security
+55(11)3345-2525


> -----Mensagem original-----
> De: David Endler [mailto:DEndler at iDefense.com]
> Enviada em: ter?a-feira, 3 de dezembro de 2002 15:52
> Para: 'owasp-testing at lists.sourceforge.net'
> Assunto: [OWASP-TESTING] Peer Review!
> 
> OK folks, here it is, the latest and greatest version of the OWASP
Testing
> Methodology: http://www.owasp.org/testing/TestingPeerReview0.6.sxw .
> 
> Please take some time to rip into it and get me your document copy
with
> edits by Monday December 9th.  No section is out of bounds, please
feel
> free
> to add, delete, or modify content, structure, graphics, and
style/grammar.
> 
> To edit this document, download OpenOffice from
> http://www.openoffice.org/dev_docs/source/download.html
> Make sure you enter your name in the installation for editing
purposes.
> After you open the document, please click on
> 
> Edit->Changes->Record and
> Edit->Changes->Show
> 
> and edit away! Thanks again for your efforts and contributions so far
to
> this project.  There are many people in industry anxiously awaiting
our
> first cut at this, believe it or not, and there has become a small
buzz
> surrounding this project.  This document is also going to be well
> integrated
> with the webgoat project so that real live examples can be illustrated
of
> testing techniques.  Please make the effort to provide meaningful
feedback
> and edits by Monday, thanks.  Please email me with any questions or
> technical difficulties.
> 
> -dave
> 
> 
> 
> -------------------------------------------------------
> This SF.net email is sponsored by: Microsoft Visual Studio.NET
> comprehensive development tool, built to increase your
> productivity. Try a free online hosted session at:
> http://ads.sourceforge.net/cgi-bin/redirect.pl?micr0003en
> _______________________________________________
> owasp-testing mailing list
> owasp-testing at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/owasp-testing


-------------------------------------------------------
This sf.net email is sponsored by:ThinkGeek
Welcome to geek heaven.
http://thinkgeek.com/sf
_______________________________________________
owasp-testing mailing list
owasp-testing at lists.sourceforge.net
https://lists.sourceforge.net/lists/listinfo/owasp-testing





From dan at idsec.com  Fri Dec  6 07:27:18 2002
From: dan at idsec.com (Dan Cuthbert)
Date: 06 Dec 2002 12:27:18 +0000
Subject: [OWASP-TESTING] Peer Review!
In-Reply-To: <EB005E067BC00A458EF6639DEC5AEDA3373245@df-muttley.dogfood>
References: <EB005E067BC00A458EF6639DEC5AEDA3373245@df-muttley.dogfood>
Message-ID: <1039177638.1331.6.camel@biohazard.idsec.co.uk>

actually i was meaning to mail everyone asking whats happened to
Achilles? 
it is included on my list, but as Tom said its website is now a
gibberish site.




On Thu, 2002-12-05 at 21:00, Tom Gallagher wrote:
> Achilles isn't made by @Stake.  I downloaded it from http://www.digizen-security.com, but that web site seems to display gibberish now.  
> 
> There are also other tools I can think of that aren't designed for security testing but are really useful.  For example, have you have tried using SQL Profiler to find SQL injection bugs?  It is really helpful.
> 
> Not sure if you want to include these types of tools or not.
> 
> Tom
> 
> ---
> Tom Gallagher <tomgal at microsoft.com>
> Office QnS Security Team
> 
> 
> -----Original Message-----
> From: Mads Rasmussen [mailto:mads at opencs.com.br] 
> Sent: Thursday, December 05, 2002 11:44 AM
> To: David Endler
> Cc: owasp-testing at lists.sourceforge.net
> 
> 
> Hi David,
> 
> Here is a text for a description of our toolbag for testing web
> applications, it still needs improvement
> 
> I will send it again included in the openOffice document as appendix, I
> have some figures for the methodology as well, maybe tomorrow :)
> 
> Mads
> 
> --
> Appendix II - Toolbag 
> 
> 1 - Test Tools
> The following items are part of the toolbag for tests of web
> applications. New tools can be added depending on needs according to the
> toolbag updating methodology.
> The items are divided into references, company, tool and if the license
> is commercial.
> 1.1. Assessment tools
> These tools are used to map the architecture of the application to be
> tested as well as its environment, scanning the hierarchy of available
> resources at the web server, examining the contents, returning and
> reporting where problems might be.
> Virtual users could be used to to simulate use of the site.
> Some tools listed will suggest solutions to encountered vulnerabilities.
> 1.1.1.  AtStake        WAP Assessment Tool
> 1.1.2.  AtStake        WebProxy
> 1.1.3.  ISECOM        AssTool
> 1.1.4.  OSSTM         Metis
> 1.1.5.  eEye            Retina (comercial)
> 1.1.6.  ParaSoft       WebKing Box Testing (commercial)
> 1.2. Fuzzing
> These tools are used to realize attacks based on variations in requests
> (random data)
> 1.2.1.  AtStake        Fuzzer
> 1.2.2.  AtStake        Fuzzer Server
> 1.3. Authentication
> Dictionary attacks + variations and brute force at logins and passwords
> 1.3.1.  OpenSource            Brutus
> 1.3.2.  Immunity Security    SPIKE
> 1.4. Cookie and HTTP Manipulation
> Man in the middle attacks modifying the messages sent between the client
> and the server
> 1.4.1.  Paessler                 IE Booster (comercial)
> 1.4.2.  AtStake                  Achilles
> 1.5. CGI Tests
> 1.5.1.  OpenSource            Nessus (CGI module)
> 1.5.2.  OpenSource            Whisker
>  1.6. Stress Tests
> Discover pages that loads slowly and where to encounter high traffic
> problems 
>  1.6.1.  Paessler                 WebStress (comercial)
> 1.6.2.  ParaSoft                 WebKing Load Testing
>  
> 1.7.Code Analysis
> These tools are used to identify bad progamming techniques in various
> languages (s.a. Java, C/C++, Perl, PHP, Python etc).in case of white box
> testing.
> In case of Black/Gray box testing, the functionality of the application
> is tested based on random inputs, pre and popst conditions, verification
> of time limited values. The format of input, buffer overflow, TOCTOU
> (Time of Check, Time of Use), race conditions etc.
> 1.7.1.  AtStake                  Feszer
> 1.7.2.  David Wheeler         FlawFinder
> 1.7.3.  Reliable Software     ITS4
> 1.7.4.  ISECOM                  Rats
> 1.7.5.  University Virginia     Splint
> 1.7.6.  Parasoft                 JTest/C++Test
> 1.7.7.  Gerald Combos         Ethereal
> 1.7.8.  DeCafe Software      DeCafe
> 1.8. Session Auditing
>  1.8.1.  iDefense                 Session Auditor
> 1.8.2.                              SPIKE
>  1.9. J2EE
>  1.9.1.  AdventNet              QEngine
>  1.10. Tools for Training
> These tools are used for training the skills needed to attack web
> application as well as to test new tools.
> 
> 1.10.1.         OWASP         WebGoat
> 1.10.2.         OWASP         WebMaven Buggy Bank
> 
> --
> 
> Mads Rasmussen
> Open Communications Security
> +55(11)3345-2525
> 
> 
> > -----Mensagem original-----
> > De: David Endler [mailto:DEndler at iDefense.com]
> > Enviada em: ter?a-feira, 3 de dezembro de 2002 15:52
> > Para: 'owasp-testing at lists.sourceforge.net'
> > Assunto: [OWASP-TESTING] Peer Review!
> > 
> > OK folks, here it is, the latest and greatest version of the OWASP
> Testing
> > Methodology: http://www.owasp.org/testing/TestingPeerReview0.6.sxw .
> > 
> > Please take some time to rip into it and get me your document copy
> with
> > edits by Monday December 9th.  No section is out of bounds, please
> feel
> > free
> > to add, delete, or modify content, structure, graphics, and
> style/grammar.
> > 
> > To edit this document, download OpenOffice from
> > http://www.openoffice.org/dev_docs/source/download.html
> > Make sure you enter your name in the installation for editing
> purposes.
> > After you open the document, please click on
> > 
> > Edit->Changes->Record and
> > Edit->Changes->Show
> > 
> > and edit away! Thanks again for your efforts and contributions so far
> to
> > this project.  There are many people in industry anxiously awaiting
> our
> > first cut at this, believe it or not, and there has become a small
> buzz
> > surrounding this project.  This document is also going to be well
> > integrated
> > with the webgoat project so that real live examples can be illustrated
> of
> > testing techniques.  Please make the effort to provide meaningful
> feedback
> > and edits by Monday, thanks.  Please email me with any questions or
> > technical difficulties.
> > 
> > -dave
> > 
> > 
> > 
> > -------------------------------------------------------
> > This SF.net email is sponsored by: Microsoft Visual Studio.NET
> > comprehensive development tool, built to increase your
> > productivity. Try a free online hosted session at:
> > http://ads.sourceforge.net/cgi-bin/redirect.pl?micr0003en
> > _______________________________________________
> > owasp-testing mailing list
> > owasp-testing at lists.sourceforge.net
> > https://lists.sourceforge.net/lists/listinfo/owasp-testing
> 
> 
> -------------------------------------------------------
> This sf.net email is sponsored by:ThinkGeek
> Welcome to geek heaven.
> http://thinkgeek.com/sf
> _______________________________________________
> owasp-testing mailing list
> owasp-testing at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/owasp-testing
> 
> 
> 
> 
> -------------------------------------------------------
> This sf.net email is sponsored by:ThinkGeek
> Welcome to geek heaven.
> http://thinkgeek.com/sf
> _______________________________________________
> owasp-testing mailing list
> owasp-testing at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/owasp-testing




From DEndler at iDefense.com  Fri Dec  6 15:54:33 2002
From: DEndler at iDefense.com (David Endler)
Date: Fri, 6 Dec 2002 15:54:33 -0500 
Subject: [OWASP-TESTING] Peer Review!
Message-ID: <A4FCADDE108AD611A4A70008C7A49E0D56C8A9@IDSRV10>

Thanks for all of the feedback so far, sent publically to the list and
privately to me.  Still only a handful of vocal volunteers has produced
edits or suggestions on the draft I sent out.  I'm strongly pleading with
those of you who haven't yet spoken up to spend a little time this weekend
looking at the latest draft to get edits to me by Monday.  I sincerely
appreciate everyone's effort so far.

-dave



From mark at curphey.com  Sat Dec  7 20:22:05 2002
From: mark at curphey.com (Mark Curphey)
Date: 07 Dec 2002 17:22:05 -0800
Subject: [OWASP-TESTING] Peer Review!
In-Reply-To: <1039177638.1331.6.camel@biohazard.idsec.co.uk>
References: <EB005E067BC00A458EF6639DEC5AEDA3373245@df-muttley.dogfood> 
	<1039177638.1331.6.camel@biohazard.idsec.co.uk>
Message-ID: <1039310525.3611.30.camel@localhost.localdomain>

Don't y'all worry. A cool tool called Open Proxy will be out very soon
;-)


On Fri, 2002-12-06 at 04:27, Dan Cuthbert wrote:
> actually i was meaning to mail everyone asking whats happened to
> Achilles? 
> it is included on my list, but as Tom said its website is now a
> gibberish site.
> 
> 
> 
> 
> On Thu, 2002-12-05 at 21:00, Tom Gallagher wrote:
> > Achilles isn't made by @Stake.  I downloaded it from http://www.digizen-security.com, but that web site seems to display gibberish now.  
> > 
> > There are also other tools I can think of that aren't designed for security testing but are really useful.  For example, have you have tried using SQL Profiler to find SQL injection bugs?  It is really helpful.
> > 
> > Not sure if you want to include these types of tools or not.
> > 
> > Tom
> > 
> > ---
> > Tom Gallagher <tomgal at microsoft.com>
> > Office QnS Security Team
> > 
> > 
> > -----Original Message-----
> > From: Mads Rasmussen [mailto:mads at opencs.com.br] 
> > Sent: Thursday, December 05, 2002 11:44 AM
> > To: David Endler
> > Cc: owasp-testing at lists.sourceforge.net
> > 
> > 
> > Hi David,
> > 
> > Here is a text for a description of our toolbag for testing web
> > applications, it still needs improvement
> > 
> > I will send it again included in the openOffice document as appendix, I
> > have some figures for the methodology as well, maybe tomorrow :)
> > 
> > Mads
> > 
> > --
> > Appendix II - Toolbag 
> > 
> > 1 - Test Tools
> > The following items are part of the toolbag for tests of web
> > applications. New tools can be added depending on needs according to the
> > toolbag updating methodology.
> > The items are divided into references, company, tool and if the license
> > is commercial.
> > 1.1. Assessment tools
> > These tools are used to map the architecture of the application to be
> > tested as well as its environment, scanning the hierarchy of available
> > resources at the web server, examining the contents, returning and
> > reporting where problems might be.
> > Virtual users could be used to to simulate use of the site.
> > Some tools listed will suggest solutions to encountered vulnerabilities.
> > 1.1.1.  AtStake        WAP Assessment Tool
> > 1.1.2.  AtStake        WebProxy
> > 1.1.3.  ISECOM        AssTool
> > 1.1.4.  OSSTM         Metis
> > 1.1.5.  eEye            Retina (comercial)
> > 1.1.6.  ParaSoft       WebKing Box Testing (commercial)
> > 1.2. Fuzzing
> > These tools are used to realize attacks based on variations in requests
> > (random data)
> > 1.2.1.  AtStake        Fuzzer
> > 1.2.2.  AtStake        Fuzzer Server
> > 1.3. Authentication
> > Dictionary attacks + variations and brute force at logins and passwords
> > 1.3.1.  OpenSource            Brutus
> > 1.3.2.  Immunity Security    SPIKE
> > 1.4. Cookie and HTTP Manipulation
> > Man in the middle attacks modifying the messages sent between the client
> > and the server
> > 1.4.1.  Paessler                 IE Booster (comercial)
> > 1.4.2.  AtStake                  Achilles
> > 1.5. CGI Tests
> > 1.5.1.  OpenSource            Nessus (CGI module)
> > 1.5.2.  OpenSource            Whisker
> >  1.6. Stress Tests
> > Discover pages that loads slowly and where to encounter high traffic
> > problems 
> >  1.6.1.  Paessler                 WebStress (comercial)
> > 1.6.2.  ParaSoft                 WebKing Load Testing
> >  
> > 1.7.Code Analysis
> > These tools are used to identify bad progamming techniques in various
> > languages (s.a. Java, C/C++, Perl, PHP, Python etc).in case of white box
> > testing.
> > In case of Black/Gray box testing, the functionality of the application
> > is tested based on random inputs, pre and popst conditions, verification
> > of time limited values. The format of input, buffer overflow, TOCTOU
> > (Time of Check, Time of Use), race conditions etc.
> > 1.7.1.  AtStake                  Feszer
> > 1.7.2.  David Wheeler         FlawFinder
> > 1.7.3.  Reliable Software     ITS4
> > 1.7.4.  ISECOM                  Rats
> > 1.7.5.  University Virginia     Splint
> > 1.7.6.  Parasoft                 JTest/C++Test
> > 1.7.7.  Gerald Combos         Ethereal
> > 1.7.8.  DeCafe Software      DeCafe
> > 1.8. Session Auditing
> >  1.8.1.  iDefense                 Session Auditor
> > 1.8.2.                              SPIKE
> >  1.9. J2EE
> >  1.9.1.  AdventNet              QEngine
> >  1.10. Tools for Training
> > These tools are used for training the skills needed to attack web
> > application as well as to test new tools.
> > 
> > 1.10.1.         OWASP         WebGoat
> > 1.10.2.         OWASP         WebMaven Buggy Bank
> > 
> > --
> > 
> > Mads Rasmussen
> > Open Communications Security
> > +55(11)3345-2525
> > 
> > 
> > > -----Mensagem original-----
> > > De: David Endler [mailto:DEndler at iDefense.com]
> > > Enviada em: ter?a-feira, 3 de dezembro de 2002 15:52
> > > Para: 'owasp-testing at lists.sourceforge.net'
> > > Assunto: [OWASP-TESTING] Peer Review!
> > > 
> > > OK folks, here it is, the latest and greatest version of the OWASP
> > Testing
> > > Methodology: http://www.owasp.org/testing/TestingPeerReview0.6.sxw .
> > > 
> > > Please take some time to rip into it and get me your document copy
> > with
> > > edits by Monday December 9th.  No section is out of bounds, please
> > feel
> > > free
> > > to add, delete, or modify content, structure, graphics, and
> > style/grammar.
> > > 
> > > To edit this document, download OpenOffice from
> > > http://www.openoffice.org/dev_docs/source/download.html
> > > Make sure you enter your name in the installation for editing
> > purposes.
> > > After you open the document, please click on
> > > 
> > > Edit->Changes->Record and
> > > Edit->Changes->Show
> > > 
> > > and edit away! Thanks again for your efforts and contributions so far
> > to
> > > this project.  There are many people in industry anxiously awaiting
> > our
> > > first cut at this, believe it or not, and there has become a small
> > buzz
> > > surrounding this project.  This document is also going to be well
> > > integrated
> > > with the webgoat project so that real live examples can be illustrated
> > of
> > > testing techniques.  Please make the effort to provide meaningful
> > feedback
> > > and edits by Monday, thanks.  Please email me with any questions or
> > > technical difficulties.
> > > 
> > > -dave
> > > 
> > > 
> > > 
> > > -------------------------------------------------------
> > > This SF.net email is sponsored by: Microsoft Visual Studio.NET
> > > comprehensive development tool, built to increase your
> > > productivity. Try a free online hosted session at:
> > > http://ads.sourceforge.net/cgi-bin/redirect.pl?micr0003en
> > > _______________________________________________
> > > owasp-testing mailing list
> > > owasp-testing at lists.sourceforge.net
> > > https://lists.sourceforge.net/lists/listinfo/owasp-testing
> > 
> > 
> > -------------------------------------------------------
> > This sf.net email is sponsored by:ThinkGeek
> > Welcome to geek heaven.
> > http://thinkgeek.com/sf
> > _______________________________________________
> > owasp-testing mailing list
> > owasp-testing at lists.sourceforge.net
> > https://lists.sourceforge.net/lists/listinfo/owasp-testing
> > 
> > 
> > 
> > 
> > -------------------------------------------------------
> > This sf.net email is sponsored by:ThinkGeek
> > Welcome to geek heaven.
> > http://thinkgeek.com/sf
> > _______________________________________________
> > owasp-testing mailing list
> > owasp-testing at lists.sourceforge.net
> > https://lists.sourceforge.net/lists/listinfo/owasp-testing
> 
> 
> 
> -------------------------------------------------------
> This sf.net email is sponsored by:ThinkGeek
> Welcome to geek heaven.
> http://thinkgeek.com/sf
> _______________________________________________
> owasp-testing mailing list
> owasp-testing at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/owasp-testing
> 





From iarce at core-sdi.com  Mon Dec  9 16:16:55 2002
From: iarce at core-sdi.com (=?iso-8859-1?Q?Iv=E1n_Arce?=)
Date: Mon, 9 Dec 2002 18:16:55 -0300
Subject: [OWASP-TESTING] Notes on Testing
In-Reply-To: <1038986509.1635.337.camel@localhost.localdomain>
Message-ID: <DHENIJFLKNFFEKJECMLFIEOMDNAA.iarce@core-sdi.com>


> -----Original Message-----
> From: owasp-testing-admin at lists.sourceforge.net
> [mailto:owasp-testing-admin at lists.sourceforge.net]On Behalf Of Mark
> Curphey
> Sent: Wednesday, December 04, 2002 4:22 AM
> To: owasp-testing at lists.sourceforge.net
> Subject: [OWASP-TESTING] Notes on Testing
> 
> 
> 26 / 66 - everyone should have dev, qa, pre-prod and prod. I would
> strongly argue that most testing is well before prod. Real data should
> never (NEVER) be used in testing. This section IMHO needs a big rewrite.
> This is all good and well for momandpops.php but....

I fail to understand the rationale for such strong statement, sometimes
it is not even possible to avoid tests with real data (as in an external
black-box pentest against the web app. in its production environment)

> 
> 27 - 66 - decompilers ? This is testing not hacking ;-) I think this
> section should explain how browser proxies work, how automated scanners
> are combos of automated http_user agents and fuzzers etc. It needs to
> outline source code analyzers. There are technical tools and checklist
> tools for the management reviews as well. 
> 

The compilers are infact useful, sometimes VERY usefull.
Your initial comments are very valid if you approach the web app. testing
problem from the perspective of a comprehensive security assessment across
the entire lifecycle of the application, but that is not the only approach 
and what is appropiate largely depends on the objective of the test
and the acceptable cost of performing it. 
In the case of the above comment, if the test is time constrained, with
no access to source code or to the dev. team and no documentation other
than the 'user's guide' and the webapp uses client-side components you
most likely will NEED decompilers and debuggers to do a decent assesment.

cheers,

-ivan

---
Perscriptio in manibus tabellariorum est
Noli me vocare, ego te vocabo

Ivan Arce
CTO
CORE SECURITY TECHNOLOGIES

44 Wall Street - New York, NY 10005
Ph: (212) 461-2345
Fax: (212) 461-2346
http://www.corest.com

PGP Fingerprint: C7A8 ED85 8D7B 9ADC 6836  B25D 207B E78E 2AD1 F65A





From mark at curphey.com  Mon Dec  9 16:34:33 2002
From: mark at curphey.com (Mark Curphey)
Date: Mon, 09 Dec 2002 16:34:33 -0500 (EST)
Subject: [OWASP-TESTING] Notes on Testing
In-Reply-To: <DHENIJFLKNFFEKJECMLFIEOMDNAA.iarce@core-sdi.com> from =?iso-8859-1?Q?Iv=E1n_Arce?= <iarce@core-sdi.com> on Mon, 9 Dec 2002 18:16:55 -0300
Message-ID: <200212092134.QAA26941@swiftsure.cnchost.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
Url: http://lists.owasp.org/pipermail/owasp-testing/attachments/20021209/19ff8480/attachment.pl 

From DEndler at iDefense.com  Mon Dec  9 16:38:01 2002
From: DEndler at iDefense.com (David Endler)
Date: Mon, 9 Dec 2002 16:38:01 -0500 
Subject: [OWASP-TESTING] Notes on Testing
Message-ID: <A4FCADDE108AD611A4A70008C7A49E0D56C8FD@IDSRV10>

Thanks to all who've gotten me their edits so far today and the continued
discussion on the this list.  Please send me everything you've got no later
than midnight EST tonight so I can begin the merging and refining process.
Thanks,

-dave



From randolph at seawa.org.au  Mon Dec  9 20:12:22 2002
From: randolph at seawa.org.au (Nick Randolph)
Date: Tue, 10 Dec 2002 09:12:22 +0800
Subject: [OWASP-TESTING] Notes on Testing
Message-ID: <2A7BEE31ED0FFF40AE0C4E68A53AB26504E5FF@ntserver.seawa.org.au>

Mark, Ivan & co.

I agree with Ivan's point about testing with real data.  In fact, I would go so far as to recommend that testing is done with real data, but that the system is taken "offline" (ie disconnected from any connected systems to prevent "real" flow on effects) or the tests done in the "testing" environment.  This is a classic case of the "Placebo" affect - If the tester generates the test data they already know what the output will be.  However if real data is used, the tester is only able to examine the results and see how the system behaves under real data.  Note as testers we should look outside the relatively young IT industry and see how other professions (eg the Medical industry for testing of drugs) do testing.  In particular the Placebo effect and the double Placebo effect are of particular relevance.

Cheers

Nick
-----Original Message-----
From: Mark Curphey [mailto:mark at curphey.com]
Sent: Tuesday, 10 December 2002 5:35 AM
To: iarce at core-sdi.com; owasp-testing at lists.sourceforge.net
Subject: RE: [OWASP-TESTING] Notes on Testing


Agreed Ivan. I think the langauge was too strong but I do believe testing should only be down with real data if you cant't create "real like" data or non-real data would have an impact on the actual results. I guess the message we need to get across is that if you were testing a bank for instance, a restricted account that wouldn't execute money transfers should be highly desireable rather than an account with a zero balance. If the app relies on an SSN, than a nine digit number that the app can parse as acceptable is better than the testers SSN etc

On the second point I think we are both on the same page actually. Compilers / decompilers (SoftIce and the like) are of course great tools for that specific testing. I wanted to make sure we don't get stuck down that black box no priviledged road as being the only way to do testing, but explain how it is one way. Your comments around when thats appropriate are a great explanation of that. The testing tools IMHO should explain how proxies work (ie intercet data stream and modifify in the fly), how decompilers work etc This will give the readers an indea of the breadth of the tools available to them and which ones are appropriate for specific types of testing or in certain circumstances like you describe.

---- =?iso-8859-1?Q?Iv=E1n_Arce?= <iarce at core-sdi.com> wrote:
> 
> 
> > -----Original Message-----
> > From: owasp-testing-admin at lists.sourceforge.net
> > [mailto:owasp-testing-admin at lists.sourceforge.net]On Behalf Of Mark
> > Curphey
> > Sent: Wednesday, December 04, 2002 4:22 AM
> > To: owasp-testing at lists.sourceforge.net
> > Subject: [OWASP-TESTING] Notes on Testing
> > 
> > 
> > 26 / 66 - everyone should have dev, qa, pre-prod and prod. I would
> > strongly argue that most testing is well before prod. Real data should
> > never (NEVER) be used in testing. This section IMHO needs a big rewrite.
> > This is all good and well for momandpops.php but....
> 
> I fail to understand the rationale for such strong statement, sometimes
> it is not even possible to avoid tests with real data (as in an external
> black-box pentest against the web app. in its production environment)
> 
> > 
> > 27 - 66 - decompilers ? This is testing not hacking ;-) I think this
> > section should explain how browser proxies work, how automated scanners
> > are combos of automated http_user agents and fuzzers etc. It needs to
> > outline source code analyzers. There are technical tools and checklist
> > tools for the management reviews as well. 
> > 
> 
> The compilers are infact useful, sometimes VERY usefull.
> Your initial comments are very valid if you approach the web app. testing
> problem from the perspective of a comprehensive security assessment across
> the entire lifecycle of the application, but that is not the only approach 
> and what is appropiate largely depends on the objective of the test
> and the acceptable cost of performing it. 
> In the case of the above comment, if the test is time constrained, with
> no access to source code or to the dev. team and no documentation other
> than the 'user's guide' and the webapp uses client-side components you
> most likely will NEED decompilers and debuggers to do a decent assesment.
> 
> cheers,
> 
> -ivan
> 
> ---
> Perscriptio in manibus tabellariorum est
> Noli me vocare, ego te vocabo
> 
> Ivan Arce
> CTO
> CORE SECURITY TECHNOLOGIES
> 
> 44 Wall Street - New York, NY 10005
> Ph: (212) 461-2345
> Fax: (212) 461-2346
> http://www.corest.com
> 
> PGP Fingerprint: C7A8 ED85 8D7B 9ADC 6836  B25D 207B E78E 2AD1 F65A
> 
> 
> 
> 
> -------------------------------------------------------
> This sf.net email is sponsored by:ThinkGeek
> Welcome to geek heaven.
> http://thinkgeek.com/sf
> _______________________________________________
> owasp-testing mailing list
> owasp-testing at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/owasp-testing
> 
> 


-------------------------------------------------------
This sf.net email is sponsored by:ThinkGeek
Welcome to geek heaven.
http://thinkgeek.com/sf
_______________________________________________
owasp-testing mailing list
owasp-testing at lists.sourceforge.net
https://lists.sourceforge.net/lists/listinfo/owasp-testing



From mark at curphey.com  Mon Dec  9 21:49:02 2002
From: mark at curphey.com (Mark Curphey)
Date: 09 Dec 2002 18:49:02 -0800
Subject: [OWASP-TESTING] Notes on Testing
In-Reply-To: <2A7BEE31ED0FFF40AE0C4E68A53AB26504E5FF@ntserver.seawa.org.au>
References: <2A7BEE31ED0FFF40AE0C4E68A53AB26504E5FF@ntserver.seawa.org.au>
Message-ID: <1039488543.4889.4.camel@localhost.localdomain>

I think there is the issue of production, pre-prod and QA systems
environments that also have an effect on the discussion though. If you
have pre-prod and QA you wouldn't need to take a system offline.  

In some large US financials you are absolutely not allowed to test with
real data.

I suggest we discuss the pros and cons of all thew approaches and offer
a balanced view. 

Seem sensible ?

On Mon, 2002-12-09 at 17:12, Nick Randolph wrote:
> 
> Mark, Ivan & co.
> 
> I agree with Ivan's point about testing with real data.  In fact, I would go so far as to recommend that testing is done with real data, but that the system is taken "offline" (ie disconnected from any connected systems to prevent "real" flow on effects) or the tests done in the "testing" environment.  This is a classic case of the "Placebo" affect - If the tester generates the test data they already know what the output will be.  However if real data is used, the tester is only able to examine the results and see how the system behaves under real data.  Note as testers we should look outside the relatively young IT industry and see how other professions (eg the Medical industry for testing of drugs) do testing.  In particular the Placebo effect and the double Placebo effect are of particular relevance.
> 
> Cheers
> 
> Nick
> -----Original Message-----
> From: Mark Curphey [mailto:mark at curphey.com]
> Sent: Tuesday, 10 December 2002 5:35 AM
> To: iarce at core-sdi.com; owasp-testing at lists.sourceforge.net
> Subject: RE: [OWASP-TESTING] Notes on Testing
> 
> 
> Agreed Ivan. I think the langauge was too strong but I do believe testing should only be down with real data if you cant't create "real like" data or non-real data would have an impact on the actual results. I guess the message we need to get across is that if you were testing a bank for instance, a restricted account that wouldn't execute money transfers should be highly desireable rather than an account with a zero balance. If the app relies on an SSN, than a nine digit number that the app can parse as acceptable is better than the testers SSN etc
> 
> On the second point I think we are both on the same page actually. Compilers / decompilers (SoftIce and the like) are of course great tools for that specific testing. I wanted to make sure we don't get stuck down that black box no priviledged road as being the only way to do testing, but explain how it is one way. Your comments around when thats appropriate are a great explanation of that. The testing tools IMHO should explain how proxies work (ie intercet data stream and modifify in the fly), how decompilers work etc This will give the readers an indea of the breadth of the tools available to them and which ones are appropriate for specific types of testing or in certain circumstances like you describe.
> 
> ---- =?iso-8859-1?Q?Iv=E1n_Arce?= <iarce at core-sdi.com> wrote:
> > 
> > 
> > > -----Original Message-----
> > > From: owasp-testing-admin at lists.sourceforge.net
> > > [mailto:owasp-testing-admin at lists.sourceforge.net]On Behalf Of Mark
> > > Curphey
> > > Sent: Wednesday, December 04, 2002 4:22 AM
> > > To: owasp-testing at lists.sourceforge.net
> > > Subject: [OWASP-TESTING] Notes on Testing
> > > 
> > > 
> > > 26 / 66 - everyone should have dev, qa, pre-prod and prod. I would
> > > strongly argue that most testing is well before prod. Real data should
> > > never (NEVER) be used in testing. This section IMHO needs a big rewrite.
> > > This is all good and well for momandpops.php but....
> > 
> > I fail to understand the rationale for such strong statement, sometimes
> > it is not even possible to avoid tests with real data (as in an external
> > black-box pentest against the web app. in its production environment)
> > 
> > > 
> > > 27 - 66 - decompilers ? This is testing not hacking ;-) I think this
> > > section should explain how browser proxies work, how automated scanners
> > > are combos of automated http_user agents and fuzzers etc. It needs to
> > > outline source code analyzers. There are technical tools and checklist
> > > tools for the management reviews as well. 
> > > 
> > 
> > The compilers are infact useful, sometimes VERY usefull.
> > Your initial comments are very valid if you approach the web app. testing
> > problem from the perspective of a comprehensive security assessment across
> > the entire lifecycle of the application, but that is not the only approach 
> > and what is appropiate largely depends on the objective of the test
> > and the acceptable cost of performing it. 
> > In the case of the above comment, if the test is time constrained, with
> > no access to source code or to the dev. team and no documentation other
> > than the 'user's guide' and the webapp uses client-side components you
> > most likely will NEED decompilers and debuggers to do a decent assesment.
> > 
> > cheers,
> > 
> > -ivan
> > 
> > ---
> > Perscriptio in manibus tabellariorum est
> > Noli me vocare, ego te vocabo
> > 
> > Ivan Arce
> > CTO
> > CORE SECURITY TECHNOLOGIES
> > 
> > 44 Wall Street - New York, NY 10005
> > Ph: (212) 461-2345
> > Fax: (212) 461-2346
> > http://www.corest.com
> > 
> > PGP Fingerprint: C7A8 ED85 8D7B 9ADC 6836  B25D 207B E78E 2AD1 F65A
> > 
> > 
> > 
> > 
> > -------------------------------------------------------
> > This sf.net email is sponsored by:ThinkGeek
> > Welcome to geek heaven.
> > http://thinkgeek.com/sf
> > _______________________________________________
> > owasp-testing mailing list
> > owasp-testing at lists.sourceforge.net
> > https://lists.sourceforge.net/lists/listinfo/owasp-testing
> > 
> > 
> 
> 
> -------------------------------------------------------
> This sf.net email is sponsored by:ThinkGeek
> Welcome to geek heaven.
> http://thinkgeek.com/sf
> _______________________________________________
> owasp-testing mailing list
> owasp-testing at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/owasp-testing
> 
> 
> -------------------------------------------------------
> This sf.net email is sponsored by:ThinkGeek
> Welcome to geek heaven.
> http://thinkgeek.com/sf
> _______________________________________________
> owasp-testing mailing list
> owasp-testing at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/owasp-testing
> 





From ivan.arce at corest.com  Tue Dec 10 15:35:53 2002
From: ivan.arce at corest.com (Ivan Arce)
Date: Tue, 10 Dec 2002 17:35:53 -0300
Subject: [OWASP-TESTING] Notes on Testing
In-Reply-To: <1039488543.4889.4.camel@localhost.localdomain>
Message-ID: <DHENIJFLKNFFEKJECMLFCEPMDNAA.ivan.arce@corest.com>

 Certainly! I was just playing devil's advocate, 
as long as we discuss the pros and cons of each
approach and provide enough information to the reader
to make an adequate choice we will be fine, in fact
we should not go much futher than that, what is 
adequate for one wont be acceptable or feasible for
some others.

Personally I consider more important to test in
a real environment (qa, pre-prod, whatever) with
everything 'connected' and fake data (or real-like)
than testing with real data in the vacum.

But I think we will be soon getting to the fine grained 
details that are not so relevant for the document itself.

-ivan


---
Perscriptio in manibus tabellariorum est
Noli me vocare, ego te vocabo

Ivan Arce
CTO
CORE SECURITY TECHNOLOGIES

44 Wall Street - New York, NY 10005
Ph: (212) 461-2345
Fax: (212) 461-2346
http://www.corest.com

PGP Fingerprint: C7A8 ED85 8D7B 9ADC 6836  B25D 207B E78E 2AD1 F65A


> -----Original Message-----
> From: owasp-testing-admin at lists.sourceforge.net
> [mailto:owasp-testing-admin at lists.sourceforge.net]On Behalf Of Mark
> Curphey
> Sent: Monday, December 09, 2002 11:49 PM
> To: Nick Randolph
> Cc: owasp-testing at lists.sourceforge.net
> Subject: RE: [OWASP-TESTING] Notes on Testing
> 
> 
> I think there is the issue of production, pre-prod and QA systems
> environments that also have an effect on the discussion though. If you
> have pre-prod and QA you wouldn't need to take a system offline.  
> 
> In some large US financials you are absolutely not allowed to test with
> real data.
> 
> I suggest we discuss the pros and cons of all thew approaches and offer
> a balanced view. 
> 
> Seem sensible ?
> 




From DEndler at iDefense.com  Fri Dec 13 13:50:48 2002
From: DEndler at iDefense.com (David Endler)
Date: Fri, 13 Dec 2002 13:50:48 -0500
Subject: [OWASP-TESTING] update
Message-ID: <A4FCADDE108AD611A4A70008C7A49E0D56C98A@IDSRV10>

Hi all, I just wanted to let you know I'm still reworking the document based
on all of the new material, discussion, and suggestions that were sent
around.  Given that the content is a little incomplete, I am close to making
some serious editorial decisions on flow and structure which I hope you'll
like.  The plan realistically is to get something out before new years, but
if the team judges the quality to not be on par, I would rather postpone
than risk tarnishing the OWASP name.  

My goal is to wrap up version .7 this weekend, relase it to the group, and
solicit one more round of very high level comments to see where we need to
go from here.  Sound reasonable?

-dave

David Endler, CISSP
Director, Technical Intelligence
iDEFENSE, Inc.
14151 Newbrook Drive
Suite 100
Chantilly, VA 20151
voice: 703-344-2632
fax: 703-961-1071

dendler at idefense.com
www.idefense.com




From tomgal at Exchange.Microsoft.com  Fri Dec 13 14:11:58 2002
From: tomgal at Exchange.Microsoft.com (Tom Gallagher)
Date: Fri, 13 Dec 2002 11:11:58 -0800
Subject: [OWASP-TESTING] update
Message-ID: <EB005E067BC00A458EF6639DEC5AEDA3B4F4B4@df-muttley.dogfood>

Cool.  I know this work is very time consuming.  We really appreciate
it.

Thanks,
Tom

---
Tom Gallagher <tomgal at microsoft.com>
Office QnS Security Team

-----Original Message-----
From: David Endler [mailto:DEndler at iDefense.com] 
Sent: Friday, December 13, 2002 10:51 AM
To: 'owasp-testing at lists.sourceforge.net'

Hi all, I just wanted to let you know I'm still reworking the document
based
on all of the new material, discussion, and suggestions that were sent
around.  Given that the content is a little incomplete, I am close to
making
some serious editorial decisions on flow and structure which I hope
you'll
like.  The plan realistically is to get something out before new years,
but
if the team judges the quality to not be on par, I would rather postpone
than risk tarnishing the OWASP name.  

My goal is to wrap up version .7 this weekend, relase it to the group,
and
solicit one more round of very high level comments to see where we need
to
go from here.  Sound reasonable?

-dave

David Endler, CISSP
Director, Technical Intelligence
iDEFENSE, Inc.
14151 Newbrook Drive
Suite 100
Chantilly, VA 20151
voice: 703-344-2632
fax: 703-961-1071

dendler at idefense.com
www.idefense.com



-------------------------------------------------------
This sf.net email is sponsored by:
With Great Power, Comes Great Responsibility 
Learn to use your power at OSDN's High Performance Computing Channel
http://hpc.devchannel.org/
_______________________________________________
owasp-testing mailing list
owasp-testing at lists.sourceforge.net
https://lists.sourceforge.net/lists/listinfo/owasp-testing





From randolph at seawa.org.au  Fri Dec 13 23:58:18 2002
From: randolph at seawa.org.au (Nick Randolph)
Date: Sat, 14 Dec 2002 12:58:18 +0800
Subject: [OWASP-TESTING] update
Message-ID: <2A7BEE31ED0FFF40AE0C4E68A53AB26506F595@ntserver.seawa.org.au>

Good for me!

Nick

-----Original Message-----
From: David Endler [mailto:DEndler at iDefense.com]
Sent: Saturday, 14 December 2002 2:51 AM
To: 'owasp-testing at lists.sourceforge.net'
Subject: [OWASP-TESTING] update


Hi all, I just wanted to let you know I'm still reworking the document based
on all of the new material, discussion, and suggestions that were sent
around.  Given that the content is a little incomplete, I am close to making
some serious editorial decisions on flow and structure which I hope you'll
like.  The plan realistically is to get something out before new years, but
if the team judges the quality to not be on par, I would rather postpone
than risk tarnishing the OWASP name.  

My goal is to wrap up version .7 this weekend, relase it to the group, and
solicit one more round of very high level comments to see where we need to
go from here.  Sound reasonable?

-dave

David Endler, CISSP
Director, Technical Intelligence
iDEFENSE, Inc.
14151 Newbrook Drive
Suite 100
Chantilly, VA 20151
voice: 703-344-2632
fax: 703-961-1071

dendler at idefense.com
www.idefense.com



-------------------------------------------------------
This sf.net email is sponsored by:
With Great Power, Comes Great Responsibility 
Learn to use your power at OSDN's High Performance Computing Channel
http://hpc.devchannel.org/
_______________________________________________
owasp-testing mailing list
owasp-testing at lists.sourceforge.net
https://lists.sourceforge.net/lists/listinfo/owasp-testing



From mark at curphey.com  Sat Dec 14 19:18:33 2002
From: mark at curphey.com (Mark Curphey)
Date: 14 Dec 2002 16:18:33 -0800
Subject: [OWASP-TESTING] Photoshop Help
Message-ID: <1039911514.977.954.camel@localhost.localdomain>

Any of you fine people any good with Photoshop ? 

I am dong some 3D architecture drawings but don't have the skill or
patience to complete them. They will be used in the "What is a Web
Application" Section of the Guide and testing...

If you or anyone you know can help, please drop me a mail.

Thanks 






From mads at opencs.com.br  Thu Dec 19 06:29:09 2002
From: mads at opencs.com.br (Mads Rasmussen)
Date: Thu, 19 Dec 2002 08:29:09 -0300
Subject: [OWASP-TESTING] ENC: Security Paper: Session Fixation Vulnerability in Web-basedApplications
Message-ID: <499FF4AFD7F16F4C99618F59BC5DA55630C040@olimpia.opencs.com.br>

I thought that this might be interesting literature :)

Regards,

Mads Rasmussen
Open Communications Security
+55(11)3345-2525


-----Mensagem original-----
De: Mitja Kolsek (ACROS Lists) [mailto:lists at acros.si] 
Enviada em: quarta-feira, 18 de dezembro de 2002 11:01
Para: secpapers at securityfocus.com
Assunto: Security Paper: Session Fixation Vulnerability in
Web-basedApplications


ACROS Security is pleased to announce the publication of a security
paper
about a new class of attacks on web-based applications that we named
"session fixation" attacks. The paper is available at

	[ http://www.acros.si/papers/session_fixation.pdf ]

and could be useful to all web applications developers and security
analysts. We will appreciate any feedback you might provide to
<security at acros.si>.

Abstract
========

Many web-based applications employ some kind of session management to
create
a user-friendly environment. Sessions are stored on server and
associated
with respective users by session identifiers (IDs). Naturally, session
IDs
present an attractive target for attackers, who, by obtaining them,
effectively hijack users' identities. Knowing that, web servers are
employing techniques for protecting session IDs from three classes of
attacks: interception, prediction and brute-force attacks. This paper
reveals a fourth class of attacks against session IDs: session fixation
attacks. In a session fixation attack, the attacker fixes the user's
session
ID before the user even logs into the target server, thereby eliminating
the
need to obtain the user's session ID afterwards. There are many ways for
the
attacker to perform a session fixation attack, depending on the session
ID
transport mechanism (URL arguments, hidden form fields, cookies) and the
vulnerabilities available in the target system or its immediate
environment.
The paper provides detailed information about exploiting vulnerable
systems
as well as recommendations for protecting them against session fixation
attacks.


ACROS Security wishes you a secure and prosperous future.


ACROS Security [ http://www.acros.si ]
"Our business is finding holes in your security ...
... and patching them, while we're at it."




