From Penny.Major at onx.com  Wed Nov 12 22:16:39 2003
From: Penny.Major at onx.com (Penny Major)
Date: Wed, 12 Nov 2003 22:16:39 -0500
Subject: [OWASP-TESTING] Checking in
Message-ID: <1B3E9E3EB7864D4B9FB3903657555069025964@fx1.onx.com>

Just a reminder to everyone that your dates are coming up this week for the completion of your sections.  How's it going??

penny


From glyng at moiler.com  Wed Nov 12 22:33:28 2003
From: glyng at moiler.com (Glyn)
Date: Thu, 13 Nov 2003 13:33:28 +1000
Subject: [OWASP-TESTING] Checking in
In-Reply-To: <1B3E9E3EB7864D4B9FB3903657555069025964@fx1.onx.com>
Message-ID: <001901c3a996$ea2cd0e0$0501a8c0@toolap>

On target!

> -----Original Message-----
> From: owasp-testing-admin at lists.sourceforge.net 
> [mailto:owasp-testing-admin at lists.sourceforge.net] On Behalf 
> Of Penny Major
> Sent: 13 November 2003 13:17
> To: Owasp-Testing (E-mail)
> Subject: [OWASP-TESTING] Checking in
> 
> 
> Just a reminder to everyone that your dates are coming up 
> this week for the completion of your sections.  How's it going??
> 
> penny
> 
> NHS^?[){([ 
> Zr}}z h?z?-z-? ZazV?z]z "?
> Zr
 U,??h?@l0jwf > 0j( &^ f)+-??)+-?.??
a l b,? y+ ?b ?+-w ^?
> 




From dstuttard at deloitte.co.uk  Fri Nov 14 06:54:15 2003
From: dstuttard at deloitte.co.uk (Stuttard, Dafydd N (UK - London))
Date: Fri, 14 Nov 2003 11:54:15 -0000
Subject: [OWASP-TESTING] Checking in
Message-ID: <49E4DF74BEA0A944929D293561E841670C8E69@uklon0416.uk.deloitte.com>

All -

Here's my bit on these two little topics.

Cheers
Dafydd


IMPORTANT NOTICE

If you have received this e-mail in error or wish to read our e-mail 
disclaimer statement and monitoring policy, please refer to the 
statement below or contact the sender.

This communication is from Deloitte & Touche LLP.   Deloitte & 
Touche LLP is a limited liability partnership registered in England and 
Wales with registered number OC303675.  A list of members' names 
is available for inspection at Stonecutter Court, 1 Stonecutter Street, 
London EC4A 4TR, United Kingdom, the firm's principal place of 
business and registered office. Deloitte & Touche LLP is authorised 
and regulated by the Financial Services Authority.

This communication and any attachments contain information which is 
confidential and may also be privileged. It is for the exclusive use of the 
intended recipient(s). If you are not the intended recipient(s) please 
note that any form of disclosure, distribution, copying or use of this 
communication or the information in it or in any attachments is strictly 
prohibited and may be unlawful. If you have received this 
communication in error, please return it with the title "received in error" 
to IT.SECURITY.UK at deloitte.co.uk then delete the email and destroy 
any copies of it.

E-mail communications cannot be guaranteed to be secure or error 
free, as information could be intercepted corrupted, amended, lost, 
destroyed, arrive late or incomplete, or contain viruses. We do not 
accept liability for any such matters or their consequences. Anyone 
who communicates with us by e-mail is taken to accept the risks in 
doing so

When addressed to our clients, any opinions or advice contained in 
this e-mail and any attachments are subject to the terms and conditions 
expressed in the governing Deloitte & Touche client engagement letter

Opinions, conclusions and other information in this e-mail and any 
attachments which do not relate to the official business of the firm are 
neither given nor endorsed by it.

    

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.owasp.org/pipermail/owasp-testing/attachments/20031114/3c3efd3c/attachment.html 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.owasp.org/pipermail/owasp-testing/attachments/20031114/3c3efd3c/attachment-0001.html 

From glyng at moiler.com  Sun Nov 16 02:49:26 2003
From: glyng at moiler.com (Glyn)
Date: Sun, 16 Nov 2003 17:49:26 +1000
Subject: [OWASP-TESTING] Checking in
In-Reply-To: <1B3E9E3EB7864D4B9FB3903657555069025964@fx1.onx.com>
Message-ID: <006001c3ac16$2a359b00$0501a8c0@toolap>

Hi guys & gals,

I'm about 5000 words in, and should finish it tomorrow morning (it's 6pm here now).

Cheers,
Glyn.

> -----Original Message-----
> From: owasp-testing-admin at lists.sourceforge.net 
> [mailto:owasp-testing-admin at lists.sourceforge.net] On Behalf 
> Of Penny Major
> Sent: 13 November 2003 13:17
> To: Owasp-Testing (E-mail)
> Subject: [OWASP-TESTING] Checking in
> 
> 
> Just a reminder to everyone that your dates are coming up 
> this week for the completion of your sections.  How's it going??
> 
> penny
> 
> NHS^?[){([ 
> Zr}}z h?z?-z-? ZazV?z]z "?
> Zr
 U,??h?@l0jwf > 0j( &^ f)+-??)+-?.??
a l b,? y+ ?b ?+-w ^?
> 




From Penny.Major at onx.com  Tue Nov 18 10:45:43 2003
From: Penny.Major at onx.com (Penny Major)
Date: Tue, 18 Nov 2003 10:45:43 -0500
Subject: [OWASP-TESTING] Sections Posted
Message-ID: <1B3E9E3EB7864D4B9FB390365755506902597D@fx1.onx.com>

A number of the sections have been posted to the Sourceforge CVS.  It takes a bit for the web interface to be updated.  Once it has been, the sections are in html format and are available at:  http://cvs.sourceforge.net/viewcvs.py/owasp/testing/ . 
 
The sections that I posted are:
 
Authentication
Cross Site Scripting
Default Files
Unreferenced Files
 
I'd like to try and get each section's review completed about 1-1 1/2 weeks after it's been posted so that things don't drag too much.  
 
Thanks for the effort from everyone.
 
penny

From Penny.Major at onx.com  Tue Nov 18 11:48:44 2003
From: Penny.Major at onx.com (Penny Major)
Date: Tue, 18 Nov 2003 11:48:44 -0500
Subject: [OWASP-TESTING] Size Reminder
Message-ID: <1B3E9E3EB7864D4B9FB3903657555069025980@fx1.onx.com>

Everyone,
 
We have an extremely small size limit for posts to this list.  Could you please e-mail your sections/updates/files directly to me and I'll post them into CVS for the group.
 
Thanks,
 
penny

From Penny.Major at onx.com  Thu Nov 20 09:06:41 2003
From: Penny.Major at onx.com (Penny Major)
Date: Thu, 20 Nov 2003 09:06:41 -0500
Subject: [OWASP-TESTING] More sections posted
Message-ID: <1B3E9E3EB7864D4B9FB3903657555069025986@fx1.onx.com>

Everyone,
 
I've posted O/S Command Injection and Session Management to CVS.  For those of you unfamiliar with Sourceforge's CVS there are two ways of getting the files.  The first is with a CVS program (see http://sourceforge.net/cvs/?group_id=64424 for details).  They also offer a web interface.  Ours is at:  http://cvs.sourceforge.net/viewcvs.py/owasp/testing/ .  Everyone has the equivalent of "read" access to the files. 
 
In an effort to be reasonably timely, I posted the Session Management in rtf format instead of the usual html.  Everyone should be able to read it.  However if you do have an issue, let me know and I'll get it to you in another format.  
 
penny
 
 

From mark at curphey.com  Sun Nov 23 14:39:24 2003
From: mark at curphey.com (Mark Curphey)
Date: Sun, 23 Nov 2003 14:39:24 -0500
Subject: [OWASP-TESTING] Checking in
In-Reply-To: <49E4DF74BEA0A944929D293561E841670C8E69@uklon0416.uk.deloitte.com>
Message-ID: <E1AO04w-0000S3-00@smtp02.mrf.mail.rcn.net>

Hi Dafydd,

This is a great start. I have a few suggestions / comments that may be worth
considering ?

Default Files

1. In the description I think it may be worth accentuating the fact that
there is only a security issue in default files when they have security
vulns. One of my pet peeves are consultants reports listing default files
like documentation etc where there is no security issues at all. It's a
housekeeping issue (I guess) but not a security one in my opinion.

2. In the "how to test" description I think it would be worth-while
explaining that you are looking for the instance of the file. To do that you
need to see an HTTP 200 or equivalent server response and this is
essentially what tools like Nikto etc do. Maybe a http trace type sequence
might be a good visual example....That leads neatly onto ...

3. IMHO tools like Nikto and Nessus are really bad at finding default files.
That is because they can't tell the difference between an HTTP 404 (or 400
series server response) from a HTTP 200 carrying an HTML 404. As an example
fire one of them off against OWASP.org and you'll find we have all the IIS
files under the sun (on a Unix box!). The commercial scanners have solved
this by allowing users to define a 404.

4. I am not sure white box and black box are good terms for this on
reflection.

5. How about tools like IIS lockdown that look for and remove sample files ?
Is there an Apache equiv anyone knows about.

Unreferenced Files

1. This write up focuses solely on pen testing. How about comparing the
deployed content to the CMS or app deployment tool? This is typically what
happens in enterprises in my experience. Maybe we should say that this is
really a pen testing technique only ?

2. Under blind guessing might be worth mentioning the HTTP / HTML 404 again.
Great stuff though!

3. I used to have a list of mutated extensions like ~bak from Vi and so on
(that's wrong, I even forgot that). Maybe we could create that list as an
appendix and we could build that into WebScarab. A simple XML format would
be good such as 

<extension>
	<fileext/>
	<appthatcreatesit/>
</extension>

4. Might be worth showing an example of making an HTTP call to list the
directory contents where no default page for that dir has been specified ?

Anyways great job, just a few thoughts I had !

Cheers

Mark



-----Original Message-----
From: owasp-testing-admin at lists.sourceforge.net
[mailto:owasp-testing-admin at lists.sourceforge.net] On Behalf Of Stuttard,
Dafydd N (UK - London)
Sent: Friday, November 14, 2003 6:54 AM
To: Penny Major; Owasp-Testing (E-mail)

All -

Here's my bit on these two little topics.

Cheers
Dafydd


IMPORTANT NOTICE

If you have received this e-mail in error or wish to read our e-mail
disclaimer statement and monitoring policy, please refer to the statement
below or contact the sender.

This communication is from Deloitte & Touche LLP.   Deloitte & 
Touche LLP is a limited liability partnership registered in England and
Wales with registered number OC303675.  A list of members' names is
available for inspection at Stonecutter Court, 1 Stonecutter Street, London
EC4A 4TR, United Kingdom, the firm's principal place of business and
registered office. Deloitte & Touche LLP is authorised and regulated by the
Financial Services Authority.

This communication and any attachments contain information which is
confidential and may also be privileged. It is for the exclusive use of the
intended recipient(s). If you are not the intended recipient(s) please note
that any form of disclosure, distribution, copying or use of this
communication or the information in it or in any attachments is strictly
prohibited and may be unlawful. If you have received this communication in
error, please return it with the title "received in error" 
to IT.SECURITY.UK at deloitte.co.uk then delete the email and destroy any
copies of it.

E-mail communications cannot be guaranteed to be secure or error free, as
information could be intercepted corrupted, amended, lost, destroyed, arrive
late or incomplete, or contain viruses. We do not accept liability for any
such matters or their consequences. Anyone who communicates with us by
e-mail is taken to accept the risks in doing so

When addressed to our clients, any opinions or advice contained in this
e-mail and any attachments are subject to the terms and conditions expressed
in the governing Deloitte & Touche client engagement letter

Opinions, conclusions and other information in this e-mail and any
attachments which do not relate to the official business of the firm are
neither given nor endorsed by it.

    





From mark at curphey.com  Sun Nov 23 14:54:25 2003
From: mark at curphey.com (Mark Curphey)
Date: Sun, 23 Nov 2003 14:54:25 -0500
Subject: [OWASP-TESTING] RE: OWASP Testing
In-Reply-To: <3FB90C9C.5040109@germinus.com>
Message-ID: <E1AO0JQ-0005bb-00@smtp02.mrf.mail.rcn.net>

Hi Javier, 
 
Great start. I have a few suggestions / comments that may be considered ?
 
1. In the first paragraph I think it should be "in the web application" not
the web server. 
 
2. I think it might be worth highlighting that the problem can occur
anywhere where input is converted into output without be filtered. That
covers TRACE etc as well.
 
3. I think it is worth listing an HTTP TRACE request as a source
 
4. It maybe worth listing potential sources  / payloads i.e. any http header
 
cookies
form values
name value pairs in GET requests
POST payloads (HTML forms or otherwise)
Data from Databases and other data sources
etc
 
6. Might be worth a list of potential targets such as users browsers, html
aware log files, html aware email clients, error messages (which maybe a
source not a target)
 
7. How about XSS in XML payloads ? Webservices have the same issues I think.
 
8. The biggest thing I would add would be a section on how to look for XSS
in code. As code review is by far the most effective way to find any
security issue I think it needs to be as prominent as possible. That may
look something like this
 
A. List and review all of the data entry points to the applications. This
should include user input, data feeds etc
B. Trace each piece of data and determine if it is ever send back to any
user at any point in its life-cycle
C. If it is sent back to a user,  is it filtered ? (note all input should be
filtered anyways as a matter of course)
 
9. You focus on XSS with cookie stealing but as the WebGoat lesson points
out database data theft etc is equally probable. It may be worth pointing
that out at some point.
 
Anyways just a few thoughts / comments..great job !
 


  _____  

From: Javier Fernandez-Sanguino [mailto:jfernandez at germinus.com] 
Sent: Monday, November 17, 2003 1:00 PM
To: Penny Major
Cc: mark at curphey.com



Title Cross Site Scripting



Date 17th November



Author Javier Fern?ndez-Sanguino



Short Description of Issue


Cross Site Scripting attacks (XSS) are attempts to subvert the relationship
between a user's browser and a trusted site in order to retrieve sensitive
information from the user's browser. Attackers can exploit this attack due
to flaws in the web server code (such as the way error request are shown) or
in the way it stores information that is later on presented to user
(comments to news, forums, web-based e-mail readers, etc.). If the
information is not sanitized before it is stored or  if it is not santized
when introduced into an HTML object, it might lead to code execution in the
users's browser, this code is executed as in the context of the trusted
site. Execution of code, including Javascript, VisualBasic Script,  ActiveX,
or Java applets can be used for a different purposes (including arbitrary
remote code execution in vulnerable or misconfigured browsers), but a Cross
Site Scripting has as its main purpose the retrieval of session information
that involves the remote site. This session information (usually in the form
of cookies) can then be used to hijack the user's session (before it
expires) if the remote site does not control where the session was
established form.

XSS attacks can be produced both by sending crafted URLs to potential
targets through e-mail or by storing them in web-pages and hiding them as
legitimate links, images, or other type of information. Common sources of
these kind of attacks are webmail applications and web-based bulletin
boards, but in some cases even web servers are directly affected.



How to Test


Testing the success of XSS attempts involves determining where does the web
application introduce information generated by an attacker into an HTML
response which might be viewed by a user (and interpreted by his browser).
Usually, determining that JavaScript will be run is enough to demonstrate
that an XSS attack is possible. Although whether or not this kind of attack
can succeed depends on if this attack can be introduced permanently into the
web server (for example through a comment posted in the web site) or needs
to be done through social engineering attacks (like e-mail).



Black Box


In order to do black box testing of XSS the tester first needs to determine
which parts of the web server application introduces information generated
by an attacker. This can include either dynamically generated HTML pages
based on POST or GET calls to applications (including error pages they
generate which include said content) or content generated based on
information stored in the website that is later on presented to legitimate
users. Once these places have been determined the tester should try to
inject code and see if it is included verbatim in the HTML page returned and
whether it is filtered or not. If filtered, the tester needs to make sure
that all potential sources for XSS attacks are appropiately filtered.


Notice that it is also necessary to determine if it is possible to do
session replays (using retrieved cookies) from sources different from the
one that started the session. Session hijacking might be hindered and even
if XSS attacks are possible, their impact might be limited.



White Box 



Source code analysis must be focused on how the application manages
information that is presented to the end user or stored to later generate
HTML pages . Any such information must be sanitized before storage and must
be also santized before it is given to the user; this includes filtering all
HTML tags. If HTML tags are allowed in the content, the reviewer must make
sure that the filter implement to sanitize these tags only allows tags (and
parameters) which are not subject to XSS attacks. 


References


Examples


Sample XSS attack:

http://www.site.com/program?parameter="><script>alert(document.cookie)</scri
pt>



From dstuttard at deloitte.co.uk  Tue Nov 25 12:51:28 2003
From: dstuttard at deloitte.co.uk (Stuttard, Dafydd N (UK - London))
Date: Tue, 25 Nov 2003 17:51:28 -0000
Subject: [OWASP-TESTING] Checking in
Message-ID: <49E4DF74BEA0A944929D293561E841670C8E85@uklon0416.uk.deloitte.com>

Hi Mark

Thanks for your feedback -- see my responses below.

What is the process for peer review? Shall I revise my bits and resubmit
them?

Cheers
Dafydd




>-----Original Message-----
>From: Mark Curphey [mailto:mark at curphey.com] 
>Sent: 23 November 2003 19:39
>To: Stuttard, Dafydd N (UK - London); 'Penny Major'; 
>'Owasp-Testing (E-mail)'
>Subject: RE: [OWASP-TESTING] Checking in
>
>
>Hi Dafydd,
>
>This is a great start. I have a few suggestions / comments 
>that may be worth
>considering ?
>
>Default Files
>
>1. In the description I think it may be worth accentuating the 
>fact that
>there is only a security issue in default files when they have security
>vulns. One of my pet peeves are consultants reports listing 
>default files
>like documentation etc where there is no security issues at all. It's a
>housekeeping issue (I guess) but not a security one in my opinion.
>

Agreed -- there's nothing like trying to talk up a non-issue when you
haven't found anything decent :)


>2. In the "how to test" description I think it would be worth-while
>explaining that you are looking for the instance of the file. 
>To do that you
>need to see an HTTP 200 or equivalent server response and this is
>essentially what tools like Nikto etc do. Maybe a http trace 
>type sequence
>might be a good visual example....That leads neatly onto ...
>

Agreed. I mentioned this briefly in the Unreferenced Files section, but it
should be spelled out more fully in both.


>3. IMHO tools like Nikto and Nessus are really bad at finding 
>default files.
>That is because they can't tell the difference between an HTTP 
>404 (or 400
>series server response) from a HTTP 200 carrying an HTML 404. 
>As an example
>fire one of them off against OWASP.org and you'll find we have 
>all the IIS
>files under the sun (on a Unix box!). The commercial scanners 
>have solved
>this by allowing users to define a 404.
>

Yes, Nessus does some basic 200 "not found" detection (and does it better
than one commercial scanner I've used!) but it isn't too clever. We should
list a few commercial tools as well.


>4. I am not sure white box and black box are good terms for this on
>reflection.
>
>5. How about tools like IIS lockdown that look for and remove 
>sample files ?
>Is there an Apache equiv anyone knows about.
>

Not aware of one.


>Unreferenced Files
>
>1. This write up focuses solely on pen testing. How about comparing the
>deployed content to the CMS or app deployment tool? This is 
>typically what
>happens in enterprises in my experience. Maybe we should say 
>that this is
>really a pen testing technique only ?
>
>2. Under blind guessing might be worth mentioning the HTTP / 
>HTML 404 again.
>Great stuff though!

Agreed -- I'll spell out this point, with some techniques for automating
detection of 200 "not found" pages.


>
>3. I used to have a list of mutated extensions like ~bak from 
>Vi and so on
>(that's wrong, I even forgot that). Maybe we could create that 
>list as an
>appendix and we could build that into WebScarab. A simple XML 
>format would
>be good such as 
>
><extension>
>	<fileext/>
>	<appthatcreatesit/>
></extension>

Agreed


>
>4. Might be worth showing an example of making an HTTP call to list the
>directory contents where no default page for that dir has been 
>specified ?

Agreed


>
>Anyways great job, just a few thoughts I had !
>
>Cheers
>
>Mark
>
>
IMPORTANT NOTICE

If you have received this e-mail in error or wish to read our e-mail 
disclaimer statement and monitoring policy, please refer to the 
statement below or contact the sender.

This communication is from Deloitte & Touche LLP.   Deloitte & 
Touche LLP is a limited liability partnership registered in England and 
Wales with registered number OC303675.  A list of members' names 
is available for inspection at Stonecutter Court, 1 Stonecutter Street, 
London EC4A 4TR, United Kingdom, the firm's principal place of 
business and registered office. Deloitte & Touche LLP is authorised 
and regulated by the Financial Services Authority.

This communication and any attachments contain information which is 
confidential and may also be privileged. It is for the exclusive use of the 
intended recipient(s). If you are not the intended recipient(s) please 
note that any form of disclosure, distribution, copying or use of this 
communication or the information in it or in any attachments is strictly 
prohibited and may be unlawful. If you have received this 
communication in error, please return it with the title "received in error" 
to IT.SECURITY.UK at deloitte.co.uk then delete the email and destroy 
any copies of it.

E-mail communications cannot be guaranteed to be secure or error 
free, as information could be intercepted corrupted, amended, lost, 
destroyed, arrive late or incomplete, or contain viruses. We do not 
accept liability for any such matters or their consequences. Anyone 
who communicates with us by e-mail is taken to accept the risks in 
doing so

When addressed to our clients, any opinions or advice contained in 
this e-mail and any attachments are subject to the terms and conditions 
expressed in the governing Deloitte & Touche client engagement letter

Opinions, conclusions and other information in this e-mail and any 
attachments which do not relate to the official business of the firm are 
neither given nor endorsed by it.




From jfernandez at germinus.com  Thu Nov 27 03:23:54 2003
From: jfernandez at germinus.com (Javier Fernandez-Sanguino)
Date: Thu, 27 Nov 2003 09:23:54 +0100
Subject: [OWASP-TESTING] Update the web pages?
Message-ID: <3FC5B49A.9070807@germinus.com>

Just a note to whomever updates the webpages.
http://www.owasp.org/documentation/testing says:

	Welcome To The Testing Project Homepage
This is the Under Construction page for the OWASP testing project. A 
completed project page will be posted on MOnday November 3rd, 2003. An 
initial draft will be posted before the end of 2003.
Please check back after November 3rd, 2003.

Obviously this date should be modified (or something should be included) 
in order to keep it up-to-date.

Thanks

Javi




From jfernandez at germinus.com  Thu Nov 27 04:22:50 2003
From: jfernandez at germinus.com (Javier Fernandez-Sanguino)
Date: Thu, 27 Nov 2003 10:22:50 +0100
Subject: [OWASP-TESTING] Checking in
In-Reply-To: <E1AO04w-0000S3-00@smtp02.mrf.mail.rcn.net>
References: <E1AO04w-0000S3-00@smtp02.mrf.mail.rcn.net>
Message-ID: <3FC5C26A.5090108@germinus.com>

If you don't mind, I'll make some comments on your comments.

Mark Curphey wrote:

  > Default Files
> 
> 1. In the description I think it may be worth accentuating the fact that
> there is only a security issue in default files when they have security
> vulns. One of my pet peeves are consultants reports listing default files
> like documentation etc where there is no security issues at all. It's a
> housekeeping issue (I guess) but not a security one in my opinion.

Default files like documentation do disclose internal information, that 
is a low risk security issue, but a security issue after all. It's just 
like banner grabbing, it's not a direct attack, but it might disclose 
more information than you want to. I would move the documentation files 
item to the end of the list, but would keep it there.

Notice that there is another item missing in the list which I'm not 
really sure how to describe. It's related to the way Lotus Domino 
handles the webserver. In Domino, the webserver might have default 
_databases_ enabled which might disclose sensible information but are 
not really documentation 'per se'.

I developed a plugin for Nessus (quite some time ago) to check these 
database, so maybe the code speaks for itself:
http://cgi.nessus.org/plugins/dump.php3?id=10629

> 2. In the "how to test" description I think it would be worth-while
> explaining that you are looking for the instance of the file. To do that you
> need to see an HTTP 200 or equivalent server response and this is
> essentially what tools like Nikto etc do. Maybe a http trace type sequence
> might be a good visual example....That leads neatly onto ...
> 
> 3. IMHO tools like Nikto and Nessus are really bad at finding default files.
> That is because they can't tell the difference between an HTTP 404 (or 400
> series server response) from a HTTP 200 carrying an HTML 404. As an example
> fire one of them off against OWASP.org and you'll find we have all the IIS
> files under the sun (on a Unix box!). The commercial scanners have solved
> this by allowing users to define a 404.

Nessus has a specific plugin (no404.nasl, see 
http://cgi.nessus.org/plugins/dump.php3?id=10386) which tries to avoid 
this by making some controled tests and determining how the server 
answers to non-existance files. From my experience it does determine 
issues better than some commercial scanners. It, however, does not make 
any assumption based on other results on whether those pages should be 
there or not (it does not say "Oh, this is Apache, I will not check X 
and Y") since is that fundamentally flawed (there might be a reverse 
proxy in the middle, the banners might have been changed, etc..)

Nikto/Whisker do not attempt to do this at all. They are really more CGI 
scanners than vulnerability assesment scanners. So they do usually turn 
a lot of false positivies.

> 4. I am not sure white box and black box are good terms for this on
> reflection.

I think there is a difference. The 'white box' should describe that the 
auditor should be analysing the configuration of the web server (ie. 
apache's http.conf) and the file system structure directly. Whileas the 
black box is trying to (remotely) assess with a tool or manually whether 
these files exist.

> 5. How about tools like IIS lockdown that look for and remove sample files ?
> Is there an Apache equiv anyone knows about.

There is a lot of documentation, which maybe should be added to the 
references for either the document as a whole or for the references 
which are specific to vendor's implementations (such as this one)

Lotus White Paper: A Guide to Developing Secure Domino Applications' 
(december 1999)
'Apache Security Configuration Document' from Intersect Alliance, 
http://www.intersectalliance.com/projects/ApacheConfig/
'NTERNET INFORMATION SERVER 4.0 SECURITY Graded Security Configuration 
Document' also from from Intersect Alliance,
http://www.intersectalliance.com/projects/IIS4Config/index.html

NSA guides (available at http://nsa1.www.conxion.com/support/download.htm):
Guide to the Secure Configuration and Administration of iPlanet Web 
Server, Enterprise Edition 4.1
Guide to the Secure Configuration and Administration of Microsoft 
Internet Information Server 4.0
Guide to the Secure Configuration and Administration of Microsoft 
Internet Information Server 4.0 (Checklist Format)
Secure Configuration of the Apache Web Server, Apache Server Version 
1.3.3 on Red Hat Linux 5.1

> 
> Unreferenced Files

Just to add an example of a different webserver (not Apache nor IIS) it 
would be nice to add to the 'Information obtained through server 
vulnerabilities and misconfiguration' the following sample:

- Domino browsing through the ?open directive
(http://cgi.nessus.org/plugins/dump.php3?id=10057)

Also, in 'Use of publicly available information' I would include 
archive.org:

- Finally, the Internet Archive (www.archive.org) keeps images of sites 
in different epochs that are publicly accesible through their "Wayback 
Machine" . Older versions of sites can include references to content 
that is still available in the site but not linked from current pages, 
it can also give hints to older website structures and directories which 
might be still available.

> 
> 1. This write up focuses solely on pen testing. How about comparing the
> deployed content to the CMS or app deployment tool? This is typically what
> happens in enterprises in my experience. Maybe we should say that this is
> really a pen testing technique only ?

I don't think so. It should be trivial in some servers to assess from a 
"white box" point of view, the website structure (as perceived by, for 
example, a web robot that follows the URLs) vs. the filesystem 
structure. Any file which is not linked to, but resides in the 
filesystem would be an unreferenced file. This is more difficult to do 
in servers with dynamic content, however, but he can use real website 
logs to determine which files/applications are being accessed and which 
files are just "sitting there".

In the "white box" testing, the auditor can determine with more accuracy 
if the page is really unreferenced or not. For example, he can also make 
use of the filesystem timestamps: he can search for files that have not 
been accessed for a year, if he knows that the system was updated in 
date X he can try to look for files that were created before that date, 
etc. I would consider adding this into the "white box" part.

> 2. Under blind guessing might be worth mentioning the HTTP / HTML 404 again.
> Great stuff though!

I agree. It's very good stuff!

> 4. Might be worth showing an example of making an HTTP call to list the
> directory contents where no default page for that dir has been specified ?

I agree. That's a very common vector to retrieve this kind of information.

Regards

Javi





From jfernandez at germinus.com  Thu Nov 27 04:47:13 2003
From: jfernandez at germinus.com (Javier Fernandez-Sanguino)
Date: Thu, 27 Nov 2003 10:47:13 +0100
Subject: [OWASP-TESTING] RE: OWASP Testing
In-Reply-To: <E1AO0JQ-0005bb-00@smtp02.mrf.mail.rcn.net>
References: <E1AO0JQ-0005bb-00@smtp02.mrf.mail.rcn.net>
Message-ID: <3FC5C821.3040303@germinus.com>

Mark Curphey wrote:

> Hi Javier,
>  
> Great start. I have a few suggestions / comments that may be considered ?
>  
> 1. In the first paragraph I think it should be "in the web application" 
> not the web server.

There have been cases of XSS through the default error pages of the web 
server. Sample (now that I'm looking at Domino stuff):
http://cgi.nessus.org/plugins/dump.php3?id=11394

I will rephrase it though.

> 2. I think it might be worth highlighting that the problem can occur 
> anywhere where input is converted into output without be filtered. That 
> covers TRACE etc as well.

I've added some more examples there.

> 3. I think it is worth listing an HTTP TRACE request as a source

Agreed.

> 4. It maybe worth listing potential sources  / payloads i.e. any http header

Done.


> 6. Might be worth a list of potential targets such as users browsers, 
> html aware log files, html aware email clients, error messages (which 
> maybe a source not a target)

>  
> 7. How about XSS in XML payloads ? Webservices have the same issues I think.

Yes, I've added that.

>  
> 8. The biggest thing I would add would be a section on how to look for 
> XSS in code. As code review is by far the most effective way to find any 
> security issue I think it needs to be as prominent as possible. That may 
> look something like this

Added.

> 9. You focus on XSS with cookie stealing but as the WebGoat lesson 
> points out database data theft etc is equally probable. It may be worth 
> pointing that out at some point.

I've skipped that lesson :-)
However, I've tried to separate XSS attacks, which attempt to retrieve 
information from the user's _browser_ (as added in the description) from 
  attacks such as remote code execution (having the user's browser 
download Java applets or run ActiveX content) which might use the same 
vector of attack (unfiltered input/output) but which is a different 
attack altogether.

The way I understand XSS, it's limited to trying to retrieve information 
that the user's browser would only give to the server it contacts with 
and not to other server. AFAIK sensitive information exchanged between 
client/server solely involves cookies.

I might be wrong here, so feel free to point me in the right direction.


I will submit Penny and Mark (not to the list due to the size 
limitation) a new revised version today.

Javi




From Penny.Major at onx.com  Fri Nov 28 08:39:38 2003
From: Penny.Major at onx.com (Penny Major)
Date: Fri, 28 Nov 2003 08:39:38 -0500
Subject: [OWASP-TESTING] Update the web pages?
Message-ID: <1B3E9E3EB7864D4B9FB390365755506902598C@fx1.onx.com>

Thank you for the reminder.  I am the one that's supposed to update the page and I completely forgot!  I'll try and meet this week's deadline for getting it updated.  
 
penny

	-----Original Message----- 
	From: Javier Fernandez-Sanguino [mailto:jfernandez at germinus.com] 
	Sent: Thu 11/27/2003 3:23 AM 
	To: owasp-testing at lists.sourceforge.net 
	Cc: 
	Subject: [OWASP-TESTING] Update the web pages?
	
	

	Just a note to whomever updates the webpages.
	http://www.owasp.org/documentation/testing says:
	
	        Welcome To The Testing Project Homepage
	This is the Under Construction page for the OWASP testing project. A
	completed project page will be posted on MOnday November 3rd, 2003. An
	initial draft will be posted before the end of 2003.
	Please check back after November 3rd, 2003.
	
	Obviously this date should be modified (or something should be included)
	in order to keep it up-to-date.
	
	Thanks
	
	Javi
	
	
	
	-------------------------------------------------------
	This SF.net email is sponsored by: SF.net Giveback Program.
	Does SourceForge.net help you be more productive?  Does it
	help you create better code?  SHARE THE LOVE, and help us help
	YOU!  Click Here: http://sourceforge.net/donate/
	_______________________________________________
	owasp-testing mailing list
	owasp-testing at lists.sourceforge.net
	https://lists.sourceforge.net/lists/listinfo/owasp-testing
	


From mark at curphey.com  Sun Nov 30 09:44:59 2003
From: mark at curphey.com (Mark Curphey)
Date: Sun, 30 Nov 2003 09:44:59 -0500
Subject: [OWASP-TESTING] FW: Status update
Message-ID: <E1AQSor-0001W8-00@smtp02.mrf.mail.rcn.net>

As you can see we will soon have an online application to manage content
easier on OWASP. This will be excellent for the Testing work !


  _____  

From: Ben Poweski [mailto:ben.poweski at ceterum.net] 
Sent: Saturday, November 29, 2003 5:29 PM
To: Mark Curphey
Cc: david.raphael at ceterum.net


Just a friendly status update.
 
I've completly reworked oflow, though probally not at the most opportune
time.
 
I'm totally dedicated to getting a packaged release of oFlow & oPortal out
in the next week.
 
Here are some screen shots from the new rework.  The app is all css  based,
no nasty table layouts, and it degrades well into older browsers (though
obviously no nice color and formatting).
 
The goal is to roll all administration apps concerning, Documents, Screen
and page layouts and oPortal admin pages into oFlow, and keep the
"Framework" separated from the management application.
 
 
 

 
 

 

 
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.owasp.org/pipermail/owasp-testing/attachments/20031130/a120c44c/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: image/gif
Size: 35920 bytes
Desc: not available
Url : http://lists.owasp.org/pipermail/owasp-testing/attachments/20031130/a120c44c/attachment.gif 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: image/gif
Size: 33269 bytes
Desc: not available
Url : http://lists.owasp.org/pipermail/owasp-testing/attachments/20031130/a120c44c/attachment-0001.gif 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: image/gif
Size: 30790 bytes
Desc: not available
Url : http://lists.owasp.org/pipermail/owasp-testing/attachments/20031130/a120c44c/attachment-0002.gif 

