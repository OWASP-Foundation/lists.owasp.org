From avanderstock at b-sec.com  Sun Aug  3 19:18:44 2003
From: avanderstock at b-sec.com (Andrew van der Stock)
Date: Mon, 4 Aug 2003 09:18:44 +1000
Subject: [OWASP-WEBGOAT]Re: Next WebGoat release
Message-ID: <KNOXDkb9pPFR6sKBEr80000007a@knox.b-sec.com.au>

Totally agree. This was the thrust behind my last e-mail ? translation is
all well and good, but it will result in code that many VS coders will
simply never come across if they do the normal web form thing.

Andrew

________________________________________
From: Jeff Williams @ Aspect [mailto:jeff.williams at aspectsecurity.com] 
Sent: Friday, 1 August 2003 4:59 AM
To: Mark Curphey; Bruce Mayhew; Harbar, Spencer;
owasp-webgoat at lists.sourceforge.net
Cc: Tim Aranki; Andrew van der Stock
Subject: Re: [OWASP-WEBGOAT]Re: Next WebGoat release

Hi,
?
I didn't mean to sound like I was starting a flame war.? If there are people
ready to work on a .NET version, then great -- let's do it as part of the
WebGoat project!
?
There are two main parts of WebGoat -- the framework and the lessons.?I
think it would make sense to work on the framework first, so we can define
the API for the lessons.? It's real important to get that right so that
lessons are very easy to implement for part-time contributors.
?
-- Jeff 
?
----- Original Message ----- 
From: Mark Curphey 
To: Jeff Williams @ Aspect ; Bruce Mayhew ; Harbar, Spencer ;
owasp-webgoat at lists.sourceforge.net 
Cc: Tim Aranki ; Andrew van der Stock 
Sent: Thursday, July 31, 2003 12:23 PM
Subject: Re: [OWASP-WEBGOAT]Re: Next WebGoat release

Several people have written to me and asked if we were doing a .NET version
especially as the original hasn't been updated in a while.
?
I would rather it happened under the WebGoat umbrella than as a seperate
project but if you feel thats better then thats fine with me too.
?
I think its more that people that are interested in .NET and are interested
in writing lessons but don't want to do it in Java. 
?
Flames.wars(off);
?
Either way a .NET version of a web teaching tool is going to happen and why
not use Goat as the start ? Seems logical to me.






From mark at curphey.com  Sun Aug  3 21:33:55 2003
From: mark at curphey.com (Mark Curphey)
Date: Sun, 3 Aug 2003 21:33:55 -0400
Subject: [OWASP-WEBGOAT]Re: Next WebGoat release
References: <KNOXDkb9pPFR6sKBEr80000007a@knox.b-sec.com.au>
Message-ID: <006901c35a28$786b5e80$25084e41@markc2000>

Thanks for your mail. Why bother volunteering in the first place ? Beats me.
Anyways I will do it myself, if anyone wants to help please mail me, if not
please dont ;-)
----- Original Message ----- 
From: "Andrew van der Stock" <avanderstock at b-sec.com>
To: "'Jeff Williams @ Aspect'" <jeff.williams at aspectsecurity.com>; "'Mark
Curphey'" <mark at curphey.com>; "'Bruce Mayhew'"
<bruce.mayhew at aspectsecurity.com>; "'Harbar, Spencer'"
<spencer.harbar at dns.co.uk>; <owasp-webgoat at lists.sourceforge.net>
Cc: "'Tim Aranki'" <tim.aranki at dev-quest.com>
Sent: Sunday, August 03, 2003 7:18 PM
Subject: RE: [OWASP-WEBGOAT]Re: Next WebGoat release


Totally agree. This was the thrust behind my last e-mail - translation is
all well and good, but it will result in code that many VS coders will
simply never come across if they do the normal web form thing.

Andrew

________________________________________
From: Jeff Williams @ Aspect [mailto:jeff.williams at aspectsecurity.com]
Sent: Friday, 1 August 2003 4:59 AM
To: Mark Curphey; Bruce Mayhew; Harbar, Spencer;
owasp-webgoat at lists.sourceforge.net
Cc: Tim Aranki; Andrew van der Stock
Subject: Re: [OWASP-WEBGOAT]Re: Next WebGoat release

Hi,

I didn't mean to sound like I was starting a flame war. If there are people
ready to work on a .NET version, then great -- let's do it as part of the
WebGoat project!

There are two main parts of WebGoat -- the framework and the lessons. I
think it would make sense to work on the framework first, so we can define
the API for the lessons. It's real important to get that right so that
lessons are very easy to implement for part-time contributors.

-- Jeff

----- Original Message ----- 
From: Mark Curphey
To: Jeff Williams @ Aspect ; Bruce Mayhew ; Harbar, Spencer ;
owasp-webgoat at lists.sourceforge.net
Cc: Tim Aranki ; Andrew van der Stock
Sent: Thursday, July 31, 2003 12:23 PM
Subject: Re: [OWASP-WEBGOAT]Re: Next WebGoat release

Several people have written to me and asked if we were doing a .NET version
especially as the original hasn't been updated in a while.

I would rather it happened under the WebGoat umbrella than as a seperate
project but if you feel thats better then thats fine with me too.

I think its more that people that are interested in .NET and are interested
in writing lessons but don't want to do it in Java.

Flames.wars(off);

Either way a .NET version of a web teaching tool is going to happen and why
not use Goat as the start ? Seems logical to me.





-------------------------------------------------------
This SF.Net email sponsored by: Free pre-built ASP.NET sites including
Data Reports, E-commerce, Portals, and Forums are available now.
Download today and enter to win an XBOX or Visual Studio .NET.
http://aspnet.click-url.com/go/psa00100003ave/direct;at.aspnet_072303_01/01
_______________________________________________
OWASP-WEBGOAT mailing list
OWASP-WEBGOAT at lists.sourceforge.net
https://lists.sourceforge.net/lists/listinfo/owasp-webgoat




From avanderstock at b-sec.com  Mon Aug  4 21:04:52 2003
From: avanderstock at b-sec.com (Andrew van der Stock)
Date: Tue, 5 Aug 2003 11:04:52 +1000
Subject: [OWASP-WEBGOAT]C# conversion fun in webgoat.net
Message-ID: <KNOXG02lpeaN1Xh4HJ00000008f@knox.b-sec.com.au>

Hi guys,

I've been working on conversion of the goat using the source Mark provided
to me last week. 

We have a small problem in that the code makes extensive use of Jakarta
Element Construction Set, a nice method to do markup without using dropouts
to HTML source (a la PHP or old ASP).

http://jakarta.apache.org/ecs/

However, it is *everywhere* through the code, and it uses various subclasses
such as IMG and so on. 

There's three alternatives:

* port ECS (Hard(TM))
* develop an alternative lightweight framework that is good enough
* find a way to emulate it so a global search and replace will do the job. 

The right way? I don't know. I think it'll be faster to work on a hack in
.NET to emulate it, but I'd be interested in your feedback.

Thanks,
Andrew






From jeff.williams at aspectsecurity.com  Mon Aug  4 21:50:58 2003
From: jeff.williams at aspectsecurity.com (Jeff Williams @ Aspect)
Date: Mon, 4 Aug 2003 21:50:58 -0400
Subject: [OWASP-WEBGOAT]C# conversion fun in webgoat.net
References: <KNOXG02lpeaN1Xh4HJ00000008f@knox.b-sec.com.au>
Message-ID: <09f001c35af4$04782a90$0564a8c0@intranet.aspectsecurity.com>

WebGoat only uses a very small subset of ECS -- basically body, form, table, tr, td, and a few kinds of form fields. I don't think it would be too hard to port the pieces used.  But the System.Web.UI.HtmlControls sounds real promising.

--Jeff 

  ----- Original Message ----- 
  From: Andrew van der Stock 
  To: 'Jeff Williams @ Aspect' ; 'Mark Curphey' ; 'Bruce Mayhew' ; 'Harbar, Spencer' ; owasp-webgoat at lists.sourceforge.net 
  Cc: 'Tim Aranki' 
  Sent: Monday, August 04, 2003 9:04 PM
  Subject: [OWASP-WEBGOAT]C# conversion fun in webgoat.net


  Hi guys,

  I've been working on conversion of the goat using the source Mark provided
  to me last week. 

  We have a small problem in that the code makes extensive use of Jakarta
  Element Construction Set, a nice method to do markup without using dropouts
  to HTML source (a la PHP or old ASP).

  http://jakarta.apache.org/ecs/

  However, it is *everywhere* through the code, and it uses various subclasses
  such as IMG and so on. 

  There's three alternatives:

  * port ECS (Hard(TM))
  * develop an alternative lightweight framework that is good enough
  * find a way to emulate it so a global search and replace will do the job. 

  The right way? I don't know. I think it'll be faster to work on a hack in
  .NET to emulate it, but I'd be interested in your feedback.

  Thanks,
  Andrew





  -------------------------------------------------------
  This SF.Net email sponsored by: Free pre-built ASP.NET sites including
  Data Reports, E-commerce, Portals, and Forums are available now.
  Download today and enter to win an XBOX or Visual Studio .NET.
  http://aspnet.click-url.com/go/psa00100003ave/direct;at.aspnet_072303_01/01
  _______________________________________________
  OWASP-WEBGOAT mailing list
  OWASP-WEBGOAT at lists.sourceforge.net
  https://lists.sourceforge.net/lists/listinfo/owasp-webgoat
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.owasp.org/pipermail/owasp-webgoat/attachments/20030804/eeb41fc8/attachment.html 

From tim.aranki at dev-quest.com  Mon Aug  4 21:30:15 2003
From: tim.aranki at dev-quest.com (Tim Aranki)
Date: Mon, 4 Aug 2003 20:30:15 -0500
Subject: [OWASP-WEBGOAT]RE: C# conversion fun in webgoat.net
In-Reply-To: <KNOXG02lpeaN1Xh4HJ00000008f@knox.b-sec.com.au>
Message-ID: <000601c35af1$1f5813f0$0301a8c0@dev01>

Hye - 
I have not done a real compare, but what about the
System.Web.UI.HtmlControls namespace?  It has implimentations for all
the HTML elements... The props/methods may be different, but it would be
better/faster than re-writing ECS.

There is also a System.Web.UI.HtmlControls.HtmlControl object that we
can subclass if needed (if there is an element missing, for example).

-tim

-----Original Message-----
From: Andrew van der Stock [mailto:avanderstock at b-sec.com] 
Sent: Monday, August 04, 2003 8:05 PM
To: 'Jeff Williams @ Aspect'; 'Mark Curphey'; 'Bruce Mayhew'; 'Harbar,
Spencer'; owasp-webgoat at lists.sourceforge.net
Cc: 'Tim Aranki'
Subject: C# conversion fun in webgoat.net


Hi guys,

I've been working on conversion of the goat using the source Mark
provided to me last week. 

We have a small problem in that the code makes extensive use of Jakarta
Element Construction Set, a nice method to do markup without using
dropouts to HTML source (a la PHP or old ASP).

http://jakarta.apache.org/ecs/

However, it is *everywhere* through the code, and it uses various
subclasses such as IMG and so on. 

There's three alternatives:

* port ECS (Hard(TM))
* develop an alternative lightweight framework that is good enough
* find a way to emulate it so a global search and replace will do the
job. 

The right way? I don't know. I think it'll be faster to work on a hack
in .NET to emulate it, but I'd be interested in your feedback.

Thanks,
Andrew







From bill at owasp.org  Mon Aug 11 17:07:30 2003
From: bill at owasp.org (bill)
Date: Mon, 11 Aug 2003 17:07:30 -0400 (EST)
Subject: [OWASP-WEBGOAT]WebGoat project plans
Message-ID: <200308112107.RAA09861@gloworm.cnchost.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
Url: http://lists.owasp.org/pipermail/owasp-webgoat/attachments/20030811/22ef504a/attachment.pl 

From mark at curphey.com  Tue Aug 12 10:03:41 2003
From: mark at curphey.com (Mark Curphey)
Date: Tue, 12 Aug 2003 10:03:41 -0400 (EST)
Subject: [OWASP-WEBGOAT]WebGoat project plans
In-Reply-To: <200308112107.RAA09861@gloworm.cnchost.com> from bill <bill@owasp.org> on Mon, 11 Aug 2003 17:07:30 -0400 (EST)
Message-ID: <200308121403.KAA27750@alexander.cnchost.com>

An embedded and charset-unspecified text was scrubbed...
Name: not available
Url: http://lists.owasp.org/pipermail/owasp-webgoat/attachments/20030812/fe8e70b0/attachment.pl 

From mark at curphey.com  Sat Aug 30 07:50:32 2003
From: mark at curphey.com (Mark Curphey)
Date: Sat, 30 Aug 2003 07:50:32 -0400
Subject: [OWASP-WEBGOAT]RE: C# conversion fun in webgoat.net
References: <000601c35af1$1f5813f0$0301a8c0@dev01>
Message-ID: <00e201c36eec$eb532da0$5b86accf@markc2000>

Hi Guys,

Been busy on the Guide re-write so I kinda lost track of a few things (again
;-()

I think if I recall the last time I left this conversation we were at;

1. Its a good idea to have a .NET version of C#
2. Conversion of the original Goat does not make sense due to its
architecture; the fact that we would want to show .NET techniques and
libraries used in Java Goat.
3. We should keep the lessons in sync but not try and keep parralel versions
per se.

So that said and my realization about Open Source that you need one or two
people only to do the work without lots of cooks in the kitchen, is anyone
interested in just running with this and getting it done ? Only requirements
from OWASP part is the lessons would ultimately be "similar / in sync" to
the Java version. Architecture, coding etc is all your baby.

Please let me know.
----- Original Message ----- 
From: "Tim Aranki" <tim.aranki at dev-quest.com>
To: "'Andrew van der Stock'" <avanderstock at b-sec.com>; "'Jeff Williams @
Aspect'" <jeff.williams at aspectsecurity.com>; "'Mark Curphey'"
<mark at curphey.com>; "'Bruce Mayhew'" <bruce.mayhew at aspectsecurity.com>;
"'Harbar, Spencer'" <spencer.harbar at dns.co.uk>;
<owasp-webgoat at lists.sourceforge.net>
Sent: Monday, August 04, 2003 9:30 PM
Subject: [OWASP-WEBGOAT]RE: C# conversion fun in webgoat.net


> Hye -
> I have not done a real compare, but what about the
> System.Web.UI.HtmlControls namespace?  It has implimentations for all
> the HTML elements... The props/methods may be different, but it would be
> better/faster than re-writing ECS.
>
> There is also a System.Web.UI.HtmlControls.HtmlControl object that we
> can subclass if needed (if there is an element missing, for example).
>
> -tim
>
> -----Original Message-----
> From: Andrew van der Stock [mailto:avanderstock at b-sec.com]
> Sent: Monday, August 04, 2003 8:05 PM
> To: 'Jeff Williams @ Aspect'; 'Mark Curphey'; 'Bruce Mayhew'; 'Harbar,
> Spencer'; owasp-webgoat at lists.sourceforge.net
> Cc: 'Tim Aranki'
> Subject: C# conversion fun in webgoat.net
>
>
> Hi guys,
>
> I've been working on conversion of the goat using the source Mark
> provided to me last week.
>
> We have a small problem in that the code makes extensive use of Jakarta
> Element Construction Set, a nice method to do markup without using
> dropouts to HTML source (a la PHP or old ASP).
>
> http://jakarta.apache.org/ecs/
>
> However, it is *everywhere* through the code, and it uses various
> subclasses such as IMG and so on.
>
> There's three alternatives:
>
> * port ECS (Hard(TM))
> * develop an alternative lightweight framework that is good enough
> * find a way to emulate it so a global search and replace will do the
> job.
>
> The right way? I don't know. I think it'll be faster to work on a hack
> in .NET to emulate it, but I'd be interested in your feedback.
>
> Thanks,
> Andrew
>
>
>
>
>
>
> -------------------------------------------------------
> This SF.Net email sponsored by: Free pre-built ASP.NET sites including
> Data Reports, E-commerce, Portals, and Forums are available now.
> Download today and enter to win an XBOX or Visual Studio .NET.
>
http://aspnet.click-url.com/go/psa00100003ave/direct;at.aspnet_072303_01/01
> _______________________________________________
> OWASP-WEBGOAT mailing list
> OWASP-WEBGOAT at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/owasp-webgoat
>




