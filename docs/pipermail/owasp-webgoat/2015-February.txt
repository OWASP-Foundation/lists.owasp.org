From jason.white at owasp.org  Fri Feb 13 11:26:53 2015
From: jason.white at owasp.org (Jason White)
Date: Fri, 13 Feb 2015 06:26:53 -0500
Subject: [Owasp-webgoat] WebGoat UI - Moving Forward
Message-ID: <CAL1HEEBEZUw9VM_WRMDBLP-OqY57SxBw8Szwdqs01++0A+oCtw@mail.gmail.com>

We greatly appreciate your willingness to help out on WebGoat and your
patience as we are passing through a transition point in getting the
project moving again.  I think we're ready to forge forward in a little
more productive fashion now though. So here's the update (and hopefully
some clarity):

Current release is WebGoat 6.0.1. This was the UI re-do along with some
general fixes from WebGoat 5.4. We moved to an SPA with Angular and some
modifications to the back-end/service layer.

As we've progressed, I believe selecting AngularJS was a little premature
(and the implementation a little hurried/flawed). While we're still fairly
early on in the 'modernization' of WebGoat, I plan to move over to backbone
as the primary js framework in the UI. It supports routing, templating and
I believe provides the flexibility needed for where WebGoat is going w/o
extra weight.  A fair amount of code should be re-usable.  If anyone wants
to have a more detailed discussion, I'm happy to have that. So, for getting
involved in the UI,
I have opened up JIRA issues to browsing publicly. If you want an account
in JIRA (better if you're grabbing issues and working them), let me know
and I can set you one up.  There are two versions to work on currently, one
maintenance and one new development.

WebGoat 6.0.2 - Current release is 6.0.1 and is tied to the master branch
in github. You can work issues on that and issue pull requests.

WebGoat 6.1 - This aligns to the webgoat-container branch (
https://github.com/WebGoat/WebGoat/branches). Short version is that the
lessons will be their own jar files that can be dropped in at runtime and
are self-contained.  The UI work will really remain in the container.
Branch web-173 is the first plugin/bundle in this line. This is where I
plan to do the backbone work. I'm spinning up an epic now with tickets tied
to it.

Some issues are tagged with both versions, mainly to ensure things get
fixed/implemented in 6.1 that are also outstanding from 6.0.x.  Moving
forward, we can separate those out if need be.

So, feel free to grab an issue and let me know what further questions you
may have.

Cheers,
Jason

