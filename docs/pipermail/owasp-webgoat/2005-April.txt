From vayumahesh at yahoo.com  Tue Apr  5 11:50:44 2005
From: vayumahesh at yahoo.com (maheswar vayugandla)
Date: Tue, 5 Apr 2005 08:50:44 -0700 (PDT)
Subject: [OWASP-WEBGOAT]WebGoat Installation Question
Message-ID: <20050405155044.58696.qmail@web30309.mail.mud.yahoo.com>

Hi,

I have downloaded Standalone WebGoat3.5 with JDK. I extracted the zip file contents and it created
the folders java, tomcat and files webgoat.bat & webgoat.sh. Please guide what needs to be done
further to get the WebGoat running. I could not find the help anywhere.

Thanks,
Maheswar.


		
__________________________________ 
Do you Yahoo!? 
Yahoo! Sports - Sign up for Fantasy Baseball. 
http://baseball.fantasysports.yahoo.com/



From bruce.mayhew at aspectsecurity.com  Tue Apr  5 14:58:34 2005
From: bruce.mayhew at aspectsecurity.com (Bruce Mayhew)
Date: Tue, 5 Apr 2005 14:58:34 -0400
Subject: [OWASP-WEBGOAT]WebGoat Installation Question
References: <20050405155044.58696.qmail@web30309.mail.mud.yahoo.com>
Message-ID: <013701c53a11$7805d3b0$6e01a8c0@intranet.aspectsecurity.com>

Double click webgoat.bat to start WebGoat
    - A Tomcat window will remain open on your screen.
        - WebGoat uses port 80, Tomcat will not start if another process is 
using port 80.

Browse to http://localhost/WebGoat/attack
    - notice the capitalization

Login in as
    Username: guest
    Password: guest


Bruce.



----- Original Message ----- 
From: "maheswar vayugandla" <vayumahesh at yahoo.com>
To: <owasp-webgoat at lists.sourceforge.net>
Sent: Tuesday, April 05, 2005 11:50 AM
Subject: [OWASP-WEBGOAT]WebGoat Installation Question


>
> Hi,
>
> I have downloaded Standalone WebGoat3.5 with JDK. I extracted the zip file 
> contents and it created
> the folders java, tomcat and files webgoat.bat & webgoat.sh. Please guide 
> what needs to be done
> further to get the WebGoat running. I could not find the help anywhere.
>
> Thanks,
> Maheswar.
>
>
>
> __________________________________
> Do you Yahoo!?
> Yahoo! Sports - Sign up for Fantasy Baseball.
> http://baseball.fantasysports.yahoo.com/
>
>
> -------------------------------------------------------
> SF email is sponsored by - The IT Product Guide
> Read honest & candid reviews on hundreds of IT Products from real users.
> Discover which products truly live up to the hype. Start reading now.
> http://ads.osdn.com/?ad_id=6595&alloc_id=14396&op=click
> _______________________________________________
> OWASP-WEBGOAT mailing list
> OWASP-WEBGOAT at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/owasp-webgoat
> 




From Jim.Weiler at Staples.com  Wed Apr 13 20:12:19 2005
From: Jim.Weiler at Staples.com (Weiler, Jim)
Date: Wed, 13 Apr 2005 20:12:19 -0400
Subject: [OWASP-WEBGOAT]database dump - lesson or admin function?
Message-ID: <0D79B67AA1920446B5F4921CA87264E61A7F3E@fraexmb5.Staples.com>

When I click the 'view database ' link I get a page with '* Error generating
lessons.admin.ViewDatabase' above the 'enter a sql statement' text box. Is
this a Webgoat setup error or part of a lesson? The report card shows this
page as a 'hackable admin page' - so I guess you can hack it, but do you
have to hack it to dump the database?  Is there more to the database than
users and products?
 
Jim Weiler
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.owasp.org/pipermail/owasp-webgoat/attachments/20050413/5785ad50/attachment.html 

From lists at dawes.za.net  Thu Apr 14 09:22:43 2005
From: lists at dawes.za.net (Rogan Dawes)
Date: Thu, 14 Apr 2005 15:22:43 +0200
Subject: [OWASP-WEBGOAT]Predictable SessionID lesson
Message-ID: <425E6EA3.6040103@dawes.za.net>

Hi folks,

Here is the updated version of my "predictable session id" session

Basically:

Each time you visit the page without supplying a cookie named "WEAKID", 
a new WEAKID cookie is generated and issued. The value is also returned 
as a hidden field in the reponse body.

Naturally, the algorithm for generating the WEAKID is predictable. It is 
basically a counter (started somewhere between 1000 and 2000) that 
increments on each WEAKID generated, concatenated with the time 
(System.getTimeMillis()). Every so often (currently every 29 requests, I 
think), the lesson generates a WEAKID and stores it in a local list. 
This makes it obvious for an attacker that "someone else" has obtained a 
new sessionid, since the counter skips an item.

The challenge is then for the student to identify one of the WEAKIDs 
that have been stored in the local list. Obviously, the counter value 
can be trivially deduced. And we know that the time value is in between 
the times for the WEAKID on either side of the target.

The student should then brute force the possible values of WEAKID 
(simply incrementing by 1 each time), until they get a page that does 
not have the login form, representing a session that has been 
authenticated by someone else. This concludes the lesson.

Comments are welcome.

Rogan

P.S. While using WebScarab to test and perform this lesson, I found a 
NullPointer exception in session/WebSession.java, brought on by multiple 
simultaneous requests being processed. WebScarab's scripting plugin 
makes it easy to submit parallel requests. Increasing the delay betewen 
requests to about 500ms makes the NullPointerException go away.

    /**
     *  Gets the userName attribute of the WebSession object
     *
     * @return    The userName value
     */
    public String getUserName()
    {
        //System.out.println("Request: " + getRequest() );
        //System.out.println("Principal: " + 
getRequest().getUserPrincipal() );
        //System.out.println("Name: " + 
getRequest().getUserPrincipal().getName( ) );
        return getRequest().getUserPrincipal().getName();        // 
<---- Throws NullPointerException
    }


-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: WeakSessionID.java
Url: http://lists.owasp.org/pipermail/owasp-webgoat/attachments/20050414/a64ea441/attachment.pl 

