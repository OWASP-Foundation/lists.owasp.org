From jim.manico at owasp.org  Thu Mar 20 13:18:04 2014
From: jim.manico at owasp.org (Jim Manico)
Date: Thu, 20 Mar 2014 22:18:04 +0900
Subject: [Owasp-cheat-sheets] Cheat Sheets
Message-ID: <532AEA8C.8070803@owasp.org>

Samantha,

I went though the first 3/4 of the cheatsheets and changed all of them 
to the new template.

For really "wide" cheat sheets, I put my navigation at the bottom. 
https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet
For "narrow" cheat sheets, I put the nav on the right. 
https://www.owasp.org/index.php/Choosing_and_Using_Security_Questions_Cheat_Sheet

I'll do more cleanup, but within a day or so the entire project should 
be reverted to the new template, including iOS support.

PS: The only downside to the new template is that it looks mugly when 
the table of content pops. I dropped the table of contents during this 
change so it looks better. Is there a way to inject the TOC in the 
middle of a doc? I'll try to pull that off soon.

Aloha,
Jim

*Developer Cheat Sheets (Builder)*

  * Authentication Cheat Sheet
    <https://www.owasp.org/index.php/Authentication_Cheat_Sheet>
  * Choosing and Using Security Questions Cheat Sheet
    <https://www.owasp.org/index.php/Choosing_and_Using_Security_Questions_Cheat_Sheet>
  * Clickjacking Defense Cheat Sheet
    <https://www.owasp.org/index.php/Clickjacking_Defense_Cheat_Sheet>
  * C-Based Toolchain Hardening Cheat Sheet
    <https://www.owasp.org/index.php/C-Based_Toolchain_Hardening_Cheat_Sheet>
  * Cross-Site Request Forgery (CSRF) Prevention Cheat Sheet
    <https://www.owasp.org/index.php/Cross-Site_Request_Forgery_%28CSRF%29_Prevention_Cheat_Sheet>
  * Cryptographic Storage Cheat Sheet
    <https://www.owasp.org/index.php/Cryptographic_Storage_Cheat_Sheet>
  * DOM based XSS Prevention Cheat Sheet
    <https://www.owasp.org/index.php/DOM_based_XSS_Prevention_Cheat_Sheet>
  * Forgot Password Cheat Sheet
    <https://www.owasp.org/index.php/Forgot_Password_Cheat_Sheet>
  * HTML5 Security Cheat Sheet
    <https://www.owasp.org/index.php/HTML5_Security_Cheat_Sheet>
  * Input Validation Cheat Sheet
    <https://www.owasp.org/index.php/Input_Validation_Cheat_Sheet>
  * JAAS Cheat Sheet <https://www.owasp.org/index.php/JAAS_Cheat_Sheet>
  * Logging Cheat Sheet
    <https://www.owasp.org/index.php/Logging_Cheat_Sheet>
  * .NET Security Cheat Sheet
    <https://www.owasp.org/index.php/.NET_Security_Cheat_Sheet>
  * OWASP Top Ten Cheat Sheet
    <https://www.owasp.org/index.php/OWASP_Top_Ten_Cheat_Sheet>
  * Password Storage Cheat Sheet
    <https://www.owasp.org/index.php/Password_Storage_Cheat_Sheet>
  * Pinning Cheat Sheet
    <https://www.owasp.org/index.php/Pinning_Cheat_Sheet>
  * Query Parameterization Cheat Sheet
    <https://www.owasp.org/index.php/Query_Parameterization_Cheat_Sheet>
  * Ruby on Rails Cheatsheet
    <https://www.owasp.org/index.php/Ruby_on_Rails_Cheatsheet>
  * REST Security Cheat Sheet
    <https://www.owasp.org/index.php/REST_Security_Cheat_Sheet>
  * Session Management Cheat Sheet
    <https://www.owasp.org/index.php/Session_Management_Cheat_Sheet>
  * SQL Injection Prevention Cheat Sheet
    <https://www.owasp.org/index.php/SQL_Injection_Prevention_Cheat_Sheet>
  * Transport Layer Protection Cheat Sheet
    <https://www.owasp.org/index.php/Transport_Layer_Protection_Cheat_Sheet>
  * Unvalidated Redirects and Forwards Cheat Sheet
    <https://www.owasp.org/index.php/Unvalidated_Redirects_and_Forwards_Cheat_Sheet>
  * User Privacy Protection Cheat Sheet
    <https://www.owasp.org/index.php/User_Privacy_Protection_Cheat_Sheet>
  * Web Service Security Cheat Sheet
    <https://www.owasp.org/index.php/Web_Service_Security_Cheat_Sheet>
  * *XSS (Cross Site Scripting) Prevention Cheat Sheet*


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-cheat-sheets/attachments/20140320/b911df90/attachment.html>

From jim.manico at owasp.org  Fri Mar 21 10:47:47 2014
From: jim.manico at owasp.org (Jim Manico)
Date: Fri, 21 Mar 2014 19:47:47 +0900
Subject: [Owasp-cheat-sheets] Cheat Sheets
In-Reply-To: <CAAxdBB=1x3Psk5OLKdCmBXpom7MJOnJYPrLpxQEREbT3X5eL_Q@mail.gmail.com>
References: <532AEA8C.8070803@owasp.org>
	<CAAxdBB=1x3Psk5OLKdCmBXpom7MJOnJYPrLpxQEREbT3X5eL_Q@mail.gmail.com>
Message-ID: <532C18D3.7060209@owasp.org>

Colin, my first reaction is "what a pain this would be" but after 
thinking about it, sure why not, it would make the project better if we 
had the resources to make this images.

Aloha,
Jim


On 3/21/14, 7:43 PM, Colin Watson wrote:
> Jim - Looks good.
>
> Samantha - could we have a different header image for each cheat 
> sheet, perhaps at least with the name in the image, so these pages 
> don't just start looking like every other page on the site? Most of 
> the new projects have this same blue banner header.
>
> Colin
>
>
>
>
> On 20 March 2014 13:18, Jim Manico <jim.manico at owasp.org 
> <mailto:jim.manico at owasp.org>> wrote:
>
>     Samantha,
>
>     I went though the first 3/4 of the cheatsheets and changed all of
>     them to the new template.
>
>     For really "wide" cheat sheets, I put my navigation at the bottom.
>     https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet
>     <https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet>
>     For "narrow" cheat sheets, I put the nav on the right.
>     https://www.owasp.org/index.php/Choosing_and_Using_Security_Questions_Cheat_Sheet
>
>     I'll do more cleanup, but within a day or so the entire project
>     should be reverted to the new template, including iOS support.
>
>     PS: The only downside to the new template is that it looks mugly
>     when the table of content pops. I dropped the table of contents
>     during this change so it looks better. Is there a way to inject
>     the TOC in the middle of a doc? I'll try to pull that off soon.
>
>     Aloha,
>     Jim
>
>     *Developer Cheat Sheets (Builder)*
>
>       * Authentication Cheat Sheet
>         <https://www.owasp.org/index.php/Authentication_Cheat_Sheet>
>       * Choosing and Using Security Questions Cheat Sheet
>         <https://www.owasp.org/index.php/Choosing_and_Using_Security_Questions_Cheat_Sheet>
>       * Clickjacking Defense Cheat Sheet
>         <https://www.owasp.org/index.php/Clickjacking_Defense_Cheat_Sheet>
>       * C-Based Toolchain Hardening Cheat Sheet
>         <https://www.owasp.org/index.php/C-Based_Toolchain_Hardening_Cheat_Sheet>
>       * Cross-Site Request Forgery (CSRF) Prevention Cheat Sheet
>         <https://www.owasp.org/index.php/Cross-Site_Request_Forgery_%28CSRF%29_Prevention_Cheat_Sheet>
>       * Cryptographic Storage Cheat Sheet
>         <https://www.owasp.org/index.php/Cryptographic_Storage_Cheat_Sheet>
>       * DOM based XSS Prevention Cheat Sheet
>         <https://www.owasp.org/index.php/DOM_based_XSS_Prevention_Cheat_Sheet>
>       * Forgot Password Cheat Sheet
>         <https://www.owasp.org/index.php/Forgot_Password_Cheat_Sheet>
>       * HTML5 Security Cheat Sheet
>         <https://www.owasp.org/index.php/HTML5_Security_Cheat_Sheet>
>       * Input Validation Cheat Sheet
>         <https://www.owasp.org/index.php/Input_Validation_Cheat_Sheet>
>       * JAAS Cheat Sheet
>         <https://www.owasp.org/index.php/JAAS_Cheat_Sheet>
>       * Logging Cheat Sheet
>         <https://www.owasp.org/index.php/Logging_Cheat_Sheet>
>       * .NET Security Cheat Sheet
>         <https://www.owasp.org/index.php/.NET_Security_Cheat_Sheet>
>       * OWASP Top Ten Cheat Sheet
>         <https://www.owasp.org/index.php/OWASP_Top_Ten_Cheat_Sheet>
>       * Password Storage Cheat Sheet
>         <https://www.owasp.org/index.php/Password_Storage_Cheat_Sheet>
>       * Pinning Cheat Sheet
>         <https://www.owasp.org/index.php/Pinning_Cheat_Sheet>
>       * Query Parameterization Cheat Sheet
>         <https://www.owasp.org/index.php/Query_Parameterization_Cheat_Sheet>
>       * Ruby on Rails Cheatsheet
>         <https://www.owasp.org/index.php/Ruby_on_Rails_Cheatsheet>
>       * REST Security Cheat Sheet
>         <https://www.owasp.org/index.php/REST_Security_Cheat_Sheet>
>       * Session Management Cheat Sheet
>         <https://www.owasp.org/index.php/Session_Management_Cheat_Sheet>
>       * SQL Injection Prevention Cheat Sheet
>         <https://www.owasp.org/index.php/SQL_Injection_Prevention_Cheat_Sheet>
>       * Transport Layer Protection Cheat Sheet
>         <https://www.owasp.org/index.php/Transport_Layer_Protection_Cheat_Sheet>
>       * Unvalidated Redirects and Forwards Cheat Sheet
>         <https://www.owasp.org/index.php/Unvalidated_Redirects_and_Forwards_Cheat_Sheet>
>       * User Privacy Protection Cheat Sheet
>         <https://www.owasp.org/index.php/User_Privacy_Protection_Cheat_Sheet>
>       * Web Service Security Cheat Sheet
>         <https://www.owasp.org/index.php/Web_Service_Security_Cheat_Sheet>
>       * *XSS (Cross Site Scripting) Prevention Cheat Sheet*
>
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-cheat-sheets/attachments/20140321/3a48555d/attachment-0001.html>

From jim.manico at owasp.org  Fri Mar 21 11:03:47 2014
From: jim.manico at owasp.org (Jim Manico)
Date: Fri, 21 Mar 2014 20:03:47 +0900
Subject: [Owasp-cheat-sheets] Cheat Sheets
In-Reply-To: <CAAxdBB=zpKiHaqmPqtwCntOSc+=ZnQ+H7nRL2XTA9Lr1cpgGGQ@mail.gmail.com>
References: <532AEA8C.8070803@owasp.org>	<CAAxdBB=1x3Psk5OLKdCmBXpom7MJOnJYPrLpxQEREbT3X5eL_Q@mail.gmail.com>	<532C18D3.7060209@owasp.org>
	<CAAxdBB=zpKiHaqmPqtwCntOSc+=ZnQ+H7nRL2XTA9Lr1cpgGGQ@mail.gmail.com>
Message-ID: <532C1C93.2070006@owasp.org>

So let's compromise. How about a unique (OWASP Branded) image for the 
cheat sheet series? (not one unique image for each cheat sheet) I could 
live with that...

Aloha,
Jim


On 3/21/14, 8:02 PM, Colin Watson wrote:
> Jim
>
> When I laid out my Cornucopia project page, my thought was that each 
> project could have some distinctive image on the top of the main tab. 
> At the time I couldn't get access to any high-res OWASP materials so 
> had to do something on my own.  It might be code looking stuff, OWASP 
> branding, a photo, screen shots collage, etc, etc. Here are some 
> different example I have created so far:
>
>    Montage of playing cards
> https://www.owasp.org/index.php/OWASP_Cornucopia
>
>    Photo only
> https://www.owasp.org/index.php/OWASP_Application_Security_Guide_For_CISOs_Project
>
>       This also flows on to the wiki (HTML) version of the guide, but 
> note the alternative
>       layout to differentiate it from the project page
> https://www.owasp.org/index.php/Application_Security_Guide_For_CISOs
>    Photo with project name as text
> https://www.owasp.org/index.php/OWASP_AppSensor_Project
>
> The headers might reflect the design of a matching book or splash 
> screen of a tool, but of cousre don't have to.
>
> Some projects (e.g. ESAPI) have multiple sub-projects (Java, PHP, etc) 
> and it might make sense for all of those to have some similarity.
>
> For the cheat sheet series, it might make sense for there to be some 
> commonality across all of them, but I certianly don;t think the header 
> should be identical to the default for otehr new projects. Some 
> differentiation for cheat sheets might help them stand out as a 
> collection?
>
> I will send over a suggestion or two for the ProActive Controls header 
> image via the other email thread we have...
>
> Colin
>
>
>
>
>
> On 21 March 2014 10:47, Jim Manico <jim.manico at owasp.org 
> <mailto:jim.manico at owasp.org>> wrote:
>
>     Colin, my first reaction is "what a pain this would be" but after
>     thinking about it, sure why not, it would make the project better
>     if we had the resources to make this images.
>
>     Aloha,
>     Jim
>
>
>
>     On 3/21/14, 7:43 PM, Colin Watson wrote:
>>     Jim - Looks good.
>>
>>     Samantha - could we have a different header image for each cheat
>>     sheet, perhaps at least with the name in the image, so these
>>     pages don't just start looking like every other page on the site?
>>     Most of the new projects have this same blue banner header.
>>
>>     Colin
>>
>>
>>
>>
>>     On 20 March 2014 13:18, Jim Manico <jim.manico at owasp.org
>>     <mailto:jim.manico at owasp.org>> wrote:
>>
>>         Samantha,
>>
>>         I went though the first 3/4 of the cheatsheets and changed
>>         all of them to the new template.
>>
>>         For really "wide" cheat sheets, I put my navigation at the
>>         bottom.
>>         https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet
>>         <https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet>
>>         For "narrow" cheat sheets, I put the nav on the right.
>>         https://www.owasp.org/index.php/Choosing_and_Using_Security_Questions_Cheat_Sheet
>>
>>         I'll do more cleanup, but within a day or so the entire
>>         project should be reverted to the new template, including iOS
>>         support.
>>
>>         PS: The only downside to the new template is that it looks
>>         mugly when the table of content pops. I dropped the table of
>>         contents during this change so it looks better. Is there a
>>         way to inject the TOC in the middle of a doc? I'll try to
>>         pull that off soon.
>>
>>         Aloha,
>>         Jim
>>
>>         *Developer Cheat Sheets (Builder)*
>>
>>           * Authentication Cheat Sheet
>>             <https://www.owasp.org/index.php/Authentication_Cheat_Sheet>
>>           * Choosing and Using Security Questions Cheat Sheet
>>             <https://www.owasp.org/index.php/Choosing_and_Using_Security_Questions_Cheat_Sheet>
>>           * Clickjacking Defense Cheat Sheet
>>             <https://www.owasp.org/index.php/Clickjacking_Defense_Cheat_Sheet>
>>           * C-Based Toolchain Hardening Cheat Sheet
>>             <https://www.owasp.org/index.php/C-Based_Toolchain_Hardening_Cheat_Sheet>
>>           * Cross-Site Request Forgery (CSRF) Prevention Cheat Sheet
>>             <https://www.owasp.org/index.php/Cross-Site_Request_Forgery_%28CSRF%29_Prevention_Cheat_Sheet>
>>           * Cryptographic Storage Cheat Sheet
>>             <https://www.owasp.org/index.php/Cryptographic_Storage_Cheat_Sheet>
>>           * DOM based XSS Prevention Cheat Sheet
>>             <https://www.owasp.org/index.php/DOM_based_XSS_Prevention_Cheat_Sheet>
>>           * Forgot Password Cheat Sheet
>>             <https://www.owasp.org/index.php/Forgot_Password_Cheat_Sheet>
>>           * HTML5 Security Cheat Sheet
>>             <https://www.owasp.org/index.php/HTML5_Security_Cheat_Sheet>
>>           * Input Validation Cheat Sheet
>>             <https://www.owasp.org/index.php/Input_Validation_Cheat_Sheet>
>>           * JAAS Cheat Sheet
>>             <https://www.owasp.org/index.php/JAAS_Cheat_Sheet>
>>           * Logging Cheat Sheet
>>             <https://www.owasp.org/index.php/Logging_Cheat_Sheet>
>>           * .NET Security Cheat Sheet
>>             <https://www.owasp.org/index.php/.NET_Security_Cheat_Sheet>
>>           * OWASP Top Ten Cheat Sheet
>>             <https://www.owasp.org/index.php/OWASP_Top_Ten_Cheat_Sheet>
>>           * Password Storage Cheat Sheet
>>             <https://www.owasp.org/index.php/Password_Storage_Cheat_Sheet>
>>           * Pinning Cheat Sheet
>>             <https://www.owasp.org/index.php/Pinning_Cheat_Sheet>
>>           * Query Parameterization Cheat Sheet
>>             <https://www.owasp.org/index.php/Query_Parameterization_Cheat_Sheet>
>>           * Ruby on Rails Cheatsheet
>>             <https://www.owasp.org/index.php/Ruby_on_Rails_Cheatsheet>
>>           * REST Security Cheat Sheet
>>             <https://www.owasp.org/index.php/REST_Security_Cheat_Sheet>
>>           * Session Management Cheat Sheet
>>             <https://www.owasp.org/index.php/Session_Management_Cheat_Sheet>
>>           * SQL Injection Prevention Cheat Sheet
>>             <https://www.owasp.org/index.php/SQL_Injection_Prevention_Cheat_Sheet>
>>           * Transport Layer Protection Cheat Sheet
>>             <https://www.owasp.org/index.php/Transport_Layer_Protection_Cheat_Sheet>
>>           * Unvalidated Redirects and Forwards Cheat Sheet
>>             <https://www.owasp.org/index.php/Unvalidated_Redirects_and_Forwards_Cheat_Sheet>
>>           * User Privacy Protection Cheat Sheet
>>             <https://www.owasp.org/index.php/User_Privacy_Protection_Cheat_Sheet>
>>           * Web Service Security Cheat Sheet
>>             <https://www.owasp.org/index.php/Web_Service_Security_Cheat_Sheet>
>>           * *XSS (Cross Site Scripting) Prevention Cheat Sheet*
>>
>>
>>
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-cheat-sheets/attachments/20140321/a569c923/attachment-0001.html>

From samantha.groves at owasp.org  Mon Mar 24 15:47:47 2014
From: samantha.groves at owasp.org (Samantha Groves)
Date: Mon, 24 Mar 2014 08:47:47 -0700
Subject: [Owasp-cheat-sheets] Cheat Sheets
In-Reply-To: <CAAxdBBkU9FmOMBDbNwXeZAt-PNz4d-CwKvjMtsN71XMpUrq-=w@mail.gmail.com>
References: <532AEA8C.8070803@owasp.org>
	<CAAxdBB=1x3Psk5OLKdCmBXpom7MJOnJYPrLpxQEREbT3X5eL_Q@mail.gmail.com>
	<532C18D3.7060209@owasp.org>
	<CAAxdBB=zpKiHaqmPqtwCntOSc+=ZnQ+H7nRL2XTA9Lr1cpgGGQ@mail.gmail.com>
	<532C1C93.2070006@owasp.org>
	<CAAxdBBkU9FmOMBDbNwXeZAt-PNz4d-CwKvjMtsN71XMpUrq-=w@mail.gmail.com>
Message-ID: <CA+EttN_kdzoSEJF5hm2f-n6VfML=bqh_RcvqsiCabThQ8v+6vQ@mail.gmail.com>

I have a good alternative. So we might be hiring a designer soon, and this
is something that the designer can work on. The cheat sheets look awesome,
by the way. Thank you, Jim. :-)


On Fri, Mar 21, 2014 at 4:11 AM, Colin Watson <colin.watson at owasp.org>wrote:

> Jim
>
> I think that would do the trick, without lots of work for each new one.
>
> Colin
>
>
>
>
> On 21 March 2014 11:03, Jim Manico <jim.manico at owasp.org> wrote:
>
>>  So let's compromise. How about a unique (OWASP Branded) image for the
>> cheat sheet series? (not one unique image for each cheat sheet) I could
>> live with that...
>>
>> Aloha,
>> Jim
>>
>>
>>
>> On 3/21/14, 8:02 PM, Colin Watson wrote:
>>
>>  Jim
>>
>>  When I laid out my Cornucopia project page, my thought was that each
>> project could have some distinctive image on the top of the main tab. At
>> the time I couldn't get access to any high-res OWASP materials so had to do
>> something on my own.  It might be code looking stuff, OWASP branding, a
>> photo, screen shots collage, etc, etc. Here are some different example I
>> have created so far:
>>
>>     Montage of playing cards
>>    https://www.owasp.org/index.php/OWASP_Cornucopia
>>
>>     Photo only
>>
>> https://www.owasp.org/index.php/OWASP_Application_Security_Guide_For_CISOs_Project
>>
>>        This also flows on to the wiki (HTML) version of the guide, but
>> note the alternative
>>       layout to differentiate it from the project page
>>
>> https://www.owasp.org/index.php/Application_Security_Guide_For_CISOs
>>
>>    Photo with project name as text
>>    https://www.owasp.org/index.php/OWASP_AppSensor_Project
>>
>>  The headers might reflect the design of a matching book or splash
>> screen of a tool, but of cousre don't have to.
>>
>>  Some projects (e.g. ESAPI) have multiple sub-projects (Java, PHP, etc)
>> and it might make sense for all of those to have some similarity.
>>
>>  For the cheat sheet series, it might make sense for there to be some
>> commonality across all of them, but I certianly don;t think the header
>> should be identical to the default for otehr new projects. Some
>> differentiation for cheat sheets might help them stand out as a collection?
>>
>>  I will send over a suggestion or two for the ProActive Controls header
>> image via the other email thread we have...
>>
>>  Colin
>>
>>
>>
>>
>>
>> On 21 March 2014 10:47, Jim Manico <jim.manico at owasp.org> wrote:
>>
>>>  Colin, my first reaction is "what a pain this would be" but after
>>> thinking about it, sure why not, it would make the project better if we had
>>> the resources to make this images.
>>>
>>> Aloha,
>>> Jim
>>>
>>>
>>>
>>> On 3/21/14, 7:43 PM, Colin Watson wrote:
>>>
>>>  Jim - Looks good.
>>>
>>>  Samantha - could we have a different header image for each cheat
>>> sheet, perhaps at least with the name in the image, so these pages don't
>>> just start looking like every other page on the site? Most of the new
>>> projects have this same blue banner header.
>>>
>>>  Colin
>>>
>>>
>>>
>>>
>>> On 20 March 2014 13:18, Jim Manico <jim.manico at owasp.org> wrote:
>>>
>>>>  Samantha,
>>>>
>>>> I went though the first 3/4 of the cheatsheets and changed all of them
>>>> to the new template.
>>>>
>>>> For really "wide" cheat sheets, I put my navigation at the bottom.
>>>> https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet
>>>> For "narrow" cheat sheets, I put the nav on the right.
>>>> https://www.owasp.org/index.php/Choosing_and_Using_Security_Questions_Cheat_Sheet
>>>>
>>>> I'll do more cleanup, but within a day or so the entire project should
>>>> be reverted to the new template, including iOS support.
>>>>
>>>> PS: The only downside to the new template is that it looks mugly when
>>>> the table of content pops. I dropped the table of contents during this
>>>> change so it looks better. Is there a way to inject the TOC in the middle
>>>> of a doc? I'll try to pull that off soon.
>>>>
>>>> Aloha,
>>>> Jim
>>>>
>>>> *Developer Cheat Sheets (Builder)*
>>>>
>>>>    - Authentication Cheat Sheet<https://www.owasp.org/index.php/Authentication_Cheat_Sheet>
>>>>    - Choosing and Using Security Questions Cheat Sheet<https://www.owasp.org/index.php/Choosing_and_Using_Security_Questions_Cheat_Sheet>
>>>>    - Clickjacking Defense Cheat Sheet<https://www.owasp.org/index.php/Clickjacking_Defense_Cheat_Sheet>
>>>>    - C-Based Toolchain Hardening Cheat Sheet<https://www.owasp.org/index.php/C-Based_Toolchain_Hardening_Cheat_Sheet>
>>>>    - Cross-Site Request Forgery (CSRF) Prevention Cheat Sheet<https://www.owasp.org/index.php/Cross-Site_Request_Forgery_%28CSRF%29_Prevention_Cheat_Sheet>
>>>>    - Cryptographic Storage Cheat Sheet<https://www.owasp.org/index.php/Cryptographic_Storage_Cheat_Sheet>
>>>>    - DOM based XSS Prevention Cheat Sheet<https://www.owasp.org/index.php/DOM_based_XSS_Prevention_Cheat_Sheet>
>>>>    - Forgot Password Cheat Sheet<https://www.owasp.org/index.php/Forgot_Password_Cheat_Sheet>
>>>>    - HTML5 Security Cheat Sheet<https://www.owasp.org/index.php/HTML5_Security_Cheat_Sheet>
>>>>    - Input Validation Cheat Sheet<https://www.owasp.org/index.php/Input_Validation_Cheat_Sheet>
>>>>    - JAAS Cheat Sheet<https://www.owasp.org/index.php/JAAS_Cheat_Sheet>
>>>>    - Logging Cheat Sheet<https://www.owasp.org/index.php/Logging_Cheat_Sheet>
>>>>    - .NET Security Cheat Sheet<https://www.owasp.org/index.php/.NET_Security_Cheat_Sheet>
>>>>    - OWASP Top Ten Cheat Sheet<https://www.owasp.org/index.php/OWASP_Top_Ten_Cheat_Sheet>
>>>>    - Password Storage Cheat Sheet<https://www.owasp.org/index.php/Password_Storage_Cheat_Sheet>
>>>>    - Pinning Cheat Sheet<https://www.owasp.org/index.php/Pinning_Cheat_Sheet>
>>>>    - Query Parameterization Cheat Sheet<https://www.owasp.org/index.php/Query_Parameterization_Cheat_Sheet>
>>>>    - Ruby on Rails Cheatsheet<https://www.owasp.org/index.php/Ruby_on_Rails_Cheatsheet>
>>>>    - REST Security Cheat Sheet<https://www.owasp.org/index.php/REST_Security_Cheat_Sheet>
>>>>    - Session Management Cheat Sheet<https://www.owasp.org/index.php/Session_Management_Cheat_Sheet>
>>>>    - SQL Injection Prevention Cheat Sheet<https://www.owasp.org/index.php/SQL_Injection_Prevention_Cheat_Sheet>
>>>>    - Transport Layer Protection Cheat Sheet<https://www.owasp.org/index.php/Transport_Layer_Protection_Cheat_Sheet>
>>>>    - Unvalidated Redirects and Forwards Cheat Sheet<https://www.owasp.org/index.php/Unvalidated_Redirects_and_Forwards_Cheat_Sheet>
>>>>    - User Privacy Protection Cheat Sheet<https://www.owasp.org/index.php/User_Privacy_Protection_Cheat_Sheet>
>>>>    - Web Service Security Cheat Sheet<https://www.owasp.org/index.php/Web_Service_Security_Cheat_Sheet>
>>>>    - *XSS (Cross Site Scripting) Prevention Cheat Sheet*
>>>>
>>>>
>>>>
>>>
>>>
>>
>>
>


-- 

*Samantha Groves, MBA*

*OWASP Projects Manager*


The OWASP Foundation

Phoenix, USA

Email: samantha.groves at owasp.org

Skype: samanthahz


OWASP Global Projects<https://www.owasp.org/index.php/Category:OWASP_Project>

Book a Meeting with Me <http://goo.gl/mZXdZ>

OWASP Contact US Form <http://owasp4.owasp.org/contactus.html>

New Project Application Form <http://www.tfaforms.com/263506>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-cheat-sheets/attachments/20140324/4d6694ec/attachment-0001.html>

From jim.manico at owasp.org  Mon Mar 24 16:42:19 2014
From: jim.manico at owasp.org (Jim Manico)
Date: Mon, 24 Mar 2014 22:12:19 +0530
Subject: [Owasp-cheat-sheets] Cheat Sheets
In-Reply-To: <CAAxdBBmpmpD0F6TS2kL7tzXe=trv1e6vtT92sNipFcGdBP=2OA@mail.gmail.com>
References: <532AEA8C.8070803@owasp.org>
	<CAAxdBB=1x3Psk5OLKdCmBXpom7MJOnJYPrLpxQEREbT3X5eL_Q@mail.gmail.com>
	<532C18D3.7060209@owasp.org>
	<CAAxdBB=zpKiHaqmPqtwCntOSc+=ZnQ+H7nRL2XTA9Lr1cpgGGQ@mail.gmail.com>
	<532C1C93.2070006@owasp.org>
	<CAAxdBBkU9FmOMBDbNwXeZAt-PNz4d-CwKvjMtsN71XMpUrq-=w@mail.gmail.com>
	<CA+EttN_kdzoSEJF5hm2f-n6VfML=bqh_RcvqsiCabThQ8v+6vQ@mail.gmail.com>
	<533053D2.8060509@owasp.org>
	<CAAxdBBmpmpD0F6TS2kL7tzXe=trv1e6vtT92sNipFcGdBP=2OA@mail.gmail.com>
Message-ID: <2969939640957434283@unknownmsgid>

May I request blue? It's my favorite color. I otherwise love it. :)

--
Jim Manico
@Manicode
(808) 652-3805

> On Mar 24, 2014, at 10:08 PM, Colin Watson <colin.watson at owasp.org> wrote:
>
> Jim
>
> Samantha's suggestion of getting a pro on the job is the best idea.
> However, I have just mocked up this attached.
>
> Would you like that banner temporarily until we get something better?
>
> Colin
>
>
>
>> On 24 March 2014 15:48, Jim Manico <jim.manico at owasp.org> wrote:
>> Super cool. I'm willing to do - whatevah' - to make the series better. :)
>>
>> Aloha,
>> Jim
>>
>>
>>
>> On 3/24/14, 9:17 PM, Samantha Groves wrote:
>>
>> I have a good alternative. So we might be hiring a designer soon, and this
>> is something that the designer can work on. The cheat sheets look awesome,
>> by the way. Thank you, Jim. :-)
>>
>>
>> On Fri, Mar 21, 2014 at 4:11 AM, Colin Watson <colin.watson at owasp.org>
>> wrote:
>>>
>>> Jim
>>>
>>> I think that would do the trick, without lots of work for each new one.
>>>
>>> Colin
>>>
>>>
>>>
>>>
>>>> On 21 March 2014 11:03, Jim Manico <jim.manico at owasp.org> wrote:
>>>>
>>>> So let's compromise. How about a unique (OWASP Branded) image for the
>>>> cheat sheet series? (not one unique image for each cheat sheet) I could live
>>>> with that...
>>>>
>>>> Aloha,
>>>> Jim
>>>>
>>>>
>>>>
>>>> On 3/21/14, 8:02 PM, Colin Watson wrote:
>>>>
>>>> Jim
>>>>
>>>> When I laid out my Cornucopia project page, my thought was that each
>>>> project could have some distinctive image on the top of the main tab. At the
>>>> time I couldn't get access to any high-res OWASP materials so had to do
>>>> something on my own.  It might be code looking stuff, OWASP branding, a
>>>> photo, screen shots collage, etc, etc. Here are some different example I
>>>> have created so far:
>>>>
>>>>   Montage of playing cards
>>>>   https://www.owasp.org/index.php/OWASP_Cornucopia
>>>>
>>>>   Photo only
>>>>
>>>> https://www.owasp.org/index.php/OWASP_Application_Security_Guide_For_CISOs_Project
>>>>
>>>>      This also flows on to the wiki (HTML) version of the guide, but
>>>> note the alternative
>>>>      layout to differentiate it from the project page
>>>>
>>>> https://www.owasp.org/index.php/Application_Security_Guide_For_CISOs
>>>>
>>>>   Photo with project name as text
>>>>   https://www.owasp.org/index.php/OWASP_AppSensor_Project
>>>>
>>>> The headers might reflect the design of a matching book or splash screen
>>>> of a tool, but of cousre don't have to.
>>>>
>>>> Some projects (e.g. ESAPI) have multiple sub-projects (Java, PHP, etc)
>>>> and it might make sense for all of those to have some similarity.
>>>>
>>>> For the cheat sheet series, it might make sense for there to be some
>>>> commonality across all of them, but I certianly don;t think the header
>>>> should be identical to the default for otehr new projects. Some
>>>> differentiation for cheat sheets might help them stand out as a collection?
>>>>
>>>> I will send over a suggestion or two for the ProActive Controls header
>>>> image via the other email thread we have...
>>>>
>>>> Colin
>>>>
>>>>
>>>>
>>>>
>>>>
>>>>> On 21 March 2014 10:47, Jim Manico <jim.manico at owasp.org> wrote:
>>>>>
>>>>> Colin, my first reaction is "what a pain this would be" but after
>>>>> thinking about it, sure why not, it would make the project better if we had
>>>>> the resources to make this images.
>>>>>
>>>>> Aloha,
>>>>> Jim
>>>>>
>>>>>
>>>>>
>>>>> On 3/21/14, 7:43 PM, Colin Watson wrote:
>>>>>
>>>>> Jim - Looks good.
>>>>>
>>>>> Samantha - could we have a different header image for each cheat sheet,
>>>>> perhaps at least with the name in the image, so these pages don't just start
>>>>> looking like every other page on the site? Most of the new projects have
>>>>> this same blue banner header.
>>>>>
>>>>> Colin
>
> <header-cheatsheets.jpg>

From jim.manico at owasp.org  Mon Mar 24 15:48:34 2014
From: jim.manico at owasp.org (Jim Manico)
Date: Mon, 24 Mar 2014 21:18:34 +0530
Subject: [Owasp-cheat-sheets] Cheat Sheets
In-Reply-To: <CA+EttN_kdzoSEJF5hm2f-n6VfML=bqh_RcvqsiCabThQ8v+6vQ@mail.gmail.com>
References: <532AEA8C.8070803@owasp.org>	<CAAxdBB=1x3Psk5OLKdCmBXpom7MJOnJYPrLpxQEREbT3X5eL_Q@mail.gmail.com>	<532C18D3.7060209@owasp.org>	<CAAxdBB=zpKiHaqmPqtwCntOSc+=ZnQ+H7nRL2XTA9Lr1cpgGGQ@mail.gmail.com>	<532C1C93.2070006@owasp.org>	<CAAxdBBkU9FmOMBDbNwXeZAt-PNz4d-CwKvjMtsN71XMpUrq-=w@mail.gmail.com>
	<CA+EttN_kdzoSEJF5hm2f-n6VfML=bqh_RcvqsiCabThQ8v+6vQ@mail.gmail.com>
Message-ID: <533053D2.8060509@owasp.org>

Super cool. I'm willing to do - whatevah' - to make the series better. :)

Aloha,
Jim


On 3/24/14, 9:17 PM, Samantha Groves wrote:
> I have a good alternative. So we might be hiring a designer soon, and 
> this is something that the designer can work on. The cheat sheets look 
> awesome, by the way. Thank you, Jim. :-)
>
>
> On Fri, Mar 21, 2014 at 4:11 AM, Colin Watson <colin.watson at owasp.org 
> <mailto:colin.watson at owasp.org>> wrote:
>
>     Jim
>
>     I think that would do the trick, without lots of work for each new
>     one.
>
>     Colin
>
>
>
>
>     On 21 March 2014 11:03, Jim Manico <jim.manico at owasp.org
>     <mailto:jim.manico at owasp.org>> wrote:
>
>         So let's compromise. How about a unique (OWASP Branded) image
>         for the cheat sheet series? (not one unique image for each
>         cheat sheet) I could live with that...
>
>         Aloha,
>         Jim
>
>
>
>         On 3/21/14, 8:02 PM, Colin Watson wrote:
>>         Jim
>>
>>         When I laid out my Cornucopia project page, my thought was
>>         that each project could have some distinctive image on the
>>         top of the main tab. At the time I couldn't get access to any
>>         high-res OWASP materials so had to do something on my own.
>>          It might be code looking stuff, OWASP branding, a photo,
>>         screen shots collage, etc, etc. Here are some different
>>         example I have created so far:
>>
>>            Montage of playing cards
>>         https://www.owasp.org/index.php/OWASP_Cornucopia
>>
>>            Photo only
>>         https://www.owasp.org/index.php/OWASP_Application_Security_Guide_For_CISOs_Project
>>
>>               This also flows on to the wiki (HTML) version of the
>>         guide, but note the alternative
>>               layout to differentiate it from the project page
>>         https://www.owasp.org/index.php/Application_Security_Guide_For_CISOs
>>            Photo with project name as text
>>         https://www.owasp.org/index.php/OWASP_AppSensor_Project
>>
>>         The headers might reflect the design of a matching book or
>>         splash screen of a tool, but of cousre don't have to.
>>
>>         Some projects (e.g. ESAPI) have multiple sub-projects (Java,
>>         PHP, etc) and it might make sense for all of those to have
>>         some similarity.
>>
>>         For the cheat sheet series, it might make sense for there to
>>         be some commonality across all of them, but I certianly don;t
>>         think the header should be identical to the default for otehr
>>         new projects. Some differentiation for cheat sheets might
>>         help them stand out as a collection?
>>
>>         I will send over a suggestion or two for the ProActive
>>         Controls header image via the other email thread we have...
>>
>>         Colin
>>
>>
>>
>>
>>
>>         On 21 March 2014 10:47, Jim Manico <jim.manico at owasp.org
>>         <mailto:jim.manico at owasp.org>> wrote:
>>
>>             Colin, my first reaction is "what a pain this would be"
>>             but after thinking about it, sure why not, it would make
>>             the project better if we had the resources to make this
>>             images.
>>
>>             Aloha,
>>             Jim
>>
>>
>>
>>             On 3/21/14, 7:43 PM, Colin Watson wrote:
>>>             Jim - Looks good.
>>>
>>>             Samantha - could we have a different header image for
>>>             each cheat sheet, perhaps at least with the name in the
>>>             image, so these pages don't just start looking like
>>>             every other page on the site? Most of the new projects
>>>             have this same blue banner header.
>>>
>>>             Colin
>>>
>>>
>>>
>>>
>>>             On 20 March 2014 13:18, Jim Manico <jim.manico at owasp.org
>>>             <mailto:jim.manico at owasp.org>> wrote:
>>>
>>>                 Samantha,
>>>
>>>                 I went though the first 3/4 of the cheatsheets and
>>>                 changed all of them to the new template.
>>>
>>>                 For really "wide" cheat sheets, I put my navigation
>>>                 at the bottom.
>>>                 https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet
>>>                 <https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet>
>>>                 For "narrow" cheat sheets, I put the nav on the
>>>                 right.
>>>                 https://www.owasp.org/index.php/Choosing_and_Using_Security_Questions_Cheat_Sheet
>>>
>>>                 I'll do more cleanup, but within a day or so the
>>>                 entire project should be reverted to the new
>>>                 template, including iOS support.
>>>
>>>                 PS: The only downside to the new template is that it
>>>                 looks mugly when the table of content pops. I
>>>                 dropped the table of contents during this change so
>>>                 it looks better. Is there a way to inject the TOC in
>>>                 the middle of a doc? I'll try to pull that off soon.
>>>
>>>                 Aloha,
>>>                 Jim
>>>
>>>                 *Developer Cheat Sheets (Builder)*
>>>
>>>                   * Authentication Cheat Sheet
>>>                     <https://www.owasp.org/index.php/Authentication_Cheat_Sheet>
>>>                   * Choosing and Using Security Questions Cheat
>>>                     Sheet
>>>                     <https://www.owasp.org/index.php/Choosing_and_Using_Security_Questions_Cheat_Sheet>
>>>                   * Clickjacking Defense Cheat Sheet
>>>                     <https://www.owasp.org/index.php/Clickjacking_Defense_Cheat_Sheet>
>>>                   * C-Based Toolchain Hardening Cheat Sheet
>>>                     <https://www.owasp.org/index.php/C-Based_Toolchain_Hardening_Cheat_Sheet>
>>>                   * Cross-Site Request Forgery (CSRF) Prevention
>>>                     Cheat Sheet
>>>                     <https://www.owasp.org/index.php/Cross-Site_Request_Forgery_%28CSRF%29_Prevention_Cheat_Sheet>
>>>                   * Cryptographic Storage Cheat Sheet
>>>                     <https://www.owasp.org/index.php/Cryptographic_Storage_Cheat_Sheet>
>>>                   * DOM based XSS Prevention Cheat Sheet
>>>                     <https://www.owasp.org/index.php/DOM_based_XSS_Prevention_Cheat_Sheet>
>>>                   * Forgot Password Cheat Sheet
>>>                     <https://www.owasp.org/index.php/Forgot_Password_Cheat_Sheet>
>>>                   * HTML5 Security Cheat Sheet
>>>                     <https://www.owasp.org/index.php/HTML5_Security_Cheat_Sheet>
>>>                   * Input Validation Cheat Sheet
>>>                     <https://www.owasp.org/index.php/Input_Validation_Cheat_Sheet>
>>>                   * JAAS Cheat Sheet
>>>                     <https://www.owasp.org/index.php/JAAS_Cheat_Sheet>
>>>                   * Logging Cheat Sheet
>>>                     <https://www.owasp.org/index.php/Logging_Cheat_Sheet>
>>>                   * .NET Security Cheat Sheet
>>>                     <https://www.owasp.org/index.php/.NET_Security_Cheat_Sheet>
>>>                   * OWASP Top Ten Cheat Sheet
>>>                     <https://www.owasp.org/index.php/OWASP_Top_Ten_Cheat_Sheet>
>>>                   * Password Storage Cheat Sheet
>>>                     <https://www.owasp.org/index.php/Password_Storage_Cheat_Sheet>
>>>                   * Pinning Cheat Sheet
>>>                     <https://www.owasp.org/index.php/Pinning_Cheat_Sheet>
>>>                   * Query Parameterization Cheat Sheet
>>>                     <https://www.owasp.org/index.php/Query_Parameterization_Cheat_Sheet>
>>>                   * Ruby on Rails Cheatsheet
>>>                     <https://www.owasp.org/index.php/Ruby_on_Rails_Cheatsheet>
>>>                   * REST Security Cheat Sheet
>>>                     <https://www.owasp.org/index.php/REST_Security_Cheat_Sheet>
>>>                   * Session Management Cheat Sheet
>>>                     <https://www.owasp.org/index.php/Session_Management_Cheat_Sheet>
>>>                   * SQL Injection Prevention Cheat Sheet
>>>                     <https://www.owasp.org/index.php/SQL_Injection_Prevention_Cheat_Sheet>
>>>                   * Transport Layer Protection Cheat Sheet
>>>                     <https://www.owasp.org/index.php/Transport_Layer_Protection_Cheat_Sheet>
>>>                   * Unvalidated Redirects and Forwards Cheat Sheet
>>>                     <https://www.owasp.org/index.php/Unvalidated_Redirects_and_Forwards_Cheat_Sheet>
>>>                   * User Privacy Protection Cheat Sheet
>>>                     <https://www.owasp.org/index.php/User_Privacy_Protection_Cheat_Sheet>
>>>                   * Web Service Security Cheat Sheet
>>>                     <https://www.owasp.org/index.php/Web_Service_Security_Cheat_Sheet>
>>>                   * *XSS (Cross Site Scripting) Prevention Cheat Sheet*
>>>
>>>
>>>
>>
>>
>
>
>
>
>
> -- 
>
> *Samantha Groves, MBA*
>
> /OWASP Projects Manager/
>
> /
> /
>
> The OWASP Foundation
>
> Phoenix, USA
>
> Email: samantha.groves at owasp.org <mailto:samantha.groves at owasp.org>
>
> Skype: samanthahz
>
>
> OWASP Global Projects 
> <https://www.owasp.org/index.php/Category:OWASP_Project>
>
> Book a Meeting with Me <http://goo.gl/mZXdZ>
>
> OWASP Contact US Form <http://owasp4.owasp.org/contactus.html>
>
> New Project Application Form <http://www.tfaforms.com/263506>
>
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-cheat-sheets/attachments/20140324/ee4bc171/attachment-0001.html>

