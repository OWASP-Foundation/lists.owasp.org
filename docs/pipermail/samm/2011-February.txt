From colin.watson at owasp.org  Thu Feb 10 04:41:33 2011
From: colin.watson at owasp.org (Colin Watson)
Date: Thu, 10 Feb 2011 09:41:33 +0000
Subject: [SAMM] Resource links
Message-ID: <AANLkTimxi3x2ROOEWSQctbEM4piw5=UuhDMuvTN0gJiC@mail.gmail.com>

During the SAMM working session last night at the OWASP Summit, we
discussed some external references. The ones I mentioned about ROI
were:

   Security and the Software Development Lifecycle: Secure at the Source
   http://www.aberdeen.com/Aberdeen-Library/6983/RA-software-development-lifecycle.aspx

   State of Application Security - Immature Practices Fuel
Inefficiencies, But Positive ROI Is Attainable
   http://www.microsoft.com/downloads/en/details.aspx?FamilyID=813810f9-2a8e-4cbf-bd8f-1b0aca7af61d&displaylang=en

I summarised these on my own blog:

   Secure Application Development - A Preventative Approach That Pays
   http://www.clerkendweller.com/2011/1/18/Secure-Application-Development-A-Preventative-Approach-That-Pays

   Secure SDL Positive ROI Possible
   http://www.clerkendweller.com/2011/1/21/Secure-SDL-Positive-ROI-Possible

I also mentioned SAFECode.  Their recent release of "Fundamental
Practices for Secure Software Development" is mentioned here:

   http://blog.safecode.org/?p=114
   &
   http://www.safecode.org/publications/SAFECode_Dev_Practices0211.pdf

Now that doesn't sem to mention the code integrity items I was
thinking of, but it might be worth cross-checking their list with
OpenSAMM.  For example, do we have enough about application event
(incl security event) logging?  That is a pet subject for me because
of AppSensor :-)

A better SAFECode document on code integrity is:

   Overview of Software Integrity Controls
   http://www.safecode.org/publications/SAFECode_Software_Integrity_Controls0610.pdf

Colin

From colin.watson at owasp.org  Sun Feb 13 14:00:23 2011
From: colin.watson at owasp.org (Colin Watson)
Date: Sun, 13 Feb 2011 19:00:23 +0000
Subject: [SAMM] Resource links
In-Reply-To: <AANLkTimxi3x2ROOEWSQctbEM4piw5=UuhDMuvTN0gJiC@mail.gmail.com>
References: <AANLkTimxi3x2ROOEWSQctbEM4piw5=UuhDMuvTN0gJiC@mail.gmail.com>
Message-ID: <AANLkTinNvwdb51GnzvyFwz=Wk9oTLp9U9fAki4vv1x8N@mail.gmail.com>

Just a follow-up on my previous email... we discussed "code signing"
during the workshop.  The SAFECode "Software Supply Chain Integrity
Framework" covers:

? Chain of Custody: The confidence that each change and handoff made
during the source code?s lifetime is authorized, transparent and
verifiable.
? Least Privilege Access: Personnel can access critical data with only
the privileges needed to do their jobs.
? Separation of Duties: Personnel cannot unilaterally change data, nor
unilaterally control the development process.
? Tamper Resistance and Evidence: Attempts to tamper are obstructed,
and when they occur they are evident and
reversible.
? Persistent Protection: Critical data is protected in ways that
remain effective even if removed from the development
location.
? Compliance Management: The success of the protections can be
continually and independently confirmed.
? Code Testing and Verification: Methods for code inspection are
applied and suspicious code is detected.

In other words "code signing" is just one part.... and I suppose
"ensuring the integrity of software code" might be a more general
statement to include.

Colin


On 10 February 2011 09:41, Colin Watson <colin.watson at owasp.org> wrote:
> During the SAMM working session last night at the OWASP Summit, we
> discussed some external references. The ones I mentioned about ROI
> were:
>
> ? Security and the Software Development Lifecycle: Secure at the Source
> ? http://www.aberdeen.com/Aberdeen-Library/6983/RA-software-development-lifecycle.aspx
>
> ? State of Application Security - Immature Practices Fuel
> Inefficiencies, But Positive ROI Is Attainable
> ? http://www.microsoft.com/downloads/en/details.aspx?FamilyID=813810f9-2a8e-4cbf-bd8f-1b0aca7af61d&displaylang=en
>
> I summarised these on my own blog:
>
> ? Secure Application Development - A Preventative Approach That Pays
> ? http://www.clerkendweller.com/2011/1/18/Secure-Application-Development-A-Preventative-Approach-That-Pays
>
> ? Secure SDL Positive ROI Possible
> ? http://www.clerkendweller.com/2011/1/21/Secure-SDL-Positive-ROI-Possible
>
> I also mentioned SAFECode. ?Their recent release of "Fundamental
> Practices for Secure Software Development" is mentioned here:
>
> ? http://blog.safecode.org/?p=114
> ? &
> ? http://www.safecode.org/publications/SAFECode_Dev_Practices0211.pdf
>
> Now that doesn't sem to mention the code integrity items I was
> thinking of, but it might be worth cross-checking their list with
> OpenSAMM. ?For example, do we have enough about application event
> (incl security event) logging? ?That is a pet subject for me because
> of AppSensor :-)
>
> A better SAFECode document on code integrity is:
>
> ? Overview of Software Integrity Controls
> ? http://www.safecode.org/publications/SAFECode_Software_Integrity_Controls0610.pdf
>
> Colin
>

From jeff.williams at aspectsecurity.com  Sun Feb 13 15:19:14 2011
From: jeff.williams at aspectsecurity.com (Jeff Williams)
Date: Sun, 13 Feb 2011 15:19:14 -0500
Subject: [SAMM] Resource links
In-Reply-To: <AANLkTinNvwdb51GnzvyFwz=Wk9oTLp9U9fAki4vv1x8N@mail.gmail.com>
References: <AANLkTimxi3x2ROOEWSQctbEM4piw5=UuhDMuvTN0gJiC@mail.gmail.com>
	<AANLkTinNvwdb51GnzvyFwz=Wk9oTLp9U9fAki4vv1x8N@mail.gmail.com>
Message-ID: <37EF53D4-3C1A-4DB0-9C3F-26DE9910EB7B@aspectsecurity.com>

I'd like to suggest a section on the security of the tool chain used to store, compile, link, test, package, and install.  See my paper on Java rootkits for a discussion of some of the malicious scenarios.

Had a good discussion with Keith about some standards around software security supply chain.

--Jeff



On Feb 13, 2011, at 2:02 PM, "Colin Watson" <colin.watson at owasp.org> wrote:

> Just a follow-up on my previous email... we discussed "code signing"
> during the workshop.  The SAFECode "Software Supply Chain Integrity
> Framework" covers:
> 
> ? Chain of Custody: The confidence that each change and handoff made
> during the source code?s lifetime is authorized, transparent and
> verifiable.
> ? Least Privilege Access: Personnel can access critical data with only
> the privileges needed to do their jobs.
> ? Separation of Duties: Personnel cannot unilaterally change data, nor
> unilaterally control the development process.
> ? Tamper Resistance and Evidence: Attempts to tamper are obstructed,
> and when they occur they are evident and
> reversible.
> ? Persistent Protection: Critical data is protected in ways that
> remain effective even if removed from the development
> location.
> ? Compliance Management: The success of the protections can be
> continually and independently confirmed.
> ? Code Testing and Verification: Methods for code inspection are
> applied and suspicious code is detected.
> 
> In other words "code signing" is just one part.... and I suppose
> "ensuring the integrity of software code" might be a more general
> statement to include.
> 
> Colin
> 
> 
> On 10 February 2011 09:41, Colin Watson <colin.watson at owasp.org> wrote:
>> During the SAMM working session last night at the OWASP Summit, we
>> discussed some external references. The ones I mentioned about ROI
>> were:
>> 
>>   Security and the Software Development Lifecycle: Secure at the Source
>>   http://www.aberdeen.com/Aberdeen-Library/6983/RA-software-development-lifecycle.aspx
>> 
>>   State of Application Security - Immature Practices Fuel
>> Inefficiencies, But Positive ROI Is Attainable
>>   http://www.microsoft.com/downloads/en/details.aspx?FamilyID=813810f9-2a8e-4cbf-bd8f-1b0aca7af61d&displaylang=en
>> 
>> I summarised these on my own blog:
>> 
>>   Secure Application Development - A Preventative Approach That Pays
>>   http://www.clerkendweller.com/2011/1/18/Secure-Application-Development-A-Preventative-Approach-That-Pays
>> 
>>   Secure SDL Positive ROI Possible
>>   http://www.clerkendweller.com/2011/1/21/Secure-SDL-Positive-ROI-Possible
>> 
>> I also mentioned SAFECode.  Their recent release of "Fundamental
>> Practices for Secure Software Development" is mentioned here:
>> 
>>   http://blog.safecode.org/?p=114
>>   &
>>   http://www.safecode.org/publications/SAFECode_Dev_Practices0211.pdf
>> 
>> Now that doesn't sem to mention the code integrity items I was
>> thinking of, but it might be worth cross-checking their list with
>> OpenSAMM.  For example, do we have enough about application event
>> (incl security event) logging?  That is a pet subject for me because
>> of AppSensor :-)
>> 
>> A better SAFECode document on code integrity is:
>> 
>>   Overview of Software Integrity Controls
>>   http://www.safecode.org/publications/SAFECode_Software_Integrity_Controls0610.pdf
>> 
>> Colin
>> 
> _______________________________________________
> SAMM mailing list
> SAMM at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/samm

From christian.heinrich at owasp.org  Sun Feb 13 19:32:28 2011
From: christian.heinrich at owasp.org (Christian Heinrich)
Date: Mon, 14 Feb 2011 11:32:28 +1100
Subject: [SAMM] Resource links
In-Reply-To: <37EF53D4-3C1A-4DB0-9C3F-26DE9910EB7B@aspectsecurity.com>
References: <AANLkTimxi3x2ROOEWSQctbEM4piw5=UuhDMuvTN0gJiC@mail.gmail.com>
	<AANLkTinNvwdb51GnzvyFwz=Wk9oTLp9U9fAki4vv1x8N@mail.gmail.com>
	<37EF53D4-3C1A-4DB0-9C3F-26DE9910EB7B@aspectsecurity.com>
Message-ID: <AANLkTi=WNO1aHEsprNbJp8SGPed2HTO7NuiJ8bSTh_1y@mail.gmail.com>

Jeff,

On Mon, Feb 14, 2011 at 7:19 AM, Jeff Williams
<jeff.williams at aspectsecurity.com> wrote:
> I'd like to suggest a section on the security of the tool chain used to store, compile, link, test, package, and install. ?See my paper on Java rootkits for a discussion of some of the malicious scenarios.

Considering the tool chain could be referenced in the "Construction",
"Verification" and "Deployment" Business Functions, I believe the most
practical would be "Deployment".

That stated, this measurement might be to low level for the intended
audience for OpenSAMM i.e. Business Executive but I believe it should
be measured at the middle management level, possibly under a separate
project for branding reasons i.e. I had touched on this previously
within https://lists.owasp.org/pipermail/samm/2011-January/000279.html



-- 
Regards,
Christian Heinrich
http://www.owasp.org/index.php/user:cmlh

From chandra at owasp.org  Mon Feb 14 03:53:23 2011
From: chandra at owasp.org (Pravir Chandra)
Date: Mon, 14 Feb 2011 00:53:23 -0800
Subject: [SAMM] Resource links
In-Reply-To: <37EF53D4-3C1A-4DB0-9C3F-26DE9910EB7B@aspectsecurity.com>
References: <AANLkTimxi3x2ROOEWSQctbEM4piw5=UuhDMuvTN0gJiC@mail.gmail.com>
	<AANLkTinNvwdb51GnzvyFwz=Wk9oTLp9U9fAki4vv1x8N@mail.gmail.com>
	<37EF53D4-3C1A-4DB0-9C3F-26DE9910EB7B@aspectsecurity.com>
Message-ID: <606B8444-8BD4-457D-AB8C-E6DC1DB14285@owasp.org>

Jeff, can you send the links to that paper of yours? Any more detail on stuff Keith mentioned? I'm brushing up on this stuff, so the more the better.

After discussions at the Summit, I'm currently of a mind to try to compile all the best practices related to code protection to the existing SAMM practice on code signing (i.e. make it a little more broad than signing alone). The only trick is, I'm not sure where to draw the line. Purely supply chain stuff might be better suited to a practice under Env Hardening.

p.

On Feb 13, 2011, at 12:19 PM, "Jeff Williams" <jeff.williams at aspectsecurity.com> wrote:

> I'd like to suggest a section on the security of the tool chain used to store, compile, link, test, package, and install.  See my paper on Java rootkits for a discussion of some of the malicious scenarios.
> 
> Had a good discussion with Keith about some standards around software security supply chain.
> 
> --Jeff
> 
> 
> 
> On Feb 13, 2011, at 2:02 PM, "Colin Watson" <colin.watson at owasp.org> wrote:
> 
>> Just a follow-up on my previous email... we discussed "code signing"
>> during the workshop.  The SAFECode "Software Supply Chain Integrity
>> Framework" covers:
>> 
>> ? Chain of Custody: The confidence that each change and handoff made
>> during the source code?s lifetime is authorized, transparent and
>> verifiable.
>> ? Least Privilege Access: Personnel can access critical data with only
>> the privileges needed to do their jobs.
>> ? Separation of Duties: Personnel cannot unilaterally change data, nor
>> unilaterally control the development process.
>> ? Tamper Resistance and Evidence: Attempts to tamper are obstructed,
>> and when they occur they are evident and
>> reversible.
>> ? Persistent Protection: Critical data is protected in ways that
>> remain effective even if removed from the development
>> location.
>> ? Compliance Management: The success of the protections can be
>> continually and independently confirmed.
>> ? Code Testing and Verification: Methods for code inspection are
>> applied and suspicious code is detected.
>> 
>> In other words "code signing" is just one part.... and I suppose
>> "ensuring the integrity of software code" might be a more general
>> statement to include.
>> 
>> Colin
>> 
>> 
>> On 10 February 2011 09:41, Colin Watson <colin.watson at owasp.org> wrote:
>>> During the SAMM working session last night at the OWASP Summit, we
>>> discussed some external references. The ones I mentioned about ROI
>>> were:
>>> 
>>>  Security and the Software Development Lifecycle: Secure at the Source
>>>  http://www.aberdeen.com/Aberdeen-Library/6983/RA-software-development-lifecycle.aspx
>>> 
>>>  State of Application Security - Immature Practices Fuel
>>> Inefficiencies, But Positive ROI Is Attainable
>>>  http://www.microsoft.com/downloads/en/details.aspx?FamilyID=813810f9-2a8e-4cbf-bd8f-1b0aca7af61d&displaylang=en
>>> 
>>> I summarised these on my own blog:
>>> 
>>>  Secure Application Development - A Preventative Approach That Pays
>>>  http://www.clerkendweller.com/2011/1/18/Secure-Application-Development-A-Preventative-Approach-That-Pays
>>> 
>>>  Secure SDL Positive ROI Possible
>>>  http://www.clerkendweller.com/2011/1/21/Secure-SDL-Positive-ROI-Possible
>>> 
>>> I also mentioned SAFECode.  Their recent release of "Fundamental
>>> Practices for Secure Software Development" is mentioned here:
>>> 
>>>  http://blog.safecode.org/?p=114
>>>  &
>>>  http://www.safecode.org/publications/SAFECode_Dev_Practices0211.pdf
>>> 
>>> Now that doesn't sem to mention the code integrity items I was
>>> thinking of, but it might be worth cross-checking their list with
>>> OpenSAMM.  For example, do we have enough about application event
>>> (incl security event) logging?  That is a pet subject for me because
>>> of AppSensor :-)
>>> 
>>> A better SAFECode document on code integrity is:
>>> 
>>>  Overview of Software Integrity Controls
>>>  http://www.safecode.org/publications/SAFECode_Software_Integrity_Controls0610.pdf
>>> 
>>> Colin
>>> 
>> _______________________________________________
>> SAMM mailing list
>> SAMM at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/samm
> _______________________________________________
> SAMM mailing list
> SAMM at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/samm

From jeff.williams at aspectsecurity.com  Tue Feb 15 13:47:54 2011
From: jeff.williams at aspectsecurity.com (Jeff Williams)
Date: Tue, 15 Feb 2011 13:47:54 -0500
Subject: [SAMM] Resource links
In-Reply-To: <606B8444-8BD4-457D-AB8C-E6DC1DB14285@owasp.org>
References: <AANLkTimxi3x2ROOEWSQctbEM4piw5=UuhDMuvTN0gJiC@mail.gmail.com><AANLkTinNvwdb51GnzvyFwz=Wk9oTLp9U9fAki4vv1x8N@mail.gmail.com><37EF53D4-3C1A-4DB0-9C3F-26DE9910EB7B@aspectsecurity.com>
	<606B8444-8BD4-457D-AB8C-E6DC1DB14285@owasp.org>
Message-ID: <B9A412898630124ABE8350F4EBD32E840174D9C2@mymail.aspectsecurity.com>

Sure...

http://www.blackhat.com/presentations/bh-usa-09/WILLIAMS/BHUSA09-Williams-EnterpriseJavaRootkits-PAPER.pdf

Perhaps Keith can give us some links to the stuff he's been working on.

--Jeff


-----Original Message-----
From: samm-bounces at lists.owasp.org [mailto:samm-bounces at lists.owasp.org] On Behalf Of Pravir Chandra
Sent: Monday, February 14, 2011 3:53 AM
To: Software Assurance Maturity Model (SAMM)
Cc: Software Assurance Maturity Model (SAMM)
Subject: Re: [SAMM] Resource links

Jeff, can you send the links to that paper of yours? Any more detail on stuff Keith mentioned? I'm brushing up on this stuff, so the more the better.

After discussions at the Summit, I'm currently of a mind to try to compile all the best practices related to code protection to the existing SAMM practice on code signing (i.e. make it a little more broad than signing alone). The only trick is, I'm not sure where to draw the line. Purely supply chain stuff might be better suited to a practice under Env Hardening.

p.

On Feb 13, 2011, at 12:19 PM, "Jeff Williams" <jeff.williams at aspectsecurity.com> wrote:

> I'd like to suggest a section on the security of the tool chain used to store, compile, link, test, package, and install.  See my paper on Java rootkits for a discussion of some of the malicious scenarios.
> 
> Had a good discussion with Keith about some standards around software security supply chain.
> 
> --Jeff
> 
> 
> 
> On Feb 13, 2011, at 2:02 PM, "Colin Watson" <colin.watson at owasp.org> wrote:
> 
>> Just a follow-up on my previous email... we discussed "code signing"
>> during the workshop.  The SAFECode "Software Supply Chain Integrity 
>> Framework" covers:
>> 
>> ? Chain of Custody: The confidence that each change and handoff made 
>> during the source code?s lifetime is authorized, transparent and 
>> verifiable.
>> ? Least Privilege Access: Personnel can access critical data with 
>> only the privileges needed to do their jobs.
>> ? Separation of Duties: Personnel cannot unilaterally change data, 
>> nor unilaterally control the development process.
>> ? Tamper Resistance and Evidence: Attempts to tamper are obstructed, 
>> and when they occur they are evident and reversible.
>> ? Persistent Protection: Critical data is protected in ways that 
>> remain effective even if removed from the development location.
>> ? Compliance Management: The success of the protections can be 
>> continually and independently confirmed.
>> ? Code Testing and Verification: Methods for code inspection are 
>> applied and suspicious code is detected.
>> 
>> In other words "code signing" is just one part.... and I suppose 
>> "ensuring the integrity of software code" might be a more general 
>> statement to include.
>> 
>> Colin
>> 
>> 
>> On 10 February 2011 09:41, Colin Watson <colin.watson at owasp.org> wrote:
>>> During the SAMM working session last night at the OWASP Summit, we 
>>> discussed some external references. The ones I mentioned about ROI
>>> were:
>>> 
>>>  Security and the Software Development Lifecycle: Secure at the 
>>> Source  
>>> http://www.aberdeen.com/Aberdeen-Library/6983/RA-software-developmen
>>> t-lifecycle.aspx
>>> 
>>>  State of Application Security - Immature Practices Fuel 
>>> Inefficiencies, But Positive ROI Is Attainable  
>>> http://www.microsoft.com/downloads/en/details.aspx?FamilyID=813810f9
>>> -2a8e-4cbf-bd8f-1b0aca7af61d&displaylang=en
>>> 
>>> I summarised these on my own blog:
>>> 
>>>  Secure Application Development - A Preventative Approach That Pays  
>>> http://www.clerkendweller.com/2011/1/18/Secure-Application-Developme
>>> nt-A-Preventative-Approach-That-Pays
>>> 
>>>  Secure SDL Positive ROI Possible
>>>  
>>> http://www.clerkendweller.com/2011/1/21/Secure-SDL-Positive-ROI-Poss
>>> ible
>>> 
>>> I also mentioned SAFECode.  Their recent release of "Fundamental 
>>> Practices for Secure Software Development" is mentioned here:
>>> 
>>>  http://blog.safecode.org/?p=114
>>>  &
>>>  http://www.safecode.org/publications/SAFECode_Dev_Practices0211.pdf
>>> 
>>> Now that doesn't sem to mention the code integrity items I was 
>>> thinking of, but it might be worth cross-checking their list with 
>>> OpenSAMM.  For example, do we have enough about application event 
>>> (incl security event) logging?  That is a pet subject for me because 
>>> of AppSensor :-)
>>> 
>>> A better SAFECode document on code integrity is:
>>> 
>>>  Overview of Software Integrity Controls  
>>> http://www.safecode.org/publications/SAFECode_Software_Integrity_Con
>>> trols0610.pdf
>>> 
>>> Colin
>>> 
>> _______________________________________________
>> SAMM mailing list
>> SAMM at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/samm
> _______________________________________________
> SAMM mailing list
> SAMM at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/samm
_______________________________________________
SAMM mailing list
SAMM at lists.owasp.org
https://lists.owasp.org/mailman/listinfo/samm

