From Alexander_Gempp at rcomext.com  Wed Mar  2 11:23:33 2011
From: Alexander_Gempp at rcomext.com (Alexander_Gempp at rcomext.com)
Date: Wed, 2 Mar 2011 17:23:33 +0100
Subject: [Owasp-csrfguard] Resending of Request by IE6 on Java
Message-ID: <OF3000DEC0.18CA388B-ONC1257847.00586D51-C1257847.005A0CE6@swissre.com>

Hi all,

did anyone else have the problem of request that are resend by Internet 
Explorer 6?

For both, GET and POST, request I always receive a second GET request by 
the IE6. I assume that this has anything to do with the request header 
that IE somehow do not understand.

thanks,
Alex





This e-mail, including attachments, is intended for the person(s) or company named and may contain confidential and/or legally privileged information. Unauthorized disclosure, copying or use of this information may be unlawful and is prohibited. If you are not the intended recipient, please delete this message and notify the sender.
All incoming and outgoing e-mail messages are stored in the Swiss Re Electronic Message Repository. If you do not wish the retention of potentially private e-mails by Swiss Re, we strongly advise you not to use the Swiss Re e-mail account for any private, non-business related communications.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-csrfguard/attachments/20110302/767015a4/attachment.html 

From AvnerCo at fundtech.co.il  Thu Mar  3 16:01:27 2011
From: AvnerCo at fundtech.co.il (Avner Cohen)
Date: Thu, 3 Mar 2011 23:01:27 +0200
Subject: [Owasp-csrfguard] CSRFGuard and Spring MVC
Message-ID: <94A96E51ABBF2F47B4F11D83F2714AC6F68956@mail01.fundtech.isr>

Greetings,

 

I'm trying to implement CSRFGuard in an existing application, based (to
some degree) on Spring MVC.

 

Despite seeing the INPUT value being past to the application (HTTP Proxy
is used to check that), I am still getting the "error:required token is
missing from the request" error.

 

Some analysis on this is suggesting that this is happening when redirect
is used in the Spring MVC code
(http://static.springsource.org/spring/docs/2.0.x/reference/mvc.html#mvc
-redirecting-redirect-prefix)

 

This is rather unfortunate and I'd appreciate input in this regards.

 

 

Thanks, 

--Avner

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-csrfguard/attachments/20110303/2dd5a6d0/attachment.html 

From paras.yadav at ymail.com  Sat Mar  5 05:39:24 2011
From: paras.yadav at ymail.com (Paras Yadav)
Date: Sat, 5 Mar 2011 16:09:24 +0530 (IST)
Subject: [Owasp-csrfguard] unable to deploy CSRFGAURD
Message-ID: <959340.17463.qm@web94604.mail.in2.yahoo.com>

hi
I tried deploying Csrfgaurd on Apache Tomcat 6.But it is giving following 
error.can anyone explain me this...

type Exception report
message 
description The server encountered an internal error () that prevented it from 
fulfilling this request.
exception 
java.lang.NullPointerException 
	org.owasp.csrfguard.CsrfGuardFilter.doFilter(CsrfGuardFilter.java:53) 

note The full stack trace of the root cause is available in the Apache 
Tomcat/6.0.32 logs.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-csrfguard/attachments/20110305/e885b2ba/attachment.html 

From eric.sheridan at owasp.org  Mon Mar  7 17:18:12 2011
From: eric.sheridan at owasp.org (eric sheridan)
Date: Mon, 7 Mar 2011 17:18:12 -0500
Subject: [Owasp-csrfguard] CSRFGuard and Spring MVC
In-Reply-To: <94A96E51ABBF2F47B4F11D83F2714AC6F68956@mail01.fundtech.isr>
References: <AcvZ5j3GEVwZLCYvQmazfZ1/FTs2QA==>
	<94A96E51ABBF2F47B4F11D83F2714AC6F68956@mail01.fundtech.isr>
Message-ID: <AANLkTind8EpX9weUHwwFBQtQntGYyEWS=-3_peZXyz83@mail.gmail.com>

Avner,

>From your note below, it sounds like you're running into the following
- please confirm: You're returning a "redirect:" prefix in your
controller forcing Spring to send the user to a different url. This
destination url requires the csrf token yet the token is not included
in the redirect and thus the "required token is missing from the
request". Correct?

I don't think I have a good solution/work-around with what is present
in the current code base. I suspect someone using
response.sendRedirect("mypage.html") would have the same exact
problem. What I could do is implement a check in CsrfGuard to see if
your application is redirecting the user to another page. If the url
is to be protected by csrfguard, it will automatically include the
token for you. All the user would have to do is set some property (ex:
"org.owasp.csrfguard.Redirect") to true. What do you think about that
fix? Think that would address your problem(s)?

-Eric

On Thu, Mar 3, 2011 at 4:01 PM, Avner Cohen <AvnerCo at fundtech.co.il> wrote:
> Greetings,
>
>
>
> I?m trying to implement CSRFGuard in an existing application, based (to some
> degree) on Spring MVC.
>
>
>
> Despite seeing the INPUT value being past to the application (HTTP Proxy is
> used to check that), I am still getting the ?error:required token is missing
> from the request? error.
>
>
>
> Some analysis on this is suggesting that this is happening when redirect is
> used in the Spring MVC code
> (http://static.springsource.org/spring/docs/2.0.x/reference/mvc.html#mvc-redirecting-redirect-prefix)
>
>
>
> This is rather unfortunate and I?d appreciate input in this regards.
>
>
>
>
>
> Thanks,
>
> --Avner
>
>
>
>
>
> _______________________________________________
> Owasp-csrfguard mailing list
> Owasp-csrfguard at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-csrfguard
>
>

From eric.sheridan at owasp.org  Mon Mar  7 17:25:14 2011
From: eric.sheridan at owasp.org (eric sheridan)
Date: Mon, 7 Mar 2011 17:25:14 -0500
Subject: [Owasp-csrfguard] unable to deploy CSRFGAURD
In-Reply-To: <959340.17463.qm@web94604.mail.in2.yahoo.com>
References: <959340.17463.qm@web94604.mail.in2.yahoo.com>
Message-ID: <AANLkTikLgad0vf6se=R+jwOy57hJMMXbuvB9uO7BvJkD@mail.gmail.com>

I got this error a couple times during testing but it had to do with
the fact that I:

a) browsed to the application and started a csrf protected session
b) stopped the server causing tomcat to serialize the session to disk
c) csrfguard was not serialized as it does not implement serializable
d) started the server back up
e) browsed to application with previous session which existed but
csrfguard was not present.

What are your steps to reproduce? Similar to the above? If so, it
might make sense for me to force CSRFGuard to implement Serializable,
which I probably should do anyway. Assuming your steps to reproduce
are similar to mine, open a new browser with a new session - it should
work. All session serialized before the restart will no longer work.

-Eric

On Sat, Mar 5, 2011 at 5:39 AM, Paras Yadav <paras.yadav at ymail.com> wrote:
> hi
> I tried deploying Csrfgaurd on Apache Tomcat 6.But it is giving following
> error.can anyone explain me this...
>
>
> type Exception report
>
> message
>
> description The server encountered an internal error () that prevented it
> from fulfilling this request.
>
> exception
>
> java.lang.NullPointerException
> 	org.owasp.csrfguard.CsrfGuardFilter.doFilter(CsrfGuardFilter.java:53)
>
> note The full stack trace of the root cause is available in the Apache
> Tomcat/6.0.32 logs.
>
>
>
>
>
>
>
>
>
> _______________________________________________
> Owasp-csrfguard mailing list
> Owasp-csrfguard at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-csrfguard
>
>

From AvnerCo at fundtech.co.il  Tue Mar  8 04:00:16 2011
From: AvnerCo at fundtech.co.il (Avner Cohen)
Date: Tue, 8 Mar 2011 11:00:16 +0200
Subject: [Owasp-csrfguard] CSRFGuard and Spring MVC
In-Reply-To: <AANLkTind8EpX9weUHwwFBQtQntGYyEWS=-3_peZXyz83@mail.gmail.com>
References: <AcvZ5j3GEVwZLCYvQmazfZ1/FTs2QA==><94A96E51ABBF2F47B4F11D83F2714AC6F68956@mail01.fundtech.isr>
	<AANLkTind8EpX9weUHwwFBQtQntGYyEWS=-3_peZXyz83@mail.gmail.com>
Message-ID: <94A96E51ABBF2F47B4F11D83F2714AC6F68967@mail01.fundtech.isr>

Hi Eric,

Your description of the issue is correct.

In terms of resolution, after complex review of the CSRF risks, We will
have to take an all new approach for our specific solution.

To your suggested solution, I'm not sure if it will solve the problem
without understanding the details of CSRFGuard implementation,  if you
suggest setting a simple Boolean to support this, I would even suggest
avoiding this, I think that in all redirect cases, you'd want to use
this feature.


One suggestion, to get CSRFGuard on its fit, it might be good for you to
create a complete test case in for example, the PetClinic example of
Spring MVC, this way you'll know for sure if there are any basic
features missing in the implementation.


 

Regards,
       Avner Cohen


-----Original Message-----
From: eric sheridan [mailto:eric.sheridan at owasp.org] 
Sent: Tuesday, March 08, 2011 12:18 AM
To: Avner Cohen
Cc: owasp-csrfguard at lists.owasp.org
Subject: Re: [Owasp-csrfguard] CSRFGuard and Spring MVC

Avner,

>From your note below, it sounds like you're running into the following
- please confirm: You're returning a "redirect:" prefix in your
controller forcing Spring to send the user to a different url. This
destination url requires the csrf token yet the token is not included
in the redirect and thus the "required token is missing from the
request". Correct?

I don't think I have a good solution/work-around with what is present
in the current code base. I suspect someone using
response.sendRedirect("mypage.html") would have the same exact
problem. What I could do is implement a check in CsrfGuard to see if
your application is redirecting the user to another page. If the url
is to be protected by csrfguard, it will automatically include the
token for you. All the user would have to do is set some property (ex:
"org.owasp.csrfguard.Redirect") to true. What do you think about that
fix? Think that would address your problem(s)?

-Eric

On Thu, Mar 3, 2011 at 4:01 PM, Avner Cohen <AvnerCo at fundtech.co.il>
wrote:
> Greetings,
>
>
>
> I'm trying to implement CSRFGuard in an existing application, based
(to some
> degree) on Spring MVC.
>
>
>
> Despite seeing the INPUT value being past to the application (HTTP
Proxy is
> used to check that), I am still getting the "error:required token is
missing
> from the request" error.
>
>
>
> Some analysis on this is suggesting that this is happening when
redirect is
> used in the Spring MVC code
>
(http://static.springsource.org/spring/docs/2.0.x/reference/mvc.html#mvc
-redirecting-redirect-prefix)
>
>
>
> This is rather unfortunate and I'd appreciate input in this regards.
>
>
>
>
>
> Thanks,
>
> --Avner
>
>
>
>
>
> _______________________________________________
> Owasp-csrfguard mailing list
> Owasp-csrfguard at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-csrfguard
>
>

From eric.sheridan at owasp.org  Thu Mar 24 14:13:54 2011
From: eric.sheridan at owasp.org (Eric Sheridan)
Date: Thu, 24 Mar 2011 14:13:54 -0400
Subject: [Owasp-csrfguard] Problems Injecting into Attributes Before
	Submission
Message-ID: <4D8B89E2.7050306@owasp.org>

List,

I ran into a some fairly significant problems with the JavaScript that
updates the DOM with appropriate tokens. When the page finishes loading,
CSRFGuard JavaScript is called via the window.onload event. However,
before that event is called, the browser will issue requests for URL
based resources in tags that require no user interaction (ex: img,
iframe, etc.). For example, assume you have the following HTML:

<iframe src="/Owasp.CsrfGuard.Test/HelloServlet"></iframe>
<script src="/Owasp.CsrfGuard.Test/JavaScriptServlet"></script>

The browser will always issue a request for HelloServlet before
triggering the window.onload event handler. As a result, the browser
will send a request for the protected resource and CSRFGuard will detect
it as an attack. So my question is - do you guys know of any event
handlers that will be triggered BEFORE requests for such resources (ex:
images, iframes, etc.) are actually sent? Any alternative strategies?

Another problem happens when updating some of these tags, and this
problem varies across browsers. Internet explorer, for example, will
send TWO requests for EVERY src/href attributed tag that is dynamically
updated using "element.setAttribute". So when I inject the token
name/value pair in an iframe, image, etc. by using the "setAttribute"
method, Internet Explorer will issue a request for resource AGAIN but
now with the token. Talk about band width overload!! Any thoughts on how
to update HTML elements without triggering another submission?

One strategy that may help in both cases is try to define a list of HTML
elements that require 'user interaction' and only inject into them (ex:
links, forms, others?). All others, by default, are not injected with
JavaScript. If those tags send a request to a CSRF protected resource,
they will be caught (i.e. deny by default). If you have a legitimate
need for an auto-submitting tag (ex: iframe) that sends a request to a
protected resource, then you must inject the token using the tag
library. I'm not happy with that approach. Thoughts?

-Eric

From jim.manico at owasp.org  Thu Mar 24 14:44:58 2011
From: jim.manico at owasp.org (Jim Manico)
Date: Thu, 24 Mar 2011 11:44:58 -0700
Subject: [Owasp-csrfguard] Problems Injecting into Attributes Before
	Submission
In-Reply-To: <4D8B89E2.7050306@owasp.org>
References: <4D8B89E2.7050306@owasp.org>
Message-ID: <4D8B912A.2030704@owasp.org>

Eric,

Check out how August Detlefsen fixed the clickjacking Standford defense.
I think you need a similar technique to fix this.

- Jim

https://www.codemagi.com/blog/post/194


> List,
> 
> I ran into a some fairly significant problems with the JavaScript that
> updates the DOM with appropriate tokens. When the page finishes loading,
> CSRFGuard JavaScript is called via the window.onload event. However,
> before that event is called, the browser will issue requests for URL
> based resources in tags that require no user interaction (ex: img,
> iframe, etc.). For example, assume you have the following HTML:
> 
> <iframe src="/Owasp.CsrfGuard.Test/HelloServlet"></iframe>
> <script src="/Owasp.CsrfGuard.Test/JavaScriptServlet"></script>
> 
> The browser will always issue a request for HelloServlet before
> triggering the window.onload event handler. As a result, the browser
> will send a request for the protected resource and CSRFGuard will detect
> it as an attack. So my question is - do you guys know of any event
> handlers that will be triggered BEFORE requests for such resources (ex:
> images, iframes, etc.) are actually sent? Any alternative strategies?
> 
> Another problem happens when updating some of these tags, and this
> problem varies across browsers. Internet explorer, for example, will
> send TWO requests for EVERY src/href attributed tag that is dynamically
> updated using "element.setAttribute". So when I inject the token
> name/value pair in an iframe, image, etc. by using the "setAttribute"
> method, Internet Explorer will issue a request for resource AGAIN but
> now with the token. Talk about band width overload!! Any thoughts on how
> to update HTML elements without triggering another submission?
> 
> One strategy that may help in both cases is try to define a list of HTML
> elements that require 'user interaction' and only inject into them (ex:
> links, forms, others?). All others, by default, are not injected with
> JavaScript. If those tags send a request to a CSRF protected resource,
> they will be caught (i.e. deny by default). If you have a legitimate
> need for an auto-submitting tag (ex: iframe) that sends a request to a
> protected resource, then you must inject the token using the tag
> library. I'm not happy with that approach. Thoughts?
> 
> -Eric
> _______________________________________________
> Owasp-csrfguard mailing list
> Owasp-csrfguard at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-csrfguard


From eric.sheridan at owasp.org  Fri Mar 25 11:50:27 2011
From: eric.sheridan at owasp.org (Eric Sheridan)
Date: Fri, 25 Mar 2011 11:50:27 -0400
Subject: [Owasp-csrfguard] GitHub Source Update
Message-ID: <4D8CB9C3.80802@owasp.org>

List,

I've made several updates to CSRFGuard at GitHub. All of the code that
was missing from the previous update (ex: the context listener) should
be properly included with this release. A couple of points about the
code update:

- support for multipart requests using apache commons file upload
- csrfguard object is marked serializable fixing null pointer exceptions
- tokens injected into redirects generated by the application
	-> only if redirect location is 'protected resource'
	-> currently places the token in the url

I am considering overriding the application redirect with an
auto-posting form to prevent disclosure of the token. This would
probably break most applications though. Thoughts?

I am still investigating the best way to deal with the aforementioned
'browser sends request before token is injected into element' problem.
Until we have a good solution for that issue, I'm going to hold off on
updating the alpha release.

-Eric

From hirsch at gorilla-concept.de  Tue Mar 29 03:09:08 2011
From: hirsch at gorilla-concept.de (Eike Hirsch)
Date: Tue, 29 Mar 2011 09:09:08 +0200
Subject: [Owasp-csrfguard] uploading files
Message-ID: <C411C2EF-AAE5-4285-AE16-7A043DA154BB@gorilla-concept.de>

Hi Eric, hi list,

this is my first post - thanks for this project!

For the background:  I am trying to integrate the csrf-gurad in a yui3 - spring mvc application.

With the multipart stuff in place I had a hard time fixing my upload-forms. I was able to secure the upload now but it seemed that the csrf-filter always removed the uploaded files out of the request. 
So dove a little bit into the sources. I think there might be a problem in org.owasp.csrfguard.http.MultipartHttpServletRequest:

--- 
public MultipartHttpServletRequest(HttpServletRequest request) throws IOException {
...
	if(fileItem.isFormField()) {
		List<String> values = parameters.get(fileItem.getFieldName());
					
		if(values == null) {
			values = new ArrayList<String>();
			parameters.put(fileItem.getFieldName(), values);
		}
					
		values.add(fileItem.getString());
	} else {
		/** skip files **/                                                      <----------------------------- ???
	}
?
}
---
skip files???? 

I don't know if this is really a problem but after wrapping the request in this wrapper - spring was not able to extract any files out of the request anymore. For a quick fix I changed the csrf-filter in line 60. 

old:
	httpRequest = new MultipartHttpServletRequest(httpRequest);
new:
	httpRequest = new CommonsMultipartResolver().resolveMultipart(httpRequest);


The CommonsMultipartResolver is a spring class, so I guess this will not fix the general problem. But if there was a way to plugin a MultipartResolver as needed. This problem could get fixed - I guess.
The filter could get a setter for its resolver, which in turn would need to implement a new csrf-guard interface (something like springs org.springframework.web.multipart.MultipartResolver).
With such a resolver in place the filter would be able to cleanup any temporary files created during "resolveMultipart" once the filter chain finishes. 

Any thoughts?

Eike  




-------------- next part --------------
An HTML attachment was scrubbed...
URL: https://lists.owasp.org/pipermail/owasp-csrfguard/attachments/20110329/e545386e/attachment.html 

