From dbyron at gmail.com  Thu May 11 12:05:44 2017
From: dbyron at gmail.com (Byron)
Date: Thu, 11 May 2017 14:05:44 +0200
Subject: [Owasp-csrfguard] Issue : "error:request token does not match page
	token"
Message-ID: <CA+o4hff5R5dW=xEZhKfMkTzrMgSPOwnf2999iupdamoZe-SvCQ@mail.gmail.com>

Hi,

We implemented the OWASP CSRFGuard 3.1.0 solution in a webapplication
running in a Eclipse IDE with liberty profile  and we are having a false
positive CSRF Attack detected when clicking on a "back" button, this button
calls a javascript function that sets the form.action value and executes
the form.submit();

This is the javascript function:
----------------------------------------------------------------------------------------------------------------------
function goToSearch(action) {
var form = document.forms[0];
form.Method.value = 'goToSearch';
form.actionNavigate.value = 'goToSearch';
form.action = action
form.submit();
}
----------------------------------------------------------------------------------------------------------------------


The form.action value when submiting is :
----------------------------------------------------------------------------------------------------------------------
http_//
10.40.206.78:9086/WEBPROYECT/OperationLogAction.do?OWASP_CSRFTOKEN=ZGY3-ETDN-OPT6-PNPX-WWA4-S6P8-TNC6-ZTDP
"
----------------------------------------------------------------------------------------------------------------------


The application works with no CSRF errors in other use cases through
several pages, most of all are querying actions and displaying a table with
records.

There is another "back" button in the last page of the application and
clicking this button there is no CSRF error. This button submits the same
form in the application.

Javascript function:
----------------------------------------------------------------------------------------------------------------------
function goBack() {
var form = document.forms[0];
form.Method.value = 'goBack';
form.actionNavigate.value = 'goBack';
form.submit();
}
----------------------------------------------------------------------------------------------------------------------


This back button is inside this <h:form>:
----------------------------------------------------------------------------------------------------------------------

<html:form action="DetailLogAction" method="post">
                  <input type="hidden" name="<csrf:tokenname/>"
 value="<csrf:tokenvalue uri="DetailLogAction"/>" />
----------------------------------------------------------------------------------------------------------------------


And the back button calls the <h:form> in the previous page that has the
following code:
----------------------------------------------------------------------------------------------------------------------
<html:form action="OperationLogAction" method="post">
                  <input type="hidden" name="<csrf:tokenname/>"
 value="<csrf:tokenvalue uri="OperationLogAction"/>" />

----------------------------------------------------------------------------------------------------------------------



The next block is the BurpSuite Intercepted POST that is captured:
----------------------------------------------------------------------------------------------------------------------
POST
/WEBPROYECT/OperationLogAction.do?OWASP_CSRFTOKEN=ZGY3-ETDN-OPT6-PNPX-WWA4-S6P8-TNC6-ZTDP
HTTP/1.1
Accept: text/html, application/xhtml+xml, */*
Referer: http://10.40.206.78:9086/WEBPROYECT/DetailLogAction.do
Accept-Language: es-ES
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like
Gecko
Content-Type: application/x-www-form-urlencoded
Host: 10.40.206.78:9086
Content-Length: 260
Pragma: no-cache
Cookie:
JSESSIONID=0000cy9DmOFLqoZQAgsj-9fcAzl:0d1334c5-0c6e-44da-b0c8-369cc6057789
Connection: close

OWASP_CSRFTOKEN=OXG1-DOUN-ZT79-BT9E-TOTJ-CEWV-RV4H-7S0P&stAccion=&stSeleccion=&Method=goToSearch&selectedKey=2017-05-11-02.15.53.345444&cambioSeleccion=false&actionNavigate=goToSearch&goBack=&OWASP_CSRFTOKEN=ZGY3-ETDN-OPT6-PNPX-WWA4-S6P8-TNC6-ZTDP
----------------------------------------------------------------------------------------------------------------------


And this is the error show in the console after the intercept action is
released , showing the false positive:
----------------------------------------------------------------------------------------------------------------------
ADVERTENCIA] isValidRequest 3 -
tokenFromSession:OXG1-DOUN-ZT79-BT9E-TOTJ-CEWV-RV4H-7S0P
[ADVERTENCIA] tokenFromSession:OXG1-DOUN-ZT79-BT9E-TOTJ-CEWV-RV4H-7S0P ,
tokenFromRequest: ZGY3-ETDN-OPT6-PNPX-WWA4-S6P8-TNC6-ZTDP, tokenFromPages
0R3Q-9T8B-63NJ-5F63-V3T4-CXR7-NQKM-L74F , pageTokens:
 {/WEBPROYECT/DetailLogAction.do=ZGY3-ETDN-OPT6-PNPX-WWA4-S6P8-TNC6-ZTDP,
/WEBPROYECT/OperationLogAction.do=0R3Q-9T8B-63NJ-5F63-V3T4-CXR7-NQKM-L74F}
[ADVERTENCIA] potential cross-site request forgery (CSRF) attack thwarted
(user:<anonymous>, ip:10.40.206.78, method:POST,
uri:/WEBPROYECT/OperationLogAction.do, error:request token does not match
page token)
----------------------------------------------------------------------------------------------------------------------


I think that the problem might be going back from one form to a different
one, each form has a different "tokenperpage" asigned.

?Any ideas why the CSRFGuard is giving this false positive.?

Thank you.

Best regards.

----------------------------------------------------------------------------------------------------------------------
More information :

The following are the "csrfguard.properties" and the "web.xml" files:

"csrfguard.properties" configuration:
----------------------------------------------------------------------------------------------------------------------
org.owasp.csrfguard.Enabled = true
org.owasp.csrfguard.ValidateWhenNoSessionExists = true
org.owasp.csrfguard.ProtectedMethods=POST,PUT,DELETE
org.owasp.csrfguard.TokenPerPage=true
org.owasp.csrfguard.TokenPerPagePrecreate=false
org.owasp.csrfguard.Ajax=true
org.owasp.csrfguard.unprotected.Error=../html/CSRF_error.html
org.owasp.csrfguard.action.Log=org.owasp.csrfguard.action.Log
org.owasp.csrfguard.action.Log.Message=potential cross-site request forgery
(CSRF) attack thwarted (user:%user%, ip:%remote_ip%,
method:%request_method%, uri:%request_uri%, error:%exception_message%)
org.owasp.csrfguard.action.Invalidate=org.owasp.csrfguard.action.Invalidate
org.owasp.csrfguard.action.Redirect=org.owasp.csrfguard.action.Redirect
org.owasp.csrfguard.action.Redirect.Page=../html/CSRF_error.html
org.owasp.csrfguard.SessionKey=OWASP_CSRFTOKEN
org.owasp.csrfguard.TokenLength=32
org.owasp.csrfguard.PRNG=SHA1PRNG
org.owasp.csrfguard.PRNG.Provider=SUN
org.owasp.csrfguard.Config.Print = true
org.owasp.csrfguard.JavascriptServlet.sourceFile =
org.owasp.csrfguard.JavascriptServlet.domainStrict = true
org.owasp.csrfguard.JavascriptServlet.cacheControl = private, maxage=28800
org.owasp.csrfguard.JavascriptServlet.refererPattern = .*
org.owasp.csrfguard.JavascriptServlet.refererMatchDomain = true
org.owasp.csrfguard.JavascriptServlet.injectIntoForms = true
org.owasp.csrfguard.JavascriptServlet.injectGetForms = false
org.owasp.csrfguard.JavascriptServlet.injectIntoAttributes = false
org.owasp.csrfguard.JavascriptServlet.xRequestedWith = OWASP CSRFGuard
Project
org.owasp.csrfguard.configOverlay.hierarchy =
classpath:csrfguard.properties, classpath:Owasp.CsrfGuard.overlay.properties
----------------------------------------------------------------------------------------------------------------------

And the web.xml csrf added features:
----------------------------------------------------------------------------------------------------------------------

<!-- CSRF Filter -->
<filter>
 <filter-name>CSRFGuardFilter</filter-name>
 <filter-class>org.owasp.csrfguard.CsrfGuardFilter</filter-class>
</filter>
<filter-mapping>
 <filter-name>CSRFGuardFilter</filter-name>
 <url-pattern>/*</url-pattern>
</filter-mapping>
<!-- CSRF Filter mapping -->
<!-- CSRF Listener-->
<listener>
 <listener-class>
   org.owasp.csrfguard.CsrfGuardServletContextListener
 </listener-class>
</listener>
<listener>
 <listener-class>
   org.owasp.csrfguard.CsrfGuardHttpSessionListener
 </listener-class>
</listener>
<context-param>
 <param-name>Owasp.CsrfGuard.Config</param-name>
 <param-value>WEB-INF/csrfguard.properties</param-value>
</context-param>
<context-param>
 <param-name>Owasp.CsrfGuard.Config.Print</param-name>
 <param-value>false</param-value>
</context-param>

<!-- CSRF JavaScript Servlet / CSRF Ajax support -->
<servlet>
    <servlet-name>JavaScriptServlet</servlet-name>
    <servlet-class>
        org.owasp.csrfguard.servlet.JavaScriptServlet
    </servlet-class>
    <init-param>
        <param-name>source-file</param-name>
     <param-value></param-value>
    </init-param>
    <init-param>
        <param-name>inject-into-forms</param-name>
        <param-value>true</param-value>
    </init-param>
    <init-param>
        <param-name>inject-into-attributes</param-name>
        <param-value>false</param-value>
    </init-param>
    <init-param>
        <param-name>domain-strict</param-name>
        <param-value>false</param-value>
    </init-param>
    <init-param>
<param-name>x-requested-with</param-name>
 <param-value>OWASP CSRFGuard Project</param-value>
</init-param>
</servlet>
<!-- CSRF JavaScript Servlet -->
<servlet-mapping>
    <servlet-name>JavaScriptServlet</servlet-name>
    <url-pattern>/JavaScriptServlet</url-pattern>
</servlet-mapping>
----------------------------------------------------------------------------------------------------------------------
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-csrfguard/attachments/20170511/f5c35d9a/attachment-0001.html>

From dbyron at gmail.com  Mon May 22 10:05:55 2017
From: dbyron at gmail.com (Byron)
Date: Mon, 22 May 2017 12:05:55 +0200
Subject: [Owasp-csrfguard] Issue : "error:request token does not match
	page token"
In-Reply-To: <CA+o4hff5R5dW=xEZhKfMkTzrMgSPOwnf2999iupdamoZe-SvCQ@mail.gmail.com>
References: <CA+o4hff5R5dW=xEZhKfMkTzrMgSPOwnf2999iupdamoZe-SvCQ@mail.gmail.com>
Message-ID: <CA+o4hfeFQK7XGw2V1zQPkXO5PNRZf3RnVh8vV-X1w9pc7MLJpA@mail.gmail.com>

Hi ,

I could finally make the owasp csrfguard library work changing the strategy
configuration.

Basically is to use "tokenperpage = false" , so the tokens are all
per-sesion and the "org.owasp.csrfguard.Rotate" = "true", so in all the
posted messages the library evaluates the session token and if it is a
valid token it will be refreshed.

So making a summary,  the main configuration is the following:

--------------------------------------------------------------------------------------------

org.owasp.csrfguard.ProtectedMethods=POST,PUT,DELETE

org.owasp.csrfguard.TokenPerPage=false

org.owasp.csrfguard.TokenPerPagePrecreate=false

org.owasp.csrfguard.Rotate=true

org.owasp.csrfguard.action.Invalidate=org.owasp.csrfguard.action.Invalidate

org.owasp.csrfguard.action.Rotate=org.owasp.csrfguard.action.Rotate

org.owasp.csrfguard.JavascriptServlet.injectGetForms = false

org.owasp.csrfguard.JavascriptServlet.injectFormAttributes = false

org.owasp.csrfguard.JavascriptServlet.injectIntoAttributes = false

---------------------------------------------------------------------------------------------

Hope this helps to anyone that reads this thread.

Best regards!.






On Thu, May 11, 2017 at 2:05 PM, Byron <dbyron at gmail.com> wrote:

> Hi,
>
> We implemented the OWASP CSRFGuard 3.1.0 solution in a webapplication
> running in a Eclipse IDE with liberty profile  and we are having a false
> positive CSRF Attack detected when clicking on a "back" button, this button
> calls a javascript function that sets the form.action value and executes
> the form.submit();
>
> This is the javascript function:
> ------------------------------------------------------------
> ----------------------------------------------------------
> function goToSearch(action) {
> var form = document.forms[0];
> form.Method.value = 'goToSearch';
> form.actionNavigate.value = 'goToSearch';
> form.action = action
> form.submit();
> }
> ------------------------------------------------------------
> ----------------------------------------------------------
>
>
> The form.action value when submiting is :
> ------------------------------------------------------------
> ----------------------------------------------------------
> http_//10.40.206.78:9086/WEBPROYECT/OperationLogAction.
> do?OWASP_CSRFTOKEN=ZGY3-ETDN-OPT6-PNPX-WWA4-S6P8-TNC6-ZTDP"
> ------------------------------------------------------------
> ----------------------------------------------------------
>
>
> The application works with no CSRF errors in other use cases through
> several pages, most of all are querying actions and displaying a table with
> records.
>
> There is another "back" button in the last page of the application and
> clicking this button there is no CSRF error. This button submits the same
> form in the application.
>
> Javascript function:
> ------------------------------------------------------------
> ----------------------------------------------------------
> function goBack() {
> var form = document.forms[0];
> form.Method.value = 'goBack';
> form.actionNavigate.value = 'goBack';
> form.submit();
> }
> ------------------------------------------------------------
> ----------------------------------------------------------
>
>
> This back button is inside this <h:form>:
> ------------------------------------------------------------
> ----------------------------------------------------------
>
> <html:form action="DetailLogAction" method="post">
>                   <input type="hidden" name="<csrf:tokenname/>"
>  value="<csrf:tokenvalue uri="DetailLogAction"/>" />
> ------------------------------------------------------------
> ----------------------------------------------------------
>
>
> And the back button calls the <h:form> in the previous page that has the
> following code:
> ------------------------------------------------------------
> ----------------------------------------------------------
> <html:form action="OperationLogAction" method="post">
>                   <input type="hidden" name="<csrf:tokenname/>"
>  value="<csrf:tokenvalue uri="OperationLogAction"/>" />
>
> ------------------------------------------------------------
> ----------------------------------------------------------
>
>
>
> The next block is the BurpSuite Intercepted POST that is captured:
> ------------------------------------------------------------
> ----------------------------------------------------------
> POST /WEBPROYECT/OperationLogAction.do?OWASP_
> CSRFTOKEN=ZGY3-ETDN-OPT6-PNPX-WWA4-S6P8-TNC6-ZTDP HTTP/1.1
> Accept: text/html, application/xhtml+xml, */*
> Referer: http://10.40.206.78:9086/WEBPROYECT/DetailLogAction.do
> Accept-Language: es-ES
> User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like
> Gecko
> Content-Type: application/x-www-form-urlencoded
> Host: 10.40.206.78:9086
> Content-Length: 260
> Pragma: no-cache
> Cookie: JSESSIONID=0000cy9DmOFLqoZQAgsj-9fcAzl:0d1334c5-0c6e-44da-b0c8-
> 369cc6057789
> Connection: close
>
> OWASP_CSRFTOKEN=OXG1-DOUN-ZT79-BT9E-TOTJ-CEWV-RV4H-7S0P&
> stAccion=&stSeleccion=&Method=goToSearch&selectedKey=2017-
> 05-11-02.15.53.345444&cambioSeleccion=false&actionNavigate=goToSearch&
> goBack=&OWASP_CSRFTOKEN=ZGY3-ETDN-OPT6-PNPX-WWA4-S6P8-TNC6-ZTDP
> ------------------------------------------------------------
> ----------------------------------------------------------
>
>
> And this is the error show in the console after the intercept action is
> released , showing the false positive:
> ------------------------------------------------------------
> ----------------------------------------------------------
> ADVERTENCIA] isValidRequest 3 - tokenFromSession:OXG1-DOUN-
> ZT79-BT9E-TOTJ-CEWV-RV4H-7S0P
> [ADVERTENCIA] tokenFromSession:OXG1-DOUN-ZT79-BT9E-TOTJ-CEWV-RV4H-7S0P ,
> tokenFromRequest: ZGY3-ETDN-OPT6-PNPX-WWA4-S6P8-TNC6-ZTDP, tokenFromPages
> 0R3Q-9T8B-63NJ-5F63-V3T4-CXR7-NQKM-L74F , pageTokens:
>  {/WEBPROYECT/DetailLogAction.do=ZGY3-ETDN-OPT6-PNPX-WWA4-S6P8-TNC6-ZTDP,
> /WEBPROYECT/OperationLogAction.do=0R3Q-9T8B-63NJ-5F63-V3T4-CXR7-NQKM-L74F}
> [ADVERTENCIA] potential cross-site request forgery (CSRF) attack thwarted
> (user:<anonymous>, ip:10.40.206.78, method:POST, uri:/WEBPROYECT/OperationLogAction.do,
> error:request token does not match page token)
> ------------------------------------------------------------
> ----------------------------------------------------------
>
>
> I think that the problem might be going back from one form to a different
> one, each form has a different "tokenperpage" asigned.
>
> ?Any ideas why the CSRFGuard is giving this false positive.?
>
> Thank you.
>
> Best regards.
>
> ------------------------------------------------------------
> ----------------------------------------------------------
> More information :
>
> The following are the "csrfguard.properties" and the "web.xml" files:
>
> "csrfguard.properties" configuration:
> ------------------------------------------------------------
> ----------------------------------------------------------
> org.owasp.csrfguard.Enabled = true
> org.owasp.csrfguard.ValidateWhenNoSessionExists = true
> org.owasp.csrfguard.ProtectedMethods=POST,PUT,DELETE
> org.owasp.csrfguard.TokenPerPage=true
> org.owasp.csrfguard.TokenPerPagePrecreate=false
> org.owasp.csrfguard.Ajax=true
> org.owasp.csrfguard.unprotected.Error=../html/CSRF_error.html
> org.owasp.csrfguard.action.Log=org.owasp.csrfguard.action.Log
> org.owasp.csrfguard.action.Log.Message=potential cross-site request
> forgery (CSRF) attack thwarted (user:%user%, ip:%remote_ip%,
> method:%request_method%, uri:%request_uri%, error:%exception_message%)
> org.owasp.csrfguard.action.Invalidate=org.owasp.
> csrfguard.action.Invalidate
> org.owasp.csrfguard.action.Redirect=org.owasp.csrfguard.action.Redirect
> org.owasp.csrfguard.action.Redirect.Page=../html/CSRF_error.html
> org.owasp.csrfguard.SessionKey=OWASP_CSRFTOKEN
> org.owasp.csrfguard.TokenLength=32
> org.owasp.csrfguard.PRNG=SHA1PRNG
> org.owasp.csrfguard.PRNG.Provider=SUN
> org.owasp.csrfguard.Config.Print = true
> org.owasp.csrfguard.JavascriptServlet.sourceFile =
> org.owasp.csrfguard.JavascriptServlet.domainStrict = true
> org.owasp.csrfguard.JavascriptServlet.cacheControl = private, maxage=28800
> org.owasp.csrfguard.JavascriptServlet.refererPattern = .*
> org.owasp.csrfguard.JavascriptServlet.refererMatchDomain = true
> org.owasp.csrfguard.JavascriptServlet.injectIntoForms = true
> org.owasp.csrfguard.JavascriptServlet.injectGetForms = false
> org.owasp.csrfguard.JavascriptServlet.injectIntoAttributes = false
> org.owasp.csrfguard.JavascriptServlet.xRequestedWith = OWASP CSRFGuard
> Project
> org.owasp.csrfguard.configOverlay.hierarchy = classpath:csrfguard.properties,
> classpath:Owasp.CsrfGuard.overlay.properties
> ------------------------------------------------------------
> ----------------------------------------------------------
>
> And the web.xml csrf added features:
> ------------------------------------------------------------
> ----------------------------------------------------------
>
> <!-- CSRF Filter -->
> <filter>
>  <filter-name>CSRFGuardFilter</filter-name>
>  <filter-class>org.owasp.csrfguard.CsrfGuardFilter</filter-class>
> </filter>
> <filter-mapping>
>  <filter-name>CSRFGuardFilter</filter-name>
>  <url-pattern>/*</url-pattern>
> </filter-mapping>
> <!-- CSRF Filter mapping -->
> <!-- CSRF Listener-->
> <listener>
>  <listener-class>
>    org.owasp.csrfguard.CsrfGuardServletContextListener
>  </listener-class>
> </listener>
> <listener>
>  <listener-class>
>    org.owasp.csrfguard.CsrfGuardHttpSessionListener
>  </listener-class>
> </listener>
> <context-param>
>  <param-name>Owasp.CsrfGuard.Config</param-name>
>  <param-value>WEB-INF/csrfguard.properties</param-value>
> </context-param>
> <context-param>
>  <param-name>Owasp.CsrfGuard.Config.Print</param-name>
>  <param-value>false</param-value>
> </context-param>
>
> <!-- CSRF JavaScript Servlet / CSRF Ajax support -->
> <servlet>
>     <servlet-name>JavaScriptServlet</servlet-name>
>     <servlet-class>
>         org.owasp.csrfguard.servlet.JavaScriptServlet
>     </servlet-class>
>     <init-param>
>         <param-name>source-file</param-name>
>      <param-value></param-value>
>     </init-param>
>     <init-param>
>         <param-name>inject-into-forms</param-name>
>         <param-value>true</param-value>
>     </init-param>
>     <init-param>
>         <param-name>inject-into-attributes</param-name>
>         <param-value>false</param-value>
>     </init-param>
>     <init-param>
>         <param-name>domain-strict</param-name>
>         <param-value>false</param-value>
>     </init-param>
>     <init-param>
> <param-name>x-requested-with</param-name>
>  <param-value>OWASP CSRFGuard Project</param-value>
> </init-param>
> </servlet>
> <!-- CSRF JavaScript Servlet -->
> <servlet-mapping>
>     <servlet-name>JavaScriptServlet</servlet-name>
>     <url-pattern>/JavaScriptServlet</url-pattern>
> </servlet-mapping>
> ------------------------------------------------------------
> ----------------------------------------------------------
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-csrfguard/attachments/20170522/943c2263/attachment-0001.html>

