From sgattani at gmail.com  Thu Aug  2 00:34:05 2012
From: sgattani at gmail.com (Shantanu Gattani)
Date: Wed, 1 Aug 2012 17:34:05 -0700
Subject: [Owasp-csrfguard] Javascript generated links
Message-ID: <CAP5QvQuDT_tx2AXGe2rsf6m4vRfy8VKqpzqqUoe+WYvVbv15KA@mail.gmail.com>

Hello:

I am working on a rather large scale portal and trying to utilize the JS
Token injection strategy. However, a lot of the links for which the portal
sends GET requests are generated within a javascript itself and my efforts
of injecting a token into them have thus far not succeeded. Could you
provide some guidance regarding this. I cannot blanket unprotect the GET
method as I am not sure if it is truly being utilized as read only (large
legacy code base with home grown toolkit).

Thanks.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-csrfguard/attachments/20120801/bebe1f13/attachment.html>

From smitty_in_vancouver at yahoo.com  Tue Aug  7 13:34:21 2012
From: smitty_in_vancouver at yahoo.com (Smith Family)
Date: Tue, 7 Aug 2012 06:34:21 -0700 (PDT)
Subject: [Owasp-csrfguard] Browser sends request before token injection
In-Reply-To: <1344311331.9736.YahooMailNeo@web110507.mail.gq1.yahoo.com>
References: <1344311331.9736.YahooMailNeo@web110507.mail.gq1.yahoo.com>
Message-ID: <1344346461.47667.YahooMailNeo@web110507.mail.gq1.yahoo.com>

I ran into the issue previously posted about:
'browser sends request before token is injected into element'

And I saw back in March 2011 this was being looked into for a possible solution.

Has there been any progress on this or any solutions anyone has implemented?  Typically the CSRFGuard JS
completes before the user clicks anything, but it's not too hard to beat it when the network is laggy
or if automated scripting is used like Selenium.

I'm looking into the idea of overriding onclick for the page and caching the event until after the
DOM has been processed and then firing it.  Though I have a feeling this could introduce other issues.

Thanks,
Smitty
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-csrfguard/attachments/20120807/ffabd9bc/attachment.html>

From smitty_in_vancouver at yahoo.com  Thu Aug  9 05:20:16 2012
From: smitty_in_vancouver at yahoo.com (Smitty)
Date: Wed, 8 Aug 2012 22:20:16 -0700 (PDT)
Subject: [Owasp-csrfguard] Javascript generated links
Message-ID: <1344489616.63947.YahooMailNeo@web110509.mail.gq1.yahoo.com>

I had to create a global variable with the token so I could include it in my custom JS code that opened new browser windows.?? I didn't like the idea of this at first, but based on my research I couldn't find a reason why this would be any less secure.

var OWASPToken;?? //outside the private function

//inside the csrfguard.js after it checks the isValidDomain

OWASPToken = {"name":"%TOKEN_NAME%", "value":"%TOKEN_VALUE%"};

I tried accessing this global from another JS file in a different domain and it wasn't able to access it, so I believe the browser same origin policy protects this.? So, again I believe this is no less secure.


The other option, but more intrusive to your app maybe would be to use the JavaScriptServlet to return your own JS files and it will replace the %TOKEN_VALUE% values in your own code.

I'm not an authority on this and still figuring out the best way, but these are my two cents.

Thanks,
Smitty
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-csrfguard/attachments/20120808/36de528a/attachment.html>

