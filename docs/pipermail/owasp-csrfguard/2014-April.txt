From sarah.baso at owasp.org  Tue Apr  8 17:23:06 2014
From: sarah.baso at owasp.org (Sarah Baso)
Date: Tue, 8 Apr 2014 10:23:06 -0700
Subject: [Owasp-csrfguard] Community Question regarding OWASP-CSRF
Message-ID: <CAA_HhV+p+=sh44am-afHoVhLhn4GgG6Mu8NZn9us6-DmKpFgbw@mail.gmail.com>

Azzeddine and others -

We received this question through our community "contact us" form - can you
help with responding?  The submitter is cc'ed.




*We have secured our public website using OWASP - CSRF guard and configured
TokenPerPage=true. We use JSF 2.0 (myfaces) for our front-end
development. Every thing works good as expected except when we use JSF
<f:ajax>. When we submit an ajax request from a page, the ajax request is
successful but the subsequent Http Request fails with a message ("potential
cross-site request forgery (CSRF) attack thwarted (user:<anonymous>%,
ip:x.x.x.x, uri:/ppr/secured/xxxx.faces, error:request token does not match
page token)"). *


*Below is our speculation :- In JSF the URL displayed in the browser
address bar is always the previous page's url ( as JSF 'POST' forwards the
request). And ajax request uses the current page's url. May be the ajax
request overrides the token. We are not sure if this could cause any issues
with token tracking - but we just want to hint you our speculation and get
your suggestion/guidance to fix this issue.*


Thanks in advance,
Sarah Baso
-- 
Executive Director
OWASP Foundation

sarah.baso at owasp.org
+1.312.869.2779
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-csrfguard/attachments/20140408/fa3a1b72/attachment.html>

From azzeddine.ramrami at owasp.org  Tue Apr  8 19:14:38 2014
From: azzeddine.ramrami at owasp.org (Azzeddine Ramrami)
Date: Tue, 8 Apr 2014 19:14:38 +0000
Subject: [Owasp-csrfguard] Community Question regarding OWASP-CSRF
In-Reply-To: <CAA_HhV+p+=sh44am-afHoVhLhn4GgG6Mu8NZn9us6-DmKpFgbw@mail.gmail.com>
References: <CAA_HhV+p+=sh44am-afHoVhLhn4GgG6Mu8NZn9us6-DmKpFgbw@mail.gmail.com>
Message-ID: <CAL4seLH+_5XLkVQXGTnij=OFQ6ThYDxDVKM24ku2mX_bpbTGPw@mail.gmail.com>

Thanks Sarah.

I will take this request for further analysis. Help form other leaders or
users of CSRF-Guard is welcome.
Just to be clear I will work on this issue as volunteer, this mean I will
do my best to solve this issue if I can reproduce it.
Some questions:
- Witch version of CSRF-Guard is used.
- Witch Application Server is used.
- Browser name and version.

Regards,
Azzeddine




On Tue, Apr 8, 2014 at 5:23 PM, Sarah Baso <sarah.baso at owasp.org> wrote:

> Azzeddine and others -
>
> We received this question through our community "contact us" form - can
> you help with responding?  The submitter is cc'ed.
>
>
>
>
> *We have secured our public website using OWASP - CSRF guard and
> configured TokenPerPage=true. We use JSF 2.0 (myfaces) for our front-end
> development.  Every thing works good as expected except when we use JSF
> <f:ajax>. When we submit an ajax request from a page, the ajax request is
> successful but the subsequent Http Request fails with a message ("potential
> cross-site request forgery (CSRF) attack thwarted (user:<anonymous>%,
> ip:x.x.x.x, uri:/ppr/secured/xxxx.faces, error:request token does not match
> page token)").  *
>
>
> *Below is our speculation : - In JSF the URL displayed in the browser
> address bar is always the previous page's url ( as JSF 'POST' forwards the
> request). And ajax request uses the current page's url. May be the ajax
> request overrides the token.  We are not sure if this could cause any
> issues with token tracking - but we just want to hint you our speculation
> and get your suggestion/guidance to fix this issue.*
>
>
> Thanks in advance,
> Sarah Baso
> --
> Executive Director
> OWASP Foundation
>
> sarah.baso at owasp.org
> +1.312.869.2779
>
>
>
>
>


-- 
Azzeddine RAMRAMI
+33 6 65 48 90 04.
Enterprise Security Architect
OWASP Leader (Morocco Chapter)
Mozilla Security Projects Mentor
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-csrfguard/attachments/20140408/00629843/attachment.html>

From sarah.baso at owasp.org  Tue Apr  8 19:16:20 2014
From: sarah.baso at owasp.org (Sarah Baso)
Date: Tue, 8 Apr 2014 12:16:20 -0700
Subject: [Owasp-csrfguard] Community Question regarding OWASP-CSRF
In-Reply-To: <CAL4seLH+_5XLkVQXGTnij=OFQ6ThYDxDVKM24ku2mX_bpbTGPw@mail.gmail.com>
References: <CAA_HhV+p+=sh44am-afHoVhLhn4GgG6Mu8NZn9us6-DmKpFgbw@mail.gmail.com>
	<CAL4seLH+_5XLkVQXGTnij=OFQ6ThYDxDVKM24ku2mX_bpbTGPw@mail.gmail.com>
Message-ID: <CAA_HhVLKPHhkw5TcJ663kKC2jS8h4umPRD9qeE3iJ4YjrXhZqA@mail.gmail.com>

Thanks!

Ranjith - can you provide a bit more information as Azzeddine has requested?

Sarah


On Tue, Apr 8, 2014 at 12:14 PM, Azzeddine Ramrami <
azzeddine.ramrami at owasp.org> wrote:

> Thanks Sarah.
>
> I will take this request for further analysis. Help form other leaders or
> users of CSRF-Guard is welcome.
> Just to be clear I will work on this issue as volunteer, this mean I will
> do my best to solve this issue if I can reproduce it.
> Some questions:
> - Witch version of CSRF-Guard is used.
> - Witch Application Server is used.
> - Browser name and version.
>
> Regards,
> Azzeddine
>
>
>
>
> On Tue, Apr 8, 2014 at 5:23 PM, Sarah Baso <sarah.baso at owasp.org> wrote:
>
>> Azzeddine and others -
>>
>> We received this question through our community "contact us" form - can
>> you help with responding?  The submitter is cc'ed.
>>
>>
>>
>>
>> *We have secured our public website using OWASP - CSRF guard and
>> configured TokenPerPage=true. We use JSF 2.0 (myfaces) for our front-end
>> development.  Every thing works good as expected except when we use JSF
>> <f:ajax>. When we submit an ajax request from a page, the ajax request is
>> successful but the subsequent Http Request fails with a message ("potential
>> cross-site request forgery (CSRF) attack thwarted (user:<anonymous>%,
>> ip:x.x.x.x, uri:/ppr/secured/xxxx.faces, error:request token does not match
>> page token)").  *
>>
>>
>> *Below is our speculation : - In JSF the URL displayed in the browser
>> address bar is always the previous page's url ( as JSF 'POST' forwards the
>> request). And ajax request uses the current page's url. May be the ajax
>> request overrides the token.  We are not sure if this could cause any
>> issues with token tracking - but we just want to hint you our speculation
>> and get your suggestion/guidance to fix this issue.*
>>
>>
>> Thanks in advance,
>> Sarah Baso
>> --
>> Executive Director
>> OWASP Foundation
>>
>> sarah.baso at owasp.org
>> +1.312.869.2779
>>
>>
>>
>>
>>
>
>
> --
> Azzeddine RAMRAMI
> +33 6 65 48 90 04.
> Enterprise Security Architect
> OWASP Leader (Morocco Chapter)
> Mozilla Security Projects Mentor
>



-- 
Executive Director
OWASP Foundation

sarah.baso at owasp.org
+1.312.869.2779
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-csrfguard/attachments/20140408/6a847272/attachment.html>

From mchyzer at isc.upenn.edu  Tue Apr  8 19:21:02 2014
From: mchyzer at isc.upenn.edu (Chris Hyzer)
Date: Tue, 8 Apr 2014 19:21:02 +0000
Subject: [Owasp-csrfguard] Community Question regarding OWASP-CSRF
In-Reply-To: <CAA_HhVLKPHhkw5TcJ663kKC2jS8h4umPRD9qeE3iJ4YjrXhZqA@mail.gmail.com>
References: <CAA_HhV+p+=sh44am-afHoVhLhn4GgG6Mu8NZn9us6-DmKpFgbw@mail.gmail.com>
	<CAL4seLH+_5XLkVQXGTnij=OFQ6ThYDxDVKM24ku2mX_bpbTGPw@mail.gmail.com>
	<CAA_HhVLKPHhkw5TcJ663kKC2jS8h4umPRD9qeE3iJ4YjrXhZqA@mail.gmail.com>
Message-ID: <04BE669BEE19E54BBDC2A9A2585BB68885443A50@exch-mbx01.exchange.upenn.edu>

Just curious... CSRF guard will parse a page and add/edit some DOM elements so that the token is passed back and forth.  But after an Ajax request, when new page elements (links, forms) are potentially added, will CSRF guard decorate these so that the token is passed?  Or does a Javascript function need to be called after ajax changed the page so that new elements are decorated?  When you get the error, can you see the network tab in a browser developer tools plugin to see if a token is even being passed at all?  Does it work if you don't have token per page?

Thanks,
Chris

From: owasp-csrfguard-bounces at lists.owasp.org [mailto:owasp-csrfguard-bounces at lists.owasp.org] On Behalf Of Sarah Baso
Sent: Tuesday, April 08, 2014 3:16 PM
To: Azzeddine Ramrami; ranjith.sundarajchandras at its.ny.gov
Cc: owasp-csrfguard at lists.owasp.org
Subject: Re: [Owasp-csrfguard] Community Question regarding OWASP-CSRF

Thanks!

Ranjith - can you provide a bit more information as Azzeddine has requested?

Sarah

On Tue, Apr 8, 2014 at 12:14 PM, Azzeddine Ramrami <azzeddine.ramrami at owasp.org<mailto:azzeddine.ramrami at owasp.org>> wrote:
Thanks Sarah.

I will take this request for further analysis. Help form other leaders or users of CSRF-Guard is welcome.
Just to be clear I will work on this issue as volunteer, this mean I will do my best to solve this issue if I can reproduce it.
Some questions:
- Witch version of CSRF-Guard is used.
- Witch Application Server is used.
- Browser name and version.
Regards,
Azzeddine



On Tue, Apr 8, 2014 at 5:23 PM, Sarah Baso <sarah.baso at owasp.org<mailto:sarah.baso at owasp.org>> wrote:
Azzeddine and others -

We received this question through our community "contact us" form - can you help with responding?  The submitter is cc'ed.

We have secured our public website using OWASP - CSRF guard and configured TokenPerPage=true. We use JSF 2.0 (myfaces) for our front-end development.
Every thing works good as expected except when we use JSF <f:ajax>. When we submit an ajax request from a page, the ajax request is successful but the subsequent Http Request fails with a message ("potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>%, ip:x.x.x.x, uri:/ppr/secured/xxxx.faces, error:request token does not match page token)").
Below is our speculation :
- In JSF the URL displayed in the browser address bar is always the previous page's url ( as JSF 'POST' forwards the request). And ajax request uses the current page's url. May be the ajax request overrides the token.
We are not sure if this could cause any issues with token tracking - but we just want to hint you our speculation and get your suggestion/guidance to fix this issue.


Thanks in advance,
Sarah Baso
--
Executive Director
OWASP Foundation

sarah.baso at owasp.org<mailto:sarah.baso at owasp.org>
+1.312.869.2779<tel:%2B1.312.869.2779>





--
Azzeddine RAMRAMI
+33 6 65 48 90 04<tel:%2B33%206%2065%2048%2090%2004>.
Enterprise Security Architect
OWASP Leader (Morocco Chapter)
Mozilla Security Projects Mentor



--
Executive Director
OWASP Foundation

sarah.baso at owasp.org<mailto:sarah.baso at owasp.org>
+1.312.869.2779



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-csrfguard/attachments/20140408/f3b1de66/attachment-0001.html>

From azzeddine.ramrami at owasp.org  Tue Apr  8 19:46:56 2014
From: azzeddine.ramrami at owasp.org (Azzeddine Ramrami)
Date: Tue, 8 Apr 2014 19:46:56 +0000
Subject: [Owasp-csrfguard] Community Question regarding OWASP-CSRF
In-Reply-To: <6d9c67063659425db050015bea80978f@BL2PR09MB083.namprd09.prod.outlook.com>
References: <CAA_HhV+p+=sh44am-afHoVhLhn4GgG6Mu8NZn9us6-DmKpFgbw@mail.gmail.com>
	<CAL4seLH+_5XLkVQXGTnij=OFQ6ThYDxDVKM24ku2mX_bpbTGPw@mail.gmail.com>
	<6d9c67063659425db050015bea80978f@BL2PR09MB083.namprd09.prod.outlook.com>
Message-ID: <CAL4seLEjFSx7dDdUh3TRmXwFwYP2EsAp091Oa5J28MFPLbH5YA@mail.gmail.com>

Is this possible for you to use the version 3.1 we correct some issues and
bugs.

I assisted some people to setup v3.1 on IBM WAS 7 and they succeed to run
CSRF-Guard?

I will study your request but I cannot give you a closed date because I am
very busy with my actual mission.

Just to be honnest the support is a volonteer support based on my free time.
Thanks.
Azzeddine


On Tue, Apr 8, 2014 at 7:40 PM, SundarajChandras, Ranjith (ITS) <
Ranjith.SundarajChandras at its.ny.gov> wrote:

>  Hi Azzeddine,
>
> Thanks for taking this up !
>
>
>
> Find below my response in blue.
>
> - Which version of CSRF-Guard is used.
>
> Version 3
> - Which Application Server is used.
>
> IBM Websphere Application Server v7
>
> - Browser name and version.
>
> Was able to reproduce in most browsers I use (IE8,9, Chrome , Firefox 28)
>
>
>
> FYR - I raised this question in couple of forums. I have included the http
> request, response flow captured using Fiddler there.
>
>
>
>
> http://stackoverflow.com/questions/22617634/owasp-csrf-token-with-jsf-ajax-request
>
>
> http://myowasp.ning.com/forum/topics/problem-in-using-owasp-csrf-guard-with-jsf-f-ajax-request
>
>
>
> Let me know if you need more details.
>
>
>
> Thanks,
>
> Ranjith
>
>
>
> *From:* Azzeddine Ramrami [mailto:azzeddine.ramrami at owasp.org]
> *Sent:* Tuesday, April 08, 2014 3:15 PM
> *To:* Sarah Baso
> *Cc:* owasp-csrfguard at lists.owasp.org; SundarajChandras, Ranjith (ITS)
> *Subject:* Re: Community Question regarding OWASP-CSRF
>
>
>
> Thanks Sarah.
>
>
> I will take this request for further analysis. Help form other leaders or
> users of CSRF-Guard is welcome.
> Just to be clear I will work on this issue as volunteer, this mean I will
> do my best to solve this issue if I can reproduce it.
> Some questions:
> - Witch version of CSRF-Guard is used.
> - Witch Application Server is used.
> - Browser name and version.
>
> Regards,
> Azzeddine
>
>
>
>
>
>
>
> On Tue, Apr 8, 2014 at 5:23 PM, Sarah Baso <sarah.baso at owasp.org> wrote:
>
> Azzeddine and others -
>
>
>
> We received this question through our community "contact us" form - can
> you help with responding?  The submitter is cc'ed.
>
>
>
>
> *We have secured our public website using OWASP - CSRF guard and
> configured TokenPerPage=true. We use JSF 2.0 (myfaces) for our front-end
> development.  Every thing works good as expected except when we use JSF
> <f:ajax>. When we submit an ajax request from a page, the ajax request is
> successful but the subsequent Http Request fails with a message ("potential
> cross-site request forgery (CSRF) attack thwarted (user:<anonymous>%,
> ip:x.x.x.x, uri:/ppr/secured/xxxx.faces, error:request token does not match
> page token)"). *
>
>
>
> *Below is our speculation : - In JSF the URL displayed in the browser
> address bar is always the previous page's url ( as JSF 'POST' forwards the
> request). And ajax request uses the current page's url. May be the ajax
> request overrides the token.  We are not sure if this could cause any
> issues with token tracking - but we just want to hint you our speculation
> and get your suggestion/guidance to fix this issue.*
>
>
>
>
>
> Thanks in advance,
>
> Sarah Baso
> --
>
> Executive Director
>
> OWASP Foundation
>
>
>
> sarah.baso at owasp.org
> +1.312.869.2779
>
>
>
>
>
>
> --
>
> Azzeddine RAMRAMI
> +33 6 65 48 90 04.
> Enterprise Security Architect
> OWASP Leader (Morocco Chapter)
>
> Mozilla Security Projects Mentor
>



-- 
Azzeddine RAMRAMI
+33 6 65 48 90 04.
Enterprise Security Architect
OWASP Leader (Morocco Chapter)
Mozilla Security Projects Mentor
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-csrfguard/attachments/20140408/9c2b59ba/attachment.html>

From john.m.allen at thomsonreuters.com  Tue Apr  8 19:46:47 2014
From: john.m.allen at thomsonreuters.com (john.m.allen at thomsonreuters.com)
Date: Tue, 8 Apr 2014 19:46:47 +0000
Subject: [Owasp-csrfguard] Community Question regarding OWASP-CSRF
In-Reply-To: <04BE669BEE19E54BBDC2A9A2585BB68885443A50@exch-mbx01.exchange.upenn.edu>
References: <CAA_HhV+p+=sh44am-afHoVhLhn4GgG6Mu8NZn9us6-DmKpFgbw@mail.gmail.com>
	<CAL4seLH+_5XLkVQXGTnij=OFQ6ThYDxDVKM24ku2mX_bpbTGPw@mail.gmail.com>
	<CAA_HhVLKPHhkw5TcJ663kKC2jS8h4umPRD9qeE3iJ4YjrXhZqA@mail.gmail.com>
	<04BE669BEE19E54BBDC2A9A2585BB68885443A50@exch-mbx01.exchange.upenn.edu>
Message-ID: <CF0A1BDF42ABA34BA4E89CDA62F3ED7B028BB60D@C111KXTEMBX51.ERF.thomson.com>

I'm not sure if this answers your question, Chris, but if you've downloaded the source, take a look at
...\csrfguard\src\main\resources\csrfguard.js
about line 392.  That was the only place I found that it fetches and injects the token.

(Caution:  I think the "if(%INJECT_XHR% == true)" closing brace is misplaced, too far down.  It makes it work only if Ajax is enabled.)

John


From: owasp-csrfguard-bounces at lists.owasp.org [mailto:owasp-csrfguard-bounces at lists.owasp.org] On Behalf Of Chris Hyzer
Sent: Tuesday, April 08, 2014 2:21 PM
To: Sarah Baso; Azzeddine Ramrami; ranjith.sundarajchandras at its.ny.gov
Cc: owasp-csrfguard at lists.owasp.org
Subject: Re: [Owasp-csrfguard] Community Question regarding OWASP-CSRF

Just curious... CSRF guard will parse a page and add/edit some DOM elements so that the token is passed back and forth.  But after an Ajax request, when new page elements (links, forms) are potentially added, will CSRF guard decorate these so that the token is passed?  Or does a Javascript function need to be called after ajax changed the page so that new elements are decorated?  When you get the error, can you see the network tab in a browser developer tools plugin to see if a token is even being passed at all?  Does it work if you don't have token per page?

Thanks,
Chris

From: owasp-csrfguard-bounces at lists.owasp.org [mailto:owasp-csrfguard-bounces at lists.owasp.org] On Behalf Of Sarah Baso
Sent: Tuesday, April 08, 2014 3:16 PM
To: Azzeddine Ramrami; ranjith.sundarajchandras at its.ny.gov
Cc: owasp-csrfguard at lists.owasp.org
Subject: Re: [Owasp-csrfguard] Community Question regarding OWASP-CSRF

Thanks!

Ranjith - can you provide a bit more information as Azzeddine has requested?

Sarah

On Tue, Apr 8, 2014 at 12:14 PM, Azzeddine Ramrami <azzeddine.ramrami at owasp.org<mailto:azzeddine.ramrami at owasp.org>> wrote:
Thanks Sarah.

I will take this request for further analysis. Help form other leaders or users of CSRF-Guard is welcome.
Just to be clear I will work on this issue as volunteer, this mean I will do my best to solve this issue if I can reproduce it.
Some questions:
- Witch version of CSRF-Guard is used.
- Witch Application Server is used.
- Browser name and version.
Regards,
Azzeddine



On Tue, Apr 8, 2014 at 5:23 PM, Sarah Baso <sarah.baso at owasp.org<mailto:sarah.baso at owasp.org>> wrote:
Azzeddine and others -

We received this question through our community "contact us" form - can you help with responding?  The submitter is cc'ed.

We have secured our public website using OWASP - CSRF guard and configured TokenPerPage=true. We use JSF 2.0 (myfaces) for our front-end development.
Every thing works good as expected except when we use JSF <f:ajax>. When we submit an ajax request from a page, the ajax request is successful but the subsequent Http Request fails with a message ("potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>%, ip:x.x.x.x, uri:/ppr/secured/xxxx.faces, error:request token does not match page token)").
Below is our speculation :
- In JSF the URL displayed in the browser address bar is always the previous page's url ( as JSF 'POST' forwards the request). And ajax request uses the current page's url. May be the ajax request overrides the token.
We are not sure if this could cause any issues with token tracking - but we just want to hint you our speculation and get your suggestion/guidance to fix this issue.


Thanks in advance,
Sarah Baso
--
Executive Director
OWASP Foundation

sarah.baso at owasp.org<mailto:sarah.baso at owasp.org>
+1.312.869.2779<tel:%2B1.312.869.2779>




--
Azzeddine RAMRAMI
+33 6 65 48 90 04<tel:%2B33%206%2065%2048%2090%2004>.
Enterprise Security Architect
OWASP Leader (Morocco Chapter)
Mozilla Security Projects Mentor



--
Executive Director
OWASP Foundation

sarah.baso at owasp.org<mailto:sarah.baso at owasp.org>
+1.312.869.2779


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-csrfguard/attachments/20140408/2edc4684/attachment-0001.html>

From azzeddine.ramrami at owasp.org  Tue Apr  8 19:57:50 2014
From: azzeddine.ramrami at owasp.org (Azzeddine Ramrami)
Date: Tue, 8 Apr 2014 19:57:50 +0000
Subject: [Owasp-csrfguard] Community Question regarding OWASP-CSRF
In-Reply-To: <CF0A1BDF42ABA34BA4E89CDA62F3ED7B028BB60D@C111KXTEMBX51.ERF.thomson.com>
References: <CAA_HhV+p+=sh44am-afHoVhLhn4GgG6Mu8NZn9us6-DmKpFgbw@mail.gmail.com>
	<CAL4seLH+_5XLkVQXGTnij=OFQ6ThYDxDVKM24ku2mX_bpbTGPw@mail.gmail.com>
	<CAA_HhVLKPHhkw5TcJ663kKC2jS8h4umPRD9qeE3iJ4YjrXhZqA@mail.gmail.com>
	<04BE669BEE19E54BBDC2A9A2585BB68885443A50@exch-mbx01.exchange.upenn.edu>
	<CF0A1BDF42ABA34BA4E89CDA62F3ED7B028BB60D@C111KXTEMBX51.ERF.thomson.com>
Message-ID: <CAL4seLEPG5sdFTqrU8Ob5v74Tv-XsQOPTrO5HcnCmM0xPni6_g@mail.gmail.com>

Here is what I test in IBM WAS 8.0:


In particular, in the csrfguard.properties file, I had to change the
org.owasp.csrfguard.PRNG property

From: org.owasp.csrfguard.PRNG =SHA1PRNG
To: org.owasp.csrfguard.PRNG=IBMSecureRandom

And in the CsrfGuard.java file, defaults are hard-coded for the following
two values, which have to be changed for WebSphere servers

From: org.owasp.csrfguard.PRNG=SHA1PRNG
To: org.owasp.csrfguard.PRNG=IBMSecureRandom
---
From: org.owasp.csrfguard.PRNG.Provider=SUN
To: org.owasp.csrfguard.PRNG.Provider=IBMJCE
---

Because of the change to the .java file, the code had to be recompiled. The
OWASP CSRFGuard Install Guide shows how to list the CSRFGuardListener class
in its example web.xml file. And the CSRFGuard.jar file on my company's
application security web site contains this class file. But I was not able
to find this java code anywhere. So instead, I used the
CsrfGuardServletContextListener and CsrfGuardHttpSessionListener classes,
and put them in my web.xml as follows:

    <listener>

<listener-class>org.owasp.csrfguard.CsrfGuardServletContextListener</listener-class>
    </listener>
    <listener>

<listener-class>org.owasp.csrfguard.CsrfGuardHttpSessionListener</listener-class>
    </listener>

It would be possible to put both properties in csrfguard.properties and
forgo the recompile of the Java code, like this:
org.owasp.csrfguard.PRNG=IBMSecureRandom
org.owasp.csrfguard.PRNG.Provider=IBMJCE




On Tue, Apr 8, 2014 at 7:46 PM, <john.m.allen at thomsonreuters.com> wrote:

>  I'm not sure if this answers your question, Chris, but if you've
> downloaded the source, take a look at
>
> ...\csrfguard\src\main\resources\csrfguard.js
>
> about line 392.  That was the only place I found that it fetches and
> injects the token.
>
>
>
> (Caution:  I think the "if(%INJECT_XHR% == true)" closing brace is
> misplaced, too far down.  It makes it work only if Ajax is enabled.)
>
>
>
> John
>
>
>
>
>
> *From:* owasp-csrfguard-bounces at lists.owasp.org [mailto:
> owasp-csrfguard-bounces at lists.owasp.org] *On Behalf Of *Chris Hyzer
> *Sent:* Tuesday, April 08, 2014 2:21 PM
> *To:* Sarah Baso; Azzeddine Ramrami; ranjith.sundarajchandras at its.ny.gov
>
> *Cc:* owasp-csrfguard at lists.owasp.org
> *Subject:* Re: [Owasp-csrfguard] Community Question regarding OWASP-CSRF
>
>
>
> Just curious... CSRF guard will parse a page and add/edit some DOM elements
> so that the token is passed back and forth.  But after an Ajax request,
> when new page elements (links, forms) are potentially added, will CSRF
> guard decorate these so that the token is passed?  Or does a Javascript
> function need to be called after ajax changed the page so that new elements
> are decorated?  When you get the error, can you see the network tab in a
> browser developer tools plugin to see if a token is even being passed at
> all?  Does it work if you don't have token per page?
>
>
>
> Thanks,
>
> Chris
>
>
>
> *From:* owasp-csrfguard-bounces at lists.owasp.org [mailto:
> owasp-csrfguard-bounces at lists.owasp.org] *On Behalf Of *Sarah Baso
> *Sent:* Tuesday, April 08, 2014 3:16 PM
> *To:* Azzeddine Ramrami; ranjith.sundarajchandras at its.ny.gov
> *Cc:* owasp-csrfguard at lists.owasp.org
> *Subject:* Re: [Owasp-csrfguard] Community Question regarding OWASP-CSRF
>
>
>
> Thanks!
>
>
>
> Ranjith - can you provide a bit more information as Azzeddine has
> requested?
>
>
>
> Sarah
>
>
>
> On Tue, Apr 8, 2014 at 12:14 PM, Azzeddine Ramrami <
> azzeddine.ramrami at owasp.org> wrote:
>
> Thanks Sarah.
>
>
> I will take this request for further analysis. Help form other leaders or
> users of CSRF-Guard is welcome.
> Just to be clear I will work on this issue as volunteer, this mean I will
> do my best to solve this issue if I can reproduce it.
> Some questions:
> - Witch version of CSRF-Guard is used.
> - Witch Application Server is used.
> - Browser name and version.
>
> Regards,
> Azzeddine
>
>
>
>
>
>
>
> On Tue, Apr 8, 2014 at 5:23 PM, Sarah Baso <sarah.baso at owasp.org> wrote:
>
> Azzeddine and others -
>
>
>
> We received this question through our community "contact us" form - can
> you help with responding?  The submitter is cc'ed.
>
>
>
>
> *We have secured our public website using OWASP - CSRF guard and
> configured TokenPerPage=true. We use JSF 2.0 (myfaces) for our front-end
> development.  Every thing works good as expected except when we use JSF
> <f:ajax>. When we submit an ajax request from a page, the ajax request is
> successful but the subsequent Http Request fails with a message ("potential
> cross-site request forgery (CSRF) attack thwarted (user:<anonymous>%,
> ip:x.x.x.x, uri:/ppr/secured/xxxx.faces, error:request token does not match
> page token)"). *
>
>
>
> *Below is our speculation : - In JSF the URL displayed in the browser
> address bar is always the previous page's url ( as JSF 'POST' forwards the
> request). And ajax request uses the current page's url. May be the ajax
> request overrides the token.  We are not sure if this could cause any
> issues with token tracking - but we just want to hint you our speculation
> and get your suggestion/guidance to fix this issue.*
>
>
>
>
>
> Thanks in advance,
>
> Sarah Baso
> --
>
> Executive Director
>
> OWASP Foundation
>
>
>
> sarah.baso at owasp.org
> +1.312.869.2779
>
>
>
>
>   --
>
> Azzeddine RAMRAMI
> +33 6 65 48 90 04.
> Enterprise Security Architect
> OWASP Leader (Morocco Chapter)
>
> Mozilla Security Projects Mentor
>
>
>
>
>
> --
>
> Executive Director
>
> OWASP Foundation
>
>
>
> sarah.baso at owasp.org
> +1.312.869.2779
>
>
>


-- 
Azzeddine RAMRAMI
+33 6 65 48 90 04.
Enterprise Security Architect
OWASP Leader (Morocco Chapter)
Mozilla Security Projects Mentor
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-csrfguard/attachments/20140408/e70ea979/attachment.html>

From mchyzer at isc.upenn.edu  Sun Apr 20 06:55:37 2014
From: mchyzer at isc.upenn.edu (Chris Hyzer)
Date: Sun, 20 Apr 2014 06:55:37 +0000
Subject: [Owasp-csrfguard] pull request
Message-ID: <04BE669BEE19E54BBDC2A9A2585BB68885470BB0@exch-mbx02.exchange.upenn.edu>

I added some enhancements to csrfguard, and would like it to be merged in to the main source branch.  I sent a pull request to aramrami and justinedelson.

https://github.com/mchyzer/OWASP-CSRFGuard

In general my changes are backward compatible I believe.  Im happy to tweak anything to make it acceptable for people.  Maybe we should setup a conference call to discuss these?  :)


1.       Took out the gpg maven plugin.  I just run a build from eclipse by right clicking, and it gives an error.  If someone can please tell me how to address the error (add gpg secret somewhere?), then I can add back in :)  we should document this with a comment in the pom or somewhere else?  Sorry, didn't see answer and didn't have internet to discuss this

2.       In pom I added the config file in the META-INF, this is so the default config is shipped with the jar, and also, if the Owasp.CsrfGuard.properties is not present, it can just use defaults from the jar (see config overlays below)

3.       I have the changes based on code from  Justin Edelson for a configuration provider.  You can specify which configuration type you want, and it will use that instead of simple properties file.  Note, you specify this in the properties file to bootstrap it :).  Note there is also a configuration factory so the configuration can be cached

4.       I added a configuration provider for properties files overlays.  The goal here is that there can be a default config file (Owasp.CsrfGuard.properties), which is shipped with csrfguard, and an overlay: Owasp.CsrfGuard.overlay.properties which overrides properties in the default.  Another feature is it will reload the properties if any change, so you can change the config without bouncing the app.  Note, you can have multiple overlays (one for the app and one for the env the app is running in?), and they can live in the classpath or filesystem.  I want to distribute csrfguard with my webapp application, and I don't want deployers to worry about what is the default csrfguard config, and what I specified.  So basically I have a Owasp.CsrfGuard.overlay.properties that has these contents and that's all the app needs:


org.owasp.csrfguard.Logger=org.openTwoFactor.server.log.CsrfGuardLogger

org.owasp.csrfguard.UnprotectedMethods=GET

org.owasp.csrfguard.TokenPerPage=false
org.owasp.csrfguard.Rotate=false

org.owasp.csrfguard.action.Redirect.Page=%servletContext%/assets/html/csrfError.html

org.owasp.csrfguard.configuration.provider.factory=org.owasp.csrfguard.config.overlay.ConfigurationOverlayProviderFactory

Here is the config in the default config (Owasp.CsrfGuard.properties) to specify the configuration provider factory

###########################
## Config overlay settings if you have the provider above set to ConfigurationOverlayProvider
## This CSRF config provider uses Internet2 Configuration Overlays (documented on Internet2 wiki)
## By default the configuration is read from the Owasp.CsrfGuard.properties
## (which should not be edited), and the Owasp.CsrfGuard.overlay.properties overlays
## the base settings.  See the Owasp.CsrfGuard.properties for the possible
## settings that can be applied to the Owasp.CsrfGuard.overlay.properties
###########################

# comma separated config files that override each other (files on the right override the left)
# each should start with file: or classpath:
# e.g. classpath:Owasp.CsrfGuard.properties, file:c:/temp/myFile.properties
org.owasp.csrfguard.configOverlay.hierarchy = classpath:Owasp.CsrfGuard.properties, classpath:Owasp.CsrfGuard.overlay.properties

# seconds between checking to see if the config files are updated
org.owasp.csrfguard.configOverlay.secondsBetweenUpdateChecks = 60

Note: the factory is a simple interface:

/**
* implement this interface to provide the configuration
*/
public interface ConfigurationProviderFactory {

       /**
       * called when retrieving the configuration
       * @param properties
       * @return the configuration
       */
       public ConfigurationProvider retrieveConfiguration(Properties properties);

}

The ConfigurationProvider is a little more complicated (see github for interface)

https://github.com/mchyzer/OWASP-CSRFGuard/blob/master/csrfguard/src/main/java/org/owasp/csrfguard/config/ConfigurationProvider.java



5.       Note, to specify the configuration provider factory, the default is an automatic picker, which sees if there is an overlay, if so, see if the provider factory is specified, and if so, use it.  This way if there is no overlay config file, then the default is the provider from before, simple properties.  If there is an overlay, and it changes the provider, then you don't have to change the base config which is shipped with csrfguard

6.       I have options in the config file for all the configs in the web.xml.  I don't think the web.xml is a good place for configuration, and it obviously wont work with the new overlay concept.  So if you configure in the web.xml (legacy), that will take precedence, but if you don't, then it will be read from the properties file.  E.g.

# Boolean value that determines whether or not the dynamic JavaScript code should be strict
# with regards to what links it should inject the CSRF prevention token. With a value of true,
# the JavaScript code will only place the token in links that point to the same exact domain
# from which the HTML originated. With a value of false, the JavaScript code will place the
# token in links that not only point to the same exact domain from which the HTML originated,
# but sub-domains as well.
org.owasp.csrfguard.JavascriptServlet.domainStrict = true

# Allows the developer to specify the value of the Cache-Control header in the HTTP response
# when serving the dynamic JavaScript file. The default value is private, maxage=28800.
# Caching of the dynamic JavaScript file is intended to minimize traffic and improve performance.
# Note that the Cache-Control header is always set to "no-store" when either the "Rotate"
# "TokenPerPage" options is set to true in Owasp.CsrfGuard.properties.
org.owasp.csrfguard.JavascriptServlet.cacheControl = private, maxage=28800

Then all you need in your web.xml is something like this:

  <listener>
    <listener-class>org.owasp.csrfguard.CsrfGuardServletContextListener</listener-class>
  </listener>
  <listener>
    <listener-class>org.owasp.csrfguard.CsrfGuardHttpSessionListener</listener-class>
  </listener>

  <servlet>
     <servlet-name>OwaspJavaScriptServlet</servlet-name>
     <servlet-class>org.owasp.csrfguard.servlet.JavaScriptServlet</servlet-class>
  </servlet>

  <servlet-mapping>
     <servlet-name>OwaspJavaScriptServlet</servlet-name>
     <url-pattern>/OwaspJavaScriptServlet</url-pattern>
  </servlet-mapping>

  <filter>
    <filter-name>CSRFGuard</filter-name>
    <filter-class>org.owasp.csrfguard.CsrfGuardFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>CSRFGuard</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>





7.       It is *very* inconvenient to hardcode the servlet context (app name) in the configuration.  Differente envs could have different app names for the same app.  So I added a variable that can be used in the config to represent the context root.  Here is the doc and examples

# Common substitutions
# %servletContext%  is the servlet context (e.g. the configured app prefix or war file name, or blank.
# e.g. if you deploy a default warfile as someApp.war, then %servletContext% will be /someApp
# if there isnt a context it will be the empty string.  So to use this in the configuration, use e.g. %servletContext%/something.html
# which will translate to e.g. /someApp/something.html

org.owasp.csrfguard.unprotected.Ajax=%servletContext%/ajax.html
org.owasp.csrfguard.unprotected.Error=%servletContext%/error.html
org.owasp.csrfguard.unprotected.Index=%servletContext%/index.html
org.owasp.csrfguard.unprotected.JavaScript=%servletContext%/javascript.html



8.       I took the concept from Victor Yushenko to be able to have protected or unprotected pages by regex.  My implementation is a little different since it is backwards compatible with the existing configuration.  Here is the config and example

# Case 1: exact match between request uri and unprotected page
# Case 2: longest path prefix match, beginning / and ending /*
# Case 3: extension match, beginning *.
# Case 4: if the value starts with ^ and ends with $, it will be evaulated as a regex.  Note that before the
#   regex is compiled, any common variables will be substituted (e.g. %servletContext%)
# Default: requested resource must be validated by CSRFGuard

# regex example starts with ^ and ends with $, and the %servletContext% is evaluated before the regex
# org.owasp.csrfguard.unprotected.PublicServlet=^%servletContext%/.*Public\.do$



9.       There are a handful of cases where String.replaceAll() is used when String.replace() should be used.  I fixed those.  Note, in some cases in the source String.replaceAll() was correct, and I left those

10.   I feel like in security you should deny all and pick what you want to allow.  But in the HTTP methods, it is opposite.  I added a way to allow methods you want to allow the ones you want and deny the rest.  It is backwards compatible

# only available by POST requests when in fact some are available via GET requests. If the
# user has excluded GET requests from the list then they have introduced a vulnerability.
# The following configuration snippet instructs OWASP CSRFGuard to protect only the POST,
# PUT, and DELETE HTTP methods.
#
# org.owasp.csrfguard.ProtectedMethods=POST,PUT,DELETE

# or you can configure all to be protected, and specify which is unprotected.  This is the preferred approach

# org.owasp.csrfguard.UnprotectedMethods=GET


11.   The javascript servlet does a GET, then the JS posts to itself again, and it doesn't send a token, and this is inconvenient if you just want to allow GET, you shouldn't have to whitelist the Javascript servlet.  So now automatically after the first GET, the Javascript servlet is whitelisted so you don't have to add it to the unprotected page list

12.   If the config file name is not mentioned in the web.xml, it will try to get configuration from the classpath:Owasp.CsrfGuard.properties

13.   You can log the HTTP method when logging CSRF problems, and it does this by default.  Also it looks in more places for the user using the app (e.g. REMOTE_USER request attribute)

14.   In the javascript referrer checking, there is an option to simply check to see that the referrer is the same domain as the javascript request.  This is easier for people to configure and should do the trick.  It defaults to on.  Note, if the referrer is missing, it wont cause a problem (just like the regex option)

# Similar to javascript servlet referer pattern, but this will make sure the referer of the
# javascript servlet matches the domain of the request.  If there is no referer (proxy strips it?)
# then it will not fail.  Generally this is a good idea to be true.
org.owasp.csrfguard.JavascriptServlet.refererMatchDomain = true


Thanks,
Chris

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-csrfguard/attachments/20140420/51f8ca96/attachment-0001.html>

From mchyzer at isc.upenn.edu  Mon Apr 21 01:04:46 2014
From: mchyzer at isc.upenn.edu (Chris Hyzer)
Date: Mon, 21 Apr 2014 01:04:46 +0000
Subject: [Owasp-csrfguard] pull request
Message-ID: <04BE669BEE19E54BBDC2A9A2585BB68885470E53@exch-mbx02.exchange.upenn.edu>

Add two more items:

15. I think it can be a security flaw that CSRF guard does not protect requests which do not have an existing session.  Some apps might work this way, but in this age of deep links and single sign-on, we cannot make that assumption for all Java applications.  So I added an option that defaults to the secure way (validate even when there is not a session), and people can change this option for the legacy behavior:

# If csrf guard filter should check even if there is no session for the user
# Note: this changed around 2014/04, the default behavior used to be to
# not check if there is no session.  If you want the legacy behavior (if your app
# is not susceptible to CSRF if the user has no session), set this to false
org.owasp.csrfguard.ValidateWhenNoSessionExists = true

16. There is a flag to disable the filter if there are problems without changing the web.xml

# If csrfguard filter is enabled
org.owasp.csrfguard.Enabled = true

Thanks,
Chris


From: Chris Hyzer
Sent: Sunday, April 20, 2014 2:56 AM
To: owasp-csrfguard at lists.owasp.org
Subject: pull request

I added some enhancements to csrfguard, and would like it to be merged in to the main source branch.  I sent a pull request to aramrami and justinedelson.

https://github.com/mchyzer/OWASP-CSRFGuard

In general my changes are backward compatible I believe.  Im happy to tweak anything to make it acceptable for people.  Maybe we should setup a conference call to discuss these?  :)


1.       Took out the gpg maven plugin.  I just run a build from eclipse by right clicking, and it gives an error.  If someone can please tell me how to address the error (add gpg secret somewhere?), then I can add back in :)  we should document this with a comment in the pom or somewhere else?  Sorry, didn't see answer and didn't have internet to discuss this

2.       In pom I added the config file in the META-INF, this is so the default config is shipped with the jar, and also, if the Owasp.CsrfGuard.properties is not present, it can just use defaults from the jar (see config overlays below)

3.       I have the changes based on code from  Justin Edelson for a configuration provider.  You can specify which configuration type you want, and it will use that instead of simple properties file.  Note, you specify this in the properties file to bootstrap it :).  Note there is also a configuration factory so the configuration can be cached

4.       I added a configuration provider for properties files overlays.  The goal here is that there can be a default config file (Owasp.CsrfGuard.properties), which is shipped with csrfguard, and an overlay: Owasp.CsrfGuard.overlay.properties which overrides properties in the default.  Another feature is it will reload the properties if any change, so you can change the config without bouncing the app.  Note, you can have multiple overlays (one for the app and one for the env the app is running in?), and they can live in the classpath or filesystem.  I want to distribute csrfguard with my webapp application, and I don't want deployers to worry about what is the default csrfguard config, and what I specified.  So basically I have a Owasp.CsrfGuard.overlay.properties that has these contents and that's all the app needs:


org.owasp.csrfguard.Logger=org.openTwoFactor.server.log.CsrfGuardLogger

org.owasp.csrfguard.UnprotectedMethods=GET

org.owasp.csrfguard.TokenPerPage=false
org.owasp.csrfguard.Rotate=false

org.owasp.csrfguard.action.Redirect.Page=%servletContext%/assets/html/csrfError.html

org.owasp.csrfguard.configuration.provider.factory=org.owasp.csrfguard.config.overlay.ConfigurationOverlayProviderFactory

Here is the config in the default config (Owasp.CsrfGuard.properties) to specify the configuration provider factory

###########################
## Config overlay settings if you have the provider above set to ConfigurationOverlayProvider
## This CSRF config provider uses Internet2 Configuration Overlays (documented on Internet2 wiki)
## By default the configuration is read from the Owasp.CsrfGuard.properties
## (which should not be edited), and the Owasp.CsrfGuard.overlay.properties overlays
## the base settings.  See the Owasp.CsrfGuard.properties for the possible
## settings that can be applied to the Owasp.CsrfGuard.overlay.properties
###########################

# comma separated config files that override each other (files on the right override the left)
# each should start with file: or classpath:
# e.g. classpath:Owasp.CsrfGuard.properties, file:c:/temp/myFile.properties
org.owasp.csrfguard.configOverlay.hierarchy = classpath:Owasp.CsrfGuard.properties, classpath:Owasp.CsrfGuard.overlay.properties

# seconds between checking to see if the config files are updated
org.owasp.csrfguard.configOverlay.secondsBetweenUpdateChecks = 60

Note: the factory is a simple interface:

/**
* implement this interface to provide the configuration
*/
public interface ConfigurationProviderFactory {

       /**
       * called when retrieving the configuration
       * @param properties
       * @return the configuration
       */
       public ConfigurationProvider retrieveConfiguration(Properties properties);

}

The ConfigurationProvider is a little more complicated (see github for interface)

https://github.com/mchyzer/OWASP-CSRFGuard/blob/master/csrfguard/src/main/java/org/owasp/csrfguard/config/ConfigurationProvider.java



5.       Note, to specify the configuration provider factory, the default is an automatic picker, which sees if there is an overlay, if so, see if the provider factory is specified, and if so, use it.  This way if there is no overlay config file, then the default is the provider from before, simple properties.  If there is an overlay, and it changes the provider, then you don't have to change the base config which is shipped with csrfguard

6.       I have options in the config file for all the configs in the web.xml.  I don't think the web.xml is a good place for configuration, and it obviously wont work with the new overlay concept.  So if you configure in the web.xml (legacy), that will take precedence, but if you don't, then it will be read from the properties file.  E.g.

# Boolean value that determines whether or not the dynamic JavaScript code should be strict
# with regards to what links it should inject the CSRF prevention token. With a value of true,
# the JavaScript code will only place the token in links that point to the same exact domain
# from which the HTML originated. With a value of false, the JavaScript code will place the
# token in links that not only point to the same exact domain from which the HTML originated,
# but sub-domains as well.
org.owasp.csrfguard.JavascriptServlet.domainStrict = true

# Allows the developer to specify the value of the Cache-Control header in the HTTP response
# when serving the dynamic JavaScript file. The default value is private, maxage=28800.
# Caching of the dynamic JavaScript file is intended to minimize traffic and improve performance.
# Note that the Cache-Control header is always set to "no-store" when either the "Rotate"
# "TokenPerPage" options is set to true in Owasp.CsrfGuard.properties.
org.owasp.csrfguard.JavascriptServlet.cacheControl = private, maxage=28800

Then all you need in your web.xml is something like this:

  <listener>
    <listener-class>org.owasp.csrfguard.CsrfGuardServletContextListener</listener-class>
  </listener>
  <listener>
    <listener-class>org.owasp.csrfguard.CsrfGuardHttpSessionListener</listener-class>
  </listener>

  <servlet>
     <servlet-name>OwaspJavaScriptServlet</servlet-name>
     <servlet-class>org.owasp.csrfguard.servlet.JavaScriptServlet</servlet-class>
  </servlet>

  <servlet-mapping>
     <servlet-name>OwaspJavaScriptServlet</servlet-name>
     <url-pattern>/OwaspJavaScriptServlet</url-pattern>
  </servlet-mapping>

  <filter>
    <filter-name>CSRFGuard</filter-name>
    <filter-class>org.owasp.csrfguard.CsrfGuardFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>CSRFGuard</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>





7.       It is *very* inconvenient to hardcode the servlet context (app name) in the configuration.  Differente envs could have different app names for the same app.  So I added a variable that can be used in the config to represent the context root.  Here is the doc and examples

# Common substitutions
# %servletContext%  is the servlet context (e.g. the configured app prefix or war file name, or blank.
# e.g. if you deploy a default warfile as someApp.war, then %servletContext% will be /someApp
# if there isnt a context it will be the empty string.  So to use this in the configuration, use e.g. %servletContext%/something.html
# which will translate to e.g. /someApp/something.html

org.owasp.csrfguard.unprotected.Ajax=%servletContext%/ajax.html
org.owasp.csrfguard.unprotected.Error=%servletContext%/error.html
org.owasp.csrfguard.unprotected.Index=%servletContext%/index.html
org.owasp.csrfguard.unprotected.JavaScript=%servletContext%/javascript.html



8.       I took the concept from Victor Yushenko to be able to have protected or unprotected pages by regex.  My implementation is a little different since it is backwards compatible with the existing configuration.  Here is the config and example

# Case 1: exact match between request uri and unprotected page
# Case 2: longest path prefix match, beginning / and ending /*
# Case 3: extension match, beginning *.
# Case 4: if the value starts with ^ and ends with $, it will be evaulated as a regex.  Note that before the
#   regex is compiled, any common variables will be substituted (e.g. %servletContext%)
# Default: requested resource must be validated by CSRFGuard

# regex example starts with ^ and ends with $, and the %servletContext% is evaluated before the regex
# org.owasp.csrfguard.unprotected.PublicServlet=^%servletContext%/.*Public\.do$



9.       There are a handful of cases where String.replaceAll() is used when String.replace() should be used.  I fixed those.  Note, in some cases in the source String.replaceAll() was correct, and I left those

10.   I feel like in security you should deny all and pick what you want to allow.  But in the HTTP methods, it is opposite.  I added a way to allow methods you want to allow the ones you want and deny the rest.  It is backwards compatible

# only available by POST requests when in fact some are available via GET requests. If the
# user has excluded GET requests from the list then they have introduced a vulnerability.
# The following configuration snippet instructs OWASP CSRFGuard to protect only the POST,
# PUT, and DELETE HTTP methods.
#
# org.owasp.csrfguard.ProtectedMethods=POST,PUT,DELETE

# or you can configure all to be protected, and specify which is unprotected.  This is the preferred approach

# org.owasp.csrfguard.UnprotectedMethods=GET


11.   The javascript servlet does a GET, then the JS posts to itself again, and it doesn't send a token, and this is inconvenient if you just want to allow GET, you shouldn't have to whitelist the Javascript servlet.  So now automatically after the first GET, the Javascript servlet is whitelisted so you don't have to add it to the unprotected page list

12.   If the config file name is not mentioned in the web.xml, it will try to get configuration from the classpath:Owasp.CsrfGuard.properties

13.   You can log the HTTP method when logging CSRF problems, and it does this by default.  Also it looks in more places for the user using the app (e.g. REMOTE_USER request attribute)

14.   In the javascript referrer checking, there is an option to simply check to see that the referrer is the same domain as the javascript request.  This is easier for people to configure and should do the trick.  It defaults to on.  Note, if the referrer is missing, it wont cause a problem (just like the regex option)

# Similar to javascript servlet referer pattern, but this will make sure the referer of the
# javascript servlet matches the domain of the request.  If there is no referer (proxy strips it?)
# then it will not fail.  Generally this is a good idea to be true.
org.owasp.csrfguard.JavascriptServlet.refererMatchDomain = true


Thanks,
Chris

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-csrfguard/attachments/20140421/ae4999c8/attachment-0001.html>

From mchyzer at isc.upenn.edu  Wed Apr 23 07:53:57 2014
From: mchyzer at isc.upenn.edu (Chris Hyzer)
Date: Wed, 23 Apr 2014 07:53:57 +0000
Subject: [Owasp-csrfguard] pull request
Message-ID: <04BE669BEE19E54BBDC2A9A2585BB68885474FEB@exch-mbx02.exchange.upenn.edu>

Few more items:

16. The most secure option is to have GET as unprotected, and to set the javascript inject into attributes to false, but forms to true.  However, for GET forms, it still injects, and it still injects in all form actions.  Im not sure why we need to inject form actions when there is a hidden element injected (can someone tell me?).  Also, a GET form param is like an attribute.  Anyways, I added two more config items for these two issues, and they default to true to be backwards compatible

# if the token should be injected in GET forms (which will be on the URL)
# if the HTTP method GET is unprotected, then this should likely be false
org.owasp.csrfguard.JavascriptServlet.injectGetForms = true

# if the token should be injected in the action in forms
# note, if injectIntoForms is true, then this might not need to be true
org.owasp.csrfguard.JavascriptServlet.injectFormAttributes = true


17. To make it easier to clone and work on the source, I added /misc/eclipse/.project, .classpath, and README.txt.  If people want to do that for other IDEs if it is helpful, might be nice.   If you use eclipse, just copy these files to the project root (regular or test project)
18. The default config is setup for the test project, I think it shouldn't have any unprotected pages.  I commented these out
19. Configured the test project to use config overlays so it can be easily updated when csrfguard changes and is an example.  Took configs out of web.xml and put them into the csrf guard properties file

From: Chris Hyzer
Sent: Sunday, April 20, 2014 9:05 PM
To: 'owasp-csrfguard at lists.owasp.org'
Subject: RE: pull request

Add two more items:

15. I think it can be a security flaw that CSRF guard does not protect requests which do not have an existing session.  Some apps might work this way, but in this age of deep links and single sign-on, we cannot make that assumption for all Java applications.  So I added an option that defaults to the secure way (validate even when there is not a session), and people can change this option for the legacy behavior:

# If csrf guard filter should check even if there is no session for the user
# Note: this changed around 2014/04, the default behavior used to be to
# not check if there is no session.  If you want the legacy behavior (if your app
# is not susceptible to CSRF if the user has no session), set this to false
org.owasp.csrfguard.ValidateWhenNoSessionExists = true

16. There is a flag to disable the filter if there are problems without changing the web.xml

# If csrfguard filter is enabled
org.owasp.csrfguard.Enabled = true

Thanks,
Chris


From: Chris Hyzer
Sent: Sunday, April 20, 2014 2:56 AM
To: owasp-csrfguard at lists.owasp.org<mailto:owasp-csrfguard at lists.owasp.org>
Subject: pull request

I added some enhancements to csrfguard, and would like it to be merged in to the main source branch.  I sent a pull request to aramrami and justinedelson.

https://github.com/mchyzer/OWASP-CSRFGuard

In general my changes are backward compatible I believe.  Im happy to tweak anything to make it acceptable for people.  Maybe we should setup a conference call to discuss these?  :)


1.       Took out the gpg maven plugin.  I just run a build from eclipse by right clicking, and it gives an error.  If someone can please tell me how to address the error (add gpg secret somewhere?), then I can add back in :)  we should document this with a comment in the pom or somewhere else?  Sorry, didn't see answer and didn't have internet to discuss this

2.       In pom I added the config file in the META-INF, this is so the default config is shipped with the jar, and also, if the Owasp.CsrfGuard.properties is not present, it can just use defaults from the jar (see config overlays below)

3.       I have the changes based on code from  Justin Edelson for a configuration provider.  You can specify which configuration type you want, and it will use that instead of simple properties file.  Note, you specify this in the properties file to bootstrap it :).  Note there is also a configuration factory so the configuration can be cached

4.       I added a configuration provider for properties files overlays.  The goal here is that there can be a default config file (Owasp.CsrfGuard.properties), which is shipped with csrfguard, and an overlay: Owasp.CsrfGuard.overlay.properties which overrides properties in the default.  Another feature is it will reload the properties if any change, so you can change the config without bouncing the app.  Note, you can have multiple overlays (one for the app and one for the env the app is running in?), and they can live in the classpath or filesystem.  I want to distribute csrfguard with my webapp application, and I don't want deployers to worry about what is the default csrfguard config, and what I specified.  So basically I have a Owasp.CsrfGuard.overlay.properties that has these contents and that's all the app needs:


org.owasp.csrfguard.Logger=org.openTwoFactor.server.log.CsrfGuardLogger

org.owasp.csrfguard.UnprotectedMethods=GET

org.owasp.csrfguard.TokenPerPage=false
org.owasp.csrfguard.Rotate=false

org.owasp.csrfguard.action.Redirect.Page=%servletContext%/assets/html/csrfError.html

org.owasp.csrfguard.configuration.provider.factory=org.owasp.csrfguard.config.overlay.ConfigurationOverlayProviderFactory

Here is the config in the default config (Owasp.CsrfGuard.properties) to specify the configuration provider factory

###########################
## Config overlay settings if you have the provider above set to ConfigurationOverlayProvider
## This CSRF config provider uses Internet2 Configuration Overlays (documented on Internet2 wiki)
## By default the configuration is read from the Owasp.CsrfGuard.properties
## (which should not be edited), and the Owasp.CsrfGuard.overlay.properties overlays
## the base settings.  See the Owasp.CsrfGuard.properties for the possible
## settings that can be applied to the Owasp.CsrfGuard.overlay.properties
###########################

# comma separated config files that override each other (files on the right override the left)
# each should start with file: or classpath:
# e.g. classpath:Owasp.CsrfGuard.properties, file:c:/temp/myFile.properties
org.owasp.csrfguard.configOverlay.hierarchy = classpath:Owasp.CsrfGuard.properties, classpath:Owasp.CsrfGuard.overlay.properties

# seconds between checking to see if the config files are updated
org.owasp.csrfguard.configOverlay.secondsBetweenUpdateChecks = 60

Note: the factory is a simple interface:

/**
* implement this interface to provide the configuration
*/
public interface ConfigurationProviderFactory {

       /**
       * called when retrieving the configuration
       * @param properties
       * @return the configuration
       */
       public ConfigurationProvider retrieveConfiguration(Properties properties);

}

The ConfigurationProvider is a little more complicated (see github for interface)

https://github.com/mchyzer/OWASP-CSRFGuard/blob/master/csrfguard/src/main/java/org/owasp/csrfguard/config/ConfigurationProvider.java



5.       Note, to specify the configuration provider factory, the default is an automatic picker, which sees if there is an overlay, if so, see if the provider factory is specified, and if so, use it.  This way if there is no overlay config file, then the default is the provider from before, simple properties.  If there is an overlay, and it changes the provider, then you don't have to change the base config which is shipped with csrfguard

6.       I have options in the config file for all the configs in the web.xml.  I don't think the web.xml is a good place for configuration, and it obviously wont work with the new overlay concept.  So if you configure in the web.xml (legacy), that will take precedence, but if you don't, then it will be read from the properties file.  E.g.

# Boolean value that determines whether or not the dynamic JavaScript code should be strict
# with regards to what links it should inject the CSRF prevention token. With a value of true,
# the JavaScript code will only place the token in links that point to the same exact domain
# from which the HTML originated. With a value of false, the JavaScript code will place the
# token in links that not only point to the same exact domain from which the HTML originated,
# but sub-domains as well.
org.owasp.csrfguard.JavascriptServlet.domainStrict = true

# Allows the developer to specify the value of the Cache-Control header in the HTTP response
# when serving the dynamic JavaScript file. The default value is private, maxage=28800.
# Caching of the dynamic JavaScript file is intended to minimize traffic and improve performance.
# Note that the Cache-Control header is always set to "no-store" when either the "Rotate"
# "TokenPerPage" options is set to true in Owasp.CsrfGuard.properties.
org.owasp.csrfguard.JavascriptServlet.cacheControl = private, maxage=28800

Then all you need in your web.xml is something like this:

  <listener>
    <listener-class>org.owasp.csrfguard.CsrfGuardServletContextListener</listener-class>
  </listener>
  <listener>
    <listener-class>org.owasp.csrfguard.CsrfGuardHttpSessionListener</listener-class>
  </listener>

  <servlet>
     <servlet-name>OwaspJavaScriptServlet</servlet-name>
     <servlet-class>org.owasp.csrfguard.servlet.JavaScriptServlet</servlet-class>
  </servlet>

  <servlet-mapping>
     <servlet-name>OwaspJavaScriptServlet</servlet-name>
     <url-pattern>/OwaspJavaScriptServlet</url-pattern>
  </servlet-mapping>

  <filter>
    <filter-name>CSRFGuard</filter-name>
    <filter-class>org.owasp.csrfguard.CsrfGuardFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>CSRFGuard</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>





7.       It is *very* inconvenient to hardcode the servlet context (app name) in the configuration.  Differente envs could have different app names for the same app.  So I added a variable that can be used in the config to represent the context root.  Here is the doc and examples

# Common substitutions
# %servletContext%  is the servlet context (e.g. the configured app prefix or war file name, or blank.
# e.g. if you deploy a default warfile as someApp.war, then %servletContext% will be /someApp
# if there isnt a context it will be the empty string.  So to use this in the configuration, use e.g. %servletContext%/something.html
# which will translate to e.g. /someApp/something.html

org.owasp.csrfguard.unprotected.Ajax=%servletContext%/ajax.html
org.owasp.csrfguard.unprotected.Error=%servletContext%/error.html
org.owasp.csrfguard.unprotected.Index=%servletContext%/index.html
org.owasp.csrfguard.unprotected.JavaScript=%servletContext%/javascript.html



8.       I took the concept from Victor Yushenko to be able to have protected or unprotected pages by regex.  My implementation is a little different since it is backwards compatible with the existing configuration.  Here is the config and example

# Case 1: exact match between request uri and unprotected page
# Case 2: longest path prefix match, beginning / and ending /*
# Case 3: extension match, beginning *.
# Case 4: if the value starts with ^ and ends with $, it will be evaulated as a regex.  Note that before the
#   regex is compiled, any common variables will be substituted (e.g. %servletContext%)
# Default: requested resource must be validated by CSRFGuard

# regex example starts with ^ and ends with $, and the %servletContext% is evaluated before the regex
# org.owasp.csrfguard.unprotected.PublicServlet=^%servletContext%/.*Public\.do$



9.       There are a handful of cases where String.replaceAll() is used when String.replace() should be used.  I fixed those.  Note, in some cases in the source String.replaceAll() was correct, and I left those

10.   I feel like in security you should deny all and pick what you want to allow.  But in the HTTP methods, it is opposite.  I added a way to allow methods you want to allow the ones you want and deny the rest.  It is backwards compatible

# only available by POST requests when in fact some are available via GET requests. If the
# user has excluded GET requests from the list then they have introduced a vulnerability.
# The following configuration snippet instructs OWASP CSRFGuard to protect only the POST,
# PUT, and DELETE HTTP methods.
#
# org.owasp.csrfguard.ProtectedMethods=POST,PUT,DELETE

# or you can configure all to be protected, and specify which is unprotected.  This is the preferred approach

# org.owasp.csrfguard.UnprotectedMethods=GET


11.   The javascript servlet does a GET, then the JS posts to itself again, and it doesn't send a token, and this is inconvenient if you just want to allow GET, you shouldn't have to whitelist the Javascript servlet.  So now automatically after the first GET, the Javascript servlet is whitelisted so you don't have to add it to the unprotected page list

12.   If the config file name is not mentioned in the web.xml, it will try to get configuration from the classpath:Owasp.CsrfGuard.properties

13.   You can log the HTTP method when logging CSRF problems, and it does this by default.  Also it looks in more places for the user using the app (e.g. REMOTE_USER request attribute)

14.   In the javascript referrer checking, there is an option to simply check to see that the referrer is the same domain as the javascript request.  This is easier for people to configure and should do the trick.  It defaults to on.  Note, if the referrer is missing, it wont cause a problem (just like the regex option)

# Similar to javascript servlet referer pattern, but this will make sure the referer of the
# javascript servlet matches the domain of the request.  If there is no referer (proxy strips it?)
# then it will not fail.  Generally this is a good idea to be true.
org.owasp.csrfguard.JavascriptServlet.refererMatchDomain = true


Thanks,
Chris

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-csrfguard/attachments/20140423/b15669e4/attachment-0001.html>

