From oana.cornea at owasp.org  Tue Oct  8 05:45:57 2013
From: oana.cornea at owasp.org (Oana Cornea)
Date: Tue, 8 Oct 2013 08:45:57 +0300
Subject: [Owasp-romania] Fwd: [Owasp-leaders] OWASP PHP port scanner project
	(O3P)
In-Reply-To: <CANPBRQSCJZyKZxqic=AgiRnwAC9p1q0PCmpGQ2p02S5aoVYsew@mail.gmail.com>
References: <CANPBRQSCJZyKZxqic=AgiRnwAC9p1q0PCmpGQ2p02S5aoVYsew@mail.gmail.com>
Message-ID: <CAP_KG4hN630foLzx=apvHv9LowgE_k9LQ8GgraCzyrsvm5D5eg@mail.gmail.com>

Se cauta colaboratori pentru "PHP port scanner project". Oricine este
dornic poate contribui.
Detalii in mailul de mai jos.

---------- Forwarded message ----------
From: Bhavesh Naik <bhavesh.naik at owasp.org>
Date: Mon, Oct 7, 2013 at 10:04 PM
Subject: [Owasp-leaders] OWASP PHP port scanner project (O3P)
To: owasp-leaders at lists.owasp.org


Hi Leaders,
I'm looking for some experts who are willing to contribute their coding
knowledge (in PHP) to improve the port scanner scanner project.

*Link :* *
https://www.owasp.org/index.php/%27%27%27OWASP_PHP_Portscanner_Project%27%27%27
*

I'm planning to put a separate tabbed page which will consist names of
contributors to the code/project and along with the feature they have added
to make the project more robust and reliable.
Looking for a positive response from you guys.
Regards.
- Bhavesh

_______________________________________________
OWASP-Leaders mailing list
OWASP-Leaders at lists.owasp.org
https://lists.owasp.org/mailman/listinfo/owasp-leaders




-- 
Oana Cornea, OWASP Romania
Tel: +40741050210
Email: oana.cornea at owasp.org
OWASP Global: http://www.owasp.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-romania/attachments/20131008/4e501230/attachment.html>

From oana.cornea at owasp.org  Tue Oct  8 05:48:31 2013
From: oana.cornea at owasp.org (Oana Cornea)
Date: Tue, 8 Oct 2013 08:48:31 +0300
Subject: [Owasp-romania] October is National Cyber Security Awareness Month
Message-ID: <CAP_KG4hGwexr-WF5nksHwEQk=VkEL6MExkXoA6EmUsC4r_N6zg@mail.gmail.com>

Buna,

Octombrie este luna "Cyber Security Awareness". Acesta este un bun prilej
de a promova materialele si software-ul gratuit pus la dispozitie de Owasp.
De asemenea exista si cateva beneficii pentru AppSec
USA<http://appsecusa.org/2013/>din Noiembrie. Avem o oportunitate de
fund raising pentru capitolul local
si se pot cumpara bilete la pret redus.

********************************************************************************************
October is National Cyber Security Awareness
Month<http://www.staysafeonline.org/ncsam/> and
it is an opportunity to engage public and private sector stakeholders ? to
create a safe, secure, and resilient cyber environment.

*Help us raise money for raising awareness year round: Register and
participate in AppSec USA in November. *

Expo and Career Fair only passes are available for FREE by using discount
code NYCOWASP! at check out.  This will allow access to all activities and
community events with the exception of the conference talks and food. This
means you can participate in the summit activites, bug bounty group hack,
career fair and vendor area at no charge.

Continuation of our ticket sales fundraising opportunity for chapters: For
each ticket to AppSec USA that your chapter sells, your chapter will
receive $50 USD.  If a $50 membership is also purchased (new or renewed)
during registration, then your chapter will earn $70 USD PER ATTENDEE. The
next big deadline is OCTOBER 15th, after that ticket prices go up another
$200.  The current price is $750 for members and $795 for non members.

*Distribute the code for your chapter.  The appropriate code should be
entered in the "discount code" box during AppSec USA registration. For
Romania the code is *Support_ROM.

-- 
Oana Cornea, OWASP Romania
Tel: +40741050210
Email: oana.cornea at owasp.org
OWASP Global: http://www.owasp.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-romania/attachments/20131008/c146cf70/attachment.html>

From oana.cornea at owasp.org  Tue Oct 22 13:34:55 2013
From: oana.cornea at owasp.org (Oana Cornea)
Date: Tue, 22 Oct 2013 16:34:55 +0300
Subject: [Owasp-romania] Fwd: [Owasp-leaders] OWASP DOM based XSS definition,
 which looked a little off
In-Reply-To: <CAPmjHnoVbVVs2NgmEUh9G6GCHdPwYRJiai9-UYtegi6=-p9z6A@mail.gmail.com>
References: <CAPmjHnoVbVVs2NgmEUh9G6GCHdPwYRJiai9-UYtegi6=-p9z6A@mail.gmail.com>
Message-ID: <CAP_KG4iUcubqqkuP-AtCL4qiHi67Rmmr1G=7ijCREV0-PfYRGA@mail.gmail.com>

Hello,

Voi ce parere aveti?

---------- Forwarded message ----------
From: Serg <serg at owasp.org>
Date: Tue, Oct 22, 2013 at 2:05 PM
Subject: [Owasp-leaders] OWASP DOM based XSS definition, which looked a
little off
To: "owasp-leaders at lists.owasp.org" <owasp-leaders at lists.owasp.org>


Hi All

I've recently had a look at the OWASP DOM based XSS definition, which
looked a little off.

The TL;DR version: the DOM based XSS definition according to OWASP (
https://www.owasp.org/index.php/DOM_Based_XSS) is only 50% correct (or the
pessimistic view - 50% wrong) and misleading.

I am basing this on the 'Definition' examples (
https://www.owasp.org/index.php/DOM_Based_XSS), not the 'Advanced
Techniques and Derivatives' section.

The first part of this document is incorrect.

In layman's terms, the Reflected XSS, request/JS is first sent to the
server, it is then reflected, as is, in the response, hence the name.

Example:

http://www.some.site/page.html?default=xss_attack_here

Since the query string gets sent to the server and reflected back, this is
a Reflected XSS, not DOM-based.

The 'xss_attack_here' part is irrelevant here. As long as it is sent to the
server and reflected back, it's a Reflected XSS vulnerability. Whether it
runs in DOM or not is irrelevant, technically everything runs in DOM...

My understanding of DOM based XSS, is: it is processed entirely in the web
browser, the request with XSS payload is not sent to the server.

As far as I know, the only way to achieve that is to use fragment
identifiers, the part of the URL after the '#' (including '#') is not sent
to the server as part of the request.

Based on that, I am fairly certain that the current OWASP definition (
https://www.owasp.org/index.php/DOM_Based_XSS) is wrong and misleading.


Thoughts?


-- 
Serg

_______________________________________________
OWASP-Leaders mailing list
OWASP-Leaders at lists.owasp.org
https://lists.owasp.org/mailman/listinfo/owasp-leaders




-- 
Oana Cornea, OWASP Romania
Tel: +40741050210
Email: oana.cornea at owasp.org
OWASP Global: http://www.owasp.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-romania/attachments/20131022/41346fc2/attachment.html>

From smadudinu at gmail.com  Tue Oct 22 14:37:15 2013
From: smadudinu at gmail.com (Dinu Smadu)
Date: Tue, 22 Oct 2013 17:37:15 +0300
Subject: [Owasp-romania] Fwd: [Owasp-leaders] OWASP DOM based XSS
 definition, which looked a little off
In-Reply-To: <CAP_KG4iUcubqqkuP-AtCL4qiHi67Rmmr1G=7ijCREV0-PfYRGA@mail.gmail.com>
References: <CAPmjHnoVbVVs2NgmEUh9G6GCHdPwYRJiai9-UYtegi6=-p9z6A@mail.gmail.com>
	<CAP_KG4iUcubqqkuP-AtCL4qiHi67Rmmr1G=7ijCREV0-PfYRGA@mail.gmail.com>
Message-ID: <CAC8fo+gZG8LoKo=MKrbwf6+X+zuaqHORfg386hGn_YBqrWfjBA@mail.gmail.com>

Buna,

In cazul Reflected XSS serverul raspunde cu o pagina HTML, din ea browserul
construieste un DOM si apoi este rulat codul javascript arbitrar.
In cazul DOM XSS atacul consta in modificarea ulterioara a DOM-ului
construit de browser la primirea raspunsului (prin executia de cod
JavaScript vulnerabil)

Exemplu de *DOM-XSS* (putin fortat)

URL: www.example.com/search.php?query=<script>alert(1)<script>

In raspuns:

<input type="hidden" id="query" value="<?php echo htmlspecialchars(
$query)?>"

<script type="text/javascript">
   var decoded = $("#element").html($('#query').val()).text();   //html
decode si insert in pagina
</script>

In acest caz cred ca definitia e corecta in OWASP si DOM-XSS nu se
limiteaza doar la fragment identifiers

Pot sa traduc daca ai nevoie si de un raspuns in engleza
Dinu


On Tue, Oct 22, 2013 at 4:34 PM, Oana Cornea <oana.cornea at owasp.org> wrote:

> Hello,
>
> Voi ce parere aveti?
>
> ---------- Forwarded message ----------
> From: Serg <serg at owasp.org>
> Date: Tue, Oct 22, 2013 at 2:05 PM
> Subject: [Owasp-leaders] OWASP DOM based XSS definition, which looked a
> little off
> To: "owasp-leaders at lists.owasp.org" <owasp-leaders at lists.owasp.org>
>
>
> Hi All
>
> I've recently had a look at the OWASP DOM based XSS definition, which
> looked a little off.
>
> The TL;DR version: the DOM based XSS definition according to OWASP (
> https://www.owasp.org/index.php/DOM_Based_XSS) is only 50% correct (or
> the pessimistic view - 50% wrong) and misleading.
>
> I am basing this on the 'Definition' examples (
> https://www.owasp.org/index.php/DOM_Based_XSS), not the 'Advanced
> Techniques and Derivatives' section.
>
> The first part of this document is incorrect.
>
> In layman's terms, the Reflected XSS, request/JS is first sent to the
> server, it is then reflected, as is, in the response, hence the name.
>
> Example:
>
> http://www.some.site/page.html?default=xss_attack_here
>
> Since the query string gets sent to the server and reflected back, this is
> a Reflected XSS, not DOM-based.
>
> The 'xss_attack_here' part is irrelevant here. As long as it is sent to
> the server and reflected back, it's a Reflected XSS vulnerability. Whether
> it runs in DOM or not is irrelevant, technically everything runs in DOM...
>
> My understanding of DOM based XSS, is: it is processed entirely in the web
> browser, the request with XSS payload is not sent to the server.
>
> As far as I know, the only way to achieve that is to use fragment
> identifiers, the part of the URL after the '#' (including '#') is not sent
> to the server as part of the request.
>
> Based on that, I am fairly certain that the current OWASP definition (
> https://www.owasp.org/index.php/DOM_Based_XSS) is wrong and misleading.
>
>
> Thoughts?
>
>
> --
> Serg
>
> _______________________________________________
> OWASP-Leaders mailing list
> OWASP-Leaders at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-leaders
>
>
>
>
> --
> Oana Cornea, OWASP Romania
> Tel: +40741050210
> Email: oana.cornea at owasp.org
> OWASP Global: http://www.owasp.org
>
> _______________________________________________
> Owasp-romania mailing list
> Owasp-romania at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-romania
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-romania/attachments/20131022/a3087f08/attachment.html>

From oana.cornea at owasp.org  Wed Oct 23 06:01:36 2013
From: oana.cornea at owasp.org (Oana Cornea)
Date: Wed, 23 Oct 2013 09:01:36 +0300
Subject: [Owasp-romania] Fwd: [Owasp-leaders] OWASP DOM based XSS
 definition, which looked a little off
In-Reply-To: <CAC8fo+gZG8LoKo=MKrbwf6+X+zuaqHORfg386hGn_YBqrWfjBA@mail.gmail.com>
References: <CAPmjHnoVbVVs2NgmEUh9G6GCHdPwYRJiai9-UYtegi6=-p9z6A@mail.gmail.com>
	<CAP_KG4iUcubqqkuP-AtCL4qiHi67Rmmr1G=7ijCREV0-PfYRGA@mail.gmail.com>
	<CAC8fo+gZG8LoKo=MKrbwf6+X+zuaqHORfg386hGn_YBqrWfjBA@mail.gmail.com>
Message-ID: <CAP_KG4gN+j8k1XKqsgZO_4M5rwazx=Awrj9gfBp=xpJB0ZmFGQ@mail.gmail.com>

Corect. Am trimis doar "for the sake of argument" :) cu scopul pur - de
debate, poate reusesc sa stimulez o discutie in cazul in care poate nu
toata lumea stie exact despre ce este vorba.
M-am gandit ca mailuri de genul pot genera multe reply-uri: cei care stiu
isi pot impartasi cunostiintele, ceilalti se documenteaza sau afla lucruri
noi si poate asa devenim mai activi.

Oana


On Tue, Oct 22, 2013 at 5:37 PM, Dinu Smadu <smadudinu at gmail.com> wrote:

> Buna,
>
> In cazul Reflected XSS serverul raspunde cu o pagina HTML, din ea
> browserul construieste un DOM si apoi este rulat codul javascript arbitrar.
> In cazul DOM XSS atacul consta in modificarea ulterioara a DOM-ului
> construit de browser la primirea raspunsului (prin executia de cod
> JavaScript vulnerabil)
>
> Exemplu de *DOM-XSS* (putin fortat)
>
> URL: www.example.com/search.php?query=<script>alert(1)<script>
>
> In raspuns:
>
> <input type="hidden" id="query" value="<?php echo htmlspecialchars(
> $query)?>"
>
> <script type="text/javascript">
>    var decoded = $("#element").html($('#query').val()).text();   //html
> decode si insert in pagina
> </script>
>
> In acest caz cred ca definitia e corecta in OWASP si DOM-XSS nu se
> limiteaza doar la fragment identifiers
>
> Pot sa traduc daca ai nevoie si de un raspuns in engleza
> Dinu
>
>
> On Tue, Oct 22, 2013 at 4:34 PM, Oana Cornea <oana.cornea at owasp.org>wrote:
>
>> Hello,
>>
>> Voi ce parere aveti?
>>
>> ---------- Forwarded message ----------
>> From: Serg <serg at owasp.org>
>> Date: Tue, Oct 22, 2013 at 2:05 PM
>> Subject: [Owasp-leaders] OWASP DOM based XSS definition, which looked a
>> little off
>> To: "owasp-leaders at lists.owasp.org" <owasp-leaders at lists.owasp.org>
>>
>>
>> Hi All
>>
>> I've recently had a look at the OWASP DOM based XSS definition, which
>> looked a little off.
>>
>> The TL;DR version: the DOM based XSS definition according to OWASP (
>> https://www.owasp.org/index.php/DOM_Based_XSS) is only 50% correct (or
>> the pessimistic view - 50% wrong) and misleading.
>>
>> I am basing this on the 'Definition' examples (
>> https://www.owasp.org/index.php/DOM_Based_XSS), not the 'Advanced
>> Techniques and Derivatives' section.
>>
>> The first part of this document is incorrect.
>>
>> In layman's terms, the Reflected XSS, request/JS is first sent to the
>> server, it is then reflected, as is, in the response, hence the name.
>>
>> Example:
>>
>> http://www.some.site/page.html?default=xss_attack_here
>>
>> Since the query string gets sent to the server and reflected back, this
>> is a Reflected XSS, not DOM-based.
>>
>> The 'xss_attack_here' part is irrelevant here. As long as it is sent to
>> the server and reflected back, it's a Reflected XSS vulnerability. Whether
>> it runs in DOM or not is irrelevant, technically everything runs in DOM...
>>
>> My understanding of DOM based XSS, is: it is processed entirely in the
>> web browser, the request with XSS payload is not sent to the server.
>>
>> As far as I know, the only way to achieve that is to use fragment
>> identifiers, the part of the URL after the '#' (including '#') is not sent
>> to the server as part of the request.
>>
>> Based on that, I am fairly certain that the current OWASP definition (
>> https://www.owasp.org/index.php/DOM_Based_XSS) is wrong and misleading.
>>
>>
>> Thoughts?
>>
>>
>> --
>> Serg
>>
>> _______________________________________________
>> OWASP-Leaders mailing list
>> OWASP-Leaders at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-leaders
>>
>>
>>
>>
>> --
>> Oana Cornea, OWASP Romania
>> Tel: +40741050210
>> Email: oana.cornea at owasp.org
>> OWASP Global: http://www.owasp.org
>>
>> _______________________________________________
>> Owasp-romania mailing list
>> Owasp-romania at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-romania
>>
>>
>


-- 
Oana Cornea, OWASP Romania
Tel: +40741050210
Email: oana.cornea at owasp.org
OWASP Global: http://www.owasp.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-romania/attachments/20131023/5e200a14/attachment-0001.html>

From huruiala.cosmin at gmail.com  Wed Oct 23 07:52:52 2013
From: huruiala.cosmin at gmail.com (Petre-Cosmin Huruiala)
Date: Wed, 23 Oct 2013 10:52:52 +0300
Subject: [Owasp-romania] Fwd: [Owasp-leaders] OWASP DOM based XSS
 definition, which looked a little off
In-Reply-To: <CAP_KG4gN+j8k1XKqsgZO_4M5rwazx=Awrj9gfBp=xpJB0ZmFGQ@mail.gmail.com>
References: <CAPmjHnoVbVVs2NgmEUh9G6GCHdPwYRJiai9-UYtegi6=-p9z6A@mail.gmail.com>
	<CAP_KG4iUcubqqkuP-AtCL4qiHi67Rmmr1G=7ijCREV0-PfYRGA@mail.gmail.com>
	<CAC8fo+gZG8LoKo=MKrbwf6+X+zuaqHORfg386hGn_YBqrWfjBA@mail.gmail.com>
	<CAP_KG4gN+j8k1XKqsgZO_4M5rwazx=Awrj9gfBp=xpJB0ZmFGQ@mail.gmail.com>
Message-ID: <CANxvVRr2C=OttVvJN31_DSVTcGVcgPatSKbv0e=n0ggectKObw@mail.gmail.com>

Salut,

Pentru mine diferenta dintre cele doua tipuri de XSS (reflected si DOM)
vine in principal de la modul cum se manifesta:
   - reflected XSS: prin modificarea continutului paginii HTML din
cauza imputului nevalidat corespunzator. Asta se intampla pe server si
pagina este obligatoriu dinamica.
   - DOM XSS: modificarea obiectelor DOM care nu sunt controlate complet de
catre server. Pagina nu este obligatoriu dinamica si exploitul nu e
obligatoriu sa ajunga pe server. Dupa cum se spune si pe pagina OWASP
continutul HTML nu se schimba.

In consecinta si eu cred ca definitia OWASP este corecta.

Cosmin H.


2013/10/23 Oana Cornea <oana.cornea at owasp.org>

> Corect. Am trimis doar "for the sake of argument" :) cu scopul pur - de
> debate, poate reusesc sa stimulez o discutie in cazul in care poate nu
> toata lumea stie exact despre ce este vorba.
> M-am gandit ca mailuri de genul pot genera multe reply-uri: cei care stiu
> isi pot impartasi cunostiintele, ceilalti se documenteaza sau afla lucruri
> noi si poate asa devenim mai activi.
>
> Oana
>
>
> On Tue, Oct 22, 2013 at 5:37 PM, Dinu Smadu <smadudinu at gmail.com> wrote:
>
>> Buna,
>>
>> In cazul Reflected XSS serverul raspunde cu o pagina HTML, din ea
>> browserul construieste un DOM si apoi este rulat codul javascript arbitrar.
>> In cazul DOM XSS atacul consta in modificarea ulterioara a DOM-ului
>> construit de browser la primirea raspunsului (prin executia de cod
>> JavaScript vulnerabil)
>>
>> Exemplu de *DOM-XSS* (putin fortat)
>>
>> URL: www.example.com/search.php?query=<script>alert(1)<script>
>>
>> In raspuns:
>>
>> <input type="hidden" id="query" value="<?php echo htmlspecialchars(
>> $query)?>"
>>
>> <script type="text/javascript">
>>    var decoded = $("#element").html($('#query').val()).text();   //html
>> decode si insert in pagina
>> </script>
>>
>> In acest caz cred ca definitia e corecta in OWASP si DOM-XSS nu se
>> limiteaza doar la fragment identifiers
>>
>> Pot sa traduc daca ai nevoie si de un raspuns in engleza
>> Dinu
>>
>>
>> On Tue, Oct 22, 2013 at 4:34 PM, Oana Cornea <oana.cornea at owasp.org>wrote:
>>
>>> Hello,
>>>
>>> Voi ce parere aveti?
>>>
>>> ---------- Forwarded message ----------
>>> From: Serg <serg at owasp.org>
>>> Date: Tue, Oct 22, 2013 at 2:05 PM
>>> Subject: [Owasp-leaders] OWASP DOM based XSS definition, which looked a
>>> little off
>>> To: "owasp-leaders at lists.owasp.org" <owasp-leaders at lists.owasp.org>
>>>
>>>
>>> Hi All
>>>
>>> I've recently had a look at the OWASP DOM based XSS definition, which
>>> looked a little off.
>>>
>>> The TL;DR version: the DOM based XSS definition according to OWASP (
>>> https://www.owasp.org/index.php/DOM_Based_XSS) is only 50% correct (or
>>> the pessimistic view - 50% wrong) and misleading.
>>>
>>> I am basing this on the 'Definition' examples (
>>> https://www.owasp.org/index.php/DOM_Based_XSS), not the 'Advanced
>>> Techniques and Derivatives' section.
>>>
>>> The first part of this document is incorrect.
>>>
>>> In layman's terms, the Reflected XSS, request/JS is first sent to the
>>> server, it is then reflected, as is, in the response, hence the name.
>>>
>>> Example:
>>>
>>> http://www.some.site/page.html?default=xss_attack_here
>>>
>>> Since the query string gets sent to the server and reflected back, this
>>> is a Reflected XSS, not DOM-based.
>>>
>>> The 'xss_attack_here' part is irrelevant here. As long as it is sent to
>>> the server and reflected back, it's a Reflected XSS vulnerability. Whether
>>> it runs in DOM or not is irrelevant, technically everything runs in DOM...
>>>
>>> My understanding of DOM based XSS, is: it is processed entirely in the
>>> web browser, the request with XSS payload is not sent to the server.
>>>
>>> As far as I know, the only way to achieve that is to use fragment
>>> identifiers, the part of the URL after the '#' (including '#') is not sent
>>> to the server as part of the request.
>>>
>>> Based on that, I am fairly certain that the current OWASP definition (
>>> https://www.owasp.org/index.php/DOM_Based_XSS) is wrong and misleading.
>>>
>>>
>>> Thoughts?
>>>
>>>
>>> --
>>> Serg
>>>
>>> _______________________________________________
>>> OWASP-Leaders mailing list
>>> OWASP-Leaders at lists.owasp.org
>>> https://lists.owasp.org/mailman/listinfo/owasp-leaders
>>>
>>>
>>>
>>>
>>> --
>>> Oana Cornea, OWASP Romania
>>> Tel: +40741050210
>>> Email: oana.cornea at owasp.org
>>> OWASP Global: http://www.owasp.org
>>>
>>> _______________________________________________
>>> Owasp-romania mailing list
>>> Owasp-romania at lists.owasp.org
>>> https://lists.owasp.org/mailman/listinfo/owasp-romania
>>>
>>>
>>
>
>
> --
> Oana Cornea, OWASP Romania
> Tel: +40741050210
> Email: oana.cornea at owasp.org
> OWASP Global: http://www.owasp.org
>
> _______________________________________________
> Owasp-romania mailing list
> Owasp-romania at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-romania
>
>


-- 
CH

I'm bad and that's good I'll never be good and that's not bad
There's no one I rather be than me
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-romania/attachments/20131023/22a551bf/attachment.html>

From scrissti at gmail.com  Wed Oct 23 08:13:27 2013
From: scrissti at gmail.com (Cristian Serban)
Date: Wed, 23 Oct 2013 10:13:27 +0200
Subject: [Owasp-romania] Fwd: [Owasp-leaders] OWASP DOM based XSS
 definition, which looked a little off
In-Reply-To: <CANxvVRr2C=OttVvJN31_DSVTcGVcgPatSKbv0e=n0ggectKObw@mail.gmail.com>
References: <CAPmjHnoVbVVs2NgmEUh9G6GCHdPwYRJiai9-UYtegi6=-p9z6A@mail.gmail.com>
	<CAP_KG4iUcubqqkuP-AtCL4qiHi67Rmmr1G=7ijCREV0-PfYRGA@mail.gmail.com>
	<CAC8fo+gZG8LoKo=MKrbwf6+X+zuaqHORfg386hGn_YBqrWfjBA@mail.gmail.com>
	<CAP_KG4gN+j8k1XKqsgZO_4M5rwazx=Awrj9gfBp=xpJB0ZmFGQ@mail.gmail.com>
	<CANxvVRr2C=OttVvJN31_DSVTcGVcgPatSKbv0e=n0ggectKObw@mail.gmail.com>
Message-ID: <CAPt_OMZ9sYRvBGVezM+c21tJvbvoc0UCPLeVgQYSVVE5_QqH-Q@mail.gmail.com>

Si eu stiu exact ca si Serg,
diferenta intre cele doua este ca reflected ajunge la server si se
returneaza in pahina, iar dom based xss nu ajunge la nici un server, este
executat pur in browser. Deci da se poate face doar prin fragment
identifiers pentru ca doar aici partea din url care este dupa '#' ramane in
browser.
Problema mare cu dom xss inafara de faptul ca este un xss este ca daca ai
un WAF care monitorizeaza web serverul acesta nu va detecta niciodata ca
site-ul are o vulnerabilitate xss care este exploatata in the wild.
Eu consider ca din acest motiv se poate defini o noua categorie de xss.
In final toate sunt xss, dar fiecare categorie (stored, reflected, dom)
trebuie sa aiba ceva specific si o diferenta importanta: (store= se
salveaza in bd, reflected = payload trebuie purtat in url, dom = nu se
trimite la server deloc)

parerea mea
Cristian


On 23 October 2013 09:52, Petre-Cosmin Huruiala
<huruiala.cosmin at gmail.com>wrote:

> Salut,
>
> Pentru mine diferenta dintre cele doua tipuri de XSS (reflected si DOM)
> vine in principal de la modul cum se manifesta:
>    - reflected XSS: prin modificarea continutului paginii HTML din
> cauza imputului nevalidat corespunzator. Asta se intampla pe server si
> pagina este obligatoriu dinamica.
>    - DOM XSS: modificarea obiectelor DOM care nu sunt controlate complet
> de catre server. Pagina nu este obligatoriu dinamica si exploitul nu e
> obligatoriu sa ajunga pe server. Dupa cum se spune si pe pagina OWASP
> continutul HTML nu se schimba.
>
> In consecinta si eu cred ca definitia OWASP este corecta.
>
> Cosmin H.
>
>
> 2013/10/23 Oana Cornea <oana.cornea at owasp.org>
>
>> Corect. Am trimis doar "for the sake of argument" :) cu scopul pur - de
>> debate, poate reusesc sa stimulez o discutie in cazul in care poate nu
>> toata lumea stie exact despre ce este vorba.
>> M-am gandit ca mailuri de genul pot genera multe reply-uri: cei care stiu
>> isi pot impartasi cunostiintele, ceilalti se documenteaza sau afla lucruri
>> noi si poate asa devenim mai activi.
>>
>> Oana
>>
>>
>> On Tue, Oct 22, 2013 at 5:37 PM, Dinu Smadu <smadudinu at gmail.com> wrote:
>>
>>> Buna,
>>>
>>> In cazul Reflected XSS serverul raspunde cu o pagina HTML, din ea
>>> browserul construieste un DOM si apoi este rulat codul javascript arbitrar.
>>> In cazul DOM XSS atacul consta in modificarea ulterioara a DOM-ului
>>> construit de browser la primirea raspunsului (prin executia de cod
>>> JavaScript vulnerabil)
>>>
>>> Exemplu de *DOM-XSS* (putin fortat)
>>>
>>> URL: www.example.com/search.php?query=<script>alert(1)<script>
>>>
>>> In raspuns:
>>>
>>> <input type="hidden" id="query" value="<?php echo htmlspecialchars(
>>> $query)?>"
>>>
>>> <script type="text/javascript">
>>>    var decoded = $("#element").html($('#query').val()).text();   //html
>>> decode si insert in pagina
>>> </script>
>>>
>>> In acest caz cred ca definitia e corecta in OWASP si DOM-XSS nu se
>>> limiteaza doar la fragment identifiers
>>>
>>> Pot sa traduc daca ai nevoie si de un raspuns in engleza
>>> Dinu
>>>
>>>
>>> On Tue, Oct 22, 2013 at 4:34 PM, Oana Cornea <oana.cornea at owasp.org>wrote:
>>>
>>>> Hello,
>>>>
>>>> Voi ce parere aveti?
>>>>
>>>> ---------- Forwarded message ----------
>>>> From: Serg <serg at owasp.org>
>>>> Date: Tue, Oct 22, 2013 at 2:05 PM
>>>> Subject: [Owasp-leaders] OWASP DOM based XSS definition, which looked a
>>>> little off
>>>> To: "owasp-leaders at lists.owasp.org" <owasp-leaders at lists.owasp.org>
>>>>
>>>>
>>>> Hi All
>>>>
>>>> I've recently had a look at the OWASP DOM based XSS definition, which
>>>> looked a little off.
>>>>
>>>> The TL;DR version: the DOM based XSS definition according to OWASP (
>>>> https://www.owasp.org/index.php/DOM_Based_XSS) is only 50% correct (or
>>>> the pessimistic view - 50% wrong) and misleading.
>>>>
>>>> I am basing this on the 'Definition' examples (
>>>> https://www.owasp.org/index.php/DOM_Based_XSS), not the 'Advanced
>>>> Techniques and Derivatives' section.
>>>>
>>>> The first part of this document is incorrect.
>>>>
>>>> In layman's terms, the Reflected XSS, request/JS is first sent to the
>>>> server, it is then reflected, as is, in the response, hence the name.
>>>>
>>>> Example:
>>>>
>>>> http://www.some.site/page.html?default=xss_attack_here
>>>>
>>>> Since the query string gets sent to the server and reflected back, this
>>>> is a Reflected XSS, not DOM-based.
>>>>
>>>> The 'xss_attack_here' part is irrelevant here. As long as it is sent to
>>>> the server and reflected back, it's a Reflected XSS vulnerability. Whether
>>>> it runs in DOM or not is irrelevant, technically everything runs in DOM...
>>>>
>>>> My understanding of DOM based XSS, is: it is processed entirely in the
>>>> web browser, the request with XSS payload is not sent to the server.
>>>>
>>>> As far as I know, the only way to achieve that is to use fragment
>>>> identifiers, the part of the URL after the '#' (including '#') is not sent
>>>> to the server as part of the request.
>>>>
>>>> Based on that, I am fairly certain that the current OWASP definition (
>>>> https://www.owasp.org/index.php/DOM_Based_XSS) is wrong and misleading.
>>>>
>>>>
>>>> Thoughts?
>>>>
>>>>
>>>> --
>>>> Serg
>>>>
>>>> _______________________________________________
>>>> OWASP-Leaders mailing list
>>>> OWASP-Leaders at lists.owasp.org
>>>> https://lists.owasp.org/mailman/listinfo/owasp-leaders
>>>>
>>>>
>>>>
>>>>
>>>> --
>>>> Oana Cornea, OWASP Romania
>>>> Tel: +40741050210
>>>> Email: oana.cornea at owasp.org
>>>> OWASP Global: http://www.owasp.org
>>>>
>>>> _______________________________________________
>>>> Owasp-romania mailing list
>>>> Owasp-romania at lists.owasp.org
>>>> https://lists.owasp.org/mailman/listinfo/owasp-romania
>>>>
>>>>
>>>
>>
>>
>> --
>> Oana Cornea, OWASP Romania
>> Tel: +40741050210
>> Email: oana.cornea at owasp.org
>> OWASP Global: http://www.owasp.org
>>
>> _______________________________________________
>> Owasp-romania mailing list
>> Owasp-romania at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-romania
>>
>>
>
>
> --
> CH
>
> I'm bad and that's good I'll never be good and that's not bad
> There's no one I rather be than me
>
> _______________________________________________
> Owasp-romania mailing list
> Owasp-romania at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-romania
>
>


-- 
Cristian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-romania/attachments/20131023/1f7a59d6/attachment-0001.html>

From smadudinu at gmail.com  Wed Oct 23 10:22:20 2013
From: smadudinu at gmail.com (Dinu Smadu)
Date: Wed, 23 Oct 2013 13:22:20 +0300
Subject: [Owasp-romania] Fwd: [Owasp-leaders] OWASP DOM based XSS
 definition, which looked a little off
In-Reply-To: <CAPt_OMZ9sYRvBGVezM+c21tJvbvoc0UCPLeVgQYSVVE5_QqH-Q@mail.gmail.com>
References: <CAPmjHnoVbVVs2NgmEUh9G6GCHdPwYRJiai9-UYtegi6=-p9z6A@mail.gmail.com>
	<CAP_KG4iUcubqqkuP-AtCL4qiHi67Rmmr1G=7ijCREV0-PfYRGA@mail.gmail.com>
	<CAC8fo+gZG8LoKo=MKrbwf6+X+zuaqHORfg386hGn_YBqrWfjBA@mail.gmail.com>
	<CAP_KG4gN+j8k1XKqsgZO_4M5rwazx=Awrj9gfBp=xpJB0ZmFGQ@mail.gmail.com>
	<CANxvVRr2C=OttVvJN31_DSVTcGVcgPatSKbv0e=n0ggectKObw@mail.gmail.com>
	<CAPt_OMZ9sYRvBGVezM+c21tJvbvoc0UCPLeVgQYSVVE5_QqH-Q@mail.gmail.com>
Message-ID: <CAC8fo+j5zsJkLPn9qeEgYdcAwkBOdg2WR1kEMawnuYNzr-jdOg@mail.gmail.com>

Vreau sa fac cateva precizari legate de ce spune Cristian.

Reflected XSS *nu* presupune ca payloadul vine din URL, el poate fi
injectat si intr-un parametru din POST, intr-un Header, etc. Atata timp cat
serverul include acest payload in raspuns, in forma lui finala, este vorba
de Reflected XSS.

DOM XSS:
DOM-ul este construit de browser prin parsarea HTML-ului primit de la
server. Fiecare browser are un parser care construieste DOM-ul si sunt
tratate aici si erori cum ar fi tag-urile incorecte, tag-uri uitate
deschise, etc.
Aceasta vulnerabilitate presupune doua conditii:
1. atacatorul poate sa modifice DOM-ul (print-un Payload din URL, prin
modificarea unui parametru, etc)
2. codul JavaScript de pe client foloseste valori modificate din DOM si din
asta rezulta executia unui payload arbitrar.

Cazul in care Payload-ul nu ajunge pe server este unul particular, nu este
o conditie obligatorie.

Dinu


2013/10/23 Cristian Serban <scrissti at gmail.com>

> Si eu stiu exact ca si Serg,
> diferenta intre cele doua este ca reflected ajunge la server si se
> returneaza in pahina, iar dom based xss nu ajunge la nici un server, este
> executat pur in browser. Deci da se poate face doar prin fragment
> identifiers pentru ca doar aici partea din url care este dupa '#' ramane in
> browser.
> Problema mare cu dom xss inafara de faptul ca este un xss este ca daca ai
> un WAF care monitorizeaza web serverul acesta nu va detecta niciodata ca
> site-ul are o vulnerabilitate xss care este exploatata in the wild.
> Eu consider ca din acest motiv se poate defini o noua categorie de xss.
> In final toate sunt xss, dar fiecare categorie (stored, reflected, dom)
> trebuie sa aiba ceva specific si o diferenta importanta: (store= se
> salveaza in bd, reflected = payload trebuie purtat in url, dom = nu se
> trimite la server deloc)
>
> parerea mea
> Cristian
>
>
> On 23 October 2013 09:52, Petre-Cosmin Huruiala <huruiala.cosmin at gmail.com
> > wrote:
>
>> Salut,
>>
>> Pentru mine diferenta dintre cele doua tipuri de XSS (reflected si DOM)
>> vine in principal de la modul cum se manifesta:
>>    - reflected XSS: prin modificarea continutului paginii HTML din
>> cauza imputului nevalidat corespunzator. Asta se intampla pe server si
>> pagina este obligatoriu dinamica.
>>    - DOM XSS: modificarea obiectelor DOM care nu sunt controlate complet
>> de catre server. Pagina nu este obligatoriu dinamica si exploitul nu e
>> obligatoriu sa ajunga pe server. Dupa cum se spune si pe pagina OWASP
>> continutul HTML nu se schimba.
>>
>> In consecinta si eu cred ca definitia OWASP este corecta.
>>
>> Cosmin H.
>>
>>
>> 2013/10/23 Oana Cornea <oana.cornea at owasp.org>
>>
>>> Corect. Am trimis doar "for the sake of argument" :) cu scopul pur - de
>>> debate, poate reusesc sa stimulez o discutie in cazul in care poate nu
>>> toata lumea stie exact despre ce este vorba.
>>> M-am gandit ca mailuri de genul pot genera multe reply-uri: cei care
>>> stiu isi pot impartasi cunostiintele, ceilalti se documenteaza sau afla
>>> lucruri noi si poate asa devenim mai activi.
>>>
>>> Oana
>>>
>>>
>>> On Tue, Oct 22, 2013 at 5:37 PM, Dinu Smadu <smadudinu at gmail.com> wrote:
>>>
>>>> Buna,
>>>>
>>>> In cazul Reflected XSS serverul raspunde cu o pagina HTML, din ea
>>>> browserul construieste un DOM si apoi este rulat codul javascript arbitrar.
>>>> In cazul DOM XSS atacul consta in modificarea ulterioara a DOM-ului
>>>> construit de browser la primirea raspunsului (prin executia de cod
>>>> JavaScript vulnerabil)
>>>>
>>>> Exemplu de *DOM-XSS* (putin fortat)
>>>>
>>>> URL: www.example.com/search.php?query=<script>alert(1)<script>
>>>>
>>>> In raspuns:
>>>>
>>>> <input type="hidden" id="query" value="<?php echo htmlspecialchars(
>>>> $query)?>"
>>>>
>>>> <script type="text/javascript">
>>>>    var decoded = $("#element").html($('#query').val()).text();
>>>> //html decode si insert in pagina
>>>> </script>
>>>>
>>>> In acest caz cred ca definitia e corecta in OWASP si DOM-XSS nu se
>>>> limiteaza doar la fragment identifiers
>>>>
>>>> Pot sa traduc daca ai nevoie si de un raspuns in engleza
>>>> Dinu
>>>>
>>>>
>>>> On Tue, Oct 22, 2013 at 4:34 PM, Oana Cornea <oana.cornea at owasp.org>wrote:
>>>>
>>>>> Hello,
>>>>>
>>>>> Voi ce parere aveti?
>>>>>
>>>>> ---------- Forwarded message ----------
>>>>> From: Serg <serg at owasp.org>
>>>>> Date: Tue, Oct 22, 2013 at 2:05 PM
>>>>> Subject: [Owasp-leaders] OWASP DOM based XSS definition, which looked
>>>>> a little off
>>>>> To: "owasp-leaders at lists.owasp.org" <owasp-leaders at lists.owasp.org>
>>>>>
>>>>>
>>>>> Hi All
>>>>>
>>>>> I've recently had a look at the OWASP DOM based XSS definition, which
>>>>> looked a little off.
>>>>>
>>>>> The TL;DR version: the DOM based XSS definition according to OWASP (
>>>>> https://www.owasp.org/index.php/DOM_Based_XSS) is only 50% correct
>>>>> (or the pessimistic view - 50% wrong) and misleading.
>>>>>
>>>>> I am basing this on the 'Definition' examples (
>>>>> https://www.owasp.org/index.php/DOM_Based_XSS), not the 'Advanced
>>>>> Techniques and Derivatives' section.
>>>>>
>>>>> The first part of this document is incorrect.
>>>>>
>>>>> In layman's terms, the Reflected XSS, request/JS is first sent to the
>>>>> server, it is then reflected, as is, in the response, hence the name.
>>>>>
>>>>> Example:
>>>>>
>>>>> http://www.some.site/page.html?default=xss_attack_here
>>>>>
>>>>> Since the query string gets sent to the server and reflected back,
>>>>> this is a Reflected XSS, not DOM-based.
>>>>>
>>>>> The 'xss_attack_here' part is irrelevant here. As long as it is sent
>>>>> to the server and reflected back, it's a Reflected XSS vulnerability.
>>>>> Whether it runs in DOM or not is irrelevant, technically everything runs in
>>>>> DOM...
>>>>>
>>>>> My understanding of DOM based XSS, is: it is processed entirely in the
>>>>> web browser, the request with XSS payload is not sent to the server.
>>>>>
>>>>> As far as I know, the only way to achieve that is to use fragment
>>>>> identifiers, the part of the URL after the '#' (including '#') is not sent
>>>>> to the server as part of the request.
>>>>>
>>>>> Based on that, I am fairly certain that the current OWASP definition (
>>>>> https://www.owasp.org/index.php/DOM_Based_XSS) is wrong and
>>>>> misleading.
>>>>>
>>>>>
>>>>> Thoughts?
>>>>>
>>>>>
>>>>> --
>>>>> Serg
>>>>>
>>>>> _______________________________________________
>>>>> OWASP-Leaders mailing list
>>>>> OWASP-Leaders at lists.owasp.org
>>>>> https://lists.owasp.org/mailman/listinfo/owasp-leaders
>>>>>
>>>>>
>>>>>
>>>>>
>>>>> --
>>>>> Oana Cornea, OWASP Romania
>>>>> Tel: +40741050210
>>>>> Email: oana.cornea at owasp.org
>>>>> OWASP Global: http://www.owasp.org
>>>>>
>>>>> _______________________________________________
>>>>> Owasp-romania mailing list
>>>>> Owasp-romania at lists.owasp.org
>>>>> https://lists.owasp.org/mailman/listinfo/owasp-romania
>>>>>
>>>>>
>>>>
>>>
>>>
>>> --
>>> Oana Cornea, OWASP Romania
>>> Tel: +40741050210
>>> Email: oana.cornea at owasp.org
>>> OWASP Global: http://www.owasp.org
>>>
>>> _______________________________________________
>>> Owasp-romania mailing list
>>> Owasp-romania at lists.owasp.org
>>> https://lists.owasp.org/mailman/listinfo/owasp-romania
>>>
>>>
>>
>>
>> --
>> CH
>>
>> I'm bad and that's good I'll never be good and that's not bad
>> There's no one I rather be than me
>>
>> _______________________________________________
>> Owasp-romania mailing list
>> Owasp-romania at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-romania
>>
>>
>
>
> --
> Cristian
>
> _______________________________________________
> Owasp-romania mailing list
> Owasp-romania at lists.owasp.org
> https://lists.owasp.org/mailman/listinfo/owasp-romania
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-romania/attachments/20131023/a1850b6c/attachment.html>

From oana.cornea at owasp.org  Thu Oct 24 10:13:51 2013
From: oana.cornea at owasp.org (Oana Cornea)
Date: Thu, 24 Oct 2013 13:13:51 +0300
Subject: [Owasp-romania] Owasp Romania InfoSec Conference
In-Reply-To: <CAP_KG4go+Q61=YBLnHXqq+SHyfjtC+krzyOYfcUgPSaMzRqbrA@mail.gmail.com>
References: <CAP_KG4go+Q61=YBLnHXqq+SHyfjtC+krzyOYfcUgPSaMzRqbrA@mail.gmail.com>
Message-ID: <CAP_KG4ixo1rB6wM_YLbs6hExiqKhrHFXMsdy7-Uud-0Q+rsixw@mail.gmail.com>

Hello,

Nu uitati de evenimentul nostru de maine!
http://conferinta.owasp.ro
Va asteptam in numar cat mai mare :)


2013/9/29 Oana Cornea <oana.cornea at owasp.org>

> Buna tuturor,
>
> Sunteti invitati la urmatorul eveniment Owasp. Aici<https://www.owasp.org/index.php/OwaspRomaniaConference#tab=Welcome>gasiti detaliile despre agenda si modalitatea de inscriere. Pagina va fi
> updatata cu toate datele pe masura ce le avem.
>
> Cei care doresc sa ajute ma pot contacta. De asemenea oricine se poate
> implica in organizare si promovare. Ne puteti ajuta sa transmitem mesajul
> nostru pe grupuri de discutie, bloguri, Facebook etc.
>
> Va asteptam si speram sa ajungeti cat mai multi!
>
> Suntem parteneri DefCamp <http://defcamp.ro/>, probabil multi ati auzit
> de acest eveniment. Fiti pe faza, va fi o toamna cu evenimente de
> securitate IT interesante!
>
> --
> Oana Cornea, OWASP Romania
> Tel: +40741050210
> Email: oana.cornea at owasp.org
> OWASP Global: http://www.owasp.org
>



-- 
Oana Cornea, OWASP Romania
Tel: +40741050210
Email: oana.cornea at owasp.org
OWASP Global: http://www.owasp.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-romania/attachments/20131024/7804be65/attachment.html>

From scrissti at gmail.com  Fri Oct 25 07:44:45 2013
From: scrissti at gmail.com (Cristian Serban)
Date: Fri, 25 Oct 2013 09:44:45 +0200
Subject: [Owasp-romania] Fwd: [Owasp-leaders] OWASP DOM based XSS
 definition, which looked a little off
In-Reply-To: <CAC8fo+j5zsJkLPn9qeEgYdcAwkBOdg2WR1kEMawnuYNzr-jdOg@mail.gmail.com>
References: <CAPmjHnoVbVVs2NgmEUh9G6GCHdPwYRJiai9-UYtegi6=-p9z6A@mail.gmail.com>
	<CAP_KG4iUcubqqkuP-AtCL4qiHi67Rmmr1G=7ijCREV0-PfYRGA@mail.gmail.com>
	<CAC8fo+gZG8LoKo=MKrbwf6+X+zuaqHORfg386hGn_YBqrWfjBA@mail.gmail.com>
	<CAP_KG4gN+j8k1XKqsgZO_4M5rwazx=Awrj9gfBp=xpJB0ZmFGQ@mail.gmail.com>
	<CANxvVRr2C=OttVvJN31_DSVTcGVcgPatSKbv0e=n0ggectKObw@mail.gmail.com>
	<CAPt_OMZ9sYRvBGVezM+c21tJvbvoc0UCPLeVgQYSVVE5_QqH-Q@mail.gmail.com>
	<CAC8fo+j5zsJkLPn9qeEgYdcAwkBOdg2WR1kEMawnuYNzr-jdOg@mail.gmail.com>
Message-ID: <CAPt_OMZmRuvGneDi22CcKuUs7fOEA=vgMZfviYfL-SYS5dvt+w@mail.gmail.com>

Intradevar payloadul reflected xss poate sa vina si din parametri post si
din header, my mistake.
Legat de DOM xss propun sa construim un exemplu in care suntem in dezacord
si sa discutam mai la concret.
Incep eu, va rog modificati cum credeti ca e mai clar si scuzati greselile
de ortografie.

exemplu 1:
req:
http://www.example.com/search?query=xxx

search1.php:
<html>
<body>
<?php
echo 'no results for ' . htmlspecialchars($_GET["query"]) . '!';
?>
</body>
<script>
alert('<?php echo $_GET["query"])?>');
</script>
</html>

Exemplu 2:
req:
http://www.example.com/search?query=xxx

search2.php:
<html>
<body>
<?php
echo 'no results for <input id=q type=text value="' . htmlspecialchars($_GET
["query"]) . '>';
?>
</body>
<script>
document.getElementById('q').value='<?php echo $_GET["query"])?>';
</script>
</html>


Suntem de acord ca exemplul 1 e reflected xss iar exemplu 2 e ... eu zic ca
reflected Dinu zice ca e dom xss?

Merci
Cristian



2013/10/23 Dinu Smadu <smadudinu at gmail.com>

> Vreau sa fac cateva precizari legate de ce spune Cristian.
>
> Reflected XSS *nu* presupune ca payloadul vine din URL, el poate fi
> injectat si intr-un parametru din POST, intr-un Header, etc. Atata timp cat
> serverul include acest payload in raspuns, in forma lui finala, este vorba
> de Reflected XSS.
>
> DOM XSS:
> DOM-ul este construit de browser prin parsarea HTML-ului primit de la
> server. Fiecare browser are un parser care construieste DOM-ul si sunt
> tratate aici si erori cum ar fi tag-urile incorecte, tag-uri uitate
> deschise, etc.
> Aceasta vulnerabilitate presupune doua conditii:
> 1. atacatorul poate sa modifice DOM-ul (print-un Payload din URL, prin
> modificarea unui parametru, etc)
> 2. codul JavaScript de pe client foloseste valori modificate din DOM si
> din asta rezulta executia unui payload arbitrar.
>
> Cazul in care Payload-ul nu ajunge pe server este unul particular, nu este
> o conditie obligatorie.
>
> Dinu
>
>
> 2013/10/23 Cristian Serban <scrissti at gmail.com>
>
>> Si eu stiu exact ca si Serg,
>> diferenta intre cele doua este ca reflected ajunge la server si se
>> returneaza in pahina, iar dom based xss nu ajunge la nici un server, este
>> executat pur in browser. Deci da se poate face doar prin fragment
>> identifiers pentru ca doar aici partea din url care este dupa '#' ramane in
>> browser.
>> Problema mare cu dom xss inafara de faptul ca este un xss este ca daca ai
>> un WAF care monitorizeaza web serverul acesta nu va detecta niciodata ca
>> site-ul are o vulnerabilitate xss care este exploatata in the wild.
>> Eu consider ca din acest motiv se poate defini o noua categorie de xss.
>> In final toate sunt xss, dar fiecare categorie (stored, reflected, dom)
>> trebuie sa aiba ceva specific si o diferenta importanta: (store= se
>> salveaza in bd, reflected = payload trebuie purtat in url, dom = nu se
>> trimite la server deloc)
>>
>> parerea mea
>> Cristian
>>
>>
>> On 23 October 2013 09:52, Petre-Cosmin Huruiala <
>> huruiala.cosmin at gmail.com> wrote:
>>
>>> Salut,
>>>
>>> Pentru mine diferenta dintre cele doua tipuri de XSS (reflected si DOM)
>>> vine in principal de la modul cum se manifesta:
>>>    - reflected XSS: prin modificarea continutului paginii HTML din
>>> cauza imputului nevalidat corespunzator. Asta se intampla pe server si
>>> pagina este obligatoriu dinamica.
>>>    - DOM XSS: modificarea obiectelor DOM care nu sunt controlate complet
>>> de catre server. Pagina nu este obligatoriu dinamica si exploitul nu e
>>> obligatoriu sa ajunga pe server. Dupa cum se spune si pe pagina OWASP
>>> continutul HTML nu se schimba.
>>>
>>> In consecinta si eu cred ca definitia OWASP este corecta.
>>>
>>> Cosmin H.
>>>
>>>
>>> 2013/10/23 Oana Cornea <oana.cornea at owasp.org>
>>>
>>>> Corect. Am trimis doar "for the sake of argument" :) cu scopul pur - de
>>>> debate, poate reusesc sa stimulez o discutie in cazul in care poate nu
>>>> toata lumea stie exact despre ce este vorba.
>>>> M-am gandit ca mailuri de genul pot genera multe reply-uri: cei care
>>>> stiu isi pot impartasi cunostiintele, ceilalti se documenteaza sau afla
>>>> lucruri noi si poate asa devenim mai activi.
>>>>
>>>> Oana
>>>>
>>>>
>>>> On Tue, Oct 22, 2013 at 5:37 PM, Dinu Smadu <smadudinu at gmail.com>wrote:
>>>>
>>>>> Buna,
>>>>>
>>>>> In cazul Reflected XSS serverul raspunde cu o pagina HTML, din ea
>>>>> browserul construieste un DOM si apoi este rulat codul javascript arbitrar.
>>>>> In cazul DOM XSS atacul consta in modificarea ulterioara a DOM-ului
>>>>> construit de browser la primirea raspunsului (prin executia de cod
>>>>> JavaScript vulnerabil)
>>>>>
>>>>> Exemplu de *DOM-XSS* (putin fortat)
>>>>>
>>>>> URL: www.example.com/search.php?query=<script>alert(1)<script>
>>>>>
>>>>> In raspuns:
>>>>>
>>>>> <input type="hidden" id="query" value="<?php echo htmlspecialchars(
>>>>> $query)?>"
>>>>>
>>>>> <script type="text/javascript">
>>>>>    var decoded = $("#element").html($('#query').val()).text();
>>>>> //html decode si insert in pagina
>>>>> </script>
>>>>>
>>>>> In acest caz cred ca definitia e corecta in OWASP si DOM-XSS nu se
>>>>> limiteaza doar la fragment identifiers
>>>>>
>>>>> Pot sa traduc daca ai nevoie si de un raspuns in engleza
>>>>> Dinu
>>>>>
>>>>>
>>>>> On Tue, Oct 22, 2013 at 4:34 PM, Oana Cornea <oana.cornea at owasp.org>wrote:
>>>>>
>>>>>> Hello,
>>>>>>
>>>>>> Voi ce parere aveti?
>>>>>>
>>>>>> ---------- Forwarded message ----------
>>>>>> From: Serg <serg at owasp.org>
>>>>>> Date: Tue, Oct 22, 2013 at 2:05 PM
>>>>>> Subject: [Owasp-leaders] OWASP DOM based XSS definition, which looked
>>>>>> a little off
>>>>>> To: "owasp-leaders at lists.owasp.org" <owasp-leaders at lists.owasp.org>
>>>>>>
>>>>>>
>>>>>> Hi All
>>>>>>
>>>>>> I've recently had a look at the OWASP DOM based XSS definition, which
>>>>>> looked a little off.
>>>>>>
>>>>>> The TL;DR version: the DOM based XSS definition according to OWASP (
>>>>>> https://www.owasp.org/index.php/DOM_Based_XSS) is only 50% correct
>>>>>> (or the pessimistic view - 50% wrong) and misleading.
>>>>>>
>>>>>> I am basing this on the 'Definition' examples (
>>>>>> https://www.owasp.org/index.php/DOM_Based_XSS), not the 'Advanced
>>>>>> Techniques and Derivatives' section.
>>>>>>
>>>>>> The first part of this document is incorrect.
>>>>>>
>>>>>> In layman's terms, the Reflected XSS, request/JS is first sent to the
>>>>>> server, it is then reflected, as is, in the response, hence the name.
>>>>>>
>>>>>> Example:
>>>>>>
>>>>>> http://www.some.site/page.html?default=xss_attack_here
>>>>>>
>>>>>> Since the query string gets sent to the server and reflected back,
>>>>>> this is a Reflected XSS, not DOM-based.
>>>>>>
>>>>>> The 'xss_attack_here' part is irrelevant here. As long as it is sent
>>>>>> to the server and reflected back, it's a Reflected XSS vulnerability.
>>>>>> Whether it runs in DOM or not is irrelevant, technically everything runs in
>>>>>> DOM...
>>>>>>
>>>>>> My understanding of DOM based XSS, is: it is processed entirely in
>>>>>> the web browser, the request with XSS payload is not sent to the server.
>>>>>>
>>>>>> As far as I know, the only way to achieve that is to use fragment
>>>>>> identifiers, the part of the URL after the '#' (including '#') is not sent
>>>>>> to the server as part of the request.
>>>>>>
>>>>>> Based on that, I am fairly certain that the current OWASP definition (
>>>>>> https://www.owasp.org/index.php/DOM_Based_XSS) is wrong and
>>>>>> misleading.
>>>>>>
>>>>>>
>>>>>> Thoughts?
>>>>>>
>>>>>>
>>>>>> --
>>>>>> Serg
>>>>>>
>>>>>> _______________________________________________
>>>>>> OWASP-Leaders mailing list
>>>>>> OWASP-Leaders at lists.owasp.org
>>>>>> https://lists.owasp.org/mailman/listinfo/owasp-leaders
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>> --
>>>>>> Oana Cornea, OWASP Romania
>>>>>> Tel: +40741050210
>>>>>> Email: oana.cornea at owasp.org
>>>>>> OWASP Global: http://www.owasp.org
>>>>>>
>>>>>> _______________________________________________
>>>>>> Owasp-romania mailing list
>>>>>> Owasp-romania at lists.owasp.org
>>>>>> https://lists.owasp.org/mailman/listinfo/owasp-romania
>>>>>>
>>>>>>
>>>>>
>>>>
>>>>
>>>> --
>>>> Oana Cornea, OWASP Romania
>>>> Tel: +40741050210
>>>> Email: oana.cornea at owasp.org
>>>> OWASP Global: http://www.owasp.org
>>>>
>>>> _______________________________________________
>>>> Owasp-romania mailing list
>>>> Owasp-romania at lists.owasp.org
>>>> https://lists.owasp.org/mailman/listinfo/owasp-romania
>>>>
>>>>
>>>
>>>
>>> --
>>> CH
>>>
>>> I'm bad and that's good I'll never be good and that's not bad
>>> There's no one I rather be than me
>>>
>>> _______________________________________________
>>> Owasp-romania mailing list
>>> Owasp-romania at lists.owasp.org
>>> https://lists.owasp.org/mailman/listinfo/owasp-romania
>>>
>>>
>>
>>
>> --
>> Cristian
>>
>> _______________________________________________
>> Owasp-romania mailing list
>> Owasp-romania at lists.owasp.org
>> https://lists.owasp.org/mailman/listinfo/owasp-romania
>>
>>
>


-- 
Cristian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.owasp.org/pipermail/owasp-romania/attachments/20131025/d3896cf0/attachment-0001.html>

